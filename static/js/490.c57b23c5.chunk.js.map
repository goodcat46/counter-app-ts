{"version":3,"file":"static/js/490.c57b23c5.chunk.js","mappings":"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","sources":["redux/transactions/useTransactionsService.hook.ts","redux/transactions/useTrFilterSelectors.hook.ts","hooks/useTreeDataCreator.hook.ts","components/Forms/TransactionForm.tsx","components/AppPages/PageTransactions.tsx","redux/transactions/useTrActionsCreator.hook.ts","components/AppPages/pagesStyles.ts","components/atoms/Inputs/CustomSelect.tsx"],"sourcesContent":["import { useTransactionsSelector } from 'redux/selectors.store';\nimport { AppDispatch, useAppDispatch } from 'redux/store.store';\nimport { ITransaction, ITransactionReqData } from './transactions.types';\nimport { ITransactionsState } from './transactions.slice';\nimport { ServiceApiCaller, ServiceDispatcher } from 'redux/global.types';\nimport { createTransactionThunk, getAllTransactionsThunk } from './transactions.thunks';\nimport { FilterReturnDataType as FilterData } from 'components/Filter/AppFilter';\nimport { useMemo } from 'react';\nimport { defaultApiCallPayload, defaultThunkPayload } from 'utils/fabrics';\nimport { createApiCall, TransactionsApi } from 'api';\n\nexport interface TransactionsService {\n  dispatch: AppDispatch;\n  state: ITransactionsState;\n  create: ServiceDispatcher<ITransactionReqData>;\n  deleteById: ServiceApiCaller<string, ITransaction>; // !!!!! ===>>> ServiceDispatcher\n  editById: ServiceApiCaller<Required<ITransactionReqData>, ITransaction>; // !!!!! ===>>> ServiceDispatcher\n  getById: ServiceApiCaller<string, ITransaction>;\n  getAll: ServiceDispatcher<FilterData, ITransaction[]>;\n}\n\nconst useTransactionsService = (): TransactionsService => {\n  const dispatch: AppDispatch = useAppDispatch();\n  const state = useTransactionsSelector();\n\n  const dispatchers = useMemo((): Omit<TransactionsService, 'state' | 'dispatch'> => {\n    return {\n      create: async payload => dispatch(createTransactionThunk(defaultThunkPayload(payload))),\n      deleteById: async payload => createApiCall(defaultApiCallPayload(payload), TransactionsApi.deleteById),\n      editById: async payload => createApiCall(defaultApiCallPayload(payload), TransactionsApi.editById),\n      getById: async payload => createApiCall(defaultApiCallPayload(payload), TransactionsApi.getById),\n      getAll: async payload => dispatch(getAllTransactionsThunk(defaultThunkPayload(payload))),\n    };\n  }, [dispatch]);\n\n  return {\n    dispatch,\n    state,\n    ...dispatchers,\n  };\n};\n\nexport type useTrServiceHookType = typeof useTransactionsService;\nexport default useTransactionsService as useTrServiceHookType;\n","import { FilterSelectorType } from 'components/Filter/AppFilter';\nimport { RootState, useAppSelector } from '../store.store';\n\nconst useTrFilterSelectors = (): FilterSelectorType[] => {\n  const { counts, categories }: RootState = useAppSelector();\n\n  const transactionTypes = [\n    { _id: 'ds6d5vf6sd5f1v6sd', name: 'INCOME', label: 'ДОХІД' },\n    { _id: 'ds6d5vf6sd6f1v61d', name: 'TRANSFER', label: 'ПЕРЕКАЗ' },\n    { _id: 'ds6d5vf6dd6f1v68d', name: 'EXPENSE', label: 'ВИТРАТИ' },\n  ];\n\n  return [\n    {\n      label: 'Тип',\n      data: transactionTypes,\n      selectorName: 'type',\n    },\n    {\n      label: 'Рахунки',\n      data: counts.counts,\n      selectorName: 'counts',\n    },\n    {\n      label: 'Категорії',\n      data: categories.categories,\n      selectorName: 'categories',\n    },\n  ];\n};\nexport default useTrFilterSelectors;\n","import { createTreeDataMapById, IBaseFields, TreeOptions } from '../utils/createTreeData';\nimport { ICategory } from '../redux/categories/categories.types';\nimport { ICount } from '../redux/counts/counts.types';\nimport { useMemo, useState } from 'react';\n\nexport interface TreeDataCreatorState<T = any> {\n  parentList: (T & IBaseFields<T>)[];\n  treeData: TreeOptions<T>;\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface TreeDataCreatorOptions<T = ICategory | ICount> {\n  dataList: (T & IBaseFields<T>)[];\n  rootDataValidator?: (item: T) => boolean;\n}\n\nconst useTreeDataCreatorHook = <T = ICategory | ICount>({\n  dataList,\n  rootDataValidator,\n}: TreeDataCreatorOptions<T>): TreeDataCreatorState<T> => {\n  const [state, setState] = useState<TreeDataCreatorState<T>>({\n    parentList: [],\n    treeData: {},\n    loading: false,\n    error: null,\n  });\n\n  useMemo(\n    () =>\n      setState(prev => ({\n        ...prev,\n        parentList: dataList.filter(el => {\n          if (rootDataValidator) {\n            return rootDataValidator(el);\n          }\n          return !el.parent;\n        }),\n      })),\n    [rootDataValidator, dataList]\n  );\n\n  useMemo(() => {\n    createTreeDataMapById<T>(dataList, {\n      onSuccess: data => {\n        setState(prev => ({ ...prev, treeData: data }));\n      },\n      onError: error => setState(prev => ({ ...prev, error })),\n      onLoading: loading => setState(prev => ({ ...prev, loading })),\n    });\n  }, [dataList]);\n\n  return state;\n};\n\nexport default useTreeDataCreatorHook;\n","import * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport ModalForm, { ModalFormProps } from '../ModalForm';\nimport styled from 'styled-components';\nimport { ITransaction, ITransactionForReq } from 'redux/transactions/transactions.types';\nimport { CategoryTypes } from 'redux/categories/categories.types';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport TextareaPrimary from '../atoms/Inputs/TextareaPrimary';\nimport { FilterOpt } from '../ModalForm/ModalFilter';\nimport CustomSelect, { CustomSelectProps } from '../atoms/Inputs/CustomSelect';\nimport { createTransactionForReq } from '../../utils';\nimport { useAppSelector } from '../../redux/store.store';\nimport useTreeDataCreatorHook from '../../hooks/useTreeDataCreator.hook';\nimport FlexBox from '../atoms/FlexBox';\nimport { IBaseDirItem } from '../Directories/dir.types';\nimport translate from '../../lang';\n\nexport type TransactionsFilterOpt = FilterOpt<CategoryTypes>;\n\nexport interface TransactionFormProps extends Omit<ModalFormProps, 'onSubmit'> {\n  edit?: boolean;\n  copy?: boolean;\n  id?: string;\n  onSubmit?: (data: ITransactionForReq) => void;\n  onSubmitEdit?: (_id: string, data: ITransactionForReq) => void;\n  filterOptions?: TransactionsFilterOpt[];\n  defaultState?: Partial<ITransaction>;\n  addInputs?: boolean;\n}\n\nconst additionalInputs = (\n  <>\n    <InputLabel label={translate('contractor')} direction={'vertical'} disabled>\n      <InputText placeholder={translate('contractor')} disabled />\n    </InputLabel>\n\n    <InputLabel label={translate('project')} direction={'vertical'} disabled>\n      <InputText placeholder={translate('project')} disabled />\n    </InputLabel>\n\n    <InputLabel label={translate('activityType')} direction={'vertical'} disabled>\n      <InputText placeholder={translate('activityType')} disabled />\n    </InputLabel>\n  </>\n);\n\nconst validationItem = yup\n  .object()\n  .shape({\n    _id: yup.string(),\n    label: yup.string(),\n    owner: yup\n      .object()\n      .shape({\n        _id: yup.string(),\n        label: yup.string(),\n      })\n      .optional()\n      .nullable(),\n  })\n  .nullable();\nconst validation = yup.object().shape({\n  countIn: validationItem,\n  subCountIn: validationItem,\n});\n\nconst TransactionForm: React.FC<TransactionFormProps> = ({\n  edit,\n  onSubmit,\n  onSubmitEdit,\n  copy,\n  defaultState,\n  addInputs,\n  ...props\n}) => {\n  const {\n    counts: { counts },\n    categories: { categories },\n  } = useAppSelector();\n\n  const {\n    formState: { errors },\n    register,\n    setValue,\n    watch,\n    unregister,\n    handleSubmit,\n  } = useForm<ITransaction>({\n    defaultValues: { currency: 'UAH', ...defaultState },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n  const formValues = watch();\n\n  const rootValidator = useCallback(\n    <T = any,>(el: IBaseDirItem<T>) => !el.parent && el.type === formValues.type,\n    [formValues.type]\n  );\n\n  const countsTreeData = useTreeDataCreatorHook({ dataList: counts });\n  const categoriesTreeData = useTreeDataCreatorHook({ dataList: categories, rootDataValidator: rootValidator });\n\n  const registerSelect = useCallback(\n    <K extends keyof ITransaction = keyof ITransaction>(\n      name: K,\n      props?: Omit<CustomSelectProps<ITransaction[K]>, 'name'>,\n      childControl?: {\n        childName?: keyof ITransaction;\n      }\n    ): CustomSelectProps<ITransaction[K]> => {\n      return {\n        onSelect: (option, _value) => {\n          setValue<K>(name, option as any);\n          // if (childControl?.childName) clearChild(childControl?.childName);\n        },\n        name,\n        selectValue: formValues[name],\n        onClear: () => {\n          if (!formValues[name]) return;\n\n          // setValue(name, null as any);\n          unregister(name);\n\n          if (childControl?.childName) unregister(childControl?.childName);\n\n          if (!props?.options || props.options.length === 0) {\n          }\n        },\n        disabled: !props?.options || props?.options?.length === 0,\n        ...props,\n      };\n    },\n    [formValues, setValue, unregister]\n  );\n\n  const renderInputsCountIn = useMemo(() => {\n    const { parentList: parentOptions, treeData } = countsTreeData;\n    const childOptions = formValues.countIn?._id ? treeData[formValues.countIn?._id] : undefined;\n\n    return formValues.type && ['INCOME', 'TRANSFER'].includes(formValues.type) ? (\n      <>\n        <CustomSelect\n          label={translate('countIn')}\n          placeholder={translate('countIn')}\n          {...registerSelect('countIn', { options: parentOptions }, { childName: 'subCountIn' })}\n        />\n        <CustomSelect\n          label={translate('subCountIn')}\n          placeholder={translate('subCountIn')}\n          {...registerSelect('subCountIn', {\n            options: childOptions,\n          })}\n        />\n      </>\n    ) : null;\n  }, [countsTreeData, formValues.countIn?._id, formValues.type, registerSelect]);\n\n  const renderInputsCountOut = useMemo(() => {\n    const { parentList: parentOptions, treeData } = countsTreeData;\n    const childOptions = formValues.countOut?._id ? treeData[formValues.countOut?._id] : undefined;\n\n    return formValues.type && ['EXPENSE', 'TRANSFER'].includes(formValues.type) ? (\n      <>\n        <CustomSelect\n          label={translate('countOut')}\n          placeholder={translate('countOut')}\n          {...registerSelect(\n            'countOut',\n            {\n              options: parentOptions,\n              error: errors.countOut,\n            },\n            { childName: 'subCountOut' }\n          )}\n        />\n        <CustomSelect\n          label={translate('subCountOut')}\n          placeholder={translate('subCountOut')}\n          {...registerSelect('subCountOut', { options: childOptions, error: errors.subCountOut })}\n        />\n      </>\n    ) : null;\n  }, [countsTreeData, errors.countOut, errors.subCountOut, formValues.countOut?._id, formValues.type, registerSelect]);\n\n  const renderInputsCategories = useMemo(() => {\n    const { parentList: parentOptions, treeData } = categoriesTreeData;\n    const childOptions = formValues.category?._id ? treeData[formValues.category?._id] : undefined;\n\n    return (\n      <>\n        <CustomSelect\n          label={translate('category')}\n          placeholder={translate('category')}\n          {...registerSelect('category', { options: parentOptions }, { childName: 'subCategory' })}\n        />\n        <CustomSelect\n          label={translate('subCategory')}\n          placeholder={translate('subCategory')}\n          {...registerSelect('subCategory', { options: childOptions })}\n        />\n      </>\n    );\n  }, [categoriesTreeData, formValues.category?._id, registerSelect]);\n\n  function onValidSubmit(submitData: ITransaction) {\n    const omitPathArr: (keyof ITransaction)[] =\n      (formValues.type === 'INCOME' && ['countOut', 'subCountOut']) ||\n      (formValues.type === 'EXPENSE' && ['countIn', 'subCountIn']) ||\n      [];\n\n    // console.log('onSubmitWrapper', submitData);\n    // console.log('createTransactionForReq', createTransactionForReq(submitData));\n    const trReqData = createTransactionForReq(submitData, omitPathArr, 'transactionDate');\n\n    console.log('trReqData', trReqData);\n\n    onSubmit && onSubmit(trReqData);\n\n    if (onSubmitEdit && defaultState?._id) {\n      onSubmitEdit(defaultState?._id, trReqData);\n      return;\n    }\n  }\n\n  return (\n    <ModalForm\n      onSubmit={handleSubmit(onValidSubmit, data => {\n        console.log(data);\n      })}\n      onOptSelect={({ value }) => value && setValue('type', value)}\n      {...props}\n    >\n      <FlexBox className={'inputs'} flex={'1'} fillWidth maxHeight={'100%'} padding={'12px'} overflow={'auto'}>\n        <InputLabel label={translate('dateAndTime')} direction={'vertical'}>\n          <InputText placeholder={translate('dateAndTime')} type=\"datetime-local\" {...register('eventDate')} />\n        </InputLabel>\n        <GridWrapper>\n          <InputLabel label={translate('amount')} direction={'vertical'}>\n            <InputText placeholder={translate('amount')} {...register('amount')} />\n          </InputLabel>\n\n          <InputLabel label={translate('currency')} direction={'vertical'}>\n            <InputText placeholder={translate('currency')} {...register('currency')} disabled />\n          </InputLabel>\n        </GridWrapper>\n\n        {renderInputsCountIn}\n        {renderInputsCountOut}\n        {renderInputsCategories}\n\n        {addInputs ? additionalInputs : null}\n\n        <InputLabel label={translate('comment')} direction={'vertical'}>\n          <TextareaPrimary placeholder={translate('comment')} {...register('comment')} />\n        </InputLabel>\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\nconst GridWrapper = styled.div<{ gridTemplateColumns?: string }>`\n  display: grid;\n  grid-template-columns: ${({ gridTemplateColumns }) => gridTemplateColumns || '1fr 120px'};\n  gap: 12px;\n`;\nexport default TransactionForm;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from './pagesStyles';\nimport { transactionsColumns, transactionsSearchParams } from 'data';\nimport styled from 'styled-components';\nimport useTransactionsService from 'redux/transactions/useTransactionsService.hook';\nimport { useEffect, useMemo } from 'react';\nimport useTrFilterSelectors from 'redux/transactions/useTrFilterSelectors.hook';\nimport { ITransaction } from '../../redux/transactions/transactions.types';\nimport { useTrActionsCreator } from '../../redux/transactions/useTrActionsCreator.hook';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport AppGridPage from './AppGridPage';\nimport { defaultThunkPayload } from '../../utils/fabrics';\n\ntype Props = {\n  path: string;\n};\nconst PageTransactions: React.FC<any> = ({ path }: Props) => {\n  const service = useTransactionsService();\n  const { state, getAll } = service;\n  const filterSelectors = useTrFilterSelectors();\n  const actionsCreator = useTrActionsCreator(service);\n  // const [selectedTr, setSelectedTr] = useState<any>(null);\n\n  useEffect(() => {\n    getAll(defaultThunkPayload());\n  }, [getAll]);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<ITransaction> => ({\n      tableData: state.transactions,\n      tableTitles: transactionsColumns,\n      tableSearchParams: transactionsSearchParams.filter(el => el.search),\n      tableSortParams: transactionsSearchParams.filter(el => el.sort),\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: data => {\n        // console.log(data);\n      },\n      onRowClick: data => {\n        // console.log(data);\n      },\n    }),\n    [actionsCreator, filterSelectors, state.transactions]\n  );\n\n  return (\n    <AppGridPage path={path}>\n      <Page>\n        <TableList {...tableConfig} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageTransactions;\n","import { useModalProvider } from '../../components/ModalProvider/ModalProvider';\nimport { TransactionsService } from './useTransactionsService.hook';\nimport { useCallback } from 'react';\n\nimport { filterOptions } from '../../data/transactions.data';\nimport { TableActionCreator } from '../../components/TableList/tableTypes.types';\nimport { ITransaction } from './transactions.types';\nimport TransactionForm from '../../components/Forms/TransactionForm';\n\nexport type TrActionsCreator = TableActionCreator<ITransaction>;\nconst useTrActionsCreator = (service: TransactionsService): TrActionsCreator => {\n  const modals = useModalProvider();\n\n  return useCallback(\n    ctx => [\n      {\n        name: 'editTr',\n        title: 'Редагування транзакції',\n        icon: 'edit',\n        disabled: !ctx.selectedRow?._id,\n        type: 'onlyIcon',\n        onClick: () => {\n          const modal = modals.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Редагування транзакції',\n              filterOptions,\n              onSubmitEdit: () => {\n                modal?.onClose();\n                service.editById({\n                  onSuccess(d) {\n                    modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'copyTr',\n        title: 'Копіювання транзакції',\n        icon: 'copy',\n        type: 'onlyIcon',\n        disabled: !ctx.selectedRow?._id,\n        onClick: () => {\n          const modal = modals.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Копіювання транзакції',\n              filterOptions,\n              onSubmit: () => {\n                modal?.onClose();\n                service.create({\n                  onSuccess(d) {\n                    modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'deleteTr',\n        title: 'Видалення транзакції',\n        icon: 'delete',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: !ctx.selectedRow?._id,\n        onClick: () => {\n          service.deleteById({\n            data: 'id',\n            onSuccess: d => {\n              console.log(d);\n            },\n          });\n        },\n      },\n      { separator: true },\n      {\n        name: 'createIncomeTr',\n        title: 'Дохід',\n        icon: 'INCOME',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        onClick: () => {\n          const modal = modals.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 0,\n              defaultState: { type: 'INCOME' },\n              onSubmit: data => {\n                modal?.onClose();\n                service.create({\n                  onSuccess(d) {\n                    modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'createTransferTr',\n        title: 'Переказ між рахунками',\n        icon: 'TRANSFER',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        onClick: () => {\n          const modal = modals.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 1,\n              defaultState: { type: 'TRANSFER' },\n              onSubmit: d => {\n                modal?.onClose();\n\n                service.create({\n                  data: { data: d },\n                  onSuccess(d) {\n                    modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'createExpenseTr',\n        title: 'Витрата',\n        icon: 'EXPENSE',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        onClick: () => {\n          const modal = modals.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити',\n              filterOptions,\n              defaultOption: 2,\n              defaultState: { type: 'EXPENSE' },\n              onSubmit: d => {\n                modal?.onClose();\n                service.create({\n                  onSuccess(d) {\n                    modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n    ],\n\n    [modals, service]\n  );\n};\n\nexport type useTrActionsCreatorHookType = typeof useTrActionsCreator;\n\nexport { useTrActionsCreator };\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import InputLabel, { InputLabelProps } from './InputLabel';\nimport { forwardRef, InputHTMLAttributes, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { omit, pick } from 'lodash';\nimport styled from 'styled-components';\nimport FlexBox, { FieldBox } from '../FlexBox';\nimport { RefCallBack } from 'react-hook-form';\nimport { SelectItem } from '../../TableList/tableTypes.types';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface CustomSelectBaseProps<OptType = any> {\n  InputComponent?: React.FC<InputHTMLAttributes<HTMLInputElement>>;\n  valueKey?: string;\n  options?: CustomSelectOption<OptType>[];\n  getOptions?: () => CustomSelectOption<OptType>[];\n  onSelect?: CustomSelectOnClickHandler<CustomSelectOption<OptType>>;\n  onClear?: () => void;\n  handleOpenState?: (prevState: boolean) => boolean;\n  open?: boolean;\n  ref?: RefCallBack;\n  selectValue?: OptType;\n  keepOpen?: boolean;\n  inputProps?: Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onSelect'>;\n  labelProps?: Omit<InputLabelProps, 'onSelect'>;\n  fieldMode?: boolean;\n  validateOption?: (option: OptType) => boolean;\n}\n\nexport type CustomSelectOnClickHandler<OptType = any> = <Option extends OptType = any>(\n  option?: Option,\n  value?: keyof Option\n) => void;\n\ninterface CustomSelectOptionBaseProps extends SelectItem {\n  onClick?: CustomSelectOnClickHandler;\n}\n\nexport type CustomSelectOption<OptType = Record<string, any>> = CustomSelectOptionBaseProps & OptType;\n\nexport type CustomSelectProps<OptType = any> = CustomSelectBaseProps<OptType> &\n  Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onSelect'> &\n  Omit<InputLabelProps, 'onSelect'>;\n\nconst CustomSelect: React.ForwardRefRenderFunction<any, CustomSelectProps> = (\n  {\n    InputComponent,\n    inputProps = {},\n    labelProps = {},\n    selectValue,\n    keepOpen,\n    valueKey,\n    id,\n    options,\n    name,\n    open = false,\n    onSelect,\n    onClear,\n    fieldMode,\n    ...props\n  },\n  ref\n) => {\n  const [currentOption, setCurrentOption] = useState<SelectItem | undefined>(selectValue);\n  const [isOpen, setIsOpen] = useState<boolean>(keepOpen || open);\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const uid = useMemo(() => nanoid(5), []);\n\n  const handleOpenState = useCallback(() => {\n    !keepOpen && setIsOpen(prev => !prev);\n  }, [keepOpen]);\n\n  const isValidOption = useCallback(\n    (option: CustomSelectOption<{ _id?: string }>) => {\n      return options?.some((opt: { _id?: string }) => opt?._id === option?._id);\n    },\n    [options]\n  );\n\n  const handleOnSelect = useCallback(\n    (option?: any) => {\n      if (!options || options?.length === 0) return;\n      return () => {\n        setCurrentOption(option);\n        if (onSelect && valueKey && valueKey && option[valueKey]) {\n          onSelect(option, option[valueKey]);\n          return;\n        }\n        if (onSelect) {\n          onSelect(option, option?.value);\n        }\n        handleOpenState();\n      };\n    },\n    [handleOpenState, onSelect, options, valueKey]\n  );\n\n  const handleOnClear = useCallback(() => {\n    setCurrentOption(undefined);\n    setIsOpen(false);\n    onClear && onClear();\n  }, [onClear]);\n\n  const renderOptions = useMemo(\n    () =>\n      options?.map(opt => (\n        <Option\n          key={opt._id}\n          onClick={handleOnSelect(opt)}\n          justifyContent={'flex-start'}\n          fillWidth\n          fxDirection={'row'}\n          padding={'5px 8px'}\n          isActive={opt?._id === currentOption?._id}\n        >\n          {opt.label || opt.name}\n        </Option>\n      )),\n    [currentOption?._id, handleOnSelect, options]\n  );\n\n  useEffect(() => {\n    const isValid = isValidOption(selectValue);\n\n    if (selectValue && isValid) return setCurrentOption(selectValue);\n    if (!selectValue || !isValid) return setCurrentOption(undefined);\n  }, [isValidOption, selectValue]);\n\n  return (\n    <FlexBox fillWidth style={{ position: 'relative' }} data-select={id || uid}>\n      <FlexBox fillWidth style={{ position: 'relative' }}>\n        <InputLabel\n          direction={'vertical'}\n          ref={labelRef}\n          {...pick(props, [\n            'error',\n            'success',\n            'helperText',\n            'loading',\n            'label',\n            'id',\n            'uppercase',\n            'align',\n            'direction',\n            'disabled',\n          ])}\n          {...labelProps}\n        >\n          <LabelInner fieldMode={fieldMode} error={!!props.error} success={!!props.success}>\n            <StyledInput\n              disabled={!fieldMode}\n              value={currentOption?.label || currentOption?.name || ''}\n              ref={ref}\n              {...omit(\n                { ...pick(props, [`${fieldMode ? 'onChange' : ''}`, 'onBlur', 'name', 'id', 'ref', 'placeholder']) },\n                ['error', 'success', 'loading']\n              )}\n              {...inputProps}\n            />\n\n            <IconsBox fxDirection={'row'} gap={6} fillHeight alignItems={'center'} padding={'0 8px 0 0'}>\n              {onClear && currentOption && (\n                <ButtonIcon\n                  variant={'onlyIconNoEffects'}\n                  className={'clearBtn'}\n                  icon={'close'}\n                  size={'20px'}\n                  onClick={handleOnClear}\n                />\n              )}\n\n              <ButtonIcon\n                variant={'onlyIconNoEffects'}\n                className={'clearBtn'}\n                icon={!isOpen ? 'SmallArrowDown' : 'SmallArrowUp'}\n                size={'24px'}\n                iconSize={'100%'}\n                onClick={handleOpenState}\n              />\n            </IconsBox>\n          </LabelInner>\n        </InputLabel>\n      </FlexBox>\n\n      <Options isOpen={isOpen}>\n        <FlexBox fillWidth overflow={'auto'}>\n          {options && options?.length > 0 ? (\n            renderOptions\n          ) : (\n            <NoOptions fillWidth fxDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n              Опції відсутні\n            </NoOptions>\n          )}\n        </FlexBox>\n      </Options>\n    </FlexBox>\n  );\n};\n\nconst Options = styled(FlexBox)<{ isOpen?: boolean; inView?: boolean; intersectionRatio?: number }>`\n  // position: absolute;\n  // top: calc(100% + 4px);\n  // left: 0;\n  // z-index: ${({ isOpen }) => (isOpen ? 100 : 10)};\n  font-size: 14px;\n\n  max-height: ${({ isOpen }) => (isOpen ? '120px' : 0)};\n  opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n  width: 100%;\n  overflow: hidden;\n\n  margin-top: 4px;\n\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.fieldBackgroundColor};\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n`;\n\nconst Option = styled(FieldBox)<{ isActive?: boolean }>`\n  min-height: 28px;\n\n  font-weight: ${({ isActive }) => (isActive ? 700 : '')};\n`;\n\nconst LabelInner = styled.fieldset<{\n  error?: boolean;\n  success?: boolean;\n  fieldMode?: boolean;\n}>`\n  flex: 1;\n\n  display: flex;\n  align-items: center;\n\n  padding: 0;\n  margin: 0;\n\n  width: 100%;\n  min-height: 28px;\n\n  color: ${({ error, success, theme }) =>\n    (error && theme.globals.colors.error) || (success && theme.globals.colors.success) || 'inherit'};\n\n  background-color: ${({ theme, fieldMode = 'true' }) => (fieldMode ? theme.field.backgroundColor : 'transparent')};\n  border-radius: 2px;\n\n  border: 1px solid\n    ${({ error, success, fieldMode = 'true', theme }) =>\n      (error && theme.globals.colors.error) ||\n      (success && theme.globals.colors.success) ||\n      (fieldMode && theme.field.backgroundColor) ||\n      theme.input.borderColor};\n\n  &:hover {\n    border-color: ${({ theme }) => theme.accentColor.base};\n    //box-shadow: 0 0 3px ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus,\n  &:focus-visible {\n    border-color: ${({ theme }) => theme.accentColor.base};\n    //box-shadow: 0 0 5px ${({ theme }) => theme.accentColor.base};\n    outline: 1px solid ${({ theme }) => theme.accentColor.base};\n  }\n\n  &::placeholder {\n    font-size: inherit;\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n\n  //transition: border-color ${({ theme }) => theme.globals.timingFunctionMain};\n\n  &[disabled] {\n    pointer-events: none;\n    opacity: 70%;\n  }\n\n  @media screen and (max-width: 480px) {\n    height: 34px;\n    font-size: 16px;\n  }\n`;\n\nconst StyledInput = styled.input`\n  flex: 1;\n  height: 100%;\n\n  padding: 4px 8px;\n  color: inherit;\n  font-weight: 500;\n\n  background-color: transparent;\n  border-radius: 0;\n  border: 0;\n  outline: none;\n\n  &:hover,\n  &:focus,\n  &:focus-visible {\n    outline: none;\n  }\n`;\nconst NoOptions = styled(FlexBox)`\n  min-height: 28px;\n\n  font-weight: 700;\n  line-height: 1.3;\n`;\nconst IconsBox = styled(FlexBox)`\n  //position: absolute;\n  //top: 50%;\n  //right: 4px;\n  //z-index: 5;\n  //transform: translateY(-50%);\n\n  max-height: 100%;\n\n  color: ${({ theme }) => theme.accentColor.base};\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nexport default memo(forwardRef(CustomSelect));\n"],"names":["dispatch","useAppDispatch","state","useTransactionsSelector","dispatchers","useMemo","create","_create","_asyncToGenerator","_regeneratorRuntime","mark","_callee","payload","wrap","_context","prev","next","abrupt","createTransactionThunk","defaultThunkPayload","stop","_x","apply","arguments","deleteById","_deleteById","_callee2","_context2","createApiCall","defaultApiCallPayload","TransactionsApi","_x2","editById","_editById","_callee3","_context3","_x3","getById","_getById","_callee4","_context4","_x4","getAll","_getAll","_callee5","_context5","getAllTransactionsThunk","_x5","_objectSpread","_useAppSelector","useAppSelector","counts","categories","label","data","_id","name","selectorName","_ref","dataList","rootDataValidator","_useState","useState","parentList","treeData","loading","error","_useState2","_slicedToArray","setState","filter","el","parent","createTreeDataMapById","onSuccess","onError","onLoading","additionalInputs","_jsxs","_Fragment","children","_jsx","InputLabel","translate","direction","disabled","InputText","placeholder","validationItem","yup","shape","owner","optional","nullable","validation","countIn","subCountIn","GridWrapper","styled","_templateObject","_taggedTemplateLiteral","_ref3","gridTemplateColumns","edit","_formValues$countIn3","_formValues$countOut3","_formValues$category3","onSubmit","onSubmitEdit","defaultState","copy","addInputs","props","_objectWithoutProperties","_excluded","_useForm","useForm","defaultValues","currency","resolver","yupResolver","reValidateMode","errors","formState","register","setValue","watch","unregister","handleSubmit","formValues","rootValidator","useCallback","type","countsTreeData","useTreeDataCreatorHook","categoriesTreeData","registerSelect","childControl","_props$options","onSelect","option","_value","selectValue","onClear","childName","options","length","renderInputsCountIn","_formValues$countIn","_formValues$countIn2","parentOptions","childOptions","undefined","includes","CustomSelect","renderInputsCountOut","_formValues$countOut","_formValues$countOut2","countOut","subCountOut","renderInputsCategories","_formValues$category","_formValues$category2","category","ModalForm","submitData","omitPathArr","trReqData","createTransactionForReq","console","log","onOptSelect","_ref2","value","FlexBox","className","flex","fillWidth","maxHeight","padding","overflow","TextareaPrimary","Page","takeFullGridArea","path","service","useTransactionsService","filterSelectors","useTrFilterSelectors","actionsCreator","modals","useModalProvider","ctx","_ctx$selectedRow","_ctx$selectedRow2","_ctx$selectedRow3","title","icon","selectedRow","onClick","modal","handleOpenModal","ModalChildren","TransactionForm","modalChildrenProps","filterOptions","onClose","d","fillHeight","iconSize","separator","defaultOption","useTrActionsCreator","useEffect","tableConfig","tableData","transactions","tableTitles","transactionsColumns","tableSearchParams","transactionsSearchParams","search","tableSortParams","sort","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","onRowClick","AppGridPage","TableList","css","takeFullPlace","_templateObject2","_templateObject3","ref","InputComponent","_ref$inputProps","inputProps","_ref$labelProps","labelProps","keepOpen","valueKey","id","_ref$open","open","fieldMode","currentOption","setCurrentOption","_useState3","_useState4","isOpen","setIsOpen","labelRef","useRef","uid","nanoid","handleOpenState","isValidOption","some","opt","handleOnSelect","handleOnClear","renderOptions","map","Option","justifyContent","fxDirection","isActive","isValid","style","position","pick","LabelInner","success","StyledInput","omit","concat","IconsBox","gap","alignItems","ButtonIcon","variant","size","Options","NoOptions","_ref4","_ref5","theme","fieldBackgroundColor","_ref6","globals","timingFunctionMain","FieldBox","_ref7","_ref8","colors","_ref9","_ref9$fieldMode","field","backgroundColor","_ref10","_ref10$fieldMode","input","borderColor","_ref11","accentColor","base","_ref12","_ref13","_ref14","_ref15","_ref16","inputPlaceholderColor","_ref17","_templateObject4","_templateObject5","_templateObject6","_ref18","_ref19","memo","forwardRef"],"sourceRoot":""}