{"version":3,"file":"static/js/799.43057c05.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Overviews/offerOverviewCellsMap.tsx","components/Overviews/OfferOverviewXL.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/Forms/offers/variations/OfferVariationPropertySelector.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormProductDefaultsOverlay.tsx","components/Overlays/FormProductImagesOverlay.tsx","components/Forms/offers/FormProductCategories.tsx","components/Overlays/FormSelectCategoriesOverlay.tsx","components/Overviews/components/OfferOverviewCategoriesCell.tsx","components/atoms/Changer.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Overviews/components/index.tsx","components/Overviews/components/OverviewTextCell.tsx","components/Overviews/components/OfferOverviewStatusChangerCell.tsx","components/Overviews/components/OfferOverviewDefaultsCell.tsx","components/Overviews/components/OfferOverviewImagesCell.tsx","components/Overviews/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/components/OrderOverviewGroupInfo.tsx","components/Overviews/components/OrderOverviewCustomerInfo.tsx","components/Overviews/components/OrderOverviewInvoicing.tsx","components/Overviews/components/OrderOverviewDelivery.tsx","components/Overviews/components/OrderOverviewTotals.tsx","components/atoms/LangButtonsGroup.tsx","data/warehauses.data.ts"],"sourcesContent":["import { useOverlayService } from './OverlayStackProvider';\nimport React, { MouseEventHandler, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              overlaySrv.remove(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\n\nenum RightSideOptionEnum {\n  Variations = 'Variations',\n  Prices = 'Prices',\n  Warehousing = 'Warehousing',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(RightSideOptionEnum.Variations);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n    };\n    return tabs?.[currentTab] ?? null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      {isVisible && (\n        <ModalHeader\n          onBackPress={toggleVisibility}\n          renderTitle={\n            <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n              <Text $weight={600} $size={14}>\n                {page?.currentOffer?.label}\n              </Text>\n\n              <Text $size={14}>{page?.currentOffer?.sku}</Text>\n            </FlexBox>\n          }\n        />\n      )}\n\n      <TabBox overflow={'hidden'} fillWidth flex={1}>\n        <TabSelector filterOptions={TabsList} defaultValue={currentTab} onOptSelect={filterHandler} preventFilter />\n\n        {renderTab}\n      </TabBox>\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import { OverviewCellProps } from './components/overview-types';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport { t } from '../../lang';\nimport { OverviewCells } from './components';\nimport { IMeasurement } from '../../types/utils.types';\nimport { enumToFilterOptions, toAppDateFormat } from '../../utils';\nimport { isString } from 'lodash';\n\nexport enum ProductOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nconsole.log('OverviewCells', OverviewCells);\n\nexport const ProductOverviewTabsList = enumToFilterOptions(ProductOverviewTabsEnum);\n\nconst offerOverviewCells: OverviewCellProps<OfferEntity, ProductOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: OverviewCells.OfferCategories,\n    gridArea: 'categories',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Brand'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    CellComponent: OverviewCells.Text,\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Properties'),\n    CellComponent: OverviewCells.OfferStaticProperties,\n    gridArea: 'properties',\n    tab: ProductOverviewTabsEnum.Properties,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OverviewCells.OfferDefaults,\n    gridArea: 'defaults',\n    tab: ProductOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    CellComponent: OverviewCells.Text,\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.user?.email} / ${\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : ''\n          }`\n        : null,\n    gridArea: 'created',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    CellComponent: OverviewCells.Text,\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.user?.email} / ${\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : ''\n          }`\n        : null,\n    gridArea: 'updated',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OverviewCells.OfferImages,\n    gridArea: 'images',\n    tab: ProductOverviewTabsEnum.Images,\n  },\n];\n\nexport const offerOverviewCellsMap: Record<\n  ProductOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, ProductOverviewTabsEnum>[]\n> = {};\nofferOverviewCells.forEach(item => {\n  const tab = item.tab;\n  if (tab) {\n    if (offerOverviewCellsMap[tab]) {\n      offerOverviewCellsMap[tab].push(item);\n    } else {\n      offerOverviewCellsMap[tab] = [item];\n    }\n  }\n});\n","import { OfferEntity } from '../../types/offers/offers.types';\nimport FlexBox from '../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../lang';\nimport { usePageCurrentOffer } from '../AppPages/offers/PageOfferProvider';\nimport { OverlayHeader } from '../Overlays';\nimport TabSelector from '../atoms/TabSelector';\n\nimport { useOverlayService } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../hooks';\nimport { offerOverviewCellsMap, ProductOverviewTabsEnum, ProductOverviewTabsList } from './offerOverviewCellsMap';\nimport { OverviewCells } from './components';\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n\n  const [currentTab, setCurrentTab] = useState<ProductOverviewTabsEnum>(ProductOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      offerOverviewCellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n        if (CellComponent) {\n          return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n        }\n        return <OverviewCells.Text key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n      }),\n    [currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        filterOptions={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport default OfferOverviewXL;\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { products: productsS } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              _id: page?.currentOffer?._id,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          productsS.getProductFullInfo({\n            data: { _id: page.currentOffer?._id },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({ offer: { content: t('Loading product info') } });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      service\n        .getProductFullInfo({\n          data: { _id: offerId },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .finally();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    service.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      service.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { pricesColumnsForProductReview } from 'data/priceManagement.data';\nimport FormCreatePrice from '../../../Forms/pricing/FormCreatePrice/FormCreatePrice';\nimport { OfferPriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { getIdRef } from 'utils/data-transform';\nimport { OnlyUUID } from 'redux/global.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  // const updateDefaults = ({}: { price?: OnlyUUID }) => {};\n\n  const tableConfig = useMemo((): ITableListProps<OfferPriceEntity> => {\n    return {\n      tableData: currentOffer?.prices,\n      tableTitles: pricesColumnsForProductReview,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: FormCreatePrice,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                      // onSubmit: (d, o) => {\n                      //   pricesS.addPriceToList({\n                      //     data: { updateCurrent: true, data: { data: d } },\n                      //     onSuccess: data => {\n                      //       updateDefaults({ price: { _id: data._id } });\n                      //\n                      //       o?.close && m?.onClose();\n                      //     },\n                      //   });\n                      // },\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentOffer, withActions, onSelect, loadData, modalS]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n    />\n  );\n};\n\nexport default PricesTab;\n","import { IProperty, IPropertyValue } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { PropertyItemStylesByCmsKey } from '../../../Directories/DirProperties/components/PropertyItem';\n\nexport interface OfferVariationPropertySelectorProps {\n  item: IProperty;\n  selectedValue?: string;\n  selectedIds?: string[];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n}\nexport const OfferVariationPropertySelector = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: OfferVariationPropertySelectorProps) => {\n  const renderChildren = useMemo(() => {\n    return item.childrenList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, item.childrenList, onSelect, selectedIds]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox fillWidth padding={'8px 0'} gap={6} cmsKey={item.cmsConfigs?.key}>\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ cmsKey?: MaybeNull<string> }>`\n  width: 100%;\n  display: grid;\n\n  grid-template-columns: repeat(${p => (p.cmsKey ? PropertyItemStylesByCmsKey[p.cmsKey]?.numColumns ?? 2 : 2)}, 1fr);\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: IPropertyValue;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  return (\n    <ValueTag\n      variant={isSelected ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nexport default OfferVariationPropertySelector;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { toVariationFormData, toVariationReqData } from '../../utils';\nimport { IVariationFormData, VariationEntity } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../Forms/components/FormAfterSubmitOptions';\nimport { OverlayFooter, OverlayHeader } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport LangButtonsGroup from '../atoms/LangButtonsGroup';\nimport { MaybeNull, UUID } from '../../types/utils.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { IProperiesGroup, IProperty, IPropertyValue } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  update?: UUID;\n\n  create?: boolean;\n\n  defaultState?: VariationEntity;\n}\nconst validation = yup.object().shape({\n  label: yup.string().required().min(5).max(64),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\n\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const loaders = useLoaders<'create'>();\n  const currentOffer = useCurrentOffer({ id: update || offerId || offer?._id });\n  const submitOptions = useAfterSubmitOptions();\n  // _setCurrentTemplate\n  const [currentTemplate] = useState<IProperiesGroup>(templates?.[0]);\n  const [selectedPropsMap, setSelectedPropsMap] = useState<Record<string, IPropertyValue>>({});\n\n  const { propertiesList, propValuesDataMap } = useMemo(() => {\n    const list = currentTemplate?.childrenList?.filter(el => el?.isSelectable);\n    const _propValuesMap: Record<string, IPropertyValue> = {};\n\n    const map: Record<string, IProperty> = Object.assign(\n      {},\n      ...(list ?? []).map(pr => {\n        if (pr?.childrenList?.length) {\n          pr?.childrenList.forEach(val => {\n            _propValuesMap[val._id] = val;\n          });\n        }\n\n        return { [pr._id]: pr };\n      })\n    );\n\n    return { propertiesList: list, propertiesDataMap: map, propValuesDataMap: _propValuesMap };\n  }, [currentTemplate?.childrenList]);\n\n  const formMethods = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      defaultState ? { ...defaultState, offer: currentOffer } : { offer: currentOffer }\n    ),\n    resolver: yupResolver(validation as never),\n    reValidateMode: 'onSubmit',\n  });\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  useEffect(() => {\n    console.log({ formValues });\n  }, [formValues]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const { label } = useMemo(() => {\n    // const _sortedIds = Object.keys(selectedPropsMap ?? {}).sort((prev, next) => prev.localeCompare(next));\n\n    const _sorted = Object.entries(selectedPropsMap).sort((prev, next) => {\n      return prev[0].localeCompare(next[0]);\n    });\n    const _labels: string[] = currentOffer?.label ? [currentOffer?.label] : [];\n\n    for (const entry of _sorted) {\n      const value = entry[1];\n      value?.label && _labels.push(value?.label);\n    }\n    const _base = !_sorted?.length ? `${currentOffer?.label}. {{VARIATION_LABEL}}` : _labels.join('. ');\n\n    return { label: _base };\n  }, [currentOffer?.label, selectedPropsMap]);\n\n  useEffect(() => {\n    setValue('label', label);\n  }, [label, setValue]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: toVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: toVariationReqData(data),\n            onSuccess: data => {\n              submitOptions.state.close && onClose && onClose();\n              submitOptions.state.clear && reset();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [loaders, onClose, reset, service, submitOptions.state.clear, submitOptions.state.close, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string, label?: MaybeNull<string>) => {\n      setValue(`propertiesMap.${parentId}`, id);\n\n      setSelectedPropsMap(p => ({ ...p, [parentId]: propValuesDataMap?.[id] }));\n    },\n    [propValuesDataMap, setValue]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setSelectedPropsMap({});\n  }, [setValue]);\n\n  const renderTemplate = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  return (\n    <FormContainer\n      onSubmit={handleSubmit(onValid, errors => {\n        console.error('[SUBMIT ERROR]', errors);\n      })}\n      onReset={handleClearMap}\n      {...props}\n    >\n      <OverlayHeader\n        onBackPress={onClose}\n        title={(title || currentTemplate?.label) ?? ''}\n        canSubmit={canSubmit}\n        okButton\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <Inputs>\n          <InputLabel label={t('label')} error={errors.label}>\n            <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n          </InputLabel>\n\n          <FlexBox fxDirection={'row'} gap={8} fillWidth>\n            <InputLabel label={t('sku')} error={errors.sku}>\n              <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n            </InputLabel>\n\n            <InputLabel label={t('barCode')} error={errors.barCode}>\n              <InputText {...register('barCode')} placeholder={t('barCode')} />\n            </InputLabel>\n          </FlexBox>\n\n          {/*<DimensionsInputs form={formMethods} />*/}\n        </Inputs>\n\n        <TemplateBox padding={'0 0 8px'} margin={'8px 0 0'}>\n          {renderTemplate}\n        </TemplateBox>\n\n        {!currentOffer && (\n          <CmsConfigs padding={'8px 0'} fillWidth>\n            <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n              <Text $size={13} $weight={500}>\n                {t('Cms configs')}\n              </Text>\n            </CmsConfigsHeader>\n\n            <Inputs>\n              <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n                <LangButtonsGroup disabled />\n              </InputLabel>\n\n              <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n                <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n              </InputLabel>\n            </Inputs>\n          </CmsConfigs>\n        )}\n      </Content>\n\n      <OverlayFooter\n        loading={loaders.isLoading?.create}\n        resetButtonShown\n        submitButtonText={loaders.isLoading?.create ? 'Loading...' : update ? 'Підтвердити' : 'Додати'}\n        canSubmit={canSubmit}\n        extraFooter={\n          <ExtraFooterBox>\n            <FormAfterSubmitOptions {...submitOptions} />\n          </ExtraFooterBox>\n        }\n      />\n    </FormContainer>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst Inputs = styled(FlexBox)`\n  padding: 0 4px;\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { IVariationTableData } from '../../../../types/offers/variations.types';\nimport { getIdRef } from '../../../../utils';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\nimport { IProperty } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const page = usePageCurrentOffer();\n  const modalS = useModalProvider();\n  const currentOffer = page.currentOffer;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, offerId: currentOffer._id },\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, IProperty> = {};\n    for (const variation of currentOffer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [currentOffer?.variations]);\n\n  const tableConfig = useMemo(() => {\n    return {\n      tableTitles: variationsTableTitles,\n      tableData: currentOffer?.variations,\n      transformData: transformVariationTableData,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n                  const dataForUpdate = currentOffer?.variations?.find(v => v?._id === currentId);\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: {\n                      update: currentId,\n                      defaultState: dataForUpdate,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: { offer: page.currentOffer },\n                  });\n                },\n              },\n            ];\n          },\n    } as ITableListProps<IVariationTableData>;\n  }, [currentOffer?.variations, loadData, modalS, onSelect, page.currentOffer, variationsTableTitles, withActions]);\n\n  useEffect(() => {\n    if (currentOffer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n    />\n  );\n};\nexport default VariationsTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px;\n\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox fxDirection={'row'} justifyContent={'space-between'} height={'max-content'} alignItems={'center'}>\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/global.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IWarehouse } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList isSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nexport interface FormProductDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum FormProductDefaultsTabs {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\nexport type OfferOverlayLoaderKey =\n  | keyof typeof FormProductDefaultsTabs\n  | `${keyof typeof FormProductDefaultsTabs}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    currentOffer?._id &&\n      productsS.setDefaults({\n        data: { _id: currentOffer?._id, defaults: toReqData(fData) as never, updateCurrent: true },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n\n  const renderTab = useMemo(() => {\n    const tabsMap: Record<FormProductDefaultsTabs, React.ReactNode> = {\n      [FormProductDefaultsTabs.warehouse]: <WarehousesTab onSelect={handleSelect} selected={formValues?.warehouse} />,\n      [FormProductDefaultsTabs.price]: <PricesTab withActions onSelect={handleSelect} selected={formValues?.price} />,\n      [FormProductDefaultsTabs.variation]: (\n        <VariationsTab withActions onSelect={handleSelect} selected={formValues?.variation} />\n      ),\n      [FormProductDefaultsTabs.inventory]: (\n        <WarehousingTab withActions onSelect={handleSelect} selected={formValues?.inventory} />\n      ),\n      [FormProductDefaultsTabs.supplier]: (\n        <CounterpartyTab\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          withActions\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      ),\n    };\n\n    return tabsMap[tabs[currentTabIdx]?.value] ?? null;\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    formValues?.warehouse,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentOffer?.defaults;\n\n    const tabIs: Record<FormProductDefaultsTabs | string, boolean> = {\n      [tabs?.[currentTabIdx]?.value ?? '']: true,\n    };\n\n    if (tabIs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabIs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabIs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabIs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabIs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentOffer?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} onCreatePress={() => {}} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FormOfferImagesComponent from '../Forms/offers/components/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils/data-transform';\nimport { OverlayFooter, OverlayHeader } from './index';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: OfferEntity;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(currentProduct?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={\n          <OverlayHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />\n        }\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport translate from '../../../lang';\nimport { IDirItemBase, IProductCategoryDirItem } from '../../../types/dir.types';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport styled from 'styled-components';\n\nexport interface FormProductCategoriesProps {\n  onSelect?: (id: string, option?: IProductCategoryDirItem) => void;\n  onChange?: (ids: string[]) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  options?: IProductCategoryDirItem[];\n}\n\nconst FormProductCategories: React.FC<FormProductCategoriesProps> = ({ options, onSelect, onChange, defaultData }) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const handleSelect = useCallback(\n    (option?: IProductCategoryDirItem) => {\n      setSelectedIds(prev => {\n        const newData = option\n          ? prev.includes(option?._id)\n            ? prev.filter(el => el !== option?._id)\n            : [...prev, option._id]\n          : prev;\n        onSelect && option?._id && onSelect(option?._id);\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n  const handleRemove = useCallback(\n    (id: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.filter(el => el !== id);\n\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange]\n  );\n\n  const renderTreeData = useMemo(() => {\n    return options?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_0_${item._id}`}\n          item={item}\n          index={index}\n          selectedIds={selectedIds}\n          onRemove={handleRemove}\n        />\n      );\n    });\n  }, [handleRemove, options, selectedIds]);\n\n  useEffect(() => {\n    if (defaultData) {\n      setSelectedIds(defaultData);\n    }\n  }, [defaultData]);\n\n  return (\n    <FlexBox fillWidth gap={6}>\n      <CustomSelect\n        treeMode\n        dropDownIsAbsolute\n        defaultValue={defaultData}\n        {...{\n          label: translate('categories'),\n          placeholder: translate('categories'),\n          required: true,\n          options,\n        }}\n        onSelect={handleSelect}\n      />\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} gap={8}>\n        {renderTreeData}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n\nconst ListItem: React.FC<{\n  item: IDirItemBase;\n  lvl?: number;\n  index?: number;\n  onRemove?: (id: string) => void;\n  selectedIds: string[];\n}> = ({\n  item,\n  index = 0,\n  lvl = 0,\n  selectedIds,\n  onRemove = () => {\n    console.log('onRemove not passed', lvl);\n  },\n}) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          onRemove={onRemove}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, onRemove, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <TagItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n          <ButtonIcon\n            variant={'onlyIcon'}\n            endIcon={'close'}\n            size={'24px'}\n            endIconSize={'80%'}\n            onClick={() => onRemove && onRemove(item._id)}\n          />\n        </TagItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n\nconst TagItem = styled(FlexBox)`\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.accentColor.base};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\nexport default FormProductCategories;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector, useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../utils/data-transform';\nimport FormProductCategories from '../Forms/offers/FormProductCategories';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\n\nexport interface FormSelectCategoriesOverlayProps extends OverlayHandlerReturn {}\n\nconst FormProductCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const { currentOffer } = useProductsSelector();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<string[]>([]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentOffer &&\n      service.updateById({\n        data: { ...getIdRef(currentOffer), data: { categories: state }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  const canSubmit = useMemo(() => {\n    const initialString = currentOffer?.categories?.map(c => c._id)?.toString();\n    const currentString = state.toString();\n\n    return initialString !== currentString;\n  }, [currentOffer?.categories, state]);\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setState(currentOffer?.categories.map(c => c._id));\n    }\n  }, [currentOffer?.categories]);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader title={'Категорії'} onBackPress={onClose} canSubmit={canSubmit} okButton />\n\n      <Content padding={'0 0 8px 0'} flex={1}>\n        <FormProductCategories onChange={setState} options={directory} defaultData={state} />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductCategoriesOverlay;\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../redux/selectors.store';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport FormProductCategoriesOverlay from '../../Overlays/FormSelectCategoriesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { IProductCategoryDirItem } from '../../../types/dir.types';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: IProductCategoryDirItem;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import FlexBox from './FlexBox';\nimport ButtonIcon from './ButtonIcon/ButtonIcon';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { Text } from './Text';\nimport { IconIdType } from '../../img/sprite';\nimport { LangPack } from '../../lang';\nimport { checks } from '../../utils';\n\nexport interface ChangerOption<T = any, D = any> {\n  _id?: string;\n  value: T;\n  data?: D;\n  color?: string;\n  icon?: IconIdType;\n  backgroundColor?: string;\n  label?: string;\n  lang?: LangPack;\n}\n\nexport interface StatusChangerProps<V = any, N = any> {\n  name?: N;\n  options?: ChangerOption<V>[];\n  onChange?: (event: ChangerEvent<V, N>) => void;\n  currentIndex?: number;\n  currentOption?: ChangerOption<V>;\n  colorIndicator?: boolean;\n  disabled?: boolean;\n}\n\nexport interface ChangerEvent<V = any, N = any> {\n  index: number;\n  name?: N;\n  value: ChangerOption<V>['value'];\n  option?: ChangerOption<V>;\n}\n\nconst Changer = <V = any,>({\n  options = [],\n  colorIndicator = true,\n  onChange,\n  currentOption,\n  currentIndex,\n  disabled,\n  name,\n}: StatusChangerProps<V>): JSX.Element => {\n  const [current, setCurrent] = useState<number>(0);\n  const currentStatus = useMemo(() => (options ? options[current] : null), [current, options]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    if (checks.isFun(onChange) && checks.isUnd(currentOption ?? currentIndex)) {\n      console.warn('Changer', 'You try to use uncontrolled \"Changer\" component\\n', 'You need to pass option or index');\n    }\n  }, [onChange, currentOption, currentIndex]);\n  const handleChange = (increment: number) => () => {\n    if (checks.isFun(onChange)) {\n      const newIndex = current + increment;\n      onChange({ index: newIndex, value: options[newIndex]?.value, option: options[newIndex] });\n      return;\n    }\n\n    if (current >= 0 && current + 1 <= options?.length) {\n      setCurrent(prev => prev + increment);\n    }\n  };\n  useEffect(() => {\n    if (!checks.isUnd(currentIndex) && current >= 0 && current + 1 <= options.length) {\n      setCurrent(currentIndex);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentIndex]);\n\n  useEffect(() => {\n    if (!checks.isUnd(currentOption)) {\n      const index = options.findIndex(o => {\n        if (currentOption?.value) {\n          return o?.value === currentOption?.value;\n        } else if (currentOption?._id) {\n          return o?._id === currentOption?._id;\n        }\n        return false;\n      });\n\n      index >= 0 && index !== current && setCurrent(index);\n    }\n\n    // eslint-disable-next-line\n  }, [currentOption]);\n\n  return (\n    <FlexBox fxDirection={'row'} fillWidth height={'28px'} alignItems={'center'} gap={8}>\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowLeft'}\n        iconSize={'28px'}\n        disabled={disabled || current === 0}\n        onClick={handleChange(-1)}\n      />\n\n      <FlexBox\n        flex={1}\n        alignItems={'stretch'}\n        justifyContent={'center'}\n        overflow={'hidden'}\n        style={{\n          borderRadius: 2,\n          backgroundColor: theme.fieldBackgroundColor,\n          color: theme.fontColorSidebar,\n          height: '100%',\n        }}\n      >\n        <FlexBox fillWidth fxDirection={'row'} justifyContent={'center'} alignItems={'center'} flex={1}>\n          <Text $size={15} $weight={600} className={'inner'} $ellipsisMode={true}>\n            {currentStatus?.label}\n          </Text>\n        </FlexBox>\n\n        {colorIndicator && currentStatus?.color && (\n          <FlexBox fillWidth height={'4px'} style={{ backgroundColor: currentStatus?.backgroundColor }} />\n        )}\n      </FlexBox>\n\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowRight'}\n        iconSize={'28px'}\n        disabled={disabled || current + 1 === options.length}\n        onClick={handleChange(1)}\n      />\n    </FlexBox>\n  );\n};\nexport default Changer;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport CustomSelect from '../atoms/Inputs/CustomSelect/CustomSelect';\nimport { t } from '../../lang';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface FormSelectPropertiesProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  update?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentOffer = offer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [currentId, setCurrentId] = useState<string>(templates[0]?._id);\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const canSubmit = useMemo(() => {\n    return currentOffer?.properties?.map(p => p._id).join(',') !== selectedIds.join(',');\n  }, [currentOffer?.properties, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = update ?? currentOffer?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentOffer?._id, onClose, onSubmit, selectedIds, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentId?: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n        onChange && onChange(newData);\n        onSelect && onSelect(id);\n\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (currentOffer?.properties) {\n      setSelectedIds(currentOffer?.properties.map(p => p._id));\n    }\n  }, [currentOffer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        title={(title || templateData?.label) ?? ''}\n        okButton\n      />\n\n      <CustomSelect\n        label={t('Available templates')}\n        options={templates}\n        selectedValue={currentId}\n        onSelect={option => {\n          setCurrentId(option?._id);\n        }}\n      />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>`\n  //display: grid;\n  //grid-template-columns: repeat(auto-fill, 25%);\n  //\n  //@media screen and (max-width: 480px) {\n  //  grid-template-columns: repeat(auto-fill, 50%);\n  //}\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  //width: 100%;\n  //min-width: unset;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { IProperty } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: IProperty;\n  selectedItems?: string[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedItems }) => {\n  const renderValues = useMemo(() => {\n    return item.childrenList\n      ?.filter(el => selectedItems?.includes(el._id))\n      ?.map((value, index) => {\n        return (\n          <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n            {value.label}\n          </CellStyledComp.CategoryItem>\n        );\n      });\n  }, [item.childrenList, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OfferOverviewDefaultsCell } from './OfferOverviewDefaultsCell';\nimport { OfferOverviewImagesCell } from './OfferOverviewImagesCell';\nimport { OfferOverviewCategoriesCell } from './OfferOverviewCategoriesCell';\nimport { OfferOverviewStatusChangerCell } from './OfferOverviewStatusChangerCell';\nimport { OverviewTextCell } from './OverviewTextCell';\nimport { OfferOverviewStaticProperties } from './OfferOverviewStaticPropertiesCell';\nimport { OrderOverviewGroupInfo } from './OrderOverviewGroupInfo';\nimport { OrderOverviewInvoicing } from './OrderOverviewInvoicing';\nimport { OrderOverviewDelivery } from './OrderOverviewDelivery';\nimport { OrderOverviewCustomerInfo } from './OrderOverviewCustomerInfo';\nimport { OrderOverviewTotals } from './OrderOverviewTotals';\n\nexport const OverviewCells = {\n  Text: OverviewTextCell,\n  OfferStatusChanger: OfferOverviewStatusChangerCell,\n  OfferDefaults: OfferOverviewDefaultsCell,\n  OfferImages: OfferOverviewImagesCell,\n  OfferCategories: OfferOverviewCategoriesCell,\n  OfferStaticProperties: OfferOverviewStaticProperties,\n  OrderGroupInfo: OrderOverviewGroupInfo,\n  OrderCustomerInfo: OrderOverviewCustomerInfo,\n  OrderInvoicing: OrderOverviewInvoicing,\n  OrderDelivery: OrderOverviewDelivery,\n  OrderTotals: OrderOverviewTotals,\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity, OfferStatusEnum } from '../../../types/offers/offers.types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { getStatusData } from '../../../data/statuses.data';\nimport { offerStatusesData } from '../../../data/offers.data';\nimport { ToastService } from '../../../services';\nimport FlexBox from '../../atoms/FlexBox';\nimport Changer from '../../atoms/Changer';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { t } from '../../../lang';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { CellStyledComp } from './CellStyles';\nimport { useOfferOverviewLoaders } from '../../AppPages/offers/PageOfferOverview';\n\nexport const OfferOverviewStatusChangerCell: RenderOverviewCellComponent<OfferEntity> = ({ cell, data }) => {\n  const loaders = useOfferOverviewLoaders();\n\n  const [canEdit, setCanEdit] = useState(false);\n  const [current, setCurrent] = useState<OfferStatusEnum | undefined>(data?.approved);\n\n  const service = useAppServiceProvider()[ServiceName.products];\n\n  const currentStatusData = useMemo(() => getStatusData(current), [current]);\n\n  const canAccept = useMemo(() => {\n    return current !== data?.approved;\n  }, [current, data?.approved]);\n  const handleCancelPress = () => {\n    setCurrent(data?.approved ?? (offerStatusesData[0].value as never));\n    setCanEdit(false);\n  };\n\n  const handleAcceptPress = () => {\n    service.updateById({\n      data: { _id: data?._id, data: { approved: current }, refreshCurrent: true },\n      onSuccess: () => {\n        setCanEdit(false);\n        ToastService.success('Product updated');\n      },\n      onLoading: loaders?.onLoading('offer'),\n    });\n  };\n\n  useEffect(() => {\n    if (data?.approved) {\n      setCurrent(data.approved);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader\n        title={cell?.title}\n        onCancelPress={handleCancelPress}\n        onEditPress={() => setCanEdit(true)}\n        editMode={canEdit}\n      />\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        justifyContent={'flex-end'}\n        alignItems={'stretch'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n        gap={8}\n      >\n        {canEdit ? (\n          <>\n            <Changer\n              disabled={!canEdit}\n              options={offerStatusesData}\n              currentOption={{ value: current }}\n              onChange={e => setCurrent(e?.value as never)}\n            />\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <ButtonIcon variant={'outlinedSmall'} disabled={!canAccept} onClick={handleCancelPress}>\n                {t('Cancel')}\n              </ButtonIcon>\n\n              <ButtonIcon variant={'filledSmall'} disabled={!canAccept} onClick={handleAcceptPress}>\n                {t('Ok')}\n              </ButtonIcon>\n            </FlexBox>\n          </>\n        ) : (\n          <CellStyledComp.Tag\n            style={{\n              alignSelf: 'flex-end',\n              borderColor: currentStatusData?.colorSecondary,\n              backgroundColor: currentStatusData?.colorSecondary,\n            }}\n          >\n            <CellStyledComp.CellText $isTitle={!current} $weight={600} $align={'right'}>\n              {t(current || 'undefined')}\n            </CellStyledComp.CellText>\n          </CellStyledComp.Tag>\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport FormProductDefaultsOverlay from '../../Overlays/FormProductDefaultsOverlay';\n\nimport { OfferPriceEntity } from '../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../types/utils.types';\nimport { toPrice } from '../../../utils/numbers';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: OfferPriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../Overlays/FormProductImagesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} disabled />\n          ))}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport React, { useMemo, useState } from 'react';\nimport FormSelectPropertiesOverlay from '../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { OverviewPropertyComponent } from './OverviewPropertyComponent';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const templates = useProductsSelector().properties;\n  // ! setCurrentId\n  const [currentId] = useState<string>(templates[0]?._id);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const availableProperties = useMemo(() => {\n    return template?.childrenList?.filter(prop => !prop.isSelectable);\n  }, [template?.childrenList]);\n\n  const selectedItems = useMemo(() => {\n    return data?.properties?.map(p => p._id);\n  }, [data?.properties]);\n\n  const renderProperties = useMemo(() => {\n    return availableProperties?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, selectedItems, data }}\n        />\n      );\n    });\n  }, [availableProperties, overlayHandler, selectedItems, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {renderProperties && renderProperties?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n\n        {/*{renderPropertiesFromVariations}*/}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { Text } from '../../atoms/Text';\nimport { t } from '../../../lang';\n\nexport const OrderOverviewGroupInfo: RenderOverviewCellComponent<OrderEntity> = ({ cell, overlayHandler, data }) => {\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={cell?.title} />\n\n      {data?.group?.magicLink ? (\n        <Text>{data?.group?.magicLink}</Text>\n      ) : (\n        <CellStyledComp.CellText>{t('undefined')}</CellStyledComp.CellText>\n      )}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { t } from '../../../lang';\nimport { useMemo } from 'react';\nimport { OverviewCellHeader } from './OverviewCellHeader';\n\nexport const OrderOverviewCustomerInfo: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const customer = data?.customer;\n\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      {\n        label: t('First name'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Second name'),\n        value: customer?.name?.second,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Middle name'),\n        value: customer?.name?.middle,\n        visible: customer?.businessType !== 'company',\n      },\n\n      {\n        label: t('Base label'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'person',\n      },\n      { label: t('Print'), value: customer?.name?.second, visible: customer?.businessType !== 'person' },\n\n      { label: t('Email'), value: customer?.email, visible: true },\n      { label: t('Phone'), value: customer?.phone, visible: true },\n\n      { label: t('Business type'), value: customer?.businessType, visible: true },\n      { label: t('Sex type'), value: customer?.sexType, visible: true },\n\n      { label: t('Engagement type'), value: customer?.engagementSource, visible: true },\n\n      { label: t('Age'), value: customer?.age, visible: true },\n\n      { label: t('Tags'), value: null, visible: true },\n    ];\n\n    return cells.map(cell => {\n      return (\n        cell.visible && (\n          <FlexBox\n            key={cell.label}\n            fxDirection={'row'}\n            padding={'6px'}\n            gap={8}\n            alignItems={'center'}\n            justifyContent={'space-between'}\n          >\n            <Text $size={11}>{cell?.label}</Text>\n            <Text $size={13} $weight={500}>\n              {cell?.value ?? t('undefined')}\n            </Text>\n          </FlexBox>\n        )\n      );\n    });\n  }, [data?.customer]);\n\n  return (\n    <CellStyledComp.Cell>\n      {cell?.title && <OverviewCellHeader title={cell?.title} />}\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { useMemo } from 'react';\nimport { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { OverviewCellHeader } from './OverviewCellHeader';\n\nexport const OrderOverviewInvoicing: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { t } from '../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { OverviewCellHeader } from './OverviewCellHeader';\n\nexport const OrderOverviewDelivery: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { t } from '../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { numberWithSpaces } from '../../../utils';\nimport { Text } from '../../atoms/Text';\n\nexport const OrderOverviewTotals: RenderOverviewCellComponent<OrderEntity> = ({ data, cell }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Amount'), value: numberWithSpaces(data?.total?.amount) },\n      { label: t('Items count'), value: data?.total?.items },\n    ];\n    return cells.map(cell => (\n      <FlexBox fxDirection={'row'} padding={'6px'} justifyContent={'space-between'} fillWidth gap={8}>\n        <Text $size={11}>{cell.label}</Text>\n        <CellStyledComp.CellText $weight={600}>{cell?.value}</CellStyledComp.CellText>\n      </FlexBox>\n    ));\n  }, [data?.total?.amount, data?.total?.items]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={cell.title} />\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { LangKeyEnum } from '../../lang';\nimport React, { useMemo } from 'react';\nimport { enumToFilterOptions } from '../../utils/fabrics';\nimport ButtonsGroup from './ButtonsGroup';\n\nconst LangButtonsGroup = ({ onChange, disabled }: { onChange?: (value: LangKeyEnum) => void; disabled?: boolean }) => {\n  const options = useMemo(() => enumToFilterOptions(LangKeyEnum), []);\n\n  return <ButtonsGroup disabled={disabled} options={options} onSelect={info => onChange && onChange(info.value)} />;\n};\n\nexport default LangButtonsGroup;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseItemEntity, IWarehouse } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email') },\n    bottom: { name: t('phone') },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","_objectSpread","onClose","overlayId","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColor","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","createContext","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","compId","value","open","Provider","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","modalBorderColor","_page$currentOffer","_page$currentOffer2","toggleVisibility","page","usePageCurrentOffer","Variations","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","currentOffer","tabs","_defineProperty","VariationsTab","withActions","Warehousing","WarehousingTab","Prices","PricesTab","_jsxs","ModalHeader","onBackPress","renderTitle","padding","fxDirection","justifyContent","gap","Text","$weight","$size","label","sku","flex","TabSelector","filterOptions","defaultValue","onOptSelect","preventFilter","ProductOverviewTabsEnum","console","log","OverviewCells","ProductOverviewTabsList","offerOverviewCells","title","t","CellComponent","getValue","data","gridArea","tab","General","approved","type","barCode","_data$brand","brand","product","measurement","JSON","parse","unit","min","max","step","join","e","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","Properties","Defaults","_product$author","_product$author$user","author","user","email","createdAt","isString","toAppDateFormat","Date","_product$editor","_product$editor$user","editor","updatedAt","Images","offerOverviewCellsMap","forEach","item","push","Container","sideBarBackgroundColor","Content","sideBarBorderColor","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","_p$product","_objectWithoutProperties","_excluded","router","useAppRouter","offer","renderCells","_offerOverviewCellsMa","_ref2","cell","_excluded2","overlayHandler","OverlayHeader","goBack","optionProps","fitContentH","option","replace","hash","size","variant","iconSize","icon","disabled","onEdit","visible","onHide","onDelete","margin","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","loaders","useOfferOverviewLoaders","modalS","useModalProvider","productsS","useAppServiceProvider","products","OfferOverviewXL","openModal","Modal","Modals","_id","_page$currentOffer3","getProductFullInfo","onLoading","useLoadersProvider","Page","takeFullGridArea","path","useLoaders","content","isRightSideVisible","setIsRightSideVisible","toggleRightSide","LoadersProvider","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","PageCurrentOfferCTX","service","ServiceName","useAppParams","offerId","useCurrentOffer","useEffect","_loaders$isLoading","isLoading","finally","clearCurrent","undefined","onSelect","selected","_ref$withActions","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","refresh","update","wrap","_context","next","abrupt","getAllPrices","refreshCurrent","updateCurrent","stop","_x","apply","arguments","tableConfig","tableData","prices","tableTitles","pricesColumnsForProductReview","onRowClick","rowData","getIdRef","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","separator","ModalChildren","FormCreatePrice","modalChildrenProps","TableList","isSearch","isFilter","PropertyBox","PropertyValuesBox","_PropertyItemStylesBy","_PropertyItemStylesBy2","cmsKey","PropertyItemStylesByCmsKey","numColumns","RenderPropertyValue","isSelected","ValueTag","fontWeight","_item$cmsConfigs","_ref$selectedIds","selectedIds","renderChildren","_item$childrenList","childrenList","paddingLeft","cmsConfigs","key","validation","yup","shape","required","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","price","out","FormContainer","fontColorSidebar","tableBackgroundColor","TemplateBox","Inputs","ExtraFooterBox","CmsConfigs","_templateObject6","CmsConfigsHeader","_templateObject7","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs2$l","_loaders$isLoading2","defaultState","onSubmit","create","templates","usePropertiesSelector","submitOptions","useAfterSubmitOptions","currentTemplate","_useState3","_useState4","selectedPropsMap","setSelectedPropsMap","_useMemo","_currentTemplate$chil","list","isSelectable","_propValuesMap","propertiesList","propertiesDataMap","Object","assign","pr","_pr$childrenList","val","propValuesDataMap","formMethods","useAppForm","defaultValues","toVariationFormData","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","reset","values","canSubmit","_step","_sorted","entries","sort","localeCompare","_labels","_iterator","_createForOfIteratorHelper","s","n","done","err","f","onValid","updateVariationById","toVariationReqData","onSuccess","onError","ToastService","then","createVariation","state","close","clear","handleSelect","parentId","handleClearMap","renderTemplate","prop","OfferVariationPropertySelector","onReset","okButton","InputLabel","InputText","placeholder","LangButtonsGroup","OverlayFooter","loading","resetButtonShown","submitButtonText","extraFooter","FormAfterSubmitOptions","getAllVariationsByProductId","variationsTableTitles","_currentOffer$variati","variations","_step2","propsList","properties","_iterator2","_prop$parent","propId","parent","createTableTitlesFromProperties","transformData","transformVariationTableData","window","confirm","_currentOffer$variati2","dataForUpdate","v","CreateVariationOverlay","currentProduct","useProductsSelector","setLoading","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","CellStyledComp","CategoryItem","field","backgroundColor","OverviewCellHeader","_ref$title","_ref$openOverlayButto","openOverlayButtonTitle","onOpenOverlayPress","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","height","marginRight","types","counterparties","useDirectorySelector","ApiDirType","directory","filteredData","c","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","FormProductDefaultsTabs","Form","modalBackgroundColor","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","_tabsMap","_tabsMap$tabs$current","_tabs$currentTabIdx","warehouse","WarehousesTab","variation","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx$v","_tabs$currentTabIdx2","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","tabIs","fData","setDefaults","toReqData","meta","currentIndex","onChangeIndex","hasLoading","onCreatePress","images","setState","useTheme","preventDefault","updateById","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","ListItem","_item$parent","_item$parent2","_ref2$lvl","lvl","_ref2$onRemove","onRemove","_Fragment","TagItem","endIcon","endIconSize","options","onChange","defaultData","setSelectedIds","newData","handleRemove","renderTreeData","CustomSelect","treeMode","dropDownIsAbsolute","translate","flexWrap","_currentOffer$categor","_currentOffer$categor2","categories","toString","OverlayForm","FormProductCategories","NotActiveTreeDataItem","_ref$options","_ref$colorIndicator","colorIndicator","currentOption","current","setCurrent","currentStatus","checks","warn","handleChange","increment","_options$newIndex","newIndex","findIndex","o","borderRadius","color","$ellipsisMode","PropertyValuesList","light","_templates$","template","setCurrentId","_useState5","_useState6","templateData","_currentOffer$propert","event","_meta","debug","_templateData$childre","_prop$childrenList","selectedValue","OverviewPropertyComponent","selectedItems","renderValues","_item$childrenList$fi","maxWidth","minHeight","OfferStatusChanger","canEdit","setCanEdit","currentStatusData","getStatusData","handleCancelPress","_data$approved","offerStatusesData","Changer","alignSelf","borderColor","colorSecondary","$align","OfferDefaults","renderVariationTags","_variation$properties","_item$value","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","commission","percentage","markup","createPriceOverviewTagsData","FormProductDefaultsOverlay","fontColorHeader","code","info","OfferImages","renderImageSets","_data$images","set","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","OfferCategories","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","FormProductCategoriesOverlay","OfferStaticProperties","availableProperties","_template$childrenLis","_data$properties","renderProperties","FormSelectPropertiesOverlay","OrderGroupInfo","_data$group","_data$group2","group","magicLink","OrderCustomerInfo","_customer$name","_customer$name2","_customer$name3","_customer$name4","_customer$name5","customer","first","businessType","second","middle","phone","sexType","engagementSource","age","_cell$value","OrderInvoicing","_data$deliveries2","_data$deliveries","deliveries","OrderDelivery","OrderTotals","_data$total3","_data$total4","_data$total","_data$total2","numberWithSpaces","total","items","LangKeyEnum","ButtonsGroup","top","getData","rd","bottom","width","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}