{"version":3,"file":"static/js/915.5e506390.chunk.js","mappings":"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","sources":["components/atoms/Inputs/MyTreeSelect.tsx","components/AppPages/PageNotFound.tsx","components/AppPages/pagesStyles.ts","components/atoms/Inputs/CustomSelect.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TreeSelect } from 'antd';\n\nconst { SHOW_PARENT } = TreeSelect;\nconst treeDataMock = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'my leaf',\n          },\n          {\n            value: 'leaf2',\n            title: 'your leaf',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'sss',\n            title: <b style={{ color: '#08c' }}>sss</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\ninterface MyTreeDataSelectItem {\n  value: string;\n  title: string | Element | JSX.Element;\n  children?: MyTreeDataSelectItem[];\n}\n\ninterface MyTreeSelectProps {\n  onSelect?: (newValue: string, node?: React.ReactNode, changeEventExtra?: any) => void;\n  treeData: MyTreeDataSelectItem[];\n}\n\nconst MyTreeSelect: React.FC<MyTreeSelectProps> = ({ onSelect, treeData }) => {\n  const [value, setValue] = useState<string>();\n\n  const onChange = (newValue: string, node: React.ReactNode, changeEventExtra: any) => {\n    setValue(newValue);\n    onSelect && onSelect(newValue, node, changeEventExtra);\n\n    console.log('node', node);\n    console.log('changeEventExtra', changeEventExtra);\n  };\n\n  const tProps = {\n    treeData: treeData.length === 0 ? (treeDataMock as MyTreeDataSelectItem[]) : treeData,\n    value,\n    onChange: onChange,\n    treeCheckable: true,\n    showCheckedStrategy: SHOW_PARENT,\n    placeholder: 'Please select',\n    style: {\n      width: '100%',\n    },\n  };\n\n  return (\n    <TreeSelect\n      showSearch\n      dropdownStyle={{ maxHeight: 300, overflow: 'auto', zIndex: 2000 }}\n      allowClear\n      multiple\n      treeDefaultExpandAll\n      {...tProps}\n    />\n  );\n};\n\nexport default MyTreeSelect;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport MyTreeSelect from '../atoms/Inputs/MyTreeSelect';\nimport * as React from 'react';\nimport CustomSelect from '../atoms/Inputs/CustomSelect';\nimport FlexBox from '../atoms/FlexBox';\nimport { takeFullGridArea } from './pagesStyles';\n\nexport type ErrorNameType = 'notFoundPage' | 'notFound';\n\nexport interface IErrorPageProps {\n  errName?: ErrorNameType;\n}\n\nexport interface IErrorPage {\n  status?: number;\n  title?: string;\n  error?: string;\n  path?: string;\n}\n\nexport type IErrors = {\n  [errName in ErrorNameType]?: IErrorPage;\n};\nexport const errors: IErrors = {\n  notFoundPage: {\n    status: 404,\n    title: 'Щось пішло не так!',\n    error: 'Сторінку, яку ви шукаєте, було видалено або переміщено.',\n    path: '#',\n  },\n  notFound: {\n    status: 404,\n    title: 'Помилка сервера!',\n    error: 'Інформацію не знайдено.',\n    path: '#',\n  },\n};\nconst PageNotFound: React.FC<IErrorPageProps> = ({ errName = 'notFoundPage' }) => {\n  return (\n    <Page className={'PageNotFound'}>\n      <ErrorNotification>\n        <ErrorCode>{errors[errName]?.status}</ErrorCode>\n\n        <Title>{errors[errName]?.title}</Title>\n\n        <Text>{errors[errName]?.error}</Text>\n\n        <ButtonIcon variant=\"outlinedSmall\">outlinedSmall</ButtonIcon>\n        <ButtonIcon variant=\"outlinedLarge\">outlinedLarge</ButtonIcon>\n        <ButtonIcon variant=\"filledSmall\">filledSmall</ButtonIcon>\n        <ButtonIcon variant=\"filledLarge\">filledLarge</ButtonIcon>\n\n        <MyTreeSelect treeData={[]} />\n        <MyTreeSelect treeData={[]} />\n        <FlexBox fillWidth gap={8}>\n          <CustomSelect label={'Рахунок'} placeholder={'Оберіть рахунок'} />\n\n          <CustomSelect label={'Суб-рахунок'} placeholder={'Оберіть суб-рахунок'} />\n\n          <CustomSelect label={'Категорія'} placeholder={'Оберіть категорію'} />\n        </FlexBox>\n\n        <ButtonIcon variant=\"onlyIcon\" iconId=\"search\"></ButtonIcon>\n        <ButtonIcon variant=\"onlyIconFilled\" iconId=\"filterOn\"></ButtonIcon>\n        <ButtonIcon variant=\"textSmall\">textSmall</ButtonIcon>\n        <ButtonIcon variant=\"textLarge\">textLarge</ButtonIcon>\n        <ButtonIcon variant=\"underlinedText\">underlinedText</ButtonIcon>\n\n        <ButtonIcon variant=\"defOutlinedSmall\">defOutlinedSmall</ButtonIcon>\n        <ButtonIcon variant=\"defOutlinedLarge\">defOutlinedLarge</ButtonIcon>\n      </ErrorNotification>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  text-align: center;\n\n  font-size: 18px;\n  line-height: 1.2;\n  letter-spacing: 0.07em;\n\n  height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n\n  overflow: auto;\n\n  ${takeFullGridArea};\n`;\n\nconst ErrorNotification = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n\n  max-width: 480px;\n  width: 100%;\n  padding: 16px;\n\n  gap: 4px;\n\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n`;\nconst ErrorCode = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 80px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.fontColor};\n`;\nconst Title = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n\n  margin-bottom: 8px;\n`;\nconst Text = styled.div`\n  font-size: 16px;\n\n  margin-bottom: 20px;\n`;\n\nexport default PageNotFound;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import InputLabel, { InputLabelProps } from './InputLabel';\nimport { forwardRef, InputHTMLAttributes, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { omit, pick } from 'lodash';\nimport styled from 'styled-components';\nimport FlexBox, { FieldBox } from '../FlexBox';\nimport SvgIcon from '../SvgIcon/SvgIcon';\nimport { RefCallBack } from 'react-hook-form';\nimport { SelectItem } from '../../TableList/tableTypes.types';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\n\nexport interface CustomSelectBaseProps<OptType = any> {\n  InputComponent?: React.FC<InputHTMLAttributes<HTMLInputElement>>;\n  valueKey?: string;\n  options?: CustomSelectOption<OptType>[];\n  getOptions?: () => CustomSelectOption<OptType>[];\n  onSelect?: CustomSelectOnClickHandler<CustomSelectOption<OptType>>;\n  onClear?: () => void;\n  handleOpenState?: (prevState: boolean) => boolean;\n  open?: boolean;\n  ref?: RefCallBack;\n  selectValue?: OptType;\n  keepOpen?: boolean;\n  inputProps?: Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onSelect'>;\n  labelProps?: Omit<InputLabelProps, 'onSelect'>;\n  fieldMode?: boolean;\n}\n\nexport type CustomSelectOnClickHandler<OptType = any> = <Option extends OptType = any>(\n  option?: Option,\n  value?: keyof Option\n) => void;\n\ninterface CustomSelectOptionBaseProps extends SelectItem {\n  onClick?: CustomSelectOnClickHandler;\n}\n\nexport type CustomSelectOption<OptType = Record<string, any>> = CustomSelectOptionBaseProps & OptType;\n\nexport type CustomSelectProps<OptType = any> = CustomSelectBaseProps<OptType> &\n  Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onSelect'> &\n  Omit<InputLabelProps, 'onSelect'>;\n\nconst CustomSelect: React.ForwardRefRenderFunction<any, CustomSelectProps> = (\n  {\n    InputComponent,\n    inputProps = {},\n    labelProps = {},\n    selectValue,\n    keepOpen,\n    valueKey,\n    id,\n    options,\n    name,\n    open = false,\n    onSelect,\n    onClear,\n    fieldMode,\n    ...props\n  },\n  ref\n) => {\n  const [currentOption, setCurrentOption] = useState<SelectItem | undefined>(selectValue);\n  const [isOpen, setIsOpen] = useState<boolean>(keepOpen || open);\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const uid = useMemo(() => Math.random().toFixed(5), []);\n\n  const handleOpenState = useCallback(() => {\n    !keepOpen && setIsOpen(prev => !prev);\n  }, [keepOpen]);\n\n  const handleOnSelect = useCallback(\n    (option?: any) => {\n      if (!options || options?.length === 0) return;\n      return () => {\n        setCurrentOption(option);\n        if (onSelect && valueKey && valueKey && option[valueKey]) {\n          onSelect(option, option[valueKey]);\n          return;\n        }\n        if (onSelect) {\n          onSelect(option, option?.value);\n        }\n        handleOpenState();\n      };\n    },\n    [handleOpenState, onSelect, options, valueKey]\n  );\n\n  const handleOnClear = useCallback(() => {\n    setCurrentOption(undefined);\n    onClear && onClear();\n  }, [onClear]);\n\n  const renderOptions = useMemo(\n    () =>\n      options?.map(opt => (\n        <Option\n          key={opt._id}\n          onClick={handleOnSelect(opt)}\n          justifyContent={'flex-start'}\n          fillWidth\n          fxDirection={'row'}\n          padding={'5px 8px'}\n          isActive={opt?._id === currentOption?._id}\n        >\n          {opt.label || opt.name}\n        </Option>\n      )),\n    [currentOption?._id, handleOnSelect, options]\n  );\n\n  useEffect(() => {\n    if (uid) return;\n    console.log('Render CustomSelect', id || uid);\n\n    // function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n    //   const { target } = ev;\n    //   if (target instanceof HTMLElement && !target?.closest(`[data-select=\"${id || uid}\"]`)) setIsOpen(false);\n    //   if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsOpen(false);\n    // }\n    //\n    // document.addEventListener('click', onMenuClose);\n    // return () => {\n    //   document.removeEventListener('click', onMenuClose);\n    // };\n  }, [id, uid]);\n\n  useEffect(() => {\n    if (selectValue) return setCurrentOption(selectValue);\n    if (!selectValue) return setCurrentOption(undefined);\n  }, [selectValue]);\n\n  return (\n    <FlexBox fillWidth style={{ position: 'relative' }} data-select={id || uid}>\n      <FlexBox fillWidth style={{ position: 'relative' }}>\n        <InputLabel\n          direction={'vertical'}\n          ref={labelRef}\n          {...pick(props, [\n            'error',\n            'success',\n            'helperText',\n            'loading',\n            'label',\n            'id',\n            'uppercase',\n            'align',\n            'direction',\n            'disabled',\n          ])}\n          {...labelProps}\n          onClick={handleOpenState}\n        >\n          <LabelInner fieldMode={fieldMode} error={!!props.error} success={!!props.success}>\n            <StyledInput\n              disabled={!fieldMode}\n              value={currentOption?.label || currentOption?.name || ''}\n              ref={ref}\n              {...omit(\n                { ...pick(props, [`${fieldMode ? 'onChange' : ''}`, 'onBlur', 'name', 'id', 'ref', 'placeholder']) },\n                ['error', 'success', 'loading']\n              )}\n              {...inputProps}\n            />\n\n            <IconsBox fxDirection={'row'} gap={6} fillHeight alignItems={'center'} padding={'0 8px 0 0'}>\n              {onClear && currentOption && (\n                <ButtonIcon\n                  variant={'onlyIconNoEffects'}\n                  className={'clearIcon'}\n                  icon={'close'}\n                  size={'20px'}\n                  onClick={handleOnClear}\n                />\n              )}\n\n              <SvgIcon className={'openIcon'} icon={!isOpen ? 'SmallArrowDown' : 'SmallArrowUp'} size={'20px'} />\n            </IconsBox>\n          </LabelInner>\n        </InputLabel>\n      </FlexBox>\n\n      <Options isOpen={isOpen}>\n        <FlexBox fillWidth overflow={'auto'}>\n          {options && options?.length > 0 ? (\n            renderOptions\n          ) : (\n            <NoOptions fillWidth fxDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n              Опції відсутні\n            </NoOptions>\n          )}\n        </FlexBox>\n      </Options>\n    </FlexBox>\n  );\n};\n\nconst Options = styled(FlexBox)<{ isOpen?: boolean; inView?: boolean; intersectionRatio?: number }>`\n  // position: absolute;\n  // top: calc(100% + 4px);\n  // left: 0;\n  // z-index: ${({ isOpen }) => (isOpen ? 100 : 10)};\n  font-size: 14px;\n\n  max-height: ${({ isOpen }) => (isOpen ? '120px' : 0)};\n  opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n  width: 100%;\n  overflow: hidden;\n\n  margin-top: 4px;\n\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.fieldBackgroundColor};\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n`;\n\nconst Option = styled(FieldBox)<{ isActive?: boolean }>`\n  min-height: 28px;\n\n  font-weight: ${({ isActive }) => (isActive ? 700 : '')};\n`;\n\nconst LabelInner = styled.fieldset<{\n  error?: boolean;\n  success?: boolean;\n  fieldMode?: boolean;\n}>`\n  flex: 1;\n\n  display: flex;\n  align-items: center;\n\n  padding: 0;\n  margin: 0;\n\n  width: 100%;\n  min-height: 28px;\n\n  color: ${({ error, success, theme }) =>\n    (error && theme.globals.colors.error) || (success && theme.globals.colors.success) || 'inherit'};\n\n  background-color: ${({ theme, fieldMode = 'true' }) => (fieldMode ? theme.field.backgroundColor : 'transparent')};\n  border-radius: 2px;\n\n  border: 1px solid\n    ${({ error, success, fieldMode = 'true', theme }) =>\n      (error && theme.globals.colors.error) ||\n      (success && theme.globals.colors.success) ||\n      (fieldMode && theme.field.backgroundColor) ||\n      theme.input.borderColor};\n\n  &:hover {\n    border-color: ${({ theme }) => theme.accentColor.base};\n    //box-shadow: 0 0 3px ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus,\n  &:focus-visible {\n    border-color: ${({ theme }) => theme.accentColor.base};\n    //box-shadow: 0 0 5px ${({ theme }) => theme.accentColor.base};\n    outline: 1px solid ${({ theme }) => theme.accentColor.base};\n  }\n\n  &::placeholder {\n    font-size: inherit;\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n\n  //transition: border-color ${({ theme }) => theme.globals.timingFunctionMain};\n\n  &[disabled] {\n    pointer-events: none;\n    opacity: 70%;\n  }\n\n  @media screen and (max-width: 480px) {\n    height: 34px;\n    font-size: 16px;\n  }\n`;\n\nconst StyledInput = styled.input`\n  flex: 1;\n  height: 100%;\n\n  padding: 4px 8px;\n\n  background-color: transparent;\n  border-radius: 0;\n  border: 0;\n  outline: none;\n\n  &:hover,\n  &:focus,\n  &:focus-visible {\n    outline: none;\n  }\n`;\nconst NoOptions = styled(FlexBox)`\n  min-height: 28px;\n\n  font-weight: 700;\n  line-height: 1.3;\n`;\nconst IconsBox = styled(FlexBox)`\n  //position: absolute;\n  //top: 50%;\n  //right: 4px;\n  //z-index: 5;\n  //transform: translateY(-50%);\n\n  max-height: 100%;\n\n  color: ${({ theme }) => theme.accentColor.base};\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nexport default memo(forwardRef(CustomSelect));\n"],"names":["SHOW_PARENT","TreeSelect","treeDataMock","value","title","children","_jsx","style","color","_ref","onSelect","treeData","_useState","useState","_useState2","_slicedToArray","setValue","tProps","length","onChange","newValue","node","changeEventExtra","console","log","treeCheckable","showCheckedStrategy","placeholder","width","_objectSpread","showSearch","dropdownStyle","maxHeight","overflow","zIndex","allowClear","multiple","treeDefaultExpandAll","errors","notFoundPage","status","error","path","notFound","Page","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","ErrorNotification","_templateObject2","_ref2","theme","trBorderClr","ErrorCode","_templateObject3","_ref3","fontColor","Title","_templateObject4","Text","_templateObject5","_errors$errName","_errors$errName2","_errors$errName3","_ref$errName","errName","className","_jsxs","ButtonIcon","variant","MyTreeSelect","FlexBox","fillWidth","gap","CustomSelect","label","iconId","css","takeFullPlace","ref","InputComponent","_ref$inputProps","inputProps","_ref$labelProps","labelProps","selectValue","keepOpen","valueKey","id","options","_ref$open","name","open","onClear","fieldMode","props","_objectWithoutProperties","_excluded","currentOption","setCurrentOption","_useState3","_useState4","isOpen","setIsOpen","labelRef","useRef","uid","useMemo","Math","random","toFixed","handleOpenState","useCallback","prev","handleOnSelect","option","handleOnClear","undefined","renderOptions","map","opt","Option","onClick","justifyContent","fxDirection","padding","isActive","_id","useEffect","position","InputLabel","direction","pick","LabelInner","success","StyledInput","disabled","omit","concat","IconsBox","fillHeight","alignItems","icon","size","SvgIcon","Options","NoOptions","_ref4","_ref5","fieldBackgroundColor","_ref6","globals","timingFunctionMain","FieldBox","_ref7","_ref8","colors","_ref9","_ref9$fieldMode","field","backgroundColor","_ref10","_ref10$fieldMode","input","borderColor","_ref11","accentColor","base","_ref12","_ref13","_ref14","_ref15","_ref16","inputPlaceholderColor","_ref17","_templateObject6","_ref18","_ref19","memo","forwardRef"],"sourceRoot":""}