{"version":3,"file":"static/js/846.32e26b21.chunk.js","mappings":"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","sources":["components/Forms/offers/categories/OfferCategoriesSelector.tsx","components/Forms/offers/AddImageSetModal.tsx","components/Forms/offers/components/FormOfferImagesComponent.tsx","components/Forms/offers/variations/OfferVariationPropertySelector.tsx","components/atoms/ImagePreviewSmall.tsx","components/atoms/PropertiesGroupSelect.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox, { FlexLabel, FlexLi, FlexUl } from '../../../atoms/FlexBox';\nimport { OfferCategoryEntity } from '../../../../types/dir.types';\nimport styled from 'styled-components';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport CheckBox from '../../../TableList/TebleCells/CellComponents/CheckBox';\nimport { Text } from '../../../atoms/Text';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { UUID } from '../../../../types/utils.types';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\n\nexport interface OfferCategoriesSelectorProps {\n  onSelect?: (id: string, option?: OfferCategoryEntity) => void;\n  onChange?: (ids: string) => void;\n  onChangeIds?: (ids: string[]) => void;\n  onChangeMap?: (map: IsSelectedIdsMap) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  selectedIds?: string[];\n  options?: OfferCategoryEntity[];\n  offer?: OfferEntity;\n}\n\nconst getUnicIds = (map: IsSelectedIdsMap) => {\n  const idsArrays = Object.keys(map).filter(key => {\n    return map?.[key]?.length;\n  });\n\n  return idsArrays;\n};\n\ntype IsSelectedIdsMap = Record<UUID, UUID[]>;\nconst OfferCategoriesSelector: React.FC<OfferCategoriesSelectorProps> = ({ onChangeIds, onChange, offer }) => {\n  const treeData = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n\n  const [selectedMap, setSelectedMap] = useState<IsSelectedIdsMap>({});\n\n  const init = useMemo(() => {\n    if (!offer?.categories) {\n      return undefined;\n    }\n\n    const _next: IsSelectedIdsMap = {};\n    offer?.categories?.forEach(category => {\n      const parentId = category.parent?._id;\n      const catId = category?._id;\n\n      if (!catId) return;\n\n      if (parentId) {\n        _next[parentId] = _next[parentId] ? [..._next[parentId], catId] : [catId];\n      }\n      _next[catId] = _next[catId] ? [..._next[catId], catId] : [catId];\n    });\n    Object.entries(_next).forEach(([key, val]) => {\n      if (_next[key]?.length > 1) {\n        _next[key] = Array.from(new Set(val));\n      }\n    });\n\n    return _next;\n  }, [offer?.categories]);\n\n  useEffect(() => {\n    if (init) setSelectedMap(init);\n    // eslint-disable-next-line\n  }, []);\n\n  const toggleSelected = useCallback(\n    async (ev: { checked: boolean; _id: UUID; pathIds: UUID[] }) => {\n      onChange && onChange(ev._id);\n\n      setSelectedMap(prev => {\n        const newMap = ev.checked ? { ...prev, [ev._id]: [ev._id] } : { ...prev, [ev._id]: [] };\n\n        if (!ev.checked) {\n          prev?.[ev._id]?.forEach(removeId => {\n            newMap[removeId] = [];\n          });\n          newMap[ev._id] = [];\n        } else {\n          let ids: string[] = ev.pathIds;\n          ev.pathIds.forEach((registerId, index) => {\n            ids = ids.slice(1, ids.length);\n            if (registerId === ev._id) {\n              newMap[registerId] = [registerId];\n            } else {\n              newMap[registerId] = [...new Set([...(newMap[registerId] ?? []), ...ids])];\n            }\n          });\n        }\n\n        onChangeIds && onChangeIds(getUnicIds(newMap));\n        return newMap;\n      });\n    },\n    [onChange, onChangeIds]\n  );\n\n  const renderCategories = useMemo(() => {\n    const isSelected = (id: UUID) => {\n      return !!selectedMap?.[id]?.length;\n    };\n    return treeData.map(parent => {\n      return (\n        <RootBox key={parent._id}>\n          <RenderCategory item={parent} depth={0} pathIds={[]} isChecked={isSelected} onChange={toggleSelected} />\n        </RootBox>\n      );\n    });\n  }, [selectedMap, toggleSelected, treeData]);\n\n  return <FlexBox minWidth={'max-content'}>{renderCategories}</FlexBox>;\n};\n\nexport default OfferCategoriesSelector;\n\nconst RootBox = styled(FlexBox)`\n  //padding: 8px 0;\n  // &:not(:first-child) {\n  //   border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  // }\n`;\n\nconst CategoriesList = styled(FlexUl)<{ numColumns?: number }>``;\n\nconst CategoryListItem = styled(FlexLi)`\n  &:not(:last-child) {\n  }\n\n  min-width: max-content;\n`;\n\nconst CategoryItem = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst RenderCategory = ({\n  pathIds,\n  item,\n  depth = 0,\n  onChange,\n  isChecked,\n}: {\n  pathIds: UUID[];\n  item: OfferCategoryEntity;\n  depth: number;\n  onChange?: (ev: { checked: boolean; _id: UUID; pathIds: UUID[] }) => void;\n  isChecked?: (id: UUID) => boolean;\n}) => {\n  const [isOpen, setIsOpen] = useState(!!item?.childrenList?.length);\n  const itemId = item?._id ?? '';\n\n  const nextPathIds = [...pathIds, itemId];\n  return (\n    <CategoryListItem key={`cate-value-${itemId}`} padding={depth ? '0 0 0 16px' : ''}>\n      <CategoryItem gap={12} fxDirection={'row'} alignItems={'center'} padding={'8px 0'}>\n        <ButtonIcon\n          variant={'onlyIconNoEffects'}\n          iconSize={'22px'}\n          disabled={!item?.childrenList?.length}\n          icon={isOpen ? 'SmallArrowDown' : 'SmallArrowRight'}\n          onClick={() => {\n            setIsOpen(p => !p);\n          }}\n        />\n\n        <FlexLabel flex={1} fxDirection={'row'} alignItems={'center'} gap={12} padding={'4px 6px'}>\n          <CheckBox\n            size={'22px'}\n            checked={isChecked ? isChecked(itemId) : false}\n            onChange={ev => {\n              onChange && onChange({ pathIds: nextPathIds, _id: itemId, checked: ev.checked });\n            }}\n          />\n\n          <Text $size={14} $weight={500}>\n            {item.label}\n          </Text>\n        </FlexLabel>\n      </CategoryItem>\n\n      {isOpen && (\n        <CategoriesList>\n          {item.childrenList?.map(child => {\n            return (\n              <RenderCategory\n                key={child._id}\n                depth={depth + 1}\n                item={child}\n                onChange={onChange}\n                isChecked={isChecked}\n                pathIds={nextPathIds}\n              />\n            );\n          })}\n        </CategoriesList>\n      )}\n    </CategoryListItem>\n  );\n};\n","import { OfferImageSlotEntity } from '../../../types/offers/offers.types';\nimport ModalForm, { ModalFormProps } from '../../ModalForm';\nimport { ChangeEventHandler, useRef, useState } from 'react';\nimport { FilterOption } from '../../atoms/TabSelector';\nimport FlexBox from '../../atoms/FlexBox';\nimport SvgIcon from '../../atoms/SvgIcon/SvgIcon';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport ButtonsGroup from '../../atoms/ButtonsGroup';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { ImageSetSrcType } from '../../../types/offers/offer-images.types';\nimport { formAddImageSetTabs } from 'data';\n\nexport interface FormAddImageSetData extends Partial<Omit<OfferImageSlotEntity, '_id' | 'createdAt' | 'updatedAt'>> {}\n\nexport interface AddImageSetModalProps extends Omit<ModalFormProps<any, any, FormAddImageSetData>, 'onSubmit'> {\n  onSubmit?: (data: Partial<FormAddImageSetData>, setId?: string, setIndex?: number) => void;\n  setId?: string;\n  setIndex?: number;\n  type?: ImageSetSrcType;\n}\n\nconst AddImageSetModal = ({\n  title,\n  fillHeight = true,\n  onSubmit,\n  onClose,\n  defaultState,\n  type,\n  ...props\n}: AddImageSetModalProps) => {\n  const [current, setCurrent] = useState<FilterOption<ImageSetSrcType> | undefined>(formAddImageSetTabs[0]);\n  const [formData, setFormData] = useState<FormAddImageSetData>(defaultState || {});\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleSubmitForm = () => {\n    onSubmit && onSubmit(formData);\n    onClose && onClose();\n  };\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = e => {\n    const { name, value } = e.target;\n\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n  const handleClear = () => {\n    current?.value && setFormData(prev => ({ ...prev, [current?.value]: '' }));\n  };\n\n  return (\n    <ModalForm\n      title={title || 'Додати новий сет зображень'}\n      fillHeight={fillHeight}\n      {...props}\n      width={'360px'}\n      onClose={onClose}\n      onSubmit={handleSubmitForm}\n    >\n      <FormContentGrid>\n        <FlexBox fillWidth fillHeight alignItems={'center'} overflow={'hidden'}>\n          {current?.value && formData[current?.value] ? (\n            <Image src={formData[current?.value] as never} />\n          ) : (\n            <AddImageBox disabled>\n              <SvgIcon icon={'plus'} size={'56px'} />\n\n              <input name={'img_preview'} type={'file'} className={'visually-hidden'} disabled />\n            </AddImageBox>\n          )}\n        </FlexBox>\n\n        {current?.value && (\n          <FlexBox fxDirection={'row'} gap={6} alignItems={'flex-end'}>\n            <InputLabel label={current?.label?.replace('img_', 'image ').toUpperCase()} required={current?.required}>\n              <InputText\n                ref={inputRef}\n                name={current?.value}\n                value={formData[current?.value] || ''}\n                onChange={handleInputChange}\n                placeholder={'Впишіть або вставте посилання на зображення'}\n                required={current?.required}\n                autoFocus\n              />\n            </InputLabel>\n\n            <ButtonIcon variant={'onlyIcon'} icon={'close'} size={'28px'} iconSize={'100%'} onClick={handleClear} />\n          </FlexBox>\n        )}\n\n        <FlexBox padding={'8px 0'}>\n          <ButtonsGroup\n            options={formAddImageSetTabs}\n            currentOption={current}\n            // defaultIndex={type ? formAddImageSetTabs.findIndex(el => el.value === type) : 0}\n            onSelect={info => {\n              setCurrent(info.option);\n              // inputRef.current?.focus({ preventScroll: true });\n            }}\n          />\n        </FlexBox>\n      </FormContentGrid>\n    </ModalForm>\n  );\n};\nconst FormContentGrid = styled.div`\n  flex: 1;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr min-content min-content;\n  gap: 6px;\n\n  padding: 8px;\n  overflow: hidden;\n`;\nconst AddImageBox = styled.label<{ disabled?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n  width: 100%;\n  max-height: 100%;\n\n  fill: ${p => p.theme.sideBarBorderColor};\n\n  border-radius: 2px;\n  border: 2px solid ${p => p.theme.sideBarBorderColor};\n\n  transition: ${p => p.theme.globals.timingFnMui};\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n  &:hover {\n    fill: ${p => p.theme.accentColor.base};\n    border-color: ${p => p.theme.accentColor.light};\n  }\n`;\n\nconst Image = styled.img`\n  //min-width: 100px;\n  //max-width: 100px;\n  //\n  //height: 145px;\n\n  max-height: 100%;\n`;\nexport default AddImageSetModal;\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Text } from '../../../atoms/Text';\nimport { useModalService } from '../../../ModalProvider/ModalProvider';\nimport AddImageSetModal, { FormAddImageSetData } from '../AddImageSetModal';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport { checks as check } from '../../../../utils';\nimport { t } from '../../../../lang';\nimport { formAddImageSetTabs } from '../../../../data';\nimport { ImageSetSrcType } from '../../../../types/offers/offer-images.types';\n\nexport interface FormOfferImagesComponentProps {\n  onChangeState?: (state: Partial<OfferImageSlotEntity>[]) => void;\n  initialData?: Partial<OfferImageSlotEntity>[];\n  renderHeader?: React.ReactNode;\n  canEditOrder?: boolean;\n  onClose?: () => void;\n  hideLabel?: boolean;\n  contentContainerStyle?: React.CSSProperties;\n  FooterComponent?: React.FC<{ onAddNewImageSetPress: () => void }>;\n  HeaderComponent?: React.FC;\n}\n\nconst FormOfferImagesComponent: React.FC<FormOfferImagesComponentProps> = ({\n  onChangeState,\n  renderHeader,\n  initialData,\n  canEditOrder = true,\n  onClose,\n  FooterComponent,\n  contentContainerStyle,\n  hideLabel,\n}) => {\n  const modalS = useModalService();\n\n  const [formData, setFormData] = useState<Partial<OfferImageSlotEntity>[]>([]);\n  useEffect(() => {\n    if (!initialData) {\n      return;\n    } else {\n      setFormData(initialData);\n    }\n  }, [initialData]);\n  const handleAddImageSet = (info: FormAddImageSetData) => {\n    if (onChangeState) {\n      const updatedData = [...(initialData ?? []), { ...info, order: formData.length + 1 }];\n      onChangeState(updatedData);\n    } else {\n      setFormData(prev => {\n        return [...prev, { ...info, order: formData.length + 1 }];\n      });\n    }\n  };\n  const handleChangeOrder = useCallback(\n    (currentSetOrder: number, increment: number) => {\n      setFormData(prev => {\n        const newOrder = currentSetOrder + increment;\n\n        return prev.map((set, index) => {\n          if (newOrder > formData.length || newOrder < 1) {\n            return set;\n          }\n          if (set.order === newOrder) {\n            return { ...set, order: currentSetOrder };\n          } else if (set.order === currentSetOrder) {\n            return { ...set, order: newOrder };\n          } else {\n            return set;\n          }\n        });\n      });\n    },\n    [formData.length]\n  );\n\n  const handleAddImageToSet = useCallback(\n    ({ setIndex, type, uri }: { setId?: string; setIndex?: number; uri?: string; type?: ImageSetSrcType }) => {\n      if (onChangeState && initialData) {\n        const updatedData = initialData?.map((set, index) => {\n          if (setIndex === index) {\n            return { ...set, [type as never]: uri };\n          }\n          return set;\n        });\n        onChangeState(updatedData);\n      } else {\n        setFormData(prev => {\n          const updatedData = prev.map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: uri };\n            }\n            return set;\n          });\n          return updatedData;\n        });\n      }\n    },\n    [initialData, onChangeState]\n  );\n  // TODO need refactoring\n  const handleRemoveImageFromSet = useCallback(\n    ({ setId, setIndex, type }: { setId?: string; setIndex?: number; type?: ImageSetSrcType }) => {\n      const confirmed =\n        type !== ImageSetSrcType.img_preview || window.confirm('Буде видалено цілий сет фото.\\nПродовжити?');\n      if (!confirmed) return;\n\n      setFormData(prev => {\n        const updatedData = prev\n          .map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: '' };\n            }\n            return set;\n          })\n          .filter(set => {\n            return set.img_preview;\n          })\n          .map((set, index) => ({ ...set, order: index + 1 }));\n\n        onChangeState && onChangeState(updatedData);\n        return updatedData;\n      });\n    },\n    [onChangeState]\n  );\n\n  const handleAddNewSet = () => {\n    modalS.open({\n      ModalChildren: AddImageSetModal,\n      modalChildrenProps: {\n        onSubmit: data => {\n          handleAddImageSet(data);\n        },\n      },\n    });\n  };\n\n  const renderImageSets = useMemo(() => {\n    let dataForRender = formData;\n    try {\n      dataForRender = [...formData].sort((a, b) => (a?.order ?? 0) - (b?.order ?? 0));\n    } catch (e) {\n      dataForRender = formData;\n    }\n\n    return dataForRender?.map((slot, slotIndex) => {\n      const renderPreviews = formAddImageSetTabs.map((el, imgIndex) => {\n        return (\n          <ImagePreviewSmall\n            key={`small-prev_${imgIndex}`}\n            src={slot[el?.value as never]}\n            title={el.label ?? ''}\n            onEditPress={() => {\n              modalS.open({\n                ModalChildren: AddImageSetModal,\n                modalChildrenProps: {\n                  defaultState: slot,\n                  type: el.value,\n                  onSubmit: data => {\n                    el.value &&\n                      data[el.value] &&\n                      handleAddImageToSet({\n                        setId: slot?._id,\n                        setIndex: slotIndex,\n                        uri: data[el.value],\n                        type: el.value,\n                      });\n                  },\n                },\n              });\n            }}\n            onDeletePress={() => {\n              handleRemoveImageFromSet({ setId: '', setIndex: slotIndex, type: el.value });\n            }}\n          />\n        );\n      });\n\n      return (\n        <ImagesSetBox\n          key={`images-set_${slot?._id || slotIndex}`}\n          gap={2}\n          fxDirection={'row'}\n          fillWidth\n          overflow={'auto'}\n        >\n          {canEditOrder && (\n            <SlotOrderChanger\n              currentOrder={slot?.order}\n              canMoveUp={(slot?.order ?? 0) > 1}\n              onMoveUpPress={() => {\n                check.isNum(slot.order) && handleChangeOrder(slot.order, -1);\n              }}\n              canMoveDown={(slot?.order ?? 0) < formData.length}\n              onMoveDownPress={() => {\n                check.isNum(slot.order) && handleChangeOrder(slot.order, +1);\n              }}\n            />\n          )}\n\n          {renderPreviews}\n        </ImagesSetBox>\n      );\n    });\n  }, [canEditOrder, formData, handleAddImageToSet, handleChangeOrder, handleRemoveImageFromSet, modalS]);\n\n  useEffect(() => {\n    if (initialData) {\n      setFormData(initialData as Required<OfferImageSlotEntity>[]);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {renderHeader || (\n        <FlexBox\n          padding={'4px 8px'}\n          height={'32px'}\n          fxDirection={'row'}\n          gap={2}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $weight={600} $size={14}>\n            {!hideLabel && t('Images')}\n          </Text>\n\n          <AddImageSetButton type={'button'} onClick={onClose || handleAddNewSet}>\n            {onClose ? t('Close') : t('Add')}\n          </AddImageSetButton>\n        </FlexBox>\n      )}\n\n      <FlexBox gap={2} padding={'8px 0'} style={contentContainerStyle}>\n        {renderImageSets}\n      </FlexBox>\n\n      {FooterComponent && <FooterComponent onAddNewImageSetPress={handleAddNewSet} />}\n    </>\n  );\n};\nconst AddImageSetButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: ${p => p.theme.accentColor.base};\n  font-family: inherit;\n  font-size: 12px;\n  font-weight: 600;\n  padding: 2px 6px;\n\n  background-color: transparent;\n  border: 0;\n\n  cursor: pointer;\n`;\n\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst SlotOrderChanger = ({\n  onMoveUpPress,\n  onMoveDownPress,\n  currentOrder,\n  canMoveDown,\n  canMoveUp,\n}: {\n  onMoveUpPress?: () => void;\n  onMoveDownPress?: () => void;\n  currentOrder?: number;\n  canMoveDown?: boolean;\n  canMoveUp?: boolean;\n  inverse?: boolean;\n}) => {\n  return (\n    <FlexBox\n      style={{ minWidth: 'fit-content' }}\n      fillHeight\n      gap={6}\n      justifyContent={'space-between'}\n      overflow={'hidden'}\n    >\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowUp'} disabled={!canMoveUp} onClick={onMoveUpPress} />\n      <Text $align={'center'} $weight={600}>\n        {currentOrder || 0}\n      </Text>\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowDown'} disabled={!canMoveDown} onClick={onMoveDownPress} />\n    </FlexBox>\n  );\n};\n\nexport default FormOfferImagesComponent;\n","import { PropertyEntity, PropertyTypeEnum, PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\n\nconst PropertyItemStylesByCmsKey: Record<string, { numColumns?: number }> = {\n  [PropertyTypeEnum.size]: {\n    numColumns: 4,\n  },\n  [PropertyTypeEnum.color]: {\n    numColumns: 2,\n  },\n};\nexport interface OfferVariationPropertySelectorProps {\n  item: PropertyEntity;\n  selectedValue?: string;\n  selectedIds?: string[];\n  childrenList?: PropertyEntity['childrenList'];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n}\nexport const OfferVariationPropertySelector = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: OfferVariationPropertySelectorProps) => {\n  const state = useProductsSelector();\n\n  const renderChildren = useMemo(() => {\n    const _propId = item?._id;\n\n    const _valuesList: PropertyValueEntity[] = [];\n\n    const _valuesIds = state.propertiesKeysMap?.[_propId] ?? [];\n\n    for (const valueId of _valuesIds) {\n      const value = state.propertiesDataMap?.[valueId];\n      if (value) {\n        _valuesList.push(value);\n      }\n    }\n\n    return _valuesList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, onSelect, selectedIds, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox fillWidth padding={'8px 0'} gap={6} cmsKey={item.cmsConfigs?.key}>\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ cmsKey?: MaybeNull<string> }>`\n  width: 100%;\n  display: grid;\n\n  grid-template-columns: repeat(${p => (p.cmsKey ? PropertyItemStylesByCmsKey[p.cmsKey]?.numColumns ?? 2 : 2)}, 1fr);\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: PropertyValueEntity;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  return (\n    <ValueTag\n      variant={isSelected ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nexport default OfferVariationPropertySelector;\n","import ButtonIcon from './ButtonIcon/ButtonIcon';\nimport { Text } from './Text';\nimport styled from 'styled-components';\nimport FlexBox from './FlexBox';\nimport * as React from 'react';\n\nexport interface ImageSmallPreviewProps {\n  src: string;\n  title?: string;\n  type?: string;\n  onDeletePress?: () => void;\n  onEditPress?: () => void;\n  onAddNewPress?: () => void;\n  disabled?: boolean;\n\n  maxWidth?: string;\n  maxHeight?: string;\n}\nconst ImagePreviewSmall = ({\n  title,\n  src,\n  onDeletePress,\n  onEditPress,\n  disabled,\n  maxWidth,\n  maxHeight,\n}: ImageSmallPreviewProps) => {\n  return (\n    <ImageSmallPreviewBox\n      className={`ImagePreview_${title}`}\n      fillWidth\n      overflow={'hidden'}\n      gap={4}\n      height={'115px'}\n      border={'1px solid lightgrey'}\n      borderRadius={'2px'}\n      style={{ position: 'relative' }}\n      disabled={disabled}\n    >\n      {src && <img src={src} alt={title} style={{ width: '100%' }} />}\n\n      <ImagePreviewBottom fillWidth>\n        <FlexBox padding={'4px'}>\n          <Text $size={12} $weight={500} color={'#fff'}>\n            {title}\n          </Text>\n        </FlexBox>\n\n        <ImagePreviewTop\n          className={'top'}\n          fxDirection={'row'}\n          gap={6}\n          style={{ fill: '#fff' }}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n          fillWidth\n        >\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'edit'}\n            iconSize={'28px'}\n            disabled={!onEditPress}\n            onClick={onEditPress}\n          />\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'delete'}\n            iconSize={'28px'}\n            disabled={!onDeletePress}\n            onClick={onDeletePress}\n          />\n        </ImagePreviewTop>\n      </ImagePreviewBottom>\n    </ImageSmallPreviewBox>\n  );\n};\n\nconst ImageSmallPreviewBox = styled(FlexBox)<{ disabled?: boolean; maxWidth?: string; maxHeight?: string }>`\n  min-width: 90px;\n  width: 90px;\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n\n  &:hover {\n    & .top {\n      min-height: 36px;\n    }\n  }\n`;\n\nconst ImagePreviewTop = styled(FlexBox)`\n  //position: absolute;\n  //top: 0;\n  //left: 0;\n  //z-index: 5;\n\n  height: 0;\n  min-height: 0;\n  padding: 0 6px;\n  overflow: hidden;\n\n  //background-color: rgba(26, 26, 26, 0.2);\n  //backdrop-filter: blur(3px);\n\n  transition: min-height ${p => p.theme.globals.timingFnMain};\n`;\nconst ImagePreviewBottom = styled(FlexBox)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 5;\n\n  background-color: rgba(26, 26, 26, 0.2);\n  backdrop-filter: blur(3px);\n`;\n\nexport default ImagePreviewSmall;\n","import { OfferTypeEnum } from '../../types/offers/offers.types';\nimport { ProperiesGroupEntity, PropertyBaseEntity } from '../../types/offers/properties.types';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport CustomSelect, { CustomSelectHandler } from './Inputs/CustomSelect/CustomSelect';\nimport FlexBox from './FlexBox';\nimport InputLabel from './Inputs/InputLabel';\nimport { t } from '../../lang';\nimport ButtonsGroup from './ButtonsGroup';\nimport { productsFilterOptions } from '../../data/modalFilterOptions.data';\nimport { Values } from '../../types/utils.types';\n\ntype FilterData = {\n  type: Values<typeof OfferTypeEnum>;\n  isSelectable?: boolean;\n};\nexport const PropertiesGroupSelect = ({\n  selected,\n  onSelect,\n  filterValue = { type: OfferTypeEnum.GOODS, isSelectable: true },\n  hasFilter = false,\n}: {\n  selected?: ProperiesGroupEntity;\n  onSelect?: (opt: ProperiesGroupEntity) => void;\n  filterValue?: FilterData;\n  hasFilter?: boolean;\n}) => {\n  // const service = useAppServiceProvider().get(AppModuleName.offers);\n\n  const state = useProductsSelector();\n  const [filter, setFilter] = useState<FilterData>(filterValue);\n  const [currentTemplate, setCurrentTemplate] = useState<ProperiesGroupEntity | undefined>();\n  // const loaders = useLoaders<'getList' | 'create' | 'update'>();\n\n  const rootList = useMemo(() => {\n    const _rootIds = state.propertiesByTypeKeysMap[filter.type];\n    const _items: PropertyBaseEntity[] = [];\n\n    for (const _id of _rootIds) {\n      const item = state.propertiesDataMap?.[_id];\n      item && _items.push(item);\n    }\n\n    return _items;\n  }, [filter, state.propertiesByTypeKeysMap, state.propertiesDataMap]);\n\n  const handleSelect: CustomSelectHandler<ProperiesGroupEntity> = option => {\n    if (onSelect && option) {\n      onSelect(option);\n    } else {\n      setCurrentTemplate(option);\n    }\n  };\n\n  useEffect(() => {\n    if (selected) {\n      setCurrentTemplate(selected);\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    if (rootList?.length && !currentTemplate) {\n      if (onSelect && rootList[0]) {\n        onSelect(rootList[0]);\n      } else {\n        setCurrentTemplate(rootList[0]);\n      }\n    }\n  }, [currentTemplate, onSelect, rootList]);\n\n  return (\n    <FlexBox margin={'8px 0'} gap={8}>\n      {hasFilter && (\n        <InputLabel label={t('Select type')}>\n          <ButtonsGroup\n            options={productsFilterOptions}\n            value={filter.type}\n            onSelect={({ value }) => {\n              setFilter(prev => {\n                return { ...prev, type: value };\n              });\n            }}\n          />\n        </InputLabel>\n      )}\n\n      <CustomSelect\n        label={t('Select properties group')}\n        selectedOption={currentTemplate}\n        onSelect={handleSelect}\n        options={rootList}\n        placeholder={t('Select properties group')}\n      />\n    </FlexBox>\n  );\n};\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    width: '100px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => toPrice(d.price?.in) },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', path: 'brand.label' },\n    bottom: { name: 'Виробник', path: 'manufacturer.name' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.email },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.email },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const productsSearchParams: SelectItem[] = [\n  // {\n  //   label: t('type'),\n  //   dataPath: 'type',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('price'),\n  //   dataPath: 'price',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Оновлено',\n  //   dataPath: 'createdAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Створено',\n  //   dataPath: 'updatedAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countIn'),\n  //   dataPath: 'countIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountIn'),\n  //   dataPath: 'subCountIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countOut'),\n  //   dataPath: 'countOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountOut'),\n  //   dataPath: 'subCountOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('category'),\n  //   dataPath: 'category.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCategory'),\n  //   dataPath: 'subCategory.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  //\n  // {\n  //   label: 'Контрагент',\n  //   dataPath: 'contractor.name',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Документ',\n  //   dataPath: 'document',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('project'),\n  //   dataPath: 'project.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  // {\n  //   label: 'Статус',\n  //   dataPath: 'status',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    // top: { name: t('Product label'), getData: rd => rd.offer?.label },\n    top: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'text',\n    width: '210px',\n  },\n  {\n    top: { name: t('Product sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Product bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  createdDateColumn,\n];\n","import { IBase } from '../../redux/global.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n}\n"],"names":["_ref","onChangeIds","onChange","offer","treeData","useDirectorySelector","ApiDirType","directory","_useState","useState","_useState2","_slicedToArray","selectedMap","setSelectedMap","init","useMemo","_offer$categories","categories","_next","forEach","category","_category$parent","parentId","parent","_id","catId","concat","_toConsumableArray","Object","entries","_ref2","_next$key","_ref3","key","val","length","Array","from","Set","useEffect","toggleSelected","useCallback","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","wrap","_context","prev","next","map","newMap","checked","_objectSpread","_defineProperty","ids","pathIds","registerId","index","_newMap$registerId","slice","_prev$ev$_id","removeId","keys","filter","_map$key","stop","_x","apply","arguments","renderCategories","isSelected","id","_selectedMap$id","_jsx","RootBox","children","RenderCategory","item","depth","isChecked","FlexBox","minWidth","styled","_templateObject","_taggedTemplateLiteral","p","theme","sideBarBorderColor","CategoriesList","FlexUl","_templateObject2","CategoryListItem","FlexLi","_templateObject3","CategoryItem","_templateObject4","_ref5","_item$childrenList","_item$_id","_item$childrenList2","_item$childrenList3","_ref5$depth","_useState3","childrenList","_useState4","isOpen","setIsOpen","itemId","nextPathIds","_jsxs","padding","gap","fxDirection","alignItems","ButtonIcon","variant","iconSize","disabled","icon","onClick","FlexLabel","flex","CheckBox","size","Text","$size","$weight","label","child","FormContentGrid","AddImageBox","globals","timingFnMui","accentColor","base","light","Image","_current$label","title","_ref$fillHeight","fillHeight","onSubmit","onClose","defaultState","props","type","_objectWithoutProperties","_excluded","formAddImageSetTabs","current","setCurrent","formData","setFormData","inputRef","useRef","ModalForm","width","fillWidth","overflow","value","src","SvgIcon","name","className","InputLabel","replace","toUpperCase","required","InputText","ref","e","_e$target","target","placeholder","autoFocus","ButtonsGroup","options","currentOption","onSelect","info","option","AddImageSetButton","ImagesSetBox","SlotOrderChanger","onMoveUpPress","onMoveDownPress","currentOrder","canMoveDown","canMoveUp","style","justifyContent","$align","onChangeState","renderHeader","initialData","_ref$canEditOrder","canEditOrder","FooterComponent","contentContainerStyle","hideLabel","modalS","useModalService","handleChangeOrder","currentSetOrder","increment","newOrder","set","order","handleAddImageToSet","setIndex","uri","updatedData","handleRemoveImageFromSet","setId","ImageSetSrcType","window","confirm","img_preview","handleAddNewSet","open","ModalChildren","AddImageSetModal","modalChildrenProps","data","handleAddImageSet","renderImageSets","_dataForRender","dataForRender","sort","a","b","_a$order","_b$order","slot","slotIndex","_slot$order","_slot$order2","renderPreviews","el","imgIndex","_el$label","ImagePreviewSmall","onEditPress","onDeletePress","check","_Fragment","height","t","onAddNewImageSetPress","PropertyItemStylesByCmsKey","_PropertyItemStylesBy","PropertyTypeEnum","numColumns","PropertyBox","PropertyValuesBox","_PropertyItemStylesBy2","_PropertyItemStylesBy3","cmsKey","RenderPropertyValue","ValueTag","fontWeight","_item$cmsConfigs","_ref$selectedIds","selectedIds","state","useProductsSelector","renderChildren","_state$propertiesKeys","_state$propertiesKeys2","_step","_propId","_valuesList","_valuesIds","propertiesKeysMap","_iterator","_createForOfIteratorHelper","s","n","done","_state$propertiesData","valueId","propertiesDataMap","push","err","f","includes","paddingLeft","cmsConfigs","ImageSmallPreviewBox","ImagePreviewTop","timingFnMain","ImagePreviewBottom","maxWidth","maxHeight","border","borderRadius","position","alt","color","fill","PropertiesGroupSelect","selected","_ref$filterValue","filterValue","OfferTypeEnum","isSelectable","_ref$hasFilter","hasFilter","setFilter","currentTemplate","setCurrentTemplate","rootList","_rootIds","propertiesByTypeKeysMap","_items","margin","productsFilterOptions","CustomSelect","selectedOption","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","enumToFilterOptions","offersTableColumns","top","getData","rd","getImgPreview","pr","_pr$images$","images","undefined","action","sku","bottom","barCode","path","d","approved","align","_d$price","toPrice","price","out","_d$price2","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$editor","editor","email","_rd$author","author","createdDateColumn","ordersTableColumns","OrderStatusEnum","status","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slots","slotsCount","_rd$reference","reference","internal","_rd$reference2","external","_rd$group","_rd$group$reference","group","_rd$group2","strategy","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","customer","first","second","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","ordersSearchParams","dataPath","search","orderSlotsTableColumns","_rd$variation","_rd$offer","_rd$variation2","_rd$offer2","_rd$variation3","quantity","getBasePriceColumns"],"sourceRoot":""}