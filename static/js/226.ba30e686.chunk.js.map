{"version":3,"file":"static/js/226.ba30e686.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/offers/tabs/SalesTab.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Overlays/SelectCategoriesOverlay.tsx","components/Overviews/offer/components/OfferOverviewCategoriesCell.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormProductDefaultsOverlay.tsx","components/Overlays/FormProductImagesOverlay.tsx","components/Overviews/offer/OfferOverviewXL.tsx","components/Overviews/offer/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/offer/components/OfferOverviewDefaultsCell.tsx","components/Overviews/offer/components/OfferOverviewImagesCell.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/pagesStyles.tsx","components/Overlays/OverlayBase.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Overviews/components/OverviewTextCell.tsx","data/warehauses.data.ts"],"sourcesContent":["import { CreatedOverlay, useOverlayService } from './OverlayStackProvider';\nimport React, { createContext, MouseEventHandler, useCallback, useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport interface OverlayLocalValue extends CreatedOverlay {}\nexport const OverlayLocalCTX = createContext<OverlayLocalValue>({});\nexport const useOverlay = () => useContext(OverlayLocalCTX);\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <OverlayLocalCTX.Provider\n            value={{\n              onClose: () => {\n                overlaySrv.remove(id);\n              },\n              compId: id,\n              index: index,\n            }}\n          >\n            <RenderComponent\n              key={`overlay-${id}`}\n              {...props}\n              onClose={() => {\n                overlaySrv.remove(id);\n              }}\n              compId={id}\n              index={index}\n            />\n          </OverlayLocalCTX.Provider>\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 200;\n\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  background-color: ${p => p.theme.backdropColorDark};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  height: 100%;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  create: OverlayCreator;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport type OverlayCreator = <Props = any>(\n  Component: React.FC<OverlayRenderComponentProps<Props>>,\n  props: OverlayRenderComponentProps<Props>\n) => CreatedOverlay;\n\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n    create: (Component, props) => createOverlayComponent({ RenderComponent: Component, props }),\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { PriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { OnlyUUID } from 'redux/app-redux.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport CreatePriceModal from '../../../Modals/CreatePriceModal';\nimport { pricesColumnsForProductReview } from '../../../../data/priceManagement.data';\nimport { IBase } from '../../../../types/utils.types';\nimport { useAppDispatch } from '../../../../redux/store.store';\nimport { getPriceThunk } from '../../../../redux/priceManagement/priceManagement.thunks';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ _id: offerId });\n  const [selectedRow, setSelectedRoe] = useState<IBase>();\n  const loaders = useLoadersProvider<'prices' | 'price' | 'discounts' | 'discount'>();\n  const dispatch = useAppDispatch();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  const tableConfig = useMemo((): ITableListProps<PriceEntity> => {\n    return {\n      onRowClick: data => {\n        setSelectedRoe(data?.rowData);\n\n        if (onSelect) {\n          onSelect({ _id: data?.rowId || data?.rowData?._id || '' });\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id || selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: true },\n              { icon: 'copy', type: 'onlyIcon', disabled: true },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  dispatch(\n                    getPriceThunk({\n                      data: { params: { _id: currentId } },\n                      onLoading: loaders.onLoading('price', undefined, { content: 'Refreshing price info...' }),\n                      onSuccess: () => {\n                        modalS.open({\n                          ModalChildren: CreatePriceModal,\n                          modalChildrenProps: {\n                            offer: currentOffer,\n                            updateId: currentId,\n                          },\n                        });\n                      },\n                    })\n                  );\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: CreatePriceModal,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [withActions, onSelect, selectedRow?._id, loadData, dispatch, loaders, modalS, currentOffer]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n      tableData={currentOffer?.prices}\n      tableTitles={pricesColumnsForProductReview}\n    />\n  );\n};\n\nexport default PricesTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useOffersSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} hasSearch={false} hasFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferOverviewAddsTabProps } from './types';\nimport { Text } from '../../../atoms/Text';\n\ninterface OfferSalesTabProps extends OfferOverviewAddsTabProps {}\nexport const SalesTab = (props: OfferSalesTabProps) => {\n  return (\n    <FlexBox padding={'16px'}>\n      <Text $size={16} $weight={600}>\n        In work\n      </Text>\n    </FlexBox>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\nimport { SalesTab } from './tabs/SalesTab';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { OfferOverlayLoaderKey } from '../../Overlays/FormProductDefaultsOverlay';\nimport { LoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\n\nenum RightSideOptionEnum {\n  Prices = 'Prices',\n  Variations = 'Variations',\n  Warehousing = 'Warehousing',\n  Sales = 'Sales',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(TabsList[0].value);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n      [RightSideOptionEnum.Sales]: <SalesTab withActions />,\n    };\n    return tabs?.[currentTab] ?? null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <LoadersProvider value={loaders}>\n      <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n        {isVisible && (\n          <ModalHeader\n            onBackPress={toggleVisibility}\n            renderTitle={\n              <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n                <Text $weight={600} $size={14}>\n                  {page?.currentOffer?.label}\n                </Text>\n\n                <Text $size={14}>{page?.currentOffer?.sku}</Text>\n              </FlexBox>\n            }\n          />\n        )}\n\n        <TabBox overflow={'hidden'} fillWidth flex={1}>\n          <TabSelector options={TabsList} onOptSelect={filterHandler} preventDefault />\n\n          {renderTab}\n        </TabBox>\n      </RightSide>\n    </LoadersProvider>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef, sortIds } from '../../utils';\nimport OfferCategoriesSelector from '../Forms/offers/categories/OfferCategoriesSelector';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { useCurrentOffer } from '../../hooks';\n\nexport interface FormSelectCategoriesOverlayProps extends CreatedOverlay {}\n\nconst OfferCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const currentOffer = useCurrentOffer();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const loaders = useLoaders<'update'>({ update: { content: 'Loadings...' } });\n  const initIds = sortIds(currentOffer?.categories?.map(p => p._id));\n\n  const [categoriesIds, setCategoriesIds] = useState<string[]>(initIds);\n\n  const canSubmit = useMemo(() => {\n    return initIds?.join(',') !== sortIds(categoriesIds).join(',');\n  }, [initIds, categoriesIds]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentOffer &&\n      service.updateById({\n        onLoading: loaders.onLoading('update'),\n        data: { ...getIdRef(currentOffer), data: { categories: categoriesIds }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setCategoriesIds(currentOffer?.categories.map(c => c._id));\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader\n        title={'Категорії'}\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        okButton\n        isLoading={loaders.isLoading?.update}\n      />\n\n      <Content padding={'0 0 8px 0'} flex={1} overflow={'auto'}>\n        <OfferCategoriesSelector\n          onChangeIds={setCategoriesIds}\n          options={directory}\n          defaultData={categoriesIds}\n          offer={currentOffer}\n        />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} loading={loaders.isLoading?.update} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default OfferCategoriesOverlay;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport OfferCategoriesOverlay from '../../../Overlays/SelectCategoriesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { OfferCategoryEntity } from '../../../../types/dir.types';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: OfferCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: OfferCategoryEntity;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { PropertyBaseEntity, PropertyEntity } from '../../types/offers/properties.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { PropertiesGroupSelect } from '../atoms/PropertiesGroupSelect';\nimport { useCurrentOffer } from '../../hooks';\nimport { sortIds } from '../../utils';\n\nexport interface FormSelectPropertiesProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  updateId?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  updateId,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentOffer = useCurrentOffer(offer);\n  const state = useOffersSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [currentTemplate, setCurrentTemlate] = useState<PropertyBaseEntity>();\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const initState = useMemo(() => {\n    return sortIds(currentOffer?.properties?.map(prop => prop._id));\n  }, [currentOffer?.properties]);\n\n  useEffect(() => {\n    if (initState?.length) {\n      setSelectedIds(initState);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const propertiesList = useMemo(() => {\n    const _rootId = currentTemplate?._id;\n    const _propertiesList: PropertyEntity[] = [];\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId ?? 'def'] ?? [];\n\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop && !prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const canSubmit = useMemo(() => {\n    return sortIds(initState)?.join(',') !== sortIds(selectedIds).join(',');\n  }, [initState, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = updateId ?? currentOffer?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentOffer?._id, onClose, onSubmit, selectedIds, service, updateId]\n  );\n\n  const handleSelect = useCallback((_parentId?: string, valueId: string = '') => {\n    setSelectedIds(prev => {\n      return prev.includes(valueId) ? prev.filter(el => el !== valueId) : [...prev, valueId];\n    });\n  }, []);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  useEffect(() => {\n    if (currentOffer?.properties) {\n      setSelectedIds(currentOffer?.properties.map(p => p._id));\n    }\n  }, [currentOffer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        title={(title || currentTemplate?.label) ?? ''}\n        okButton\n      />\n\n      <PropertiesGroupSelect onSelect={setCurrentTemlate} selected={currentTemplate} />\n\n      <PropertiesBox flex={1} overflow={'auto'}>\n        {renderPropertiesList}\n      </PropertiesBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst PropertiesBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { PropertyEntity, PropertyValueEntity } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: PropertyEntity;\n  selectedIds?: string[];\n  selectedItems?: PropertyValueEntity[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({\n  item,\n  selectedIds,\n  selectedItems,\n}) => {\n  const renderValues = useMemo(() => {\n    const _list = selectedItems?.length\n      ? selectedItems\n      : item.childrenList?.filter(el => selectedIds?.includes(el._id));\n\n    return _list?.map((value, index) => {\n      return (\n        <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n          {value.label}\n        </CellStyledComp.CategoryItem>\n      );\n    });\n  }, [item.childrenList, selectedIds, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/app-redux.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList hasSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { WarehouseEntity } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseEntity> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList hasSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nexport interface FormProductDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum FormProductDefaultsTabs {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\nexport type OfferOverlayLoaderKey =\n  | keyof typeof FormProductDefaultsTabs\n  | `${keyof typeof FormProductDefaultsTabs}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const currentOffer = useCurrentOffer({ _id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    currentOffer?._id &&\n      productsS.setDefaults({\n        data: { _id: currentOffer?._id, defaults: toReqData(fData) as never, updateCurrent: true },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n\n  const renderTab = useMemo(() => {\n    const tabsMap: Record<FormProductDefaultsTabs, React.ReactNode> = {\n      [FormProductDefaultsTabs.warehouse]: (\n        <WarehousesTab withActions onSelect={handleSelect} selected={formValues?.warehouse} />\n      ),\n      [FormProductDefaultsTabs.price]: <PricesTab withActions onSelect={handleSelect} selected={formValues?.price} />,\n      [FormProductDefaultsTabs.variation]: (\n        <VariationsTab withActions onSelect={handleSelect} selected={formValues?.variation} />\n      ),\n      [FormProductDefaultsTabs.inventory]: (\n        <WarehousingTab withActions onSelect={handleSelect} selected={formValues?.inventory} />\n      ),\n      [FormProductDefaultsTabs.supplier]: (\n        <CounterpartyTab\n          withActions\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      ),\n    };\n\n    return tabsMap[tabs[currentTabIdx]?.value] ?? null;\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    formValues?.warehouse,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentOffer?.defaults;\n\n    const tabIs: Record<FormProductDefaultsTabs | string, boolean> = {\n      [tabs?.[currentTabIdx]?.value ?? '']: true,\n    };\n\n    if (tabIs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabIs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabIs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabIs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabIs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentOffer?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector options={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} onCreatePress={() => {}} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FormOfferImagesComponent from '../Forms/offers/images/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils/data-transform';\nimport { OverlayFooter, OverlayHeader } from './index';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: OfferEntity;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useOffersSelector().currentOffer;\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(currentProduct?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={\n          <OverlayHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />\n        }\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import { OfferEntity } from '../../../types/offers/offers.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../../lang';\nimport { usePageCurrentOffer } from '../../AppPages/offers/PageOfferProvider';\nimport { OverlayHeader } from '../../Overlays';\nimport TabSelector from '../../atoms/TabSelector';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../../hooks';\nimport { OverviewTextCell } from '../components/OverviewTextCell';\nimport { enumToFilterOptions, toAppDateFormat } from '../../../utils';\nimport { OverviewCellProps } from '../components/overview-types';\nimport { IMeasurement, PartialRecord } from '../../../types/utils.types';\nimport { isString } from 'lodash';\nimport { OfferOverviewCategoriesCell } from './components/OfferOverviewCategoriesCell';\nimport { OfferOverviewStaticProperties } from './components/OfferOverviewStaticPropertiesCell';\nimport { OfferOverviewDefaultsCell } from './components/OfferOverviewDefaultsCell';\nimport { OfferOverviewImagesCell } from './components/OfferOverviewImagesCell';\n\nexport enum OfferOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nexport const ProductOverviewTabsList = enumToFilterOptions(OfferOverviewTabsEnum);\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n  const cellsMap = getOfferOverviewCellsMap();\n\n  const [currentTab, setCurrentTab] = useState<OfferOverviewTabsEnum>(OfferOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n            }\n            return <OverviewTextCell key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n          }),\n    [cellsMap, currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        options={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nconst offerOverviewCells: OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: OfferOverviewCategoriesCell,\n    gridArea: 'categories',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  {\n    title: t('Brand'),\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Properties'),\n    CellComponent: OfferOverviewStaticProperties,\n    gridArea: 'properties',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OfferOverviewDefaultsCell,\n    gridArea: 'defaults',\n    tab: OfferOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.user?.email} / ${\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : ''\n          }`\n        : null,\n    gridArea: 'created',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.user?.email} / ${\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : ''\n          }`\n        : null,\n    gridArea: 'updated',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OfferOverviewImagesCell,\n    gridArea: 'images',\n    tab: OfferOverviewTabsEnum.Images,\n  },\n];\n\nfunction getOfferOverviewCellsMap(): PartialRecord<\n  OfferOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n> {\n  const offerOverviewCellsMap: PartialRecord<\n    OfferOverviewTabsEnum | string,\n    OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n  > = {};\n  offerOverviewCells.forEach(item => {\n    const tab = item.tab;\n    if (tab) {\n      if (offerOverviewCellsMap[tab]) {\n        offerOverviewCellsMap[tab]?.push(item);\n      } else {\n        offerOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return offerOverviewCellsMap;\n}\nexport default OfferOverviewXL;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport React, { useMemo, useRef } from 'react';\nimport FormSelectPropertiesOverlay from '../../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { OverviewPropertyComponent } from '../../components/OverviewPropertyComponent';\nimport { PropertyEntity, PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { useCurrentOffer } from '../../../../hooks';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const state = useOffersSelector();\n  const currentOffer = useCurrentOffer(data);\n  const valuesIdsSet = useRef(new Set(currentOffer?.properties?.map(prop => prop._id) ?? []));\n  const selectedParentIdsSet = useRef(new Set(currentOffer?.properties?.map(prop => prop?.parent?._id) ?? []));\n\n  const { propertiesList, valuesListMap } = useMemo(() => {\n    const _propertiesList: PropertyEntity[] = [];\n\n    const _valuesListMap: Record<string, PropertyValueEntity[]> = {};\n\n    for (const propId of Array.from(selectedParentIdsSet.current)) {\n      const parent = propId ? state.propertiesDataMap?.[propId] : undefined;\n\n      if (parent) {\n        _propertiesList.push(parent);\n        _valuesListMap[parent._id] = [];\n      }\n    }\n    for (const valueId of Array.from(valuesIdsSet.current)) {\n      const value = valueId ? state.propertiesDataMap?.[valueId] : undefined;\n\n      if (value && value.parent?._id) {\n        _valuesListMap[value.parent?._id].push(value);\n      }\n    }\n\n    return { propertiesList: _propertiesList, valuesListMap: _valuesListMap };\n  }, [state.propertiesDataMap]);\n\n  const renderProperties = useMemo(() => {\n    return propertiesList?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, selectedItems: valuesListMap[prop._id], data }}\n        />\n      );\n    });\n  }, [propertiesList, overlayHandler, valuesListMap, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {propertiesList?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport FormProductDefaultsOverlay from '../../../Overlays/FormProductDefaultsOverlay';\n\nimport { PriceEntity } from '../../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { toPrice } from '../../../../utils/numbers';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n\n  console.log('OfferOverviewDefaultsCell', { price, data });\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: PriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../../Overlays/FormProductImagesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} disabled />\n          ))}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../../Providers/ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/offer/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { offers: offersSrv } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              _id: page?.currentOffer?._id,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          offersSrv.getOne({\n            data: { params: { _id: page.currentOffer?._id, getPrices: false, getVariations: false } },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({\n    offer: { content: t('Loading product info') },\n    prices: { content: 'Loading prices' },\n    variations: { content: 'Loading variations' },\n  });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const offersSrv = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ _id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      offersSrv\n        .getOne({\n          data: {\n            params: {\n              _id: offerId,\n              getVariations: false,\n              getPrices: false,\n            },\n          },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .catch();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    offersSrv.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      offersSrv.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import styled from 'styled-components';\nimport FlexBox, { FlexForm } from '../atoms/FlexBox';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { ObjectEntries, toVariationFormData, toVariationReqData } from '../../utils';\nimport { IVariationFormData, VariationEntity } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../Forms/components/FormAfterSubmitOptions';\nimport { OverlayFooter } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer, useCurrentVariation } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport LangButtonsGroup from '../atoms/LangButtonsGroup';\nimport { UUID } from '../../types/utils.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { ProperiesGroupEntity, PropertyEntity, PropertyValueEntity } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport DrawerBase from './OverlayBase';\nimport { PropertiesGroupSelect } from '../atoms/PropertiesGroupSelect';\nimport { AccordionFormArea } from '../atoms/FormArea/AccordionForm';\nimport { omit } from 'lodash';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  updateId?: UUID;\n\n  create?: boolean;\n\n  defaultState?: Partial<VariationEntity>;\n}\nconst _schema = yup.object().shape({\n  label: yup.string().required().min(5).max(128),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  onSubmit,\n  updateId,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const state = useOffersSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useLoaders<'create' | 'update' | 'refresh'>();\n  const { variation } = useCurrentVariation({ id: updateId });\n  const Offer = useCurrentOffer({ _id: variation?.offer?._id || offerId || offer?._id });\n\n  const submitOptions = useAfterSubmitOptions();\n\n  const [currentTemplate, setCurrentTemplate] = useState<ProperiesGroupEntity>();\n\n  const formMethods = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      variation\n        ? { ...variation, offer: Offer, template: currentTemplate }\n        : { offer: Offer, template: currentTemplate },\n      Offer\n    ),\n    resolver: yupResolver(_schema as never),\n    reValidateMode: 'onSubmit',\n  });\n\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  const [selectedPropsMap, setSelectedPropsMap] = useState<Record<string, PropertyValueEntity>>(() => {\n    const init: Record<string, PropertyValueEntity> = {};\n    for (const [propId, valueId] of ObjectEntries(formValues.propertiesMap ?? {})) {\n      const value = state.propertiesDataMap?.[valueId];\n      if (value) {\n        init[propId] = value;\n      }\n    }\n    return init;\n  });\n\n  const propertiesList = useMemo(() => {\n    const _rootId = currentTemplate?._id;\n    const _propertiesList: PropertyEntity[] = [];\n    // const _sortedPropertiesIds=sortIds(ObjectKeys(state.propertiesKeysMap))\n\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId ?? 'def'] ?? [];\n\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const { label: compiledLabel } = useMemo(() => {\n    // const _sortedIds = Object.keys(selectedPropsMap ?? {}).sort((prev, next) => prev.localeCompare(next));\n\n    const _sorted = Object.entries(selectedPropsMap).sort((prev, next) => {\n      return prev[0].localeCompare(next[0]);\n    });\n    const _labels: string[] = Offer?.label ? [Offer?.label] : [];\n\n    for (const entry of _sorted) {\n      const value = entry[1];\n      value?.label && _labels.push(value?.label);\n    }\n    const _base = !_sorted?.length ? variation?.label ?? `${Offer?.label}. {{VARIATION_LABEL}}` : _labels.join('. ');\n\n    return { label: _base };\n  }, [Offer?.label, selectedPropsMap, variation?.label]);\n\n  useEffect(() => {\n    setValue('label', compiledLabel);\n  }, [compiledLabel, setValue, variation]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (updateId) {\n        service.updateVariationById({\n          data: toVariationReqData(data, updateId),\n          onSuccess: data => {\n            console.log('updateVariationById onSuccess', data);\n\n            onClose && onClose();\n          },\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('update'),\n        });\n      } else {\n        service.createVariation({\n          data: toVariationReqData(data),\n          onSuccess: data => {\n            submitOptions.state.close && onClose && onClose();\n            submitOptions.state.clear && reset();\n          },\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('create'),\n        });\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [loaders, onClose, reset, service, submitOptions.state.clear, submitOptions.state.close, updateId]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string) => {\n      const currentId = formValues.propertiesMap?.[parentId];\n\n      const remove = currentId && currentId === id;\n\n      if (remove) {\n        setValue(`propertiesMap.${parentId}`, '');\n\n        setSelectedPropsMap(p => omit(p, parentId));\n      } else {\n        setValue(`propertiesMap.${parentId}`, id);\n\n        const value = state.propertiesDataMap?.[id];\n        if (value) {\n          setSelectedPropsMap(p => ({ ...p, [parentId]: value }));\n        }\n      }\n    },\n    [formValues.propertiesMap, setValue, state.propertiesDataMap]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setSelectedPropsMap({});\n  }, [setValue]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  return (\n    <DrawerBase fillHeight onBackPress={onClose} okButton={false} title={title || 'Create variation'}>\n      <FormContainer\n        onSubmit={handleSubmit(onValid, errors => {\n          console.error('[SUBMIT ERROR]', errors);\n        })}\n        onReset={handleClearMap}\n        {...props}\n      >\n        <Content flex={1} fillWidth overflow={'auto'} gap={12}>\n          <AccordionFormArea label={'Offer'} expandable={false} hideFooter>\n            <InputLabel label={t('Offer label')} error={errors?.offer?._id} required disabled>\n              <InputText value={Offer?.label ?? undefined} placeholder={t('label')} required disabled />\n            </InputLabel>\n\n            <FlexBox fxDirection={'row'} gap={12} fillWidth>\n              <InputLabel label={t('sku')} disabled>\n                <InputText value={Offer?.sku ?? undefined} placeholder={t('sku')} disabled />\n              </InputLabel>\n\n              <InputLabel label={t('barCode')} disabled>\n                <InputText value={Offer?.barCode ?? undefined} placeholder={t('barCode')} disabled />\n              </InputLabel>\n            </FlexBox>\n          </AccordionFormArea>\n\n          <AccordionFormArea label={'Main info'} expandable={false} hideFooter>\n            <InputLabel label={t('label')} error={errors.label}>\n              <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n            </InputLabel>\n\n            <FlexBox fxDirection={'row'} gap={12} fillWidth>\n              <InputLabel label={t('sku')} error={errors.sku}>\n                <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n              </InputLabel>\n\n              <InputLabel label={t('barCode')} error={errors.barCode}>\n                <InputText {...register('barCode')} placeholder={t('barCode')} />\n              </InputLabel>\n            </FlexBox>\n\n            {/*<DimensionsInputs form={formMethods} />*/}\n          </AccordionFormArea>\n\n          <AccordionFormArea label={t('Properties')} expandable={false} hideFooter>\n            <PropertiesGroupSelect\n              onSelect={opt => {\n                setValue('template', opt);\n                setCurrentTemplate(opt);\n              }}\n              selected={currentTemplate}\n            />\n\n            <TemplateBox padding={'0 8px'} margin={'8px 0'}>\n              {renderPropertiesList}\n            </TemplateBox>\n          </AccordionFormArea>\n\n          {variation && (\n            <AccordionFormArea label={t('Cms information')} expandable={false} hideFooter>\n              <CmsConfigs padding={'8px 0'} fillWidth>\n                <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n                  <Text $size={13} $weight={500}>\n                    {t('Cms configs')}\n                  </Text>\n                </CmsConfigsHeader>\n\n                <Inputs>\n                  <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n                    <LangButtonsGroup disabled />\n                  </InputLabel>\n\n                  <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n                    <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n                  </InputLabel>\n                </Inputs>\n              </CmsConfigs>\n            </AccordionFormArea>\n          )}\n        </Content>\n\n        <OverlayFooter\n          loading={loaders.isLoading?.create}\n          resetButtonShown\n          onGoBackPress={onClose}\n          submitButtonText={updateId ? 'Підтвердити' : 'Додати'}\n          canSubmit={canSubmit}\n          extraFooter={\n            <ExtraFooterBox>\n              <FormAfterSubmitOptions {...submitOptions} />\n            </ExtraFooterBox>\n          }\n        />\n      </FormContainer>\n    </DrawerBase>\n  );\n};\n\nconst FormContainer = styled(FlexForm)`\n  flex: 1;\n  max-height: 100%;\n  height: 100vh;\n\n  width: 100%;\n  //padding: 0 12px;\n\n  overflow: hidden;\n\n  //max-width: 380px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst Inputs = styled(FlexBox)`\n  padding: 0 4px;\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\nimport { PropertyEntity } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\nimport { IVariationTableData, VariationEntity } from '../../../../types/offers/variations.types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useCurrentOffer } from '../../../../hooks';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: VariationEntity) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  offer?: OfferEntity;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true, offer }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const page = usePageCurrentOffer();\n  const Offer = useCurrentOffer(offer || page?.currentOffer);\n\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!Offer) return;\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, offerId: Offer._id },\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [Offer, loaders, productsS]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, PropertyEntity> = {};\n    for (const variation of Offer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [Offer?.variations]);\n\n  const tableConfig = useMemo((): ITableListProps<IVariationTableData> => {\n    return {\n      onRowClick: data => {\n        if (onSelect && data?.rowData) {\n          onSelect(data?.rowData);\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { icon: 'done', type: 'onlyIconOutlined', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n\n                  modalS.create(CreateVariationOverlay, {\n                    updateId: currentId,\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.create(CreateVariationOverlay, { offer: Offer });\n                },\n              },\n            ];\n          },\n    };\n  }, [Offer, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    if (Offer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n      tableData={Offer?.variations}\n      tableTitles={variationsTableTitles}\n      transformData={transformVariationTableData as never}\n    />\n  );\n};\nexport default VariationsTab;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport React, { memo } from 'react';\nimport { OverlayHeader } from './index';\n\nexport interface DrawerBaseProps extends Omit<React.FormHTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onReset'> {\n  footer?: boolean;\n  onClosePress?: () => void;\n  onBackPress?: () => void;\n  isLoading?: boolean;\n  extraFooter?: React.ReactNode;\n  extraHeader?: React.ReactNode;\n  fillWidth?: boolean;\n  fillHeight?: boolean;\n  fitContentV?: boolean;\n  fitContentH?: boolean;\n  height?: string;\n  width?: string;\n  canSubmit?: boolean;\n  okButton?: boolean;\n}\n\nconst DrawerBase: React.FC<DrawerBaseProps> = ({\n  title,\n  footer = false,\n  children,\n  extraFooter,\n  extraHeader,\n  isLoading = false,\n  onClosePress,\n  onBackPress,\n  okButton,\n  canSubmit,\n  ...props\n}) => {\n  return (\n    <DrawerContainer className=\"modal_base\" {...props}>\n      <OverlayHeader\n        onBackPress={onBackPress}\n        onClosePress={onClosePress}\n        title={title}\n        canSubmit={canSubmit}\n        okButton={okButton}\n      >\n        {extraHeader}\n      </OverlayHeader>\n\n      <Content className=\"main\">{children}</Content>\n    </DrawerContainer>\n  );\n};\n\nconst DrawerContainer = styled.div<\n  Pick<DrawerBaseProps, 'fillHeight' | 'fillWidth' | 'fitContentH' | 'fitContentV' | 'width' | 'height'>\n>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr max-content;\n\n  position: relative;\n  padding: 0 8px;\n\n  min-height: 200px;\n  max-height: 90vh;\n\n  color: ${p => p.theme.fontColorSidebar};\n  width: ${({ width = '480px', fillWidth, fitContentH }) =>\n    (fillWidth && '100vw') || (fitContentH && 'max-content') || width};\n  height: ${({ height = '', fillHeight, fitContentV }) =>\n    (fillHeight && '90vh') || (fitContentV && 'max-content') || height};\n\n  min-width: 250px;\n  max-width: 100%;\n\n  //overflow: hidden;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  border-radius: 2px;\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: ${p => (p.fillWidth ? '98vw' : '450px')};\n  }\n`;\n\nconst Content = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  overflow: auto;\n  position: relative;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\n\nexport default memo(DrawerBase);\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 8px;\n\n  font-weight: 500;\n  font-size: 13px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'max-content'}\n      alignItems={'center'}\n      minHeight={'36px'}\n      padding={'4px 0'}\n    >\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseEntity, WarehouseItemEntity } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<WarehouseEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email'), path: 'email' },\n    bottom: { name: t('phone'), path: 'phone' },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayLocalCTX","createContext","OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","Provider","value","onClose","compId","_objectSpread","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColorDark","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","open","create","Component","_loaders$isLoading","onSelect","selected","_ref$withActions","withActions","modalS","useModalProvider","productsS","useAppServiceProvider","ServiceName","offerId","useAppParams","currentOffer","useCurrentOffer","_id","selectedRow","setSelectedRoe","loaders","useLoadersProvider","dispatch","useAppDispatch","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","refresh","update","wrap","_context","next","abrupt","getAllPrices","data","refreshCurrent","updateCurrent","onLoading","stop","_x","apply","arguments","tableConfig","onRowClick","_data$rowData","rowData","rowId","actionsCreator","ctx","_ctx$selectedRow","currentId","icon","type","separator","disabled","getPriceThunk","undefined","content","onSuccess","ModalChildren","CreatePriceModal","modalChildrenProps","offer","updateId","useEffect","TableList","hasSearch","hasFilter","isLoading","prices","tableData","tableTitles","pricesColumnsForProductReview","currentProduct","useOffersSelector","loading","setLoading","product","getIdRef","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","SalesTab","padding","Text","$size","$weight","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","modalBorderColor","_page$currentOffer","_page$currentOffer2","toggleVisibility","page","usePageCurrentOffer","useLoaders","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","tabs","_defineProperty","Variations","VariationsTab","Warehousing","WarehousingTab","Prices","PricesTab","Sales","LoadersProvider","_jsxs","ModalHeader","onBackPress","renderTitle","fxDirection","justifyContent","gap","label","sku","flex","TabSelector","options","onOptSelect","preventDefault","Content","sideBarBorderColor","_currentOffer$categor","_loaders$isLoading2","service","directory","useDirectorySelector","ApiDirType","initIds","sortIds","categories","categoriesIds","setCategoriesIds","canSubmit","join","c","OverlayForm","onSubmit","updateById","meta","OverlayHeader","title","okButton","OfferCategoriesSelector","onChangeIds","defaultData","OverlayFooter","NotActiveTreeDataItem","_item$parent","_item$parent2","item","_ref2$lvl","lvl","selectedIds","renderChildren","_item$childrenList","childrenList","isSelected","_Fragment","CellStyledComp","parent","PropertiesBox","defaultState","template","onChange","_objectWithoutProperties","_excluded","state","currentTemplate","setCurrentTemlate","_useState3","_useState4","_useState5","_useState6","setSelectedIds","initState","_currentOffer$propert","properties","prop","propertiesList","_state$propertiesKeys","_state$propertiesKeys2","_step","_rootId","_propertiesList","_propertiesIds","propertiesKeysMap","_iterator","_createForOfIteratorHelper","s","n","done","_state$propertiesData","propId","propertiesDataMap","isSelectable","childrenIds","push","err","e","f","_sortIds","handleSubmit","event","_meta","ToastService","console","debug","handleSelect","_parentId","valueId","renderPropertiesList","OfferVariationPropertySelector","PropertiesGroupSelect","submitButtonText","OverviewPropertyComponent","selectedItems","renderValues","_list","maxWidth","flexWrap","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","FormProductDefaultsTabs","Form","modalBackgroundColor","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","useAppForm","setValue","formValues","_tabsMap","_tabsMap$tabs$current","_tabs$currentTabIdx","warehouse","WarehousesTab","price","variation","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx$v","_tabs$currentTabIdx2","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","tabIs","fData","setDefaults","toReqData","log","t","currentIndex","onChangeIndex","hasLoading","onCreatePress","sideBarBackgroundColor","images","setState","useTheme","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","OfferOverviewTabsEnum","ProductOverviewTabsList","Container","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","offerOverviewCells","getValue","gridArea","tab","General","approved","barCode","CellComponent","cell","overlayHandler","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","minHeight","OverviewCellHeader","openOverlayButtonTitle","onOpenOverlayPress","OfferCategoriesOverlay","height","Properties","_data$brand","brand","measurement","JSON","parse","unit","min","max","step","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","_currentOffer$propert2","_currentOffer$propert3","_currentOffer$propert4","valuesIdsSet","useRef","Set","selectedParentIdsSet","_prop$parent","_useMemo","_valuesListMap","_i","_Array$from","Array","from","current","_i2","_Array$from2","_state$propertiesData2","_value$parent","_value$parent2","valuesListMap","renderProperties","FormSelectPropertiesOverlay","renderVariationTags","_variation$properties","_item$value","$align","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","out","commission","percentage","markup","createPriceOverviewTagsData","FormProductDefaultsOverlay","color","fontColorHeader","code","info","Defaults","_product$author","_product$author$user","author","user","email","createdAt","isString","toAppDateFormat","Date","_product$editor","_product$editor$user","editor","updatedAt","renderImageSets","_data$images","set","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","Images","_p$product","router","useAppRouter","cellsMap","offerOverviewCellsMap","forEach","_offerOverviewCellsMa","getOfferOverviewCellsMap","renderCells","_cellsMap$currentTab","_excluded2","OverviewTextCell","goBack","optionProps","fitContentH","option","replace","hash","size","variant","iconSize","onEdit","visible","onHide","onDelete","margin","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","useOfferOverviewLoaders","offersSrv","offers","OfferOverviewXL","openModal","Modal","Modals","_page$currentOffer3","getOne","getPrices","getVariations","Page","takeFullGridArea","path","variations","isRightSideVisible","setIsRightSideVisible","toggleRightSide","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","PageCurrentOfferCTX","catch","clearCurrent","_schema","yup","shape","required","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","FormContainer","FlexForm","fontColorSidebar","tableBackgroundColor","TemplateBox","Inputs","ExtraFooterBox","CmsConfigs","_templateObject6","CmsConfigsHeader","_templateObject7","_variation$offer","_errors$offer","_Offer$label","_Offer$sku","_Offer$barCode","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs2$l","useCurrentVariation","Offer","submitOptions","useAfterSubmitOptions","setCurrentTemplate","formMethods","defaultValues","toVariationFormData","resolver","yupResolver","reValidateMode","register","errors","formState","reset","_formValues$propertie","init","ObjectEntries","_step$value","selectedPropsMap","setSelectedPropsMap","_step2","_iterator2","compiledLabel","_variation$label","_step3","_sorted","Object","entries","sort","localeCompare","_labels","_iterator3","onValid","updateVariationById","toVariationReqData","onError","createVariation","close","clear","parentId","_formValues$propertie2","omit","_state$propertiesData3","handleClearMap","values","DrawerBase","onReset","AccordionFormArea","expandable","hideFooter","InputLabel","InputText","placeholder","opt","cmsConfigs","key","LangButtonsGroup","resetButtonShown","onGoBackPress","extraFooter","FormAfterSubmitOptions","getAllVariationsByProductId","variationsTableTitles","_Offer$variations","propsList","createTableTitlesFromProperties","window","confirm","CreateVariationOverlay","transformData","transformVariationTableData","css","takeFullPlace","footer","extraHeader","onClosePress","DrawerContainer","_ref2$width","width","_ref3$height","fitContentV","_ref4","shadowMain","_ref5","fillColor","_ref6","fontColor","_ref7","_ref8","_ref9","_ref10","_ref11","memo","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","CategoryItem","field","backgroundColor","_ref$title","_ref$openOverlayButto","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","marginRight","top","getData","rd","bottom","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}