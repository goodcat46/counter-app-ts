{"version":3,"file":"static/js/989.6df2cfd5.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/Overviews/order/compnents/OrderOverviewCustomerInfo.tsx","components/Overviews/order/tabs/OrderOverviewInfoTab.tsx","components/Overviews/order/compnents/OrderOverviewTotals.tsx","components/Overviews/order/compnents/OrderOverviewInvoicing.tsx","components/Overviews/order/compnents/OrderOverviewDelivery.tsx","components/Overviews/order/OrderOverviewXL.tsx","components/AppPages/orders/PageOrderOverviewLeftSide.tsx","components/AppPages/orders/tabs/OrderContentTab.tsx","components/AppPages/orders/tabs/OrderInvoicesTab.tsx","components/AppPages/orders/tabs/OrderPaymentsTab.tsx","components/AppPages/orders/PageOrderOverviewTabs.tsx","components/AppPages/orders/PageOrderProvider.tsx","components/AppPages/orders/PageOrderOverview.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Overviews/components/OverviewTextCell.tsx","data/orders.data.ts"],"sourcesContent":["import { CreatedOverlay, useOverlayService } from './OverlayStackProvider';\nimport React, { createContext, MouseEventHandler, useCallback, useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport interface OverlayLocalValue extends CreatedOverlay {}\nexport const OverlayLocalCTX = createContext<OverlayLocalValue>({});\nexport const useOverlay = () => useContext(OverlayLocalCTX);\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <OverlayLocalCTX.Provider\n            value={{\n              onClose: () => {\n                overlaySrv.remove(id);\n              },\n              compId: id,\n              index: index,\n            }}\n          >\n            <RenderComponent\n              key={`overlay-${id}`}\n              {...props}\n              onClose={() => {\n                overlaySrv.remove(id);\n              }}\n              compId={id}\n              index={index}\n            />\n          </OverlayLocalCTX.Provider>\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 200;\n\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  background-color: ${p => p.theme.backdropColorDark};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  height: 100%;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  create: OverlayCreator;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport type OverlayCreator = <Props = any>(\n  Component: React.FC<OverlayRenderComponentProps<Props>>,\n  props: OverlayRenderComponentProps<Props>\n) => CreatedOverlay;\n\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n    create: (Component, props) => createOverlayComponent({ RenderComponent: Component, props }),\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { t } from '../../../../lang';\nimport { useMemo } from 'react';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\n\nexport const OrderOverviewCustomerInfo: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const customer = data?.customer;\n\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      {\n        label: t('First name'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Second name'),\n        value: customer?.name?.second,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Middle name'),\n        value: customer?.name?.middle,\n        visible: customer?.businessType !== 'company',\n      },\n\n      {\n        label: t('Base label'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'person',\n      },\n      { label: t('Print'), value: customer?.name?.second, visible: customer?.businessType !== 'person' },\n\n      { label: t('Email'), value: customer?.email, visible: true },\n      { label: t('Phone'), value: customer?.phone, visible: true },\n\n      { label: t('Business type'), value: customer?.businessType, visible: true },\n      { label: t('Sex type'), value: customer?.sexType, visible: true },\n\n      { label: t('Engagement type'), value: customer?.engagementSource, visible: true },\n\n      { label: t('Age'), value: customer?.age, visible: true },\n\n      { label: t('Tags'), value: null, visible: true },\n    ];\n\n    return cells.map(cell => {\n      return (\n        cell.visible && (\n          <FlexBox\n            key={cell.label}\n            fxDirection={'row'}\n            padding={'6px'}\n            gap={8}\n            alignItems={'center'}\n            justifyContent={'space-between'}\n          >\n            <Text $size={11}>{cell?.label}</Text>\n            <Text $size={13} $weight={500}>\n              {cell?.value ?? t('undefined')}\n            </Text>\n          </FlexBox>\n        )\n      );\n    });\n  }, [data?.customer]);\n\n  return (\n    <CellStyledComp.Cell>\n      {cell?.title && <OverviewCellHeader title={cell?.title} />}\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import FlexBox from '../../../atoms/FlexBox';\nimport styled from 'styled-components';\nimport React, { useMemo, useState } from 'react';\nimport { useOverlayService } from '../../../../Providers/Overlay/OverlayStackProvider';\nimport { useOrdersSelector } from '../../../../redux/selectors.store';\nimport TabSelector from '../../../atoms/TabSelector';\nimport { OverviewTextCell } from 'components/Overviews/components/OverviewTextCell';\nimport { OverviewCellProps } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { t } from '../../../../lang';\nimport { _enumToTabs } from '../../../../utils';\nimport { OrderOverviewTotals } from '../compnents/OrderOverviewTotals';\nimport { PartialRecord } from '../../../../types/utils.types';\nimport { OrderOverviewCustomerInfo } from '../compnents/OrderOverviewCustomerInfo';\nimport { OrderOverviewInvoicing } from '../compnents/OrderOverviewInvoicing';\nimport { OrderOverviewDelivery } from '../compnents/OrderOverviewDelivery';\n\nexport interface OrderOverviewInfoTabProps {}\n\nenum OrderOverviewInfoTabsEnum {\n  General = 'General',\n  Customer = 'Customer',\n  Invoicing = 'Invoicing',\n  Delivery = 'Delivery',\n  Additional = 'Additional',\n}\n\nconst orderOverviewInfoTabs = _enumToTabs(OrderOverviewInfoTabsEnum);\n\nconst OrderOverviewInfoTab: React.FC<OrderOverviewInfoTabProps> = _p => {\n  const overlayS = useOverlayService();\n  const currentOrder = useOrdersSelector().currentOrder;\n  const [currentTab, setCurrentTab] = useState<OrderOverviewInfoTabsEnum>(OrderOverviewInfoTabsEnum.General);\n  const cellsMap = getOrderOverviewCellsMap();\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlayS.open} cell={cell} data={currentOrder} />;\n            }\n            return <OverviewTextCell key={cell.title} overlayHandler={overlayS.open} cell={cell} data={currentOrder} />;\n          }),\n    [cellsMap, currentTab, overlayS.open, currentOrder]\n  );\n\n  return (\n    <Box fillWidth flex={1} overflow={'auto'}>\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        options={orderOverviewInfoTabs}\n        onOptSelect={option => {\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      {renderCells}\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)``;\nexport default OrderOverviewInfoTab;\n\nconst orderOverviewCells: OverviewCellProps<OrderEntity>[] = [\n  {\n    title: t('Manager'),\n    getValue: data => data?.manager?.user?.email,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Reference'),\n    getValue: data => data?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Group reference'),\n    getValue: data => data?.group?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Group strategy'),\n    getValue: data => data?.group?.strategy,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Totals'),\n    CellComponent: OrderOverviewTotals,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Status'),\n    getValue: data => data?.status,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    CellComponent: OrderOverviewCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Customer,\n  },\n  {\n    title: t('Receiver'),\n    CellComponent: OrderOverviewCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Delivery,\n  },\n  {\n    title: t('Invoicing'),\n    CellComponent: OrderOverviewInvoicing,\n    tab: OrderOverviewInfoTabsEnum.Invoicing,\n  },\n  { title: t('Delivery'), CellComponent: OrderOverviewDelivery, tab: OrderOverviewInfoTabsEnum.Delivery },\n  { title: t('Additional'), tab: OrderOverviewInfoTabsEnum.Additional },\n];\n\nfunction getOrderOverviewCellsMap(): PartialRecord<\n  OrderOverviewInfoTabsEnum | string,\n  OverviewCellProps<OrderEntity, OrderOverviewInfoTabsEnum>[]\n> {\n  const orderOverviewCellsMap: PartialRecord<\n    OrderOverviewInfoTabsEnum | string,\n    OverviewCellProps<OrderEntity, OrderOverviewInfoTabsEnum>[]\n  > = {};\n  orderOverviewCells.forEach(item => {\n    const tab = item.tab;\n\n    if (tab) {\n      if (orderOverviewCellsMap[tab]) {\n        orderOverviewCellsMap[tab]?.push(item);\n      } else {\n        orderOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return orderOverviewCellsMap;\n}\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { t } from '../../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { numberWithSpaces } from '../../../../utils';\nimport { Text } from '../../../atoms/Text';\n\nexport const OrderOverviewTotals: RenderOverviewCellComponent<OrderEntity> = ({ data, cell }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Amount'), value: numberWithSpaces(data?.total?.amount) },\n      { label: t('Items count'), value: data?.total?.items },\n    ];\n    return cells.map(cell => (\n      <FlexBox fxDirection={'row'} padding={'6px'} justifyContent={'space-between'} fillWidth gap={8}>\n        <Text $size={11}>{cell.label}</Text>\n        <CellStyledComp.CellText $weight={600}>{cell?.value}</CellStyledComp.CellText>\n      </FlexBox>\n    ));\n  }, [data?.total?.amount, data?.total?.items]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={cell.title} />\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\n\nexport const OrderOverviewInvoicing: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { t } from '../../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\n\nexport const OrderOverviewDelivery: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { OrderEntity } from '../../../types/orders/orders.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { ModalHeader } from '../../atoms';\nimport React, { useMemo, useState } from 'react';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport { t } from '../../../lang';\nimport { useAppParams } from '../../../hooks';\nimport { enumToFilterOptions } from '../../../utils';\nimport TabSelector from '../../atoms/TabSelector';\nimport OrderOverviewInfoTab from './tabs/OrderOverviewInfoTab';\n\nexport interface OrderOverviewXLProps {\n  order?: OrderEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  isRefresh?: boolean;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\nexport enum OrderOverviewTabs {\n  info = 'Info',\n  chat = 'Chat',\n  statuses = 'Statuses',\n  comments = 'Comments',\n  tasks = 'tasks',\n}\n\nconst tabs = enumToFilterOptions(OrderOverviewTabs);\n\nconst OrderOverviewXL: React.FC<OrderOverviewXLProps> = p => {\n  const [currentTab, setCurrentTab] = useState<number>(0);\n  // const orderS = useAppServiceProvider()[ServiceName.orders];\n  const orderId = useAppParams()?.orderId;\n  const currentOrder = useOrdersSelector().currentOrder;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const renderTab = useMemo(() => {\n    if (tabs[currentTab].value === OrderOverviewTabs.info) {\n      return <OrderOverviewInfoTab />;\n    }\n\n    return null;\n  }, [currentTab]);\n\n  return (\n    <Container flex={1} fillWidth padding={'0 8px'}>\n      <ModalHeader\n        title={t('Order overview')}\n        onBackPress={() => {\n          if (location?.pathname) {\n            const newPath = location?.pathname?.replace(`/${currentOrder?._id || orderId}`, '');\n\n            newPath && navigate(newPath);\n          }\n        }}\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <TabSelector options={tabs} optionProps={{ fitContentH: true }} onOptSelect={(_o, _v, i) => setCurrentTab(i)} />\n\n        {renderTab}\n      </Content>\n\n      <Footer fxDirection={'row'} alignItems={'center'} justifyContent={'space-between'} padding={'8px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            isLoading={p?.isRefresh}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nexport default OrderOverviewXL;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useState } from 'react';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OrderOverviewXL from 'components/Overviews/order/OrderOverviewXL';\n\nexport interface PageOrderOverviewLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\nconst PageOrderOverviewLeftSide: React.FC<PageOrderOverviewLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const { currentOrder } = useOrdersSelector();\n  const setLoading = useState(false)[1];\n  const { orders: ordersServ } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OrderOverviewXL\n        order={currentOrder}\n        onRefresh={() => {\n          currentOrder?._id &&\n            ordersServ.getById({\n              data: { _id: currentOrder?._id, options: { refreshCurrent: true } },\n              onLoading: setLoading,\n            });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default PageOrderOverviewLeftSide;\n","import FlexBox from '../../../atoms/FlexBox';\nimport TabSelector from '../../../atoms/TabSelector';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useOrdersSelector } from '../../../../redux/selectors.store';\nimport { useEffect, useMemo, useState } from 'react';\nimport { orderSlotsTableColumns } from '../../../../data/orders.data';\nimport { offerTypeFilterOptions } from '../../../../data/modalFilterOptions.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../../redux/reduxTypes.types';\nimport { getIdRef } from '../../../../utils';\nimport { IOrderSlot } from '../../../../types/orders/orders.types';\n\nexport interface OrderContentTabProps {}\n\nconst OrderContentTab: React.FC<OrderContentTabProps> = p => {\n  const service = useAppServiceProvider()[AppModuleName.orders];\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentTab, setCurrentTab] = useState<number>(0);\n\n  const { currentOrder } = useOrdersSelector();\n\n  const tableData = useMemo(() => {\n    return currentOrder?.slots?.filter(el => el.product?.type === offerTypeFilterOptions[currentTab]?.value);\n  }, [currentOrder?.slots, currentTab]);\n\n  const tableConfigs = useMemo((): ITableListProps<IOrderSlot> => {\n    return {\n      actionsCreator: ctx => {\n        return [\n          {\n            icon: 'refresh',\n            name: 'refresh',\n            onClick: () => {\n              if (currentOrder?._id) {\n                service.getSlots({ data: { params: { order: getIdRef(currentOrder) } }, onLoading: setIsLoading });\n              }\n            },\n          },\n        ];\n      },\n    };\n  }, [currentOrder, service]);\n\n  useEffect(() => {\n    if (currentOrder?._id) {\n      service.getSlots({ data: { params: { order: getIdRef(currentOrder) } } });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <FlexBox fillWidth overflow={'hidden'} flex={1}>\n      <FlexBox fillWidth>\n        <TabSelector\n          options={offerTypeFilterOptions}\n          currentIndex={currentTab}\n          onOptSelect={(_o, _v, i) => {\n            setCurrentTab(i);\n          }}\n        />\n      </FlexBox>\n\n      <TableList\n        hasSearch={false}\n        hasFilter={false}\n        {...tableConfigs}\n        tableData={tableData}\n        isLoading={isLoading}\n        tableTitles={orderSlotsTableColumns}\n      />\n    </FlexBox>\n  );\n};\n\nexport default OrderContentTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { invoicesTableColumns } from '../../../../data/invoicing.data';\nimport { useOrdersSelector } from '../../../../redux/selectors.store';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IInvoice } from '../../../../types/invoices.types';\nimport { OrderTabProps } from './orderTabs.types';\nimport { AppModuleName } from '../../../../redux/reduxTypes.types';\n\nexport interface OrderInvoicesTabProps extends OrderTabProps {}\n\nconst OrderInvoicesTab: React.FC<OrderInvoicesTabProps> = ({ order }) => {\n  const state = useOrdersSelector();\n  const currentOrder = order ?? state?.currentOrder;\n  const service = useAppServiceProvider().get(AppModuleName.orders);\n\n  // const modalService = useModalService();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const tableConfigs = useMemo((): ITableListProps<IInvoice> => {\n    return {\n      actionsCreator: ctx => {\n        return [\n          {\n            name: 'refresh',\n            icon: 'refresh',\n            onClick: () => {\n              if (currentOrder?._id) {\n                service.getInvoicesByOrderId({ data: { params: { order: getIdRef(currentOrder) } } });\n              }\n            },\n          },\n        ];\n      },\n    };\n  }, [currentOrder, service]);\n\n  useEffect(() => {\n    if (currentOrder?._id) {\n      service.getInvoicesByOrderId({ data: { params: { order: getIdRef(currentOrder) } }, onLoading: setIsLoading });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfigs}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={isLoading}\n      tableData={currentOrder?.invoices}\n      tableTitles={invoicesTableColumns}\n    />\n  );\n};\n\nexport default OrderInvoicesTab;\n","import TableList from '../../../TableList/TableList';\n\nexport interface OrderPaymentsTabProps {}\n\nconst OrderPaymentsTab: React.FC<OrderPaymentsTabProps> = () => {\n  return <TableList hasSearch={false} hasFilter={false} />;\n};\n\nexport default OrderPaymentsTab;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useAppParams } from '../../../hooks';\nimport OrderContentTab from './tabs/OrderContentTab';\nimport OrderInvoicesTab from './tabs/OrderInvoicesTab';\nimport OrderPaymentsTab from './tabs/OrderPaymentsTab';\n\nexport interface PageOrderOverviewTabsProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\nenum OrderTabNameEnum {\n  Content = 'Content',\n  Invoices = 'Invoices',\n  Payments = 'Payments',\n  // Shipments = 'Shipments',\n}\nconst toggleOptions = enumToFilterOptions(OrderTabNameEnum);\nconst PageOrderOverviewTabs = ({ toggleVisibility, isVisible }: PageOrderOverviewTabsProps) => {\n  const orderId = useAppParams()?.orderId;\n\n  const { currentOrder } = useOrdersSelector();\n  // const service = useAppServiceProvider()[ServiceName.orders];\n  const [current, setCurrent] = useState<OrderTabNameEnum>(OrderTabNameEnum.Content);\n\n  const renderTab = useMemo(() => {\n    if (current === OrderTabNameEnum.Content) {\n      return <OrderContentTab />;\n    }\n    if (current === OrderTabNameEnum.Invoices) {\n      return <OrderInvoicesTab />;\n    }\n    if (current === OrderTabNameEnum.Payments) {\n      return <OrderPaymentsTab />;\n    }\n  }, [current]);\n\n  const filterHandler: FilterSelectHandler<OrderTabNameEnum> = (_, value, index) => {\n    setCurrent(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      <Top fillWidth gap={4} isVisible={isVisible} fxDirection={'row'} justifyContent={'space-between'}>\n        <ButtonIcon\n          variant={'textExtraSmall'}\n          icon={'SmallArrowLeft'}\n          style={{ padding: 6 }}\n          onClick={toggleVisibility}\n        >\n          {'Back'}\n        </ButtonIcon>\n\n        <FlexBox padding={'0 8px'}>\n          <Text $weight={600} $size={14}>\n            {currentOrder?.code}\n          </Text>\n\n          <Text $size={10}>{orderId}</Text>\n        </FlexBox>\n      </Top>\n\n      <FlexBox>\n        <TabSelector options={toggleOptions} defaultValue={current} onOptSelect={filterHandler} preventDefault />\n      </FlexBox>\n\n      {renderTab}\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst Top = styled(FlexBox)<{ isVisible?: boolean }>`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default PageOrderOverviewTabs;\n","import React, { createContext, useContext, useMemo } from 'react';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { OrderEntity } from '../../../types/orders/orders.types';\n\nexport interface PageCurrentOrderProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOrderProviderValue {\n  currentOrder?: OrderEntity;\n  mainPagePath?: string;\n}\n\nexport const PageOrderCTX = createContext({});\n\nexport const usePageCurrentOrder = () => useContext(PageOrderCTX) as PageOrderProviderValue;\n\nconst PageOrderProvider: React.FC<PageCurrentOrderProviderProps> = ({ children }) => {\n  const { currentOrder } = useOrdersSelector();\n  // const service = useAppServiceProvider()[ServiceName.orders];\n\n  const CTX = useMemo(\n    (): PageOrderProviderValue => ({\n      currentOrder,\n    }),\n    [currentOrder]\n  );\n\n  return <PageOrderCTX.Provider value={CTX}>{children}</PageOrderCTX.Provider>;\n};\nexport default PageOrderProvider;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport { AppGridPage } from '../pages';\nimport { useAppParams } from '../../../hooks';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\nimport PageOrderOverviewLeftSide from './PageOrderOverviewLeftSide';\nimport PageOrderOverviewTabs from './PageOrderOverviewTabs';\nimport { BaseAppPageProps } from '../index';\nimport PageOrderProvider from './PageOrderProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../redux/reduxTypes.types';\n\ninterface Props extends BaseAppPageProps {}\n\nconst PageOrderOverview: React.FC<Props> = ({ path }) => {\n  const service = useAppServiceProvider()[AppModuleName.orders];\n\n  const [isTabsSideVisible, setIsTabsSideVisible] = useState<boolean>(false);\n  const { orderId } = useAppParams();\n\n  const toggleRightSide = useCallback(() => {\n    setIsTabsSideVisible(p => !p);\n  }, []);\n\n  useEffect(() => {\n    if (orderId) {\n      service.getById({\n        data: { _id: orderId, options: { refreshCurrent: true } },\n      });\n    }\n  }, [orderId, service]);\n\n  return (\n    <AppGridPage path={path}>\n      <PageOrderProvider>\n        <OverlayStackProvider>\n          <Page>\n            <PageOrderOverviewLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n            <PageOrderOverviewTabs toggleVisibility={toggleRightSide} isVisible={isTabsSideVisible} />\n          </Page>\n        </OverlayStackProvider>\n      </PageOrderProvider>\n    </AppGridPage>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\nexport default PageOrderOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 8px;\n\n  font-weight: 500;\n  font-size: 13px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'max-content'}\n      alignItems={'center'}\n      minHeight={'36px'}\n      padding={'4px 0'}\n    >\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { IOrderTempSlot, OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\nconst extraKeys: ('cashback' | 'bonus' | 'discount')[] = ['cashback', 'bonus', 'discount'];\nfunction getTempOrderSlotColumns(): CellTittleProps<OrderSlotEntity>[] {\n  return extraKeys.map(key => {\n    return {\n      top: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.amount) },\n      bottom: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.percentage) },\n      action: 'valueByPath',\n      width: '90px',\n    };\n  });\n}\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    top: { name: t('Offer label'), getData: rd => rd.offer?.label },\n    bottom: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'valueByPath',\n    width: '210px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  ...getTempOrderSlotColumns(),\n  {\n    top: { name: t('Offer sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Offer bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  createdDateColumn,\n];\n\nexport const tempOrderSlotTableColumns: CellTittleProps<IOrderTempSlot>[] =\n  orderSlotsTableColumns as CellTittleProps<IOrderTempSlot>[];\n"],"names":["OverlayLocalCTX","createContext","OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","Provider","value","onClose","compId","_objectSpread","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColorDark","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","open","create","Component","OrderOverviewCustomerInfo","cell","data","renderCells","_customer$name","_customer$name2","_customer$name3","_customer$name4","_customer$name5","customer","label","t","first","visible","businessType","second","middle","email","phone","sexType","engagementSource","age","_cell$value","_jsxs","fxDirection","padding","gap","justifyContent","Text","$size","$weight","CellStyledComp","title","OverviewCellHeader","OrderOverviewInfoTabsEnum","orderOverviewInfoTabs","_enumToTabs","Box","_p","overlayS","currentOrder","useOrdersSelector","General","currentTab","setCurrentTab","cellsMap","orderOverviewCellsMap","orderOverviewCells","forEach","item","_orderOverviewCellsMa","tab","push","getOrderOverviewCellsMap","_cellsMap$currentTab","CellComponent","_objectWithoutProperties","_excluded","overlayHandler","OverviewTextCell","flex","TabSelector","optionProps","fitContentH","options","onOptSelect","option","getValue","_data$manager","_data$manager$user","manager","user","_data$reference","reference","internal","_data$group","_data$group$reference","group","_data$group2","strategy","_data$total3","_data$total4","_data$total","_data$total2","numberWithSpaces","total","amount","items","status","Customer","Delivery","_data$deliveries2","_data$deliveries","deliveries","Invoicing","Additional","OrderOverviewTabs","tabs","enumToFilterOptions","Container","sideBarBackgroundColor","Content","sideBarBorderColor","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","_useAppParams","orderId","useAppParams","navigate","useNavigate","location","useLocation","renderTab","info","OrderOverviewInfoTab","ModalHeader","onBackPress","pathname","_location$pathname","newPath","replace","_id","_o","_v","i","size","variant","iconSize","icon","disabled","onEdit","onDelete","margin","isLoading","isRefresh","onRefresh","onOpenRightSide","LeftSide","modalBorderColor","toggleRightSideVisibility","setLoading","ordersServ","useAppServiceProvider","orders","OrderOverviewXL","order","getById","refreshCurrent","onLoading","service","AppModuleName","setIsLoading","_useState3","_useState4","tableData","_currentOrder$slots","slots","_el$product","_offerTypeFilterOptio","product","type","offerTypeFilterOptions","tableConfigs","actionsCreator","ctx","getSlots","getIdRef","useEffect","currentIndex","TableList","hasSearch","hasFilter","tableTitles","orderSlotsTableColumns","state","get","getInvoicesByOrderId","invoices","invoicesTableColumns","OrderTabNameEnum","toggleOptions","RightSide","backgroundColorLight","isVisible","Top","toggleVisibility","current","setCurrent","OrderContentTab","Invoices","OrderInvoicesTab","Payments","OrderPaymentsTab","code","defaultValue","preventDefault","PageOrderCTX","CTX","Page","takeFullGridArea","path","isTabsSideVisible","setIsTabsSideVisible","toggleRightSide","AppGridPage","PageOrderProvider","OverlayStackProvider","PageOrderOverviewLeftSide","PageOrderOverviewTabs","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","undefined","ImagesSetBox","DefaultTag","_templateObject6","CategoryItem","_templateObject7","fontColorSidebar","field","backgroundColor","_ref$title","_ref$openOverlayButto","openOverlayButtonTitle","onOpenOverlayPress","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","height","minHeight","marginRight","createdDateColumn","top","align","bottom","width","action","ordersTableColumns","getStatusesByEnum","OrderStatusEnum","getData","rd","_rd","_rd$summary$netto","_rd$summary","toPrice","summary","netto","_rd$slots","_rd$summary2","slotsCount","_rd$reference","_rd$reference2","external","_rd$group","_rd$group$reference","_rd$group2","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","ordersSearchParams","dataPath","search","sort","extraKeys","_rd$offer","offer","_rd$variation","variation","quantity","getBasePriceColumns","key","_rd$key","_rd$key2","percentage","_rd$offer2","sku","_rd$variation2","_rd$offer3","barCode","_rd$variation3","tempOrderSlotTableColumns"],"sourceRoot":""}