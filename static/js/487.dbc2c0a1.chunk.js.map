{"version":3,"file":"static/js/487.dbc2c0a1.chunk.js","mappings":"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","sources":["components/Forms/FormCreatePriceList.tsx"],"sourcesContent":["import {\n  IPriceList,\n  IPriceListReqData,\n  PriceListDto,\n  PriceListType,\n} from '../../redux/priceManagement/priceManagement.types';\nimport ModalForm, { ModalFormProps } from '../ModalForm';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { useAppForm } from '../../hooks';\nimport { omit } from 'lodash';\nimport FlexBox from '../atoms/FlexBox';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport translate from '../../lang';\nimport ExtraFooterWithButton from '../atoms/ExtraFooterWithButton';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from './components/FormAfterSubmitOptions';\nimport TextareaPrimary from '../atoms/Inputs/TextareaPrimary';\n\nexport interface FormCreatePriceListProps extends Omit<ModalFormProps<PriceListType>, 'onSubmit' | 'afterSubmit'> {\n  defaultData?: Partial<IPriceList>;\n  edit?: boolean;\n  onSubmit?: AppSubmitHandler<\n    IPriceListReqData,\n    {\n      onSuccess: (data: IPriceList) => void;\n      onError: () => void;\n    }\n  >;\n}\n\nconst FormCreatePriceList: React.FC<FormCreatePriceListProps> = ({\n  filterOptions,\n  onSubmit,\n  defaultData,\n  edit,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const [isSuccess] = useState(false);\n  // const modalService = useModalProvider();\n  // const [currentList, setCurrentList] = useState<IPriceList | undefined>();\n  // const currentList = usePriceListById();\n  const {\n    formState: { errors, isValid },\n    register,\n    setValue,\n    handleSubmit,\n  } = useAppForm<PriceListDto>({\n    defaultValues: omit(defaultData, ['createdAt', 'updatedAt', '_id']),\n  });\n\n  const onValidSubmit = (data: PriceListDto) =>\n    onSubmit &&\n    onSubmit(\n      {\n        data,\n        _id: defaultData?._id,\n      },\n      {\n        closeAfterSave: submitOptions.state.close,\n        onSuccess: _data => {},\n        onError: () => {},\n      }\n    );\n\n  const onAddPricesClick = () => {\n    // const newPrice = { _id: nanoid(8).toString() };\n    // toast.info(newPrice._id);\n    // setValue('prices', Array.isArray(formValues.prices) ? [...formValues.prices, newPrice] : [newPrice]);\n    // const modal = modalService.handleOpenModal({\n    //   ModalChildren: FormCreatePrice,\n    //   modalChildrenProps: {\n    //     title: 'Add prices',\n    //     type: formValues.type,\n    //   },\n    // });\n  };\n  return (\n    <ModalForm\n      isValid={isValid}\n      onSubmit={handleSubmit(onValidSubmit)}\n      title={'Create price list'}\n      {...props}\n      fitContentV\n      filterOptions={filterOptions}\n      defaultFilterValue={defaultData?.type}\n      onOptSelect={(option, value) => {\n        setValue('type', value);\n      }}\n      extraFooter={\n        <FlexBox fxDirection={'column'} fillWidth>\n          {isSuccess && <ExtraFooterWithButton buttonText={'Add prices'} onClick={onAddPricesClick} />}\n          <FormAfterSubmitOptions {...submitOptions} />\n        </FlexBox>\n      }\n    >\n      <FlexBox fxDirection={'column'} gap={4} padding={'8px 16px 16px'}>\n        <InputLabel label={translate('label')} direction={'vertical'} error={errors.label} required>\n          <InputText placeholder={translate('label')} {...register('label')} required autoFocus />\n        </InputLabel>\n\n        <FlexBox fxDirection={'row'} gap={16}>\n          <InputLabel label={translate('timeFrom')} direction={'vertical'} error={errors.timeFrom} required>\n            <InputText placeholder={translate('timeFrom')} type={'datetime-local'} {...register('timeFrom')} />\n          </InputLabel>\n\n          <InputLabel label={translate('timeTo')} direction={'vertical'} error={errors.timeTo} required>\n            <InputText placeholder={translate('timeTo')} type={'datetime-local'} {...register('timeTo')} />\n          </InputLabel>\n        </FlexBox>\n\n        <InputLabel label={translate('description')} direction={'vertical'} error={errors.description}>\n          <TextareaPrimary placeholder={translate('description')} {...register('description')} />\n        </InputLabel>\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\nexport default FormCreatePriceList;\n//\n// const FormCreatePrice: React.FC<FormCreatePriceProps> = ({ defaultState, type, onSubmit, ...props }) => {\n//   const {\n//     formState: { errors, isValid },\n//     formValues,\n//     register,\n//     registerSelect,\n//     clearAfterSave,\n//     closeAfterSave,\n//     toggleAfterSubmitOption,\n//     setValue,\n//     handleSubmit,\n//   } = useAppForm<PriceListItemDto>();\n//   const onValidSubmit = (data: PriceListItemDto) =>\n//     onSubmit &&\n//     onSubmit(\n//       {\n//         _id: defaultState?._id,\n//         data,\n//       },\n//       {\n//         clearAfterSave,\n//         closeAfterSave,\n//       }\n//     );\n//\n//   return (\n//     <ModalForm fitContentV isValid {...props} onSubmit={handleSubmit(onValidSubmit)}>\n//       <FlexBox gap={4} padding={'0 16px 16px'}>\n//         <InputLabel label={translate('label')} direction={'vertical'} error={errors.label} required>\n//           <InputText placeholder={translate('label')} {...register('label')} required autoFocus />\n//         </InputLabel>\n//         {type === 'sales' && (\n//           <InputLabel label={translate('price')} direction={'vertical'} error={errors.price} required>\n//             <InputText placeholder={translate('price')} {...register('price')} required autoFocus />\n//           </InputLabel>\n//         )}\n//         {type === 'purchases' && (\n//           <InputLabel label={translate('cost')} direction={'vertical'} error={errors.cost} required>\n//             <InputText placeholder={translate('cost')} {...register('cost')} required autoFocus />\n//           </InputLabel>\n//         )}\n//       </FlexBox>\n//     </ModalForm>\n//   );\n// };\n// export interface FormCreatePriceProps extends Omit<ModalFormProps<PriceListType>, 'onSubmit' | 'afterSubmit'> {\n//   defaultState?: Partial<IPriceListItem>;\n//   onSubmit?: AppSubmitHandler<IPriceListItemReqData>;\n//   type?: PriceListType;\n// }\n"],"names":["_ref","filterOptions","onSubmit","defaultData","props","edit","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useState","useState","isSuccess","_slicedToArray","_useAppForm","useAppForm","defaultValues","omit","_useAppForm$formState","formState","errors","isValid","register","setValue","handleSubmit","_jsx","ModalForm","_objectSpread","data","_id","closeAfterSave","state","close","onSuccess","_data","onError","title","fitContentV","defaultFilterValue","type","onOptSelect","option","value","extraFooter","_jsxs","FlexBox","fxDirection","fillWidth","children","ExtraFooterWithButton","buttonText","onClick","FormAfterSubmitOptions","gap","padding","InputLabel","label","translate","direction","error","required","InputText","placeholder","autoFocus","timeFrom","timeTo","description","TextareaPrimary"],"sourceRoot":""}