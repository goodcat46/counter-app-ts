{"version":3,"file":"static/js/103.25a63600.chunk.js","mappings":"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","sources":["redux/products/properties/properties.types.ts","components/Forms/offers/FormCreateProperty.tsx"],"sourcesContent":["import { IBase, OnlyUUID } from '../../global.types';\nimport { AppQueryParams } from '../../../api';\nimport { OfferTypeEnum } from '../products.types';\nimport { CmsBaseConfigsDto, ICmsBaseConfigs } from '../../cms/cms.types';\n\nexport interface IPropertyBase extends IBase {\n  label?: string;\n  type?: OfferTypeEnum;\n  isSelectable?: boolean;\n\n  parent?: IPropertyBase;\n  childrenList?: IPropertyBase[];\n\n  cmsConfigs?: ICmsPropertyConfigs;\n}\n\nexport interface IVariationTemplate extends Omit<IPropertyBase, 'parent'> {\n  childrenList?: IProperty[];\n}\nexport interface IProperty extends IPropertyBase {\n  parent?: IVariationTemplate;\n  childrenList?: IPropertyValue[];\n}\n\nexport interface IPropertyValue extends Omit<IPropertyBase, 'childrenList'> {\n  parent?: IProperty;\n}\n\nexport enum PropertyTypeEnum {\n  size = 'size',\n  color = 'color',\n  weight = 'weight',\n  condition = 'condition',\n  material = 'material',\n  sex = 'sex',\n  tags = 'tags',\n  composition = 'composition',\n  collection = 'collection',\n  style = 'style',\n  specialFutures = 'specialFutures',\n  trends = 'trends',\n\n  // countryOfOrigin = 'countryOfOrigin',\n  // brand = 'brand',\n}\nexport interface ICmsPropertyConfigs extends ICmsBaseConfigs {\n  colors?: string[];\n  type?: PropertyTypeEnum;\n  description?: string;\n}\n\nexport interface CmsPropertyConfigsDto extends CmsBaseConfigsDto {\n  colors?: string[];\n  type?: PropertyTypeEnum;\n  description?: string;\n}\n\nexport interface IPropertyDto {\n  parent?: OnlyUUID;\n\n  label?: string;\n  type?: OfferTypeEnum;\n  isSelectable?: boolean;\n\n  cmsConfigs?: CmsPropertyConfigsDto;\n}\n\nexport interface IPropertyReqData {\n  _id?: string;\n  data?: IPropertyDto;\n  params?: AppQueryParams;\n}\n","import ModalForm, { ModalFormProps } from '../../ModalForm';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { OfferTypeEnum } from '../../../redux/products/products.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport { t } from '../../../lang';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { useAppForm } from '../../../hooks';\nimport {\n  IProperty,\n  IPropertyBase,\n  IPropertyDto,\n  PropertyTypeEnum,\n} from '../../../redux/products/properties/properties.types';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../components/FormAfterSubmitOptions';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport styled from 'styled-components';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport ButtonSwitch from '../../atoms/ButtonSwitch';\nimport { useEffect } from 'react';\n\nconst propCmsTypeFilterOptions = enumToFilterOptions(PropertyTypeEnum);\nexport interface FormCreatePropertyProps extends Omit<ModalFormProps<OfferTypeEnum, any, IPropertyBase>, 'onSubmit'> {\n  onSubmit?: AppSubmitHandler<IPropertyDto, { isGroup?: boolean; isProperty?: boolean; isValue?: boolean }>;\n  type?: OfferTypeEnum;\n  create?: boolean;\n  parent?: IProperty;\n  edit?: boolean;\n\n  isGroup?: boolean;\n  isProperty?: boolean;\n  isValue?: boolean;\n}\n\nexport interface IPropertyFormData extends IPropertyDto {}\n\nconst FormCreateProperty: React.FC<FormCreatePropertyProps> = ({\n  onSubmit,\n  isGroup,\n  isProperty,\n  isValue,\n  defaultState,\n  type,\n  parent,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const {\n    formState: { errors },\n    register,\n    handleSubmit,\n    setValue,\n    registerSelect,\n  } = useAppForm<IPropertyFormData>({\n    defaultValues: { ...defaultState, type },\n  });\n\n  console.log(errors);\n\n  const onValid = (data: IPropertyFormData) => {\n    onSubmit && onSubmit(data, { ...submitOptions.state, isGroup, isProperty, isValue });\n  };\n\n  useEffect(() => {\n    console.log('parent', defaultState?.parent);\n  }, [defaultState?.parent]);\n\n  return (\n    <ModalForm\n      onSubmit={handleSubmit(onValid)}\n      fillHeight\n      {...props}\n      onOptSelect={(_o, value, _i) => {\n        setValue('type', value);\n      }}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <FlexBox padding={'4px 8px 8px'} flex={1} fillWidth>\n        <InputLabel label={t('type')} disabled>\n          <InputText placeholder={t('type')} {...register('type')} disabled />\n        </InputLabel>\n\n        {(isProperty || isValue) && (\n          <InputLabel label={t(isProperty ? 'group' : 'property')} disabled>\n            <InputText\n              placeholder={t(isProperty ? 'group' : 'property')}\n              defaultValue={defaultState?.parent?.label || defaultState?.parent?.label}\n              disabled\n            />\n          </InputLabel>\n        )}\n\n        <InputLabel label={t('label')} required>\n          <InputText placeholder={t('insertLabel')} {...register('label')} autoFocus required />\n        </InputLabel>\n\n        {isProperty && (\n          <InputLabel label={'Доступно для формування варіацій'}>\n            <ButtonSwitch\n              name={'isSelectable'}\n              value={defaultState?.isSelectable}\n              onChange={res => {\n                setValue('isSelectable', res);\n              }}\n            />\n          </InputLabel>\n        )}\n\n        <CmsConfigs margin={'8px 0 0'} fillWidth>\n          <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n            <Text $size={13} $weight={500}>\n              {t('Cms configs')}\n            </Text>\n          </CmsConfigsHeader>\n\n          <InputLabel label={t('Cms key')}>\n            <InputText placeholder={t('Key')} {...register('cmsConfigs.key')} />\n          </InputLabel>\n\n          {isGroup && (\n            <InputLabel label={t('Description')}>\n              <InputText placeholder={t('description')} {...register('cmsConfigs.description')} />\n            </InputLabel>\n          )}\n\n          {isValue && defaultState?.parent?.cmsConfigs?.type === 'color' && (\n            <InputLabel label={t('Colors')}>\n              <InputText placeholder={t('description')} type={'color'} {...register('cmsConfigs.description')} />\n            </InputLabel>\n          )}\n\n          {isProperty && (\n            <InputLabel label={t('Cms type')}>\n              <CustomSelect\n                {...registerSelect('cmsConfigs.type', {\n                  options: propCmsTypeFilterOptions,\n                  placeholder: t('Select cms type'),\n                })}\n              />\n            </InputLabel>\n          )}\n        </CmsConfigs>\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormCreateProperty;\n"],"names":["PropertyTypeEnum","propCmsTypeFilterOptions","enumToFilterOptions","CmsConfigs","styled","FlexBox","_templateObject","_taggedTemplateLiteral","CmsConfigsHeader","_templateObject2","p","theme","modalBorderColor","_ref","_defaultState$parent","_defaultState$parent2","_defaultState$parent3","_defaultState$parent4","onSubmit","isGroup","isProperty","isValue","defaultState","type","props","parent","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppForm","useAppForm","defaultValues","_objectSpread","errors","formState","register","handleSubmit","setValue","registerSelect","console","log","useEffect","_jsx","ModalForm","data","state","fillHeight","onOptSelect","_o","value","_i","extraFooter","FormAfterSubmitOptions","children","_jsxs","padding","flex","fillWidth","InputLabel","label","t","disabled","InputText","placeholder","defaultValue","required","autoFocus","ButtonSwitch","name","isSelectable","onChange","res","margin","justifyContent","fxDirection","Text","$size","$weight","cmsConfigs","CustomSelect","options"],"sourceRoot":""}