{"version":3,"file":"static/js/753.da56b0e9.chunk.js","mappings":"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","sources":["components/Forms/FormProduct/FormCreateVariationOverlay.tsx","components/Forms/FormProduct/components/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { useProductsSelector, usePropertiesSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../atoms/Text';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { toVariationFormData, toVariationReqData } from '../../../utils/data-transform';\nimport { IVariation, IVariationFormData } from '../../../redux/products/variations/variations.types';\nimport { OnlyUUID } from '../../../redux/global.types';\nimport { ToastService } from '../../../services';\nimport { ModalFormProps } from '../../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../components/FormAfterSubmitOptions';\nimport { OverlayFooter, OverlayHeader } from './components';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { IProperty, IPropertyValue } from '../../../redux/products/properties/properties.types';\nimport { useAppForm } from '../../../hooks';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { t } from '../../../lang';\nimport { checks } from '../../../utils';\nimport { Path } from 'react-hook-form';\n\nconst dimensionsInputs: {\n  label?: string;\n  placeholder?: string;\n  name: Path<IVariationFormData>;\n}[] = [\n  { name: 'dimensions.height', label: t('Height'), placeholder: t('Sm') },\n  { name: 'dimensions.width', label: t('Width'), placeholder: t('Sm') },\n  { name: 'dimensions.length', label: t('Length'), placeholder: t('Sm') },\n  { name: 'dimensions.weight', label: t('Weight'), placeholder: t('Kg') },\n];\nexport interface FormVariationProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, IVariation>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  product?: OnlyUUID;\n\n  create?: boolean;\n  update?: string;\n\n  defaultState?: IVariation;\n}\nconst validation = yup.object().shape({\n  label: yup.string().required().min(5).max(50),\n  sku: yup.string().required().min(8).max(36),\n  barCode: yup.string(),\n  propertiesMap: yup.object().shape<{}>({\n    // Ваша схема для propertiesMap\n  }),\n  product: yup.object().shape({\n    label: yup.string(),\n    _id: yup.string(),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n});\n\nconst FormCreateVariationOverlay: React.FC<FormVariationProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const currentProduct = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n  } = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      defaultState ? { ...defaultState, product: currentProduct } : { product: currentProduct }\n    ),\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n\n  const [propLabelsByParentId, setPropLabelsByParentId] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    if (update) return;\n\n    let newLabel = '';\n    console.log(propLabelsByParentId);\n    const labels = Object.values(propLabelsByParentId);\n\n    if (labels.length === 0) {\n      newLabel = `${currentProduct?.label}. {{VARIATION_LABEL}}`;\n      return;\n    } else {\n      const propLabelsString = labels.join('. ');\n      newLabel = currentProduct?.label ? `${currentProduct?.label}. ${propLabelsString}` : propLabelsString;\n    }\n    setValue('label', newLabel);\n  }, [currentProduct?.label, propLabelsByParentId, setValue, update]);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentProduct?.template?._id);\n  }, [currentProduct, templates]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: toVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: setLoading,\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: toVariationReqData(data),\n            onSuccess: data => {\n              submitOptions.state.close && onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: setLoading,\n          })\n          .then();\n      }\n\n      onSubmit && onSubmit(data);\n    },\n    [onClose, onSubmit, service, submitOptions.state.close, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string, label?: string) => {\n      setValue(`propertiesMap.${parentId}`, id);\n      label && setPropLabelsByParentId(p => ({ ...p, [parentId]: label }));\n    },\n    [setValue]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setPropLabelsByParentId({});\n  }, [setValue]);\n\n  const preparedTemplate = useMemo(\n    () => template?.childrenList?.filter(el => el?.isSelectable),\n    [template?.childrenList]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return preparedTemplate?.map(prop => {\n      return (\n        <RenderVariationProperty\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [preparedTemplate, selectedIds, handleSelect]);\n\n  return (\n    <FormContainer onSubmit={handleSubmit(onValid)} onReset={handleClearMap} {...props}>\n      <OverlayHeader onClose={onClose} title={title || template?.label} canSubmit={canSubmit} showSubmitButton />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <Inputs padding={'0 8px'}>\n          <InputLabel label={t('label')} error={errors.label}>\n            <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n          </InputLabel>\n\n          <FlexBox fxDirection={'row'} gap={8} fillWidth>\n            <InputLabel label={t('sku')} error={errors.sku}>\n              <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n            </InputLabel>\n\n            <InputLabel label={t('barCode')} error={errors.barCode}>\n              <InputText {...register('barCode')} placeholder={t('barCode')} />\n            </InputLabel>\n          </FlexBox>\n\n          <FlexBox gap={8} fillWidth style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)' }}>\n            {dimensionsInputs.map(input => {\n              return (\n                <InputLabel key={input.name} label={input.label} error={errors[input.name as never]}>\n                  <InputText\n                    placeholder={input.placeholder}\n                    min={1}\n                    type={'number'}\n                    {...register(input.name, {\n                      valueAsNumber: true,\n                      min: 1,\n                    })}\n                  />\n                </InputLabel>\n              );\n            })}\n          </FlexBox>\n        </Inputs>\n\n        <TemplateBox padding={'0 0 8px'} margin={'8px 0 0'}>\n          {renderTemplate}\n        </TemplateBox>\n      </Content>\n\n      <OverlayFooter\n        loading={loading}\n        resetButtonShown\n        submitButtonText={loading ? 'Loading...' : update ? 'Підтвердити' : 'Додати'}\n        canSubmit={canSubmit}\n        extraFooter={\n          <ExtraFooterBox>\n            <FormAfterSubmitOptions {...submitOptions} />\n          </ExtraFooterBox>\n        }\n      />\n    </FormContainer>\n  );\n};\n\nexport const RenderVariationProperty = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: {\n  item: IProperty;\n  selectedValue?: string;\n  selectedIds?: string[];\n  onSelect?: (propId: string, valueId: string, label?: string) => void;\n}) => {\n  const renderChildren = useMemo(() => {\n    return item.childrenList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, item.childrenList, onSelect, selectedIds]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox\n        fillWidth\n        padding={'8px 0'}\n        gap={6}\n        numColumns={item.label && ['розмір'].includes(item.label.toLowerCase()) ? 4 : 3}\n      >\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ numColumns?: number }>`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(${({ numColumns = 2 }) => numColumns}, 1fr);\n`;\nconst Inputs = styled(FlexBox)``;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: IPropertyValue;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    if (!checks.isUnd(isSelected)) {\n      setIsActive(isSelected);\n    }\n  }, [isSelected]);\n\n  return (\n    <ValueTag\n      variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nexport default FormCreateVariationOverlay;\n","import FlexBox from '../../../atoms/FlexBox';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport * as React from 'react';\n\nexport const OverlayHeader = ({\n  onClose,\n  title,\n  showSubmitButton,\n  canSubmit,\n}: {\n  canSubmit?: boolean;\n  onClose?: () => void;\n  title?: string;\n  showSubmitButton?: boolean;\n}) => {\n  return (\n    <Header padding={'4px 0'}>\n      <FlexBox fillWidth fxDirection={'row'} justifyContent={'space-between'} alignItems={'stretch'} height={'32px'}>\n        <ButtonIcon\n          variant={'textExtraSmall'}\n          icon={'SmallArrowLeft'}\n          iconSize={'22px'}\n          padding={'0 6px'}\n          style={{ minWidth: 'max-content', minHeight: '100%' }}\n          onClick={onClose}\n        >\n          {'Back'}\n        </ButtonIcon>\n\n        <FlexBox justifyContent={'center'} overflow={'hidden'}>\n          <Text\n            $weight={600}\n            $size={14}\n            style={{ textTransform: 'uppercase', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n          >\n            {title}\n          </Text>\n        </FlexBox>\n\n        {showSubmitButton && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            gap={'6px'}\n            type={'submit'}\n            padding={'0 6px'}\n            endIcon={'done'}\n            endIconSize={'22px'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            disabled={!canSubmit}\n          >\n            {'Ok'}\n          </ButtonIcon>\n        )}\n      </FlexBox>\n    </Header>\n  );\n};\nconst Header = styled(FlexBox)`\n  height: 32px;\n`;\n\nexport const OverlayFooter = ({\n  submitButtonText = 'Прийняти',\n  loading,\n  extraFooter,\n  canSubmit,\n  onCreatePress,\n  resetButtonShown,\n}: {\n  canSubmit?: boolean;\n  resetButtonShown?: boolean;\n  extraFooter?: React.ReactNode;\n  loading?: boolean;\n  onCreatePress?: () => void;\n  submitButtonText?: string;\n}) => {\n  return (\n    <Footer fillWidth>\n      {extraFooter}\n\n      <FlexBox padding={'8px 8px'} fxDirection={'row'} gap={8} alignItems={'center'}>\n        {resetButtonShown && (\n          <ButtonIcon variant={'onlyIcon'} icon={'clear'} size={'36px'} iconSize={'80%'} type={'reset'} />\n        )}\n\n        {onCreatePress && (\n          <ButtonIcon variant={'onlyIcon'} icon={'plus'} size={'36px'} iconSize={'80%'} onClick={onCreatePress} />\n        )}\n\n        <ButtonIcon\n          variant={'filledLarge'}\n          flex={1}\n          type={'submit'}\n          style={{ padding: '0 12px' }}\n          textTransform={'uppercase'}\n          fontWeight={600}\n          endIcon={'SmallArrowRight'}\n          endIconSize={'24px'}\n          disabled={loading || !canSubmit}\n        >\n          {submitButtonText}\n        </ButtonIcon>\n      </FlexBox>\n    </Footer>\n  );\n};\n\nconst Footer = styled(FlexBox)``;\n\nexport const OverlayForm = ({\n  children,\n  ...props\n}: { children?: React.ReactNode } & React.HTMLAttributes<HTMLFormElement>) => {\n  return <Form {...props}>{children}</Form>;\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n"],"names":["dimensionsInputs","name","label","t","placeholder","validation","yup","shape","required","min","max","sku","barCode","propertiesMap","product","_id","timeFrom","timeTo","RenderVariationProperty","_ref2","item","_ref2$selectedIds","selectedIds","onSelect","renderChildren","useMemo","_item$childrenList","childrenList","map","value","isSelected","includes","_jsx","RenderPropertyValue","id","concat","_jsxs","PropertyBox","gap","fillWidth","padding","children","Text","style","flex","paddingLeft","$weight","PropertyValuesBox","numColumns","toLowerCase","FormContainer","styled","_templateObject","_taggedTemplateLiteral","p","theme","fontColorSidebar","tableBackgroundColor","Content","FlexBox","_templateObject2","sideBarBorderColor","TemplateBox","_templateObject3","_templateObject4","_templateObject5","_ref3","_ref3$numColumns","Inputs","_templateObject6","ExtraFooterBox","_templateObject7","ValueTag","ButtonIcon","_templateObject8","_ref4","_useState5","useState","_useState6","_slicedToArray","isActive","setIsActive","useEffect","checks","variant","fontWeight","onClick","_ref","onClose","title","defaultState","onSubmit","update","props","create","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","currentProduct","useProductsSelector","service","useAppServiceProvider","ServiceName","templates","usePropertiesSelector","_useState","_useState2","loading","setLoading","_useAppForm","useAppForm","defaultValues","toVariationFormData","_objectSpread","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","_useState3","_useState4","propLabelsByParentId","setPropLabelsByParentId","newLabel","console","log","labels","Object","values","length","propLabelsString","join","template","find","_currentProduct$templ","canSubmit","onValid","useCallback","data","updateVariationById","toVariationReqData","onSuccess","onError","ToastService","onLoading","then","createVariation","state","close","handleSelect","parentId","_defineProperty","handleClearMap","preparedTemplate","_template$childrenLis","filter","el","isSelectable","renderTemplate","prop","onReset","OverlayHeader","showSubmitButton","overflow","InputLabel","error","InputText","fxDirection","display","gridTemplateColumns","input","type","valueAsNumber","margin","OverlayFooter","resetButtonShown","submitButtonText","extraFooter","FormAfterSubmitOptions","Header","justifyContent","alignItems","height","icon","iconSize","minWidth","minHeight","$size","textTransform","textOverflow","whiteSpace","endIcon","endIconSize","disabled","_ref2$submitButtonTex","onCreatePress","Footer","size","OverlayForm","Form","modalBackgroundColor"],"sourceRoot":""}