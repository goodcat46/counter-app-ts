{"version":3,"file":"static/js/494.3cd73c29.chunk.js","mappings":"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","sources":["components/Forms/offers/components/OfferBaseInfoFormArea.tsx","components/Forms/offers/components/DimensionsInputs.tsx","components/Forms/offers/components/OfferDimensionsFormArea.tsx","components/Forms/offers/components/OfferFormCategoriesArea.tsx","components/Forms/offers/components/OfferFormImagesArea.tsx","components/Forms/offers/components/OfferFormPropertiesArea.tsx","components/Forms/offers/components/MeasuremenInputs.tsx","components/Forms/offers/components/OfferMeasurementFormArea.tsx","components/Modals/CreateOfferModal.tsx"],"sourcesContent":["import { AccordionForm } from '../../FormArea/AccordionForm';\nimport { OfferFormAreaProps } from '../types';\nimport {\n  IProductFormData,\n  IProductFullFormData,\n  OfferEntity,\n  OfferTypeEnum,\n} from '../../../../types/offers/offers.types';\nimport { useAppForm } from '../../../../hooks';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport { t } from '../../../../lang';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport FlexBox from '../../../atoms/FlexBox';\nimport * as React from 'react';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport TextareaPrimary from '../../../atoms/Inputs/TextareaPrimary';\nimport { toReqData } from '../../../../utils';\nimport useOffersService from '../../../../hooks/useProductsService.hook';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { OfferStatusFilterOptions } from '../../../../data';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\n\nexport interface OfferBaseInfoFormAreaProps extends OfferFormAreaProps<IProductFullFormData> {\n  type?: MaybeNull<OfferTypeEnum>;\n  onSuccess?: (data: OfferEntity) => void;\n  edit?: boolean;\n}\n\nexport const OfferBaseInfoFormArea = ({ defaultValues, edit, type, onSuccess, _id }: OfferBaseInfoFormAreaProps) => {\n  const { isLoading, onLoading } = useOfferLoadersProvider();\n\n  const service = useOffersService();\n\n  const brandsList = useDirectorySelector(ApiDirType.BRANDS).directory;\n\n  const {\n    formState: { errors },\n    register,\n    registerSelect,\n    formValues,\n    ...appForm\n  } = useAppForm<IProductFullFormData>({\n    defaultValues: { ...defaultValues, type },\n  });\n\n  function onValid(sData: IProductFormData) {\n    const productForSubmit = toReqData(sData, { ignorePaths: ['measurement'] });\n\n    !edit\n      ? service.create({\n          data: { data: productForSubmit },\n          onSuccess: onSuccess,\n          onLoading: onLoading('offer_create'),\n        })\n      : service.updateById({\n          data: { data: productForSubmit, _id },\n          onSuccess: onSuccess,\n          onLoading: onLoading('offer_update'),\n        });\n  }\n\n  return (\n    <AccordionForm\n      label={t('Base info')}\n      isLoading={!edit ? isLoading?.offer_create : isLoading?.offer_update}\n      onSubmit={appForm.handleSubmit(onValid)}\n      onReset={appForm.reset}\n    >\n      <InputLabel label={t('label')} error={errors.label} required>\n        <InputText placeholder={t('label')} {...register('label')} required autoFocus />\n      </InputLabel>\n\n      <FlexBox fxDirection={'row'} gap={6} fillWidth>\n        <InputLabel label={t('sku')} error={errors.sku}>\n          <InputText placeholder={t('sku')} {...register('sku')} />\n        </InputLabel>\n\n        <InputLabel label={'Штрих-код'} error={errors.barCode}>\n          <InputText placeholder={'Штрих-код'} {...register('barCode')} />\n        </InputLabel>\n      </FlexBox>\n\n      <CustomSelect\n        {...registerSelect('brand', {\n          options: brandsList,\n          label: t('brand'),\n          placeholder: t('selectBrand'),\n        })}\n      />\n\n      <CustomSelect\n        {...registerSelect('approved', {\n          options: OfferStatusFilterOptions,\n          label: t('status'),\n          placeholder: t('status'),\n        })}\n      />\n\n      <InputLabel label={t('description')} error={errors.description}>\n        <TextareaPrimary placeholder={t('description')} {...register('description')} />\n      </InputLabel>\n    </AccordionForm>\n  );\n};\n","import { t } from 'lang';\nimport * as React from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport styled from 'styled-components';\nimport { UseFormReturn } from 'react-hook-form/dist/types';\nimport { DimensionsKeyType, IDimensions } from 'types/utils.types';\n\nexport interface DimensionsFormData {\n  dimensions?: IDimensions;\n}\n\nexport const dimensionsInputsProps: {\n  label?: string;\n  placeholder?: string;\n  name: DimensionsKeyType;\n}[] = [\n  { name: 'height', label: t('Height'), placeholder: t('Sm') },\n  { name: 'width', label: t('Width'), placeholder: t('Sm') },\n  { name: 'length', label: t('Length'), placeholder: t('Sm') },\n  { name: 'weight', label: t('Weight'), placeholder: t('Kg') },\n];\n\nconst DimensionsInputs = <TContext = any,>({\n  form,\n  disabled,\n}: {\n  disabled?: boolean;\n  form: UseFormReturn<DimensionsFormData, TContext>;\n}) => {\n  const errors = form?.formState?.errors?.dimensions;\n\n  return (\n    <Box fillWidth>\n      {dimensionsInputsProps.map(input => {\n        return (\n          <InputLabel key={input.name} label={input.label} error={errors && errors[input.name]}>\n            <InputText\n              placeholder={input.placeholder}\n              min={1}\n              type={'number'}\n              {...form.register(`dimensions.${input.name}`, {\n                valueAsNumber: true,\n                min: 1,\n              })}\n              disabled={disabled}\n            />\n          </InputLabel>\n        );\n      })}\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 8px;\n\n  @media screen and (min-width: 480px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport default DimensionsInputs;\n","import DimensionsInputs, { DimensionsFormData } from './DimensionsInputs';\nimport { useAppForm } from '../../../../hooks';\nimport { AccordionForm } from '../../FormArea/AccordionForm';\nimport useOffersService from '../../../../hooks/useProductsService.hook';\nimport { ToastService } from '../../../../services';\nimport { IDimensions } from '../../../../types/utils.types';\nimport { useState } from 'react';\nimport { OfferFormAreaProps } from '../types';\nimport { t } from '../../../../lang';\n\nexport interface OfferDimensionsFormSectionProps extends OfferFormAreaProps<IDimensions> {}\n\nexport const OfferDimensionsFormArea = ({\n  defaultValues,\n  _id,\n  disabled,\n  ...props\n}: OfferDimensionsFormSectionProps) => {\n  const service = useOffersService();\n  const [isLoading, setIsLoading] = useState(false);\n  const form = useAppForm<DimensionsFormData>({\n    defaultValues: { dimensions: defaultValues ?? {} },\n  });\n\n  const onValid = (sData: DimensionsFormData) => {\n    service.updateById({\n      data: { data: sData, _id },\n      onSuccess(d) {\n        ToastService.success(`Product updated`);\n      },\n      onError: e => {\n        console.error('Product update action', e);\n      },\n      onLoading: setIsLoading,\n    });\n  };\n\n  const canSubmit = form.formState.touchedFields?.dimensions\n    ? Object.values(form.formState.touchedFields?.dimensions)?.some(fd => fd)\n    : false;\n\n  return (\n    <AccordionForm\n      onSubmit={form.handleSubmit(onValid)}\n      label={t('Package size')}\n      isLoading={isLoading}\n      {...props}\n      disabled={!canSubmit || disabled}\n    >\n      <DimensionsInputs form={form} disabled={disabled} />\n    </AccordionForm>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport { AccordionForm } from '../../FormArea/AccordionForm';\nimport styled from 'styled-components';\nimport FlexBox, { FlexLi, FlexUl } from '../../../atoms/FlexBox';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { OfferFormAreaProps } from '../types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { t } from '../../../../lang';\nimport { IProductFullFormData, OfferEntity } from '../../../../types/offers/offers.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport { IDirItemBase } from '../../../../types/dir.types';\nimport CheckBox from '../../../TableList/TebleCells/CellComponents/CheckBox';\n\nexport interface OfferFormCategoriesAreaProps extends OfferFormAreaProps<IProductFullFormData['categories']> {\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n  onSuccess?: (data: OfferEntity) => void;\n}\n\nexport const OfferFormCategoriesArea = ({\n  onSubmit,\n  onSuccess,\n  disabled,\n  offer,\n  defaultValues,\n}: OfferFormCategoriesAreaProps) => {\n  const loaders = useOfferLoadersProvider();\n  const offerCategories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const [parentIdsMap, setParentIdsMap] = useState<Record<string, { selected: boolean; parentIds: string[] }>>({});\n  const service = useAppServiceProvider()[ServiceName.offers];\n\n  const selectedIds = useMemo(\n    () =>\n      Object.keys(parentIdsMap).filter(idKey => {\n        return parentIdsMap?.[idKey]?.selected;\n      }),\n    [parentIdsMap]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentIds?: string[]) => {\n      if (parentIds?.length) {\n        const newData = {\n          ...parentIdsMap,\n          [id]: { selected: true, parentIds: parentIdsMap?.[id]?.parentIds || parentIds },\n        };\n        parentIds?.forEach(parentId => {\n          if (newData?.[parentId]) {\n            newData[parentId] = {\n              ...newData[parentId],\n              selected: true,\n            };\n          } else {\n            newData[parentId] = {\n              parentIds: [],\n              selected: true,\n            };\n          }\n        });\n        setParentIdsMap(newData);\n      } else {\n        setParentIdsMap(prev => {\n          return { ...prev, [id]: { selected: true, parentIds: parentIds ?? [] } };\n        });\n      }\n    },\n    [parentIdsMap]\n  );\n  const handleRemove = useCallback(\n    (id: string) => {\n      const getChildIds = () => {\n        return selectedIds.filter(key => parentIdsMap?.[key]?.parentIds?.includes(id));\n      };\n      const childIds = getChildIds();\n      if (childIds?.length) {\n        const newData = { ...parentIdsMap, [id]: { selected: false, parentIds: parentIdsMap?.[id]?.parentIds } };\n\n        childIds.forEach(idKey => {\n          newData[idKey] = {\n            ...newData[idKey],\n            selected: false,\n          };\n        });\n\n        setParentIdsMap(newData);\n      } else {\n        setParentIdsMap(p => ({ ...p, [id]: { selected: false, parentIds: p?.[id]?.parentIds } }));\n      }\n    },\n    [parentIdsMap, selectedIds]\n  );\n  const handleReset = () => {\n    setParentIdsMap({});\n  };\n  const handleSubmit = (ev: React.FormEvent) => {\n    ev.preventDefault();\n\n    if (onSubmit) {\n      onSubmit(selectedIds);\n    } else if (offer) {\n      service.updateById({\n        data: { _id: offer?._id, updateCurrent: true, data: { categories: selectedIds } },\n        onLoading: loaders.onLoading('properties'),\n        onSuccess: onSuccess,\n      });\n    }\n  };\n\n  const canSubmit = useMemo(() => {\n    if (disabled) return false;\n    if (offer?.categories?.length) {\n      return (\n        offer?.categories\n          ?.map(p => p._id)\n          .sort((a, b) => a.localeCompare(b))\n          .join(',') !== selectedIds.sort((a, b) => a.localeCompare(b)).join(',')\n      );\n    }\n    return !!selectedIds.length;\n  }, [offer?.categories, disabled, selectedIds]);\n\n  useEffect(() => {\n    if (defaultValues?.length) {\n      setParentIdsMap(prev =>\n        Object.assign(\n          prev,\n          ...defaultValues.map(item => {\n            return {\n              [item]: {\n                parentIds: [],\n                selected: true,\n              },\n            };\n          })\n        )\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const renderCategories = useMemo(() => {\n    return offerCategories.map(parent => {\n      const getIsActive = (id: string, checkChildren: boolean) =>\n        (checkChildren &&\n          selectedIds.some(\n            idKey => parentIdsMap?.[idKey]?.parentIds?.includes(id) && parentIdsMap?.[idKey]?.selected\n          )) ||\n        parentIdsMap?.[id]?.selected;\n\n      return (\n        <CategoryBox key={`property-${parent._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n          <FlexBox fxDirection={'row'} justifyContent={'space-between'} alignItems={'center'} gap={12}>\n            <CheckBox\n              checked={getIsActive(parent._id, !!parent?.childrenList?.length)}\n              onChange={ev => {\n                if (ev.checked) {\n                  handleSelect(parent._id);\n                } else {\n                  handleRemove(parent._id);\n                }\n              }}\n            />\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {parent.label}\n            </Text>\n          </FlexBox>\n\n          <CategoriesList fillWidth padding={'8px 0'}>\n            {parent?.childrenList?.map(item => {\n              return (\n                <RenderItem\n                  key={item._id}\n                  item={item}\n                  parentIds={[parent._id]}\n                  getIsSelected={getIsActive}\n                  onChange={(checked, id, parentIds) => {\n                    if (checked) {\n                      handleSelect(id, parentIds ?? []);\n                    } else {\n                      handleRemove(id);\n                    }\n                  }}\n                />\n              );\n            })}\n          </CategoriesList>\n        </CategoryBox>\n      );\n    });\n  }, [handleRemove, handleSelect, offerCategories, parentIdsMap, selectedIds]);\n\n  return (\n    <AccordionForm\n      label={t('Categories')}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      isLoading={loaders.isLoading?.properties}\n      disabled={!canSubmit}\n    >\n      <ListBox flex={1} overflow={'auto'}>\n        {renderCategories}\n      </ListBox>\n    </AccordionForm>\n  );\n};\nconst ListBox = styled(FlexUl)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\nconst CategoryBox = styled(FlexLi)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst CategoriesList = styled(FlexUl)<{ numColumns?: number }>``;\n\nconst CategoryItem = styled(FlexLi)``;\n\nconst RenderItem = ({\n  item,\n  onChange,\n  getIsSelected,\n  parentIds,\n}: {\n  parentIds?: string[];\n  item: IDirItemBase<ApiDirType.CATEGORIES_PROD>;\n  onChange?: (checked: boolean, id: string, parentIds?: string[]) => void;\n  getIsSelected?: (id: string, checkChildren: boolean) => boolean;\n}) => {\n  const isActive = getIsSelected && getIsSelected(item._id, !!item?.childrenList?.length);\n  return (\n    <CategoryItem key={`cate-value-${item._id}`} padding={'0 8px 0px 12px'} gap={12}>\n      <FlexBox fxDirection={'row'} alignItems={'center'} gap={12}>\n        <CheckBox\n          checked={isActive}\n          onChange={ev => {\n            onChange && onChange(ev.checked, item._id, parentIds);\n          }}\n        />\n\n        <Text $size={14} $weight={500}>\n          {item.label}\n        </Text>\n      </FlexBox>\n\n      <CategoriesList>\n        {!!item.childrenList?.length &&\n          item.childrenList.map(child => {\n            return (\n              <RenderItem\n                key={child._id}\n                item={child}\n                onChange={onChange}\n                getIsSelected={getIsSelected}\n                parentIds={[...(parentIds ?? []), item._id]}\n              />\n            );\n          })}\n      </CategoriesList>\n    </CategoryItem>\n  );\n};\n","import { OfferFormAreaProps } from '../types';\nimport { AppSubmitHandler } from '../../../../hooks/useAppForm.hook';\nimport { OfferEntity, OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useMemo, useState } from 'react';\nimport { AccordionForm } from '../../FormArea/AccordionForm';\nimport FormOfferImagesComponent from './FormOfferImagesComponent';\nimport { getIdRef } from '../../../../utils';\nimport { t } from '../../../../lang';\n\nexport interface OfferFormImagesAreaProps extends OfferFormAreaProps<OfferImageSlotEntity[]> {\n  onSubmit?: AppSubmitHandler<Partial<OfferImageSlotEntity>[]>;\n  onSuccess?: (data: OfferEntity) => void;\n  update?: string;\n}\n\nexport const OfferFormImagesArea = ({\n  offer,\n  onSubmit,\n  onSuccess,\n  disabled,\n  defaultValues,\n}: OfferFormImagesAreaProps) => {\n  const loaders = useOfferLoadersProvider();\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(defaultValues || loaders?.state?.images || []);\n\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const handleSubmit = (ev: React.FormEvent) => {\n    ev.preventDefault();\n\n    if (onSubmit) {\n      onSubmit(state);\n    } else if (offer) {\n      service.updateById({\n        data: { ...getIdRef(offer), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: onSuccess,\n        onLoading: loaders.onLoading('images'),\n      });\n    } else {\n      console.warn('Offer not passed');\n    }\n  };\n  const canSubmit = useMemo(() => {\n    return true;\n  }, []);\n\n  return (\n    <AccordionForm\n      label={t('Images')}\n      onSubmit={handleSubmit}\n      disabled={disabled || !canSubmit}\n      isLoading={loaders.isLoading?.images}\n    >\n      <FormOfferImagesComponent\n        hideLabel\n        initialData={state}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          // borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          // borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n      />\n    </AccordionForm>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport { AccordionForm } from '../../FormArea/AccordionForm';\nimport styled from 'styled-components';\nimport FlexBox from '../../../atoms/FlexBox';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { usePropertiesSelector } from '../../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { AppSubmitHandler } from '../../../../hooks/useAppForm.hook';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport { OfferFormAreaProps } from '../types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { ArrayOfUUID } from '../../../../redux/global.types';\nimport { t } from '../../../../lang';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\n\nexport interface OfferFormPropertiesAreaProps extends OfferFormAreaProps<ArrayOfUUID> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n  onSuccess?: (data: OfferEntity) => void;\n  update?: string;\n}\n\nexport const OfferFormPropertiesArea = ({ onSubmit, onSuccess, disabled, offer }: OfferFormPropertiesAreaProps) => {\n  const loaders = useOfferLoadersProvider();\n  const templates = usePropertiesSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [templateId, setTemplateId] = useState<string>(templates[0]?._id);\n\n  const handleSubmit = (ev: React.FormEvent) => {\n    ev.preventDefault();\n\n    if (onSubmit) {\n      onSubmit(selectedIds);\n    } else if (offer) {\n      service.updateById({\n        data: { _id: offer?._id, updateCurrent: true, data: { properties: selectedIds } },\n        onLoading: loaders.onLoading('properties'),\n        onSuccess: onSuccess,\n      });\n    }\n  };\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === templateId);\n  }, [templateId, templates]);\n\n  const canSubmit = useMemo(() => {\n    if (disabled) return false;\n    if (offer?.properties?.length) {\n      return (\n        offer?.properties\n          ?.map(p => p._id)\n          .sort((a, b) => a.localeCompare(b))\n          .join(',') !== selectedIds.sort((a, b) => a.localeCompare(b)).join(',')\n      );\n    }\n    return !!selectedIds.length;\n  }, [offer?.properties, disabled, selectedIds]);\n\n  const handleSelect = useCallback((id: string, _parentId?: string) => {\n    setSelectedIds(prev => {\n      const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n      return newData;\n    });\n  }, []);\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (offer?.properties) {\n      setSelectedIds(offer?.properties.map(p => p._id));\n    }\n  }, [offer?.properties]);\n\n  return (\n    <AccordionForm\n      label={t('Properties')}\n      onSubmit={handleSubmit}\n      isLoading={loaders.isLoading?.properties}\n      disabled={!canSubmit}\n    >\n      <CustomSelect\n        label={t('Available templates')}\n        options={templates}\n        selectedValue={templateId}\n        onSelect={option => {\n          setTemplateId(option?._id);\n        }}\n      />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n    </AccordionForm>\n  );\n};\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>``;\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n`;\n","import { Path } from 'react-hook-form';\nimport { MeasurementUnit } from 'types/offers/offers.types';\nimport { FilterOption } from '../../../atoms/TabSelector';\nimport { enumToFilterOptions } from 'utils/fabrics';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport FlexBox from '../../../atoms/FlexBox';\nimport * as React from 'react';\nimport { UseAppFormReturn } from 'hooks/useAppForm.hook';\nimport { t } from 'lang';\nimport { HasMeasurement } from 'types/utils.types';\n\nexport interface MeasurementInputsFormData extends HasMeasurement {}\n\nconst productsMeasurementUnitOptions = enumToFilterOptions(MeasurementUnit);\n\nconst measurementInputs: {\n  label?: string;\n  placeholder?: string;\n  name: Path<MeasurementInputsFormData>;\n  type?: HTMLInputElement['type'];\n  options?: FilterOption[];\n}[] = [\n  { name: 'measurement.unit', label: t('unit'), placeholder: t('unit'), options: productsMeasurementUnitOptions },\n  { name: 'measurement.min', label: t('min'), placeholder: t('min'), type: 'number' },\n  { name: 'measurement.max', label: t('max'), placeholder: t('max'), type: 'number' },\n  // { name: 'measurement.step', label: t('step'), placeholder: t('step'), type: 'number' },\n];\n\nconst MeasurementInputs = ({\n  appForm,\n  disabled,\n}: {\n  disabled?: boolean;\n  appForm: UseAppFormReturn<MeasurementInputsFormData>;\n}) => {\n  return (\n    <FlexBox fillWidth style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr', columnGap: 8 }}>\n      {measurementInputs.map(input => {\n        return input.options ? (\n          <CustomSelect\n            key={input.name}\n            {...appForm.registerSelect(input?.name, {\n              options: input?.options,\n              label: input?.label,\n              placeholder: input?.label,\n              dropDownIsAbsolute: true,\n              onlyValue: true,\n            })}\n            disabled={disabled}\n          />\n        ) : (\n          <InputLabel key={input.name} label={input.label} error={appForm?.formState?.errors[input.name as never]}>\n            <InputText\n              placeholder={input.placeholder}\n              min={input?.type === 'number' ? 1 : undefined}\n              type={input?.type}\n              {...appForm.register(input.name, {\n                valueAsNumber: input?.type === 'number',\n                min: input?.type === 'number' ? 1 : undefined,\n              })}\n              disabled={disabled}\n            />\n          </InputLabel>\n        );\n      })}\n    </FlexBox>\n  );\n};\n\nexport default MeasurementInputs;\n","import MeasurementInputs, { MeasurementInputsFormData } from './MeasuremenInputs';\nimport { useAppForm } from '../../../../hooks';\nimport { AccordionForm } from '../../FormArea/AccordionForm';\nimport useOffersService from '../../../../hooks/useProductsService.hook';\nimport { ToastService } from '../../../../services';\nimport { IMeasurement } from '../../../../types/utils.types';\nimport { useState } from 'react';\nimport { OfferFormAreaProps } from '../types';\nimport { t } from '../../../../lang';\n\nexport interface OfferMeasurementFormProps extends OfferFormAreaProps<IMeasurement> {}\n\nexport const OfferMeasurementFormArea = ({ defaultValues, _id, disabled, ...props }: OfferMeasurementFormProps) => {\n  const service = useOffersService();\n  const [isLoading, setIsLoading] = useState(false);\n  const form = useAppForm<MeasurementInputsFormData>({ defaultValues: { measurement: defaultValues } });\n\n  const onValid = (sData: MeasurementInputsFormData) => {\n    service.updateById({\n      data: { data: sData, _id },\n      onSuccess(d) {\n        ToastService.success(`Product updated`);\n      },\n      onError: e => {\n        console.error('Product update action', e);\n      },\n      onLoading: setIsLoading,\n    });\n  };\n  const canSubmit = form.formState.touchedFields?.measurement\n    ? Object.values(form.formState.touchedFields?.measurement)?.some(fd => fd)\n    : false;\n  return (\n    <AccordionForm\n      onSubmit={form.handleSubmit(onValid)}\n      label={t('Measurement info')}\n      isLoading={isLoading}\n      disabled={!canSubmit || disabled}\n      {...props}\n    >\n      <MeasurementInputs appForm={form} disabled={disabled} />\n    </AccordionForm>\n  );\n};\n","import { ModalFormProps } from '../ModalForm';\nimport { OfferDimensionsFormArea } from '../Forms/offers/components/OfferDimensionsFormArea';\nimport ModalBase from '../atoms/Modal';\nimport { t } from '../../lang';\nimport { toOfferFormData } from '../../utils';\nimport { useEffect } from 'react';\nimport { OfferTypeEnum } from '../../types/offers/offers.types';\nimport { OfferMeasurementFormArea } from 'components/Forms/offers/components/OfferMeasurementFormArea';\nimport { OfferBaseInfoFormArea } from '../Forms/offers/components/OfferBaseInfoFormArea';\nimport FlexBox from '../atoms/FlexBox';\nimport TabSelector from '../atoms/TabSelector';\nimport { productsFilterOptions } from '../../data/modalFilterOptions.data';\nimport { OfferFormPropertiesArea } from '../Forms/offers/components/OfferFormPropertiesArea';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { LoadersProvider, useLoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { OfferFormImagesArea } from '../Forms/offers/components/OfferFormImagesArea';\nimport { useAppRouter, useCurrentOffer } from '../../hooks';\nimport { OfferFormCategoriesArea } from '../Forms/offers/components/OfferFormCategoriesArea';\nimport { OfferLoadersData, OfferLoadersKey } from '../Forms/offers/types';\n\nexport interface CreateOfferModalProps extends ModalFormProps {\n  _id: string;\n}\n\nexport const useOfferLoadersProvider = () => useLoadersProvider<OfferLoadersKey, OfferLoadersData>();\n\nconst CreateOfferModal: React.FC<CreateOfferModalProps> = ({ onClose, _id }) => {\n  const loaders = useLoaders<OfferLoadersKey, OfferLoadersData>();\n  const {\n    state: { formData },\n    setData,\n  } = loaders;\n  const router = useAppRouter();\n  const currenOffer = useCurrentOffer({ id: router.query?.offerId });\n\n  useEffect(() => {\n    router.push({ query: {} });\n\n    return () => {\n      router.push({ query: {} });\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ModalBase\n      title={t('Create offer')}\n      onClose={onClose}\n      extraHeader={\n        <TabSelector\n          defaultValue={formData?.type ?? OfferTypeEnum.GOODS}\n          filterOptions={productsFilterOptions}\n          onOptSelect={o => setData('formData', prev => ({ ...prev, type: o.value }))}\n        />\n      }\n    >\n      <LoadersProvider value={loaders}>\n        <FlexBox padding={'0 8px 16px'}>\n          <OfferBaseInfoFormArea\n            defaultValues={formData}\n            onSuccess={data => {\n              setData('formData', toOfferFormData(data));\n\n              router.push({ query: { offerId: data?._id } });\n            }}\n            type={formData?.type}\n          />\n\n          {currenOffer && (\n            <>\n              <OfferFormCategoriesArea offer={currenOffer} defaultValues={formData?.categories} disabled={!formData} />\n\n              <OfferFormPropertiesArea offer={currenOffer} defaultValues={formData?.properties} disabled={!formData} />\n\n              <OfferDimensionsFormArea offer={currenOffer} defaultValues={formData?.dimensions} disabled={!formData} />\n\n              <OfferMeasurementFormArea\n                offer={currenOffer}\n                defaultValues={formData?.measurement}\n                disabled={!formData}\n              />\n\n              <OfferFormImagesArea offer={currenOffer} defaultValues={formData?.images} disabled={!formData} />\n            </>\n          )}\n        </FlexBox>\n      </LoadersProvider>\n    </ModalBase>\n  );\n};\n\nexport default CreateOfferModal;\n"],"names":["OfferBaseInfoFormArea","_ref","defaultValues","edit","type","onSuccess","_id","_useOfferLoadersProvi","useOfferLoadersProvider","isLoading","onLoading","service","useOffersService","brandsList","useDirectorySelector","ApiDirType","directory","_useAppForm","useAppForm","_objectSpread","errors","formState","register","registerSelect","appForm","formValues","_objectWithoutProperties","_excluded","_jsxs","AccordionForm","label","t","offer_update","offer_create","onSubmit","handleSubmit","sData","productForSubmit","toReqData","ignorePaths","updateById","data","create","onReset","reset","children","_jsx","InputLabel","error","required","InputText","placeholder","autoFocus","FlexBox","fxDirection","gap","fillWidth","sku","barCode","CustomSelect","options","OfferStatusFilterOptions","description","TextareaPrimary","dimensionsInputsProps","name","Box","styled","_templateObject","_taggedTemplateLiteral","_form$formState","_form$formState$error","form","disabled","dimensions","map","input","min","concat","valueAsNumber","OfferDimensionsFormArea","_form$formState$touch","_Object$values","_form$formState$touch2","props","_useState","useState","_useState2","_slicedToArray","setIsLoading","canSubmit","touchedFields","Object","values","some","fd","d","ToastService","onError","e","console","DimensionsInputs","OfferFormCategoriesArea","_loaders$isLoading","offer","loaders","offerCategories","parentIdsMap","setParentIdsMap","useAppServiceProvider","ServiceName","selectedIds","useMemo","keys","filter","idKey","_parentIdsMap$idKey","selected","handleSelect","useCallback","id","parentIds","length","_parentIdsMap$id","newData","_defineProperty","forEach","parentId","prev","handleRemove","childIds","key","_parentIdsMap$key","_parentIdsMap$key$par","includes","_parentIdsMap$id2","p","_p$id","_offer$categories","_offer$categories2","categories","sort","a","b","localeCompare","join","useEffect","assign","apply","_toConsumableArray","item","renderCategories","parent","_parent$childrenList","_parent$childrenList2","getIsActive","checkChildren","_parentIdsMap$id3","_parentIdsMap$idKey2","_parentIdsMap$idKey2$","_parentIdsMap$idKey3","CategoryBox","padding","justifyContent","alignItems","CheckBox","checked","childrenList","onChange","ev","Text","style","flex","paddingLeft","$weight","CategoriesList","RenderItem","getIsSelected","preventDefault","updateCurrent","properties","ListBox","overflow","FlexUl","theme","sideBarBorderColor","FlexLi","_templateObject2","_templateObject3","CategoryItem","_templateObject4","_ref3","_item$childrenList","_item$childrenList2","isActive","$size","child","OfferFormImagesArea","_loaders$state","state","images","setState","getIdRef","refreshCurrent","warn","FormOfferImagesComponent","hideLabel","initialData","onChangeState","contentContainerStyle","OfferFormPropertiesArea","_templates$","templates","usePropertiesSelector","setSelectedIds","_useState3","_useState4","templateId","setTemplateId","templateData","find","_offer$properties","_offer$properties2","_parentId","el","renderTemplate","_templateData$childre","isSelectable","prop","_prop$childrenList","PropertyBox","PropertyValuesList","flexWrap","value","ValueTag","variant","fontWeight","onClick","selectedValue","onSelect","option","TemplateBox","ButtonIcon","productsMeasurementUnitOptions","enumToFilterOptions","MeasurementUnit","measurementInputs","display","gridTemplateColumns","columnGap","_appForm$formState","dropDownIsAbsolute","onlyValue","undefined","OfferMeasurementFormArea","measurement","MeasurementInputs","useLoadersProvider","_router$query","_formData$type","onClose","useLoaders","formData","setData","router","useAppRouter","currenOffer","useCurrentOffer","query","offerId","push","ModalBase","title","extraHeader","TabSelector","defaultValue","OfferTypeEnum","filterOptions","productsFilterOptions","onOptSelect","o","LoadersProvider","toOfferFormData","_Fragment"],"sourceRoot":""}