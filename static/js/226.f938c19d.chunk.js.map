{"version":3,"file":"static/js/226.f938c19d.chunk.js","mappings":"wNAMaA,GAAkBC,EAAAA,EAAAA,eAAiC,CAAC,GAGpDC,EAAe,SAACC,GAC3B,IAAMC,GAAaC,EAAAA,EAAAA,MAEbC,GAAyBC,EAAAA,EAAAA,cAC7B,SAACC,GAAU,OACT,SAAAC,GACMA,EAAGC,SAAWD,EAAGE,eACnBP,EAAWQ,OAAOJ,EAEtB,CAAC,GACH,CAACJ,IAEGS,GAAqBC,EAAAA,EAAAA,UAAQ,WAGjC,OAFcV,EAAWW,WAEZC,KAAI,SAAAC,EAAiCC,GAAW,IAAzCC,EAAeF,EAAfE,gBAAiBC,EAAKH,EAALG,MAAOZ,EAAES,EAAFT,GAC1C,OACEa,EAAAA,EAAAA,KAACC,EAAU,CAETC,UAAS,WAAAC,OAAahB,GACtBiB,MAAO,CAAEC,OAAQ,GAAKR,GACtBS,YAAU,EACVC,WAAS,EACTC,WAAY,WACZC,QAASxB,EAAuBE,GAAIuB,UAEpCV,EAAAA,EAAAA,KAACrB,EAAgBgC,SAAQ,CACvBC,MAAO,CACLC,QAAS,WACP9B,EAAWQ,OAAOJ,EACpB,EACA2B,OAAQ3B,EACRU,MAAOA,GACPa,UAEFV,EAAAA,EAAAA,KAACF,GAAeiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEVhB,GAAK,IACTc,QAAS,WACP9B,EAAWQ,OAAOJ,EACpB,EACA2B,OAAQ3B,EACRU,MAAOA,IAAM,WAAAM,OANGhB,OAQO,WAAAgB,OA1BXhB,GA6BtB,GACF,GAAG,CAACF,EAAwBF,IAE5B,OACEiB,EAAAA,EAAAA,KAACgB,EAAQ,CAACT,WAAS,EAACD,YAAU,EAACW,SAAUzB,EAAmB0B,OAAS,EAAGC,SAAU,SAAST,SACxFlB,GAGP,EAEMwB,GAAWI,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kPAStB,SAAAC,GAAC,OAAKA,EAAEP,SAAW,EAAI,MAAM,IAE1B,SAAAO,GAAC,OAAKA,EAAEP,SAAW,EAAI,CAAC,IACrB,SAAAO,GAAC,OAAKA,EAAEP,SAAW,UAAY,QAAQ,IACnC,SAAAO,GAAC,OAAKA,EAAEP,SAAW,MAAQ,MAAM,IAE/B,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,iBAAiB,IAEhC,SAAAF,GAAC,OAAIA,EAAEC,MAAME,QAAQC,kBAAkB,IAGrD3B,GAAamB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8N,wHChDrBO,GAAsBlD,EAAAA,EAAAA,eAAc,CAAC,GAErCI,EAAoB,WAAH,OAAS+C,EAAAA,EAAAA,YAAWD,EAAoB,EAgEtE,KA9DuE,SAAHlC,GAAsB,IAAhBc,EAAQd,EAARc,SACxEsB,GAAwCC,EAAAA,EAAAA,UAAiC,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArEI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,GAAkBpD,EAAAA,EAAAA,cAAY,SAACC,GACnCkD,GAAgB,SAAAE,GAAM,OAAIA,EAAOC,QAAO,SAAAC,GAAE,OAAIA,EAAGtD,KAAOA,CAAE,GAAC,GAC7D,GAAG,IAEGuD,GAAaxD,EAAAA,EAAAA,cAAY,WAC7BmD,EAAgB,GAClB,GAAG,IAEGM,GAAyCzD,EAAAA,EAAAA,cAC7C,SAAA0D,GACE,IAAMzD,EAAE,GAAAgB,OAAMyC,EAAO9C,gBAAgB+C,KAAI,KAAA1C,QAAI2C,EAAAA,EAAAA,IAAO,IAgCpD,MA9BsC,oBAA3BF,EAAO9C,iBAChBuC,GAAgB,SAAAU,GACd,IAAMC,EAAUD,EAAKE,MAAK,SAAAR,GAAE,OAAIA,EAAGtD,GAAG+D,SAASN,EAAO9C,gBAAgB+C,KAAK,IAE3E,GAAIG,EAAS,CACX,IAAMG,EAAeJ,EAAKP,QAAO,SAAAC,GAAE,IAAAW,EAAAC,EAAA,OAAsB,QAAlBD,EAAAX,EAAG3C,uBAAe,IAAAsD,OAAA,EAAlBA,EAAoBP,SAAgC,QAA5BQ,EAAKL,EAAQlD,uBAAe,IAAAuD,OAAA,EAAvBA,EAAyBR,KAAM,IAEnG,MAAM,GAAN1C,QAAAmD,EAAAA,EAAAA,GACKH,GAAY,EAAApC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEV6B,GAAM,IACTzD,GAAAA,KAGN,CAEA,MAAM,GAANgB,QAAAmD,EAAAA,EAAAA,GACKP,GAAI,EAAAhC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEF6B,GAAM,IACTzD,GAAAA,KAGN,IAGiC,CACjC0B,QAAS,kBAAMyB,EAAgBnD,EAAG,EAClC2B,OAAQ3B,EAGZ,GACA,CAACmD,IAKG1B,EAAmC,CACvClB,SAHe,WAAH,OAAS0C,CAAa,EAIlC7C,OAAQ+C,EACRI,WAAAA,EACAa,KAAMZ,EACNa,OAAQ,SAACC,EAAW1D,GAAK,OAAK4C,EAAuB,CAAE7C,gBAAiB2D,EAAW1D,MAAAA,GAAQ,GAG7F,OAAOC,EAAAA,EAAAA,KAAC8B,EAAoBnB,SAAQ,CAACC,MAAOA,EAAMF,SAAEA,GACtD,C,sYCiBA,EArG4C,SAAHd,GAAoD,IAAD8D,EAA7CC,EAAQ/D,EAAR+D,SAAUC,EAAQhE,EAARgE,SAAQC,EAAAjE,EAAEkE,YAAAA,OAAW,IAAAD,GAAOA,EAC7EE,GAASC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QACpCC,GAAUC,EAAAA,EAAAA,MAAeD,QACzBE,GAAeC,EAAAA,EAAAA,IAAgB,CAAEC,IAAKJ,IAC5CpC,GAAsCC,EAAAA,EAAAA,YAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDyC,EAAWvC,EAAA,GAAEwC,EAAcxC,EAAA,GAC5ByC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAIXC,GAAW7F,EAAAA,EAAAA,aAAW,eAAA8F,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAC1B,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAC,MAAA,OAAwB,GAAfJ,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACXjB,EAAa,CAADmB,EAAAC,KAAA,eAAAD,EAAAE,OAAA,iBACjB1B,EAAU2B,aAAa,CACrBC,KAAM,CAAEjD,OAAQ,CAAEwB,QAAqB,OAAZE,QAAY,IAAZA,OAAY,EAAZA,EAAcE,KAAOsB,eAAgBR,EAASS,cAAeR,GACxFS,UAAkB,OAAPrB,QAAO,IAAPA,OAAO,EAAPA,EAASqB,UAAU,YAC7B,wBAAAP,EAAAQ,OAAA,GAAAb,EAAA,KACJ,gBAAAc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,EAPyB,GAQ1B,CAAC9B,EAAcK,EAASV,IAGpBoC,GAAc5G,EAAAA,EAAAA,UAAQ,WAC1B,MAAO,CACL6G,WAAY,SAAAT,GAGK,IAADU,GAFd7B,EAAmB,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAMW,SAEjB7C,IACFA,EAAS,CAAEa,KAAS,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMY,SAAa,OAAJZ,QAAI,IAAJA,GAAa,QAATU,EAAJV,EAAMW,eAAO,IAAAD,OAAT,EAAJA,EAAe/B,MAAO,IAEzD,EACAkC,eAAiB5C,EAEb,SAAA6C,GAAQ,IAADC,EACCC,GAA2B,QAAfD,EAAAD,EAAIlC,mBAAW,IAAAmC,OAAA,EAAfA,EAAiBpC,OAAkB,OAAXC,QAAW,IAAXA,OAAW,EAAXA,EAAaD,KAEvD,MAAO,CACL,CAAEsC,KAAM,UAAWC,KAAM,WAAYtG,QAAS,kBAAMsE,EAAS,CAAEO,SAAS,GAAO,GAC/E,CAAE0B,WAAW,GACb,CAAEF,KAAM,SAAUC,KAAM,WAAYE,UAAU,GAC9C,CAAEH,KAAM,OAAQC,KAAM,WAAYE,UAAU,GAC5C,CACEH,KAAM,OACNC,KAAM,WACNE,UAAWJ,EACXpG,QAAS,WACPoE,GACEqC,EAAAA,EAAAA,IAAc,CACZrB,KAAM,CAAEjD,OAAQ,CAAE4B,IAAKqC,IACvBb,UAAWrB,EAAQqB,UAAU,aAASmB,EAAW,CAAEC,QAAS,6BAC5DC,UAAW,WACTtD,EAAOR,KAAK,CACV+D,cAAeC,EAAAA,GACfC,mBAAoB,CAClBC,MAAOnD,EACPoD,SAAUb,IAGhB,IAGN,GAEF,CAAEG,WAAW,GACb,CACEF,KAAM,OACNC,KAAM,iBACNtG,QAAS,WACPsD,EAAOR,KAAK,CACV+D,cAAeC,EAAAA,GACfC,mBAAoB,CAClBC,MAAOnD,IAGb,GAGN,OA7CA6C,EA+CR,GAAG,CAACrD,EAAaH,EAAqB,OAAXc,QAAW,IAAXA,OAAW,EAAXA,EAAaD,IAAKO,EAAUF,EAAUF,EAASZ,EAAQO,IASlF,OAPAqD,EAAAA,EAAAA,YAAU,WAER5C,EAAS,CAAEO,SAAS,GAGtB,GAAG,KAGDtF,EAAAA,EAAAA,KAAC4H,EAAAA,IAAS7G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJsF,GAAW,IACfwB,WAAW,EACXC,WAAW,EACXC,UAAkB,OAAPpD,QAAO,IAAPA,GAAkB,QAAXjB,EAAPiB,EAASoD,iBAAS,IAAArE,OAAX,EAAPA,EAAoBsE,OAC/BvD,YAAab,EACbqE,UAAuB,OAAZ3D,QAAY,IAAZA,OAAY,EAAZA,EAAc0D,OACzBE,YAAaC,EAAAA,KAGnB,E,sCCnCA,EAlEuB,SAAHvI,GAAkE,IAA5D+D,EAAQ/D,EAAR+D,SAAUC,EAAQhE,EAARgE,SAAUE,EAAWlE,EAAXkE,YACtCsE,GAAiBC,EAAAA,EAAAA,MAAoB/D,aACrCP,GAASC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QAC1CnC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCsG,EAAOpG,EAAA,GAAEqG,EAAUrG,EAAA,GAEpB6C,GAAW7F,EAAAA,EAAAA,cACf,SAAAmG,GAAmE,IAAhEC,EAAOD,EAAPC,QAAeD,EAANE,OACV,GAAK6C,EAAL,CACA,IAAMI,GAAUC,EAAAA,EAAAA,IAASL,GACzBnE,EAAUyE,kBAAkB,CAC1B7C,KAAM,CAAEC,eAAgBR,EAAS1C,OAAQ,CAAE6E,MAAOe,IAClDxC,UAAWuC,GAJc,CAM7B,GACA,CAACH,EAAgBnE,IAGb0E,GAAelJ,EAAAA,EAAAA,UAAQ,WAC3B,MAAO,CACLwI,UAAyB,OAAdG,QAAc,IAAdA,OAAc,EAAdA,EAAgBQ,YAC3BV,YAAaW,EAAAA,GACbvC,WAAY,SAAAT,GACV,GAAIlC,EAAU,CACZ,GAAQ,OAAJkC,QAAI,IAAJA,GAAAA,EAAMW,QAER,YADA7C,GAAS8E,EAAAA,EAAAA,IAAa,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAMW,UAEX,OAAJX,QAAI,IAAJA,GAAAA,EAAMY,OACf9C,EAAS,CAAEa,IAAS,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OAE1B,CACF,EACAC,eAAiB5C,EAEb,SAAA6C,GAGE,MAAO,CACL,CAAEG,KAAM,UAAWC,KAAM,WAAYtG,QAAS,kBAAMsE,EAAS,CAAEO,SAAS,GAAO,GAE/E,CAAE0B,WAAW,GACb,CACEF,KAAM,OACNC,KAAM,iBACNtG,QAAS,WACPsD,EAAOR,KAAK,CACV+D,cAAewB,EAAAA,EAAAA,wBACftB,mBAAoB,CAAC,GAEzB,GAGN,OAnBAL,EAqBR,GAAG,CAAe,OAAdiB,QAAc,IAAdA,OAAc,EAAdA,EAAgBQ,YAAa7D,EAAUhB,EAAQJ,EAAUG,IAS7D,OAPA6D,EAAAA,EAAAA,YAAU,WAGR5C,EAAS,CAAEO,SAAS,GAEtB,GAAG,KAEItF,EAAAA,EAAAA,KAAC4H,EAAAA,IAAS7G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK4H,GAAY,IAAEd,WAAW,EAAOC,WAAW,EAAOC,UAAWO,EAAS7D,YAAab,IAC3G,EC5EamF,EAAW,SAAChJ,GACvB,OACEC,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAAC2H,QAAS,OAAOtI,UACvBV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACC,MAAO,GAAIC,QAAS,IAAIzI,SAAC,aAKrC,E,oBCGK0I,EAAmB,SAAnBA,GAAmB,OAAnBA,EAAmB,gBAAnBA,EAAmB,wBAAnBA,EAAmB,0BAAnBA,EAAmB,cAAnBA,CAAmB,EAAnBA,GAAmB,IAMlBC,GAAWC,EAAAA,EAAAA,IAAoBF,GA2D/BG,GAAYnI,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oXAOjB,SAAAC,GAAC,OAAIA,EAAEC,MAAME,QAAQC,kBAAkB,IACjC,SAAAJ,GAAC,OAAIA,EAAEC,MAAM+H,oBAAoB,IAY3B,SAAAhI,GAAC,OAAKA,EAAEiI,UAAY,EAAI,GAAG,IAErC,SAAAjI,GAAC,OAAKA,EAAEiI,UAAY,kCAAoC,EAAE,IAItEC,GAAStI,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6EACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMkI,gBAAgB,IAC1B,SAAAnI,GAAC,OAAIA,EAAEC,MAAMkI,gBAAgB,IAG5D,EAnF8E,SAAH/J,GAAyC,IAADgK,EAAAC,EAAlCJ,EAAS7J,EAAT6J,UAAWK,EAAgBlK,EAAhBkK,iBACpFC,GAAOC,EAAAA,EAAAA,MACPrF,GAAUsF,EAAAA,EAAAA,KAEhBjI,GAAoCC,EAAAA,EAAAA,UAA8BoH,EAAS,GAAGzI,OAAMsB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7EkI,EAAUhI,EAAA,GAAEiI,EAAajI,EAAA,GAE1BkI,GAAY3K,EAAAA,EAAAA,UAAQ,WAAO,IAAD4K,EAAAC,EAC9B,IAAKP,EAAKzF,aACR,OAAO,KAET,IAAMiG,GAAkDF,EAAA,IAAAG,EAAAA,EAAAA,GAAAH,EACrDjB,EAAoBqB,YAAazK,EAAAA,EAAAA,KAAC0K,EAAAA,EAAa,CAAC5G,aAAW,MAAG0G,EAAAA,EAAAA,GAAAH,EAC9DjB,EAAoBuB,aAAc3K,EAAAA,EAAAA,KAAC4K,EAAc,CAAC9G,aAAW,MAAG0G,EAAAA,EAAAA,GAAAH,EAChEjB,EAAoByB,QAAS7K,EAAAA,EAAAA,KAAC8K,EAAS,CAAChH,aAAW,MAAG0G,EAAAA,EAAAA,GAAAH,EACtDjB,EAAoB2B,OAAQ/K,EAAAA,EAAAA,KAAC+I,EAAQ,CAACjF,aAAW,KAAGuG,GAEvD,OAAOH,GAA+B,QAArBI,EAAO,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAOL,UAAW,IAAAI,EAAAA,EAAW,IACnD,GAAG,CAACJ,EAAYH,EAAKzF,eAMrB,OACEtE,EAAAA,EAAAA,KAACgL,EAAAA,GAAe,CAACpK,MAAO+D,EAAQjE,UAC9BuK,EAAAA,EAAAA,MAAC1B,EAAS,CAACpI,SAAU,SAAUb,YAAU,EAACmJ,UAAWA,EAAU/I,SAAA,CAC5D+I,IACCzJ,EAAAA,EAAAA,KAACkL,EAAAA,GAAY,CACXC,YAAarB,EACbsB,aACEH,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAAC2H,QAAS,QAASqC,YAAa,MAAO7K,WAAY,SAAU8K,eAAgB,SAAUC,IAAK,EAAE7K,SAAA,EACpGV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACE,QAAS,IAAKD,MAAO,GAAGxI,SACvB,OAAJqJ,QAAI,IAAJA,GAAkB,QAAdH,EAAJG,EAAMzF,oBAAY,IAAAsF,OAAd,EAAJA,EAAoB4B,SAGvBxL,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACC,MAAO,GAAIC,QAAS,IAAIzI,SACvB,OAAJqJ,QAAI,IAAJA,GAAkB,QAAdF,EAAJE,EAAMzF,oBAAY,IAAAuF,OAAd,EAAJA,EAAoB4B,YAO/BzL,EAAAA,EAAAA,KAAC0L,EAAAA,EAAW,CAACC,QAAStC,EAAUuC,YAxB0B,SAAC9M,EAAG8B,EAAOf,GACzEe,GAASuJ,EAAcvJ,EACzB,EAsBkEiL,gBAAc,KAE1E7L,EAAAA,EAAAA,KAAC0J,EAAM,CAACvI,SAAU,SAAUZ,WAAS,EAACuL,KAAM,EAAEpL,SAC3C0J,QAKX,E,6HCPM2B,IAAU3K,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAC5B,SAAAxK,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAE5D,GA9D+B,SAAHpM,GAAuD,IAADqM,EAAAvI,EAAAwI,EAAhDrL,EAAOjB,EAAPiB,QAC1BsL,GAAUjI,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QAClCG,GAAeC,EAAAA,EAAAA,MACb6H,GAAcC,EAAAA,EAAAA,IAAqBC,GAAAA,GAAAA,iBAAnCF,UACFzH,GAAUsF,EAAAA,EAAAA,GAAqB,CAAE1E,OAAQ,CAAE6B,QAAS,iBACpDmF,GAAUC,EAAAA,EAAAA,IAAoB,OAAZlI,QAAY,IAAZA,GAAwB,QAAZ2H,EAAZ3H,EAAcmI,kBAAU,IAAAR,OAAZ,EAAZA,EAA0BtM,KAAI,SAAA6B,GAAC,OAAIA,EAAEgD,GAAG,KAEhExC,GAA0CC,EAAAA,EAAAA,UAAmBsK,GAAQrK,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9D0K,EAAaxK,EAAA,GAAEyK,EAAgBzK,EAAA,GAEhC0K,GAAYnN,EAAAA,EAAAA,UAAQ,WACxB,OAAc,OAAP8M,QAAO,IAAPA,OAAO,EAAPA,EAASM,KAAK,SAASL,EAAAA,EAAAA,IAAQE,GAAeG,KAAK,IAC5D,GAAG,CAACN,EAASG,IAuBb,OAPA/E,EAAAA,EAAAA,YAAU,WACQ,OAAZrD,QAAY,IAAZA,GAAAA,EAAcmI,YAChBE,EAA6B,OAAZrI,QAAY,IAAZA,OAAY,EAAZA,EAAcmI,WAAW9M,KAAI,SAAAmN,GAAC,OAAIA,EAAEtI,GAAG,IAG5D,GAAG,KAGDyG,EAAAA,EAAAA,MAAC8B,EAAAA,GAAW,CAACC,SAtB4B,SAAA5N,GACzCA,EAAGyM,iBACHzM,EAAG6N,kBAEH3I,GACE6H,EAAQe,WAAW,CACjBlH,UAAWrB,EAAQqB,UAAU,UAC7BH,KAAM,CAAEA,MAAI9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IAAO0H,EAAAA,EAAAA,IAASnE,IAAa,IAAEuB,KAAM,CAAE4G,WAAYC,MAC/DrF,UAAW,SAACxB,EAAMsH,GAChBtM,GAAWA,GACb,GAEN,EAU0CH,SAAA,EACtCV,EAAAA,EAAAA,KAACkL,EAAAA,GAAY,CACXkC,MAAO,yDACPjC,YAAatK,EACb+L,UAAWA,EACXS,UAAQ,EACRtF,UAA4B,QAAnBrE,EAAEiB,EAAQoD,iBAAS,IAAArE,OAAA,EAAjBA,EAAmB6B,UAGhCvF,EAAAA,EAAAA,KAAC+L,GAAO,CAAC/C,QAAS,YAAa8C,KAAM,EAAG3K,SAAU,OAAOT,UACvDV,EAAAA,EAAAA,KAACsN,GAAAA,EAAuB,CACtBC,YAAaZ,EACbhB,QAASS,EACToB,YAAad,EACbjF,MAAOnD,OAIXtE,EAAAA,EAAAA,KAACyN,EAAAA,GAAa,CAACb,UAAWA,EAAWtE,QAA0B,QAAnB4D,EAAEvH,EAAQoD,iBAAS,IAAAmE,OAAA,EAAjBA,EAAmB3G,WAGvE,ECdMmI,GAKD,SALCA,EAKJrI,GAAwC,IAADsI,EAAAC,EAAjCC,EAAIxI,EAAJwI,KAAIC,EAAAzI,EAAE0I,IAAAA,OAAG,IAAAD,EAAG,EAACA,EAAEE,EAAW3I,EAAX2I,YACfC,GAAiBxO,EAAAA,EAAAA,UAAQ,WAAO,IAADyO,EACnC,OAAW,OAAJL,QAAI,IAAJA,GAAkB,QAAdK,EAAJL,EAAMM,oBAAY,IAAAD,OAAd,EAAJA,EAAoBvO,KAAI,SAACkO,EAAMhO,GACpC,OACEG,EAAAA,EAAAA,KAAC0N,EAAqB,CAEpBG,KAAMA,EACNhO,MAAOA,EACPkO,IAAKA,EAAM,EACXC,YAAaA,GAAY,YAAA7N,OAJR4N,EAAG,KAAA5N,OAAI0N,EAAKrJ,KAOnC,GACF,GAAG,CAAK,OAAJqJ,QAAI,IAAJA,OAAI,EAAJA,EAAMM,aAAcJ,EAAKC,IAEvBI,GAAa3O,EAAAA,EAAAA,UAAQ,WACzB,OAAOuO,EAAY9K,SAAS2K,EAAKrJ,IACnC,GAAG,CAACqJ,EAAKrJ,IAAKwJ,IACd,OACE/C,EAAAA,EAAAA,MAAAoD,EAAAA,SAAA,CAAA3N,SAAA,CACG0N,IACCnD,EAAAA,EAAAA,MAACqD,GAAAA,EAAAA,aAA2B,CAACjD,YAAa,MAAO7K,WAAY,SAAUwI,QAAS,eAAgBuC,IAAK,EAAE7K,SAAA,EAChG,OAAJmN,QAAI,IAAJA,GAAY,QAARF,EAAJE,EAAMU,cAAM,IAAAZ,OAAR,EAAJA,EAAcnC,QAAK,GAAArL,OAAW,OAAJ0N,QAAI,IAAJA,GAAY,QAARD,EAAJC,EAAMU,cAAM,IAAAX,OAAR,EAAJA,EAAcpC,MAAK,KAAG,GAAArL,OACzC,OAAJ0N,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,UAGbyC,IAGP,E,4JCkFMO,IAAgBpN,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIrC,GA9IyE,SAAH3B,GAW/D,IAVLiB,EAAOjB,EAAPiB,QAGAmM,GAFKpN,EAALwN,MACYxN,EAAZ6O,aACQ7O,EAARoN,UACAtF,EAAQ9H,EAAR8H,SACAD,EAAK7H,EAAL6H,MAIG1H,GAHKH,EAAR8O,SACQ9O,EAAR+D,SACQ/D,EAAR+O,UACQC,EAAAA,EAAAA,GAAAhP,EAAAiP,KAEFC,GAAQvK,EAAAA,EAAAA,IAAgBkD,GACxBsH,GAAQ1G,EAAAA,EAAAA,MACR8D,GAAUjI,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QAElC6K,GAAkBvP,EAAAA,EAAAA,UAAQ,WAC9B,GAAU,OAALqP,QAAK,IAALA,IAAAA,EAAOJ,SAAU,CAAC,IAADO,EAAAC,EAAAC,EAAAC,EACdjQ,EAAU,OAAL2P,QAAK,IAALA,GAAiB,QAAZG,EAALH,EAAOO,kBAAU,IAAAJ,GAAK,QAALC,EAAjBD,EAAoB,UAAE,IAAAC,GAAM,QAANC,EAAtBD,EAAwBI,YAAI,IAAAH,GAAY,QAAZC,EAA5BD,EAA8BI,MAAM,YAAI,IAAAH,OAAnC,EAALA,EAA2C,GAEtD,OAAOjQ,EAAK,CAAEqF,IAAKrF,QAAOgI,CAC5B,CAGA,OAAY,OAAL2H,QAAK,IAALA,OAAK,EAALA,EAAOJ,QAChB,GAAG,CAAM,OAALI,QAAK,IAALA,OAAK,EAALA,EAAOO,WAAiB,OAALP,QAAK,IAALA,OAAK,EAALA,EAAOJ,WAE9B1M,GAA8CC,EAAAA,EAAAA,YAA6CC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApFwN,EAAetN,EAAA,GAAEuN,EAAkBvN,EAAA,GAE1CwN,GAA8BzN,EAAAA,EAAAA,WAAS,GAAM0N,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAAtCpH,EAAOqH,EAAA,GAAEpH,EAAUoH,EAAA,GAC1BC,GAAsC3N,EAAAA,EAAAA,UAAmB,IAAG4N,GAAA1N,EAAAA,EAAAA,GAAAyN,EAAA,GAArD5B,EAAW6B,EAAA,GAAEC,EAAcD,EAAA,GAE5BE,GAAYtQ,EAAAA,EAAAA,UAAQ,WAAO,IAADuQ,EAC9B,OAAOxD,EAAAA,EAAAA,IAAa,OAALsC,QAAK,IAALA,GAAiB,QAAZkB,EAALlB,EAAOO,kBAAU,IAAAW,OAAZ,EAALA,EAAmBrQ,KAAI,SAAAsQ,GAAI,OAAIA,EAAKzL,GAAG,IACxD,GAAG,CAAM,OAALsK,QAAK,IAALA,OAAK,EAALA,EAAOO,cAEX1H,EAAAA,EAAAA,YAAU,WACK,OAAToI,QAAS,IAATA,GAAAA,EAAW7O,QACb4O,EAAeC,EAGnB,GAAG,IAEH,IAAMG,GAAiBzQ,EAAAA,EAAAA,UAAQ,WAAO,IAAD0Q,EAAAC,EACnC,GAAmB,OAAfZ,QAAe,IAAfA,GAA6B,QAAdW,EAAfX,EAAiBrB,oBAAY,IAAAgC,GAA7BA,EAA+BjP,OACjC,OAAsB,OAAfsO,QAAe,IAAfA,OAAe,EAAfA,EAAiBrB,aAAa3L,QAAO,SAAAqL,GAAI,OAAKA,EAAKwC,YAAY,IAGxE,IAAMC,EAAyB,OAAfd,QAAe,IAAfA,OAAe,EAAfA,EAAiBhL,IACjC,GAAK8L,EAAL,CACA,IAAMC,EAAoC,GACpCC,EAAwC,QAA1BJ,EAAGrB,EAAM0B,yBAAiB,IAAAL,OAAA,EAAvBA,EAA0BE,GACjD,GAAKE,EAAL,CAAsC,IACHE,EADGC,GAAAC,EAAAA,GAAAA,GACjBJ,GAAc,IAAnC,IAAAG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAqC,CAAC,IAADC,EAA1BC,EAAMP,EAAA9P,MACTqP,EAA8B,QAA1Be,EAAGjC,EAAMmC,yBAAiB,IAAAF,OAAA,EAAvBA,EAA0BC,GACvC,GAAIhB,IAAa,OAAJA,QAAI,IAAJA,IAAAA,EAAMI,cAAc,CAC/B,IAAMc,EAAcpC,EAAM0B,kBAAsB,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMzL,KACnC,OAAX2M,QAAW,IAAXA,GAAAA,EAAajQ,QACfqP,EAAgBa,KAAKnB,EAEzB,CACF,CAAC,OAAAoB,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CAED,OAAOhB,CAX8B,CAHP,CAehC,GAAG,CAAgB,OAAff,QAAe,IAAfA,OAAe,EAAfA,EAAiBhL,IAAoB,OAAfgL,QAAe,IAAfA,OAAe,EAAfA,EAAiBrB,aAAcY,EAAMmC,kBAAmBnC,EAAM0B,oBAElF7D,GAAYnN,EAAAA,EAAAA,UAAQ,WAAO,IAAD+R,EAC9B,OAAyB,QAAlBA,GAAAhF,EAAAA,EAAAA,IAAQuD,UAAU,IAAAyB,OAAA,EAAlBA,EAAoB3E,KAAK,SAASL,EAAAA,EAAAA,IAAQwB,GAAanB,KAAK,IACrE,GAAG,CAACkD,EAAW/B,IAETyD,GAAiCvS,EAAAA,EAAAA,cACrC,SAAAwS,GACEA,EAAM7F,iBACN6F,EAAMzE,kBAEN,IAAM9N,EAAa,OAARuI,QAAQ,IAARA,EAAAA,EAAiB,OAALoH,QAAK,IAALA,OAAK,EAALA,EAAOtK,IAC1BrF,EACFgN,EAAQe,WAAW,CACjBrH,KAAM,CAAEA,KAAM,CAAErB,IAAKrF,EAAI0G,KAAM,CAAE8L,cAAe3D,EAAa4D,WAA2B,OAAfpC,QAAe,IAAfA,OAAe,EAAfA,EAAiBhL,OAC1FwB,UAAWuC,EACXlB,UAAW,SAACxB,EAAMgM,GAChBC,GAAAA,GAAAA,QAAqB,iBACrBjR,GAAWA,GACb,IAGFkR,QAAQC,MAAM,cAAehE,GAG/BhB,GAAYA,EAASgB,EACvB,GACA,CAAM,OAALc,QAAK,IAALA,OAAK,EAALA,EAAOtK,IAAoB,OAAfgL,QAAe,IAAfA,OAAe,EAAfA,EAAiBhL,IAAK3D,EAASmM,EAAUgB,EAAa7B,EAASzE,IAGxEuK,GAAe/S,EAAAA,EAAAA,cAAY,SAACgT,GAA8C,IAA1BC,EAAe/L,UAAAlF,OAAA,QAAAiG,IAAAf,UAAA,GAAAA,UAAA,GAAG,GACtE0J,GAAe,SAAA/M,GACb,OAAOA,EAAKG,SAASiP,GAAWpP,EAAKP,QAAO,SAAAC,GAAE,OAAIA,IAAO0P,CAAO,IAAC,GAAAhS,QAAAmD,EAAAA,GAAAA,GAAOP,GAAI,CAAEoP,GAChF,GACF,GAAG,IAEGC,GAAuB3S,EAAAA,EAAAA,UAAQ,WACnC,OAAqB,OAAdyQ,QAAc,IAAdA,OAAc,EAAdA,EAAgBvQ,KAAI,SAAAsQ,GACzB,OACEjQ,EAAAA,EAAAA,KAACqS,GAAAA,EAAqB,CAA0BxE,KAAMoC,EAAMjC,YAAaA,EAAarK,SAAUsO,GAAa,QAAA9R,OAAzE8P,EAAKzL,KAE7C,GACF,GAAG,CAAC0L,EAAgBlC,EAAaiE,IAQjC,OANAtK,EAAAA,EAAAA,YAAU,WACC,OAALmH,QAAK,IAALA,GAAAA,EAAOO,YACTS,EAAoB,OAALhB,QAAK,IAALA,OAAK,EAALA,EAAOO,WAAW1P,KAAI,SAAA6B,GAAC,OAAIA,EAAEgD,GAAG,IAEnD,GAAG,CAAM,OAALsK,QAAK,IAALA,OAAK,EAALA,EAAOO,cAGTpE,EAAAA,EAAAA,MAAC8B,EAAAA,IAAWhM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACiM,SAAUyE,GAAkB1R,GAAK,IAAAW,SAAA,EAC5CV,EAAAA,EAAAA,KAACkL,EAAAA,GAAY,CAACC,YAAatK,EAAS+L,UAAWA,EAAWQ,OAAOkF,EAAAA,EAAAA,GAAE,cAAejF,UAAQ,KAE1FrN,EAAAA,EAAAA,KAACuS,GAAAA,EAAuB,CACtB5O,SAAU8L,EACV+C,YAAa,CAAEnC,cAAc,GAC7BzM,SAAU4L,EACViD,aAAczD,KAGhBhP,EAAAA,EAAAA,KAACwO,GAAa,CAAC1C,KAAM,EAAG9C,QAAS,QAAS7H,SAAU,OAAOT,SACxD0R,KAGHpS,EAAAA,EAAAA,KAACyN,EAAAA,GAAa,CACZb,UAAWA,EACXtE,QAASA,EACToK,iBAAkBpK,EAAU,aAAe,0EAInD,EC7JaqK,GAAsE,SAAH/S,GAAsC,IAAhCiO,EAAIjO,EAAJiO,KAAMG,EAAWpO,EAAXoO,YAAa4E,EAAKhT,EAALgT,MACjGC,GAAepT,EAAAA,EAAAA,UAAQ,WAAO,IAADyO,EAC3B4E,EAAa,OAALF,QAAK,IAALA,GAAAA,EAAO1R,OAAS0R,EAAyB,QAApB1E,EAAGL,EAAKM,oBAAY,IAAAD,OAAA,EAAjBA,EAAmB1L,QAAO,SAAAC,GAAE,OAAe,OAAXuL,QAAW,IAAXA,OAAW,EAAXA,EAAa9K,SAAST,EAAG+B,IAAI,IAEnG,OAAY,OAALsO,QAAK,IAALA,OAAK,EAALA,EAAOnT,KAAI,SAACiB,EAAOf,GACxB,OACEG,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,aAA2B,CAA6BpO,UAAW,aAAc6S,SAAU,QAAQrS,SACjGE,EAAM4K,OAAK,UAAArL,OAD8BS,EAAM4D,KAItD,GACF,GAAG,CAACqJ,EAAKM,aAAcH,EAAa4E,IAEpC,OACE3H,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAACnB,UAAW,WAAYqL,IAAK,EAAG/K,WAAY,WAAWE,SAAA,EAC7DV,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACb,WAAY,SAAU6K,YAAa,MAAO9K,WAAS,EAACgL,IAAK,EAAE7K,UAClEV,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,SAAuB,CAACpF,MAAO,GAAIC,QAAS,IAAIzI,SAC1C,OAAJmN,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,WAIXxL,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACgK,YAAa,MAAO2H,SAAU,OAAQzS,WAAS,EAACgL,IAAK,EAAE7K,SAC7DmS,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAc3R,QAAS,EAAI2R,GAAe7S,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACC,MAAO,GAAGxI,SAAE,YAIrF,E,4DCiCA,GA1DwD,SAAHd,GAAoD,IAA9C+D,EAAQ/D,EAAR+D,SAAUG,EAAWlE,EAAXkE,YAAuBmP,GAAFrT,EAARgE,SAAehE,EAALqT,OAI1FjR,GAAkBC,EAAAA,EAAAA,WAAS,GAApBqG,GAA0BnG,EAAAA,EAAAA,GAAAH,EAAA,GAAnB,GAERkR,GAAiB7G,EAAAA,EAAAA,IAAqBC,GAAAA,GAAAA,aAAwBF,UAE9D+G,GAAe1T,EAAAA,EAAAA,UAAQ,WAC3B,OAAOyT,EAAe1Q,QAAO,SAAAsK,GAAC,OAAImG,GAASA,EAAM/P,SAAS4J,EAAE/F,KAAc,GAC5E,GAAG,CAACmM,EAAgBD,IAcdtK,GAAelJ,EAAAA,EAAAA,UAAQ,WAC3B,MAAO,CACLwI,UAAWkL,EACXjL,YAAakL,GAAAA,GACb9M,WAAY,SAAAT,GACV,GAAIlC,EAAU,CACZ,GAAQ,OAAJkC,QAAI,IAAJA,GAAAA,EAAMW,QAER,YADA7C,GAAS8E,EAAAA,EAAAA,IAAa,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAMW,UAEX,OAAJX,QAAI,IAAJA,GAAAA,EAAMY,OACf9C,EAAS,CAAEa,IAAS,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OAE1B,CACF,EACAC,eAAiB5C,EAEb,SAAA6C,GAGE,MAAO,EAQT,OAZAQ,EAcR,GAAG,CAACgM,EAAcxP,EAAUG,IAE5B,OAAO9D,EAAAA,EAAAA,KAAC4H,EAAAA,IAAS7G,EAAAA,EAAAA,GAAA,CAAC8G,WAAW,EAAOE,UAAWO,GAAaK,GAC9D,EC/CY0K,GAAqB,SAArBA,GAAqB,OAArBA,EAAqB,oBAArBA,EAAqB,oBAArBA,EAAqB,oBAArBA,EAAqB,wBAArBA,EAAqB,gCAArBA,EAAqB,oCAArBA,EAAqB,sBAArBA,EAAqB,0BAArBA,EAAqB,kBAArBA,CAAqB,MCiDjC,GAxDoD,SAAHzT,GAA6C,IAAD8D,EAAtCC,EAAQ/D,EAAR+D,SAAUC,EAAQhE,EAARgE,SAC3C0P,GADgE1T,EAAXkE,aACzCI,EAAAA,EAAAA,MAAxBqP,YACF5O,GAAUC,EAAAA,EAAAA,MACV2O,GAAaC,EAAAA,EAAAA,MAAwBD,WAErCxO,GAAW7F,EAAAA,EAAAA,cAAY,WAC3BoU,EAAQG,OAAO,CAAEzN,UAAWrB,EAAQqB,UAAU,cAAeH,KAAM,CAAEP,SAAS,IAChF,GAAG,CAACX,EAAS2O,KAEb3L,EAAAA,EAAAA,YAAU,WACR5C,GAEF,GAAG,IAEH,IAAM4D,GAAelJ,EAAAA,EAAAA,UAAQ,WAC3B,MAAO,CACLwI,UAAWsL,EACXrL,YAAawL,EAAAA,GACbpN,WAAY,SAAAT,GACV,GAAIlC,EAAU,CACZ,GAAQ,OAAJkC,QAAI,IAAJA,GAAAA,EAAMW,QAER,YADA7C,GAAS8E,EAAAA,EAAAA,IAAa,OAAJ5C,QAAI,IAAJA,OAAI,EAAJA,EAAMW,UAEX,OAAJX,QAAI,IAAJA,GAAAA,EAAMY,OACf9C,EAAS,CAAEa,IAAS,OAAJqB,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OAE1B,CACF,EACAC,eAAgB,SAAAC,GAGd,MAAO,CACL,CAAEG,KAAM,UAAWrG,QAASsE,GAQhC,EAEJ,GAAG,CAACA,EAAUpB,EAAU4P,IASxB,OACEvT,EAAAA,EAAAA,KAAC4H,EAAAA,IAAS7G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAC8G,WAAW,GAAWc,GAAY,IAAEZ,UAA4B,QAAnBrE,EAAEiB,EAAQoD,iBAAS,IAAArE,OAAA,EAAjBA,EAAmB6P,WAAY9O,YAAab,IAE1G,ECzCY+P,GAAwB,SAAxBA,GAAwB,OAAxBA,EAAwB,cAAxBA,EAAwB,sBAAxBA,EAAwB,sBAAxBA,EAAwB,sBAAxBA,EAAwB,oBAAxBA,CAAwB,MAa9BpJ,IAAOjB,EAAAA,EAAAA,IAAoBqK,IACjC,SAASC,GAAqBnM,GAC5B,IAAM9H,EAAM,IAAIkU,IAUhB,OARAtJ,GAAKuJ,SAAQ,SAAAC,GACX,IAAMC,EAAMD,EAAInT,MAChB,GAAIoT,EAAK,CACP,IAAMC,EAAQD,EAAW,OAALvM,QAAK,IAALA,OAAK,EAALA,EAAQuM,QAAO7M,EAC/B8M,GAAOtU,EAAIuU,IAAIF,GAAKvL,EAAAA,EAAAA,IAASwL,GACnC,CACF,KAEOE,EAAAA,EAAAA,IAAkBxU,EAAIyU,UAC/B,CACA,IA8FMC,GAAOjT,EAAAA,GAAAA,KAAWE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gLAaF,SAAAC,GAAC,OAAIA,EAAEC,MAAM6S,oBAAoB,IAGjDvI,IAAU3K,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2EACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMkI,gBAAgB,IAE1B,SAAAnI,GAAC,OAAIA,EAAEC,MAAMkI,gBAAgB,IAE1D,GAnH0E,SAAH/J,GAA+B,IAAD2U,EAAxB1T,EAAOjB,EAAPiB,QACrE8D,GADsF/E,EAARoN,UACpE/C,EAAAA,EAAAA,MACV7F,EAAwB,QAAjBmQ,GAAGlQ,EAAAA,EAAAA,aAAc,IAAAkQ,OAAA,EAAdA,EAAgBnQ,QAC1B0K,GAAQvK,EAAAA,EAAAA,IAAgB,CAAEC,IAAKJ,IAE/BH,GAAYC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QAE1CnC,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CwS,EAAatS,EAAA,GAAEuS,EAAgBvS,EAAA,GAEtCwS,GAA0DC,EAAAA,EAAAA,IAAkC,CAC1FC,cAAgB9F,EAAoB8E,GAAqB9E,QAAjC3H,IADlB0N,EAAQH,EAARG,SAAUC,EAASJ,EAATI,UAAWC,EAAUL,EAAVK,WAAYtD,EAAYiD,EAAZjD,aAInCQ,GAAe/S,EAAAA,EAAAA,cACnB,SAAC2G,GACC,IAAMmO,EAAMzJ,GAAKiK,GAAe5T,MAEhCoT,GAAOa,EAASb,EAAKnO,EACvB,GACA,CAAC2O,EAAeK,IAaZG,GAAUvV,EAAAA,EAAAA,UAAQ,WAAO,IAADwV,EAwB5B,OAvB0DA,EAAA,IAAAzK,EAAAA,EAAAA,GAAAyK,EACvDtB,GAAyBuB,WAAY,kBACpClV,EAAAA,EAAAA,KAACmV,GAAa,CAACrR,aAAW,EAACH,SAAUsO,EAAcrO,SAAUkR,EAAU,cAAgB,KACxFtK,EAAAA,EAAAA,GAAAyK,EACAtB,GAAyByB,OAAQ,WAEhC,OADArD,QAAQsD,IAAI,qBAAsBP,EAAU,WACrC9U,EAAAA,EAAAA,KAAC8K,EAAS,CAAChH,aAAW,EAACH,SAAUsO,EAAcrO,SAAUkR,EAAU,UAC5E,KAACtK,EAAAA,EAAAA,GAAAyK,EACAtB,GAAyB2B,WAAY,kBACpCtV,EAAAA,EAAAA,KAAC0K,EAAAA,EAAa,CAAC5G,aAAW,EAACH,SAAUsO,EAAcrO,SAAUkR,EAAU,cAAgB,KACxFtK,EAAAA,EAAAA,GAAAyK,EACAtB,GAAyB4B,WAAY,kBACpCvV,EAAAA,EAAAA,KAAC4K,EAAc,CAAC9G,aAAW,EAACH,SAAUsO,EAAcrO,SAAUkR,EAAU,cAAgB,KACzFtK,EAAAA,EAAAA,GAAAyK,EACAtB,GAAyB6B,UAAW,kBACnCxV,EAAAA,EAAAA,KAACyV,GAAe,CACd3R,aAAW,EACXmP,MAAO,CAACI,GAAsBqC,UAC9B/R,SAAUsO,EACVrO,SAAUkR,EAAU,aACpB,IACHG,CAGL,GAAG,CAACH,EAAW7C,IAET7H,GAAY3K,EAAAA,EAAAA,UAAQ,WAAO,IAADkW,EAAAC,EACxBC,EAAiB,OAAJtL,SAAI,IAAJA,IAAqB,QAAjBoL,EAAJpL,GAAOiK,UAAc,IAAAmB,OAAjB,EAAJA,EAAuB/U,MACpCkV,EAAMD,GAAgC,QAAtBD,EAAGZ,EAAQa,UAAW,IAAAD,EAAAA,EAAW,KAEvD,OAAOE,GAAM9V,EAAAA,EAAAA,KAAC8V,EAAG,IAAM,IACzB,GAAG,CAACtB,EAAeQ,IAEbpI,GAAYnN,EAAAA,EAAAA,UAAQ,WAAO,IAADsW,EACxBF,EAAiB,OAAJtL,SAAI,IAAJA,IAAqB,QAAjBwL,EAAJxL,GAAOiK,UAAc,IAAAuB,OAAjB,EAAJA,EAAuBnV,MAQ1C,QAAQiV,GAPiB,SAAC7B,GACxB,IAAMgC,EAAO,GAAA7V,OAAM6T,EAAG,QAChBiC,EAAOnX,KAAAA,IAAMiW,EAAYiB,GAE/B,QAASC,GAAQA,IAASnX,KAAAA,IAAMgQ,EAAOkH,EACzC,CAE6BE,CAAiBL,EAChD,GAAG,CAACrB,EAAeO,EAAYjG,IAE/B,OACE9O,EAAAA,EAAAA,KAACgL,EAAAA,GAAe,CAACpK,MAAO+D,EAAQjE,UAC9BuK,EAAAA,EAAAA,MAACoJ,GAAI,CAACrH,SAAUyE,GA1DJ,SAAC0E,IACV,OAALrH,QAAK,IAALA,OAAK,EAALA,EAAOtK,MACLP,EAAUiJ,WAAW,CACnBrH,KAAM,CAAEA,MAAI9E,EAAAA,EAAAA,GAAA,CAAIyD,IAAU,OAALsK,QAAK,IAALA,OAAK,EAALA,EAAOtK,MAAQ4R,EAAAA,EAAAA,IAAUD,KAC9C9O,UAAW,SAACxB,EAAMsH,GAChB4E,QAAQsD,IAAIxP,EAAMsH,EACpB,EACAnH,UAAWrB,EAAQqB,UAAU,cAEnC,IAiD0CtF,SAAA,EACpCV,EAAAA,EAAAA,KAACqW,GAAAA,GAAW,CAAClL,YAAatK,EAASuM,OAAOkF,EAAAA,EAAAA,GAAE,kBAAmB1F,UAAWA,KAE1E5M,EAAAA,EAAAA,KAAC0L,EAAAA,EAAW,CAACC,QAASpB,GAAM+L,aAAc9B,EAAe+B,cAAe9B,KAExEzU,EAAAA,EAAAA,KAAC+L,GAAO,CAACD,KAAM,EAAGvL,WAAS,EAACY,SAAU,SAAST,SAC5C0J,KAGHpK,EAAAA,EAAAA,KAACyN,GAAAA,GAAa,CAACnF,QAAS3D,EAAQ6R,WAAY5J,UAAWA,QAI/D,E,sDCzFMyH,IAAOjT,EAAAA,EAAAA,IAAOqV,EAAAA,GAAPrV,CAAgBE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,8GAQP,SAAAC,GAAC,OAAIA,EAAEC,MAAMiV,sBAAsB,IAMzD,GA5DwE,SAAH9W,GAA4B,IAAtBiB,EAAOjB,EAAPiB,QAAS4G,EAAK7H,EAAL6H,MAC5EqH,GAAQvK,EAAAA,EAAAA,IAAgBkD,GAExB0E,GAAUjI,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QACxCnC,GAA0BC,EAAAA,EAAAA,WAA+C,OAAL6M,QAAK,IAALA,OAAK,EAALA,EAAO6H,SAAU,IAAGzU,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjF+M,EAAK7M,EAAA,GAAE0U,EAAQ1U,EAAA,GACtBwN,GAA8BzN,EAAAA,EAAAA,WAAS,GAAM0N,GAAAxN,EAAAA,EAAAA,GAAAuN,EAAA,GAAtCpH,EAAOqH,EAAA,GAAEpH,EAAUoH,EAAA,GAEpBlO,GAAQoV,EAAAA,EAAAA,MAgBd,OACE7W,EAAAA,EAAAA,KAACqU,GAAI,CAACrH,SAfmC,SAAA5N,GACzCA,EAAGyM,iBACHzM,EAAG6N,kBAEH6B,GACE3C,EAAQe,WAAW,CACjBrH,KAAM,CAAEA,MAAI9E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IAAO0H,EAAAA,EAAAA,IAASqG,IAAM,IAAEjJ,KAAM,CAAE8Q,OAAQ5H,MACpD1H,UAAW,WACTxG,GAAWA,GACb,EACAmF,UAAWuC,GAEjB,EAGmC7H,UAC/BV,EAAAA,EAAAA,KAAC8W,GAAAA,EAAwB,CACvBC,YAAahI,EACblO,QAASA,EACTmW,cAAc,EACdC,cAAeL,EACfM,sBAAuB,CACrBpL,KAAM,EACNqL,UAAU,aAADhX,OAAesB,EAAMuK,oBAC9BoL,aAAa,aAADjX,OAAesB,EAAMuK,qBAEnCqL,cAAcrX,EAAAA,EAAAA,KAACkL,EAAAA,GAAY,CAACkC,MAAO,+DAAcjC,YAAatK,EAASwM,UAAQ,EAACT,UAAWmC,EAAM7N,OAAS,IAC1GoW,gBAAiB,SAAAvX,GACf,OACEC,EAAAA,EAAAA,KAACyN,EAAAA,GAAa,CAAC8J,cAAexX,EAAMyX,sBAAuBlP,QAASA,EAASsE,UAAWmC,EAAM7N,OAAS,GAE3G,KAIR,E,iDCpCYuW,GAAqB,SAArBA,GAAqB,OAArBA,EAAqB,kBAArBA,EAAqB,wBAArBA,EAAqB,oBAArBA,EAAqB,gBAArBA,EAAqB,kBAArBA,EAAqB,UAArBA,CAAqB,MASpBC,IAA0BpO,EAAAA,EAAAA,IAAoBmO,IAyGrDE,IAAYvW,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kFAIX,SAAAC,GAAC,OAAIA,EAAEC,MAAMiV,sBAAsB,IAGnD3K,IAAU3K,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,yEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAC5B,SAAAxK,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAEtD4L,IAASxW,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeyW,KAAAA,IAAAtW,EAAAA,EAAAA,GAAA,QACxBuW,IAAY1W,EAAAA,EAAAA,IAAO2W,EAAAA,GAAP3W,CAAkB4W,KAAAA,IAAAzW,EAAAA,EAAAA,GAAA,wBAC1B,SAAAC,GAAC,OAAIA,EAAEC,MAAME,QAAQsW,OAAOC,KAAK,IAErCC,IAAU/W,EAAAA,EAAAA,IAAO2W,EAAAA,GAAP3W,CAAkBgX,KAAAA,IAAA7W,EAAAA,EAAAA,GAAA,6EAK5B8W,GAA8E,CAClF,CACEjL,OAAOkF,EAAAA,EAAAA,GAAE,SACTgG,SAAU,SAAAzS,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM2F,KAAK,EAC7B+M,SAAU,QACVxE,IAAK0D,GAAsBe,SAE7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,UACTgG,SAAU,SAAAzS,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM4S,QAAQ,EAChCF,SAAU,WACVxE,IAAK0D,GAAsBe,SAE7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,QACTgG,SAAU,SAAAzS,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,IAAI,EAC5BwR,SAAU,OACVxE,IAAK0D,GAAsBe,SAE7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,OACTgG,SAAU,SAAAzS,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM4F,GAAG,EAC3B8M,SAAU,MACVxE,IAAK0D,GAAsBe,SAE7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,YACTgG,SAAU,SAAAzS,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6S,OAAO,EAC/BH,SAAU,UACVxE,IAAK0D,GAAsBe,SAI7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,cACTqG,cRnLiF,SAAH/Y,GAAwB,IAAlBgZ,EAAIhZ,EAAJgZ,KAAM/S,EAAIjG,EAAJiG,KACtF9G,GAAaC,EAAAA,EAAAA,MACb6Z,GAAWC,EAAAA,EAAAA,MAEXrM,GAAaJ,EAAAA,EAAAA,IAAqBC,GAAAA,GAAAA,iBAA4BF,UAC9D2M,GAAsBtZ,EAAAA,EAAAA,UAAQ,WAAO,IAADuZ,EAAAC,EACxC,OAA0C,QAA1CD,EAAW,OAAJnT,QAAI,IAAJA,GAAgB,QAAZoT,EAAJpT,EAAM4G,kBAAU,IAAAwM,OAAZ,EAAJA,EAAkBtZ,KAAI,SAAA8C,GAAE,OAAIA,EAAG+B,GAAG,WAAC,IAAAwU,EAAAA,EAAI,EAChD,GAAG,CAAK,OAAJnT,QAAI,IAAJA,OAAI,EAAJA,EAAM4G,aAEJyM,GAAczZ,EAAAA,EAAAA,UAAQ,WAC1B,OAAOgN,EAAW9M,KAAI,SAAAmN,GACpB,OAAO9M,EAAAA,EAAAA,KAAC0N,GAAqB,CAAsBM,YAAa+K,EAAqBlL,KAAMf,GAAE,OAAA3M,OAAnD2M,EAAEtI,KAC9C,GACF,GAAG,CAACiI,EAAYsM,IAEhB,OACE9N,EAAAA,EAAAA,MAACqD,GAAAA,EAAAA,KAAmB,CAAClO,MAAO,CAAE+Y,UAAW,eAAgBzY,SAAA,EACvDV,EAAAA,EAAAA,KAACoZ,GAAAA,EAAkB,CACjBhM,MAAW,OAAJwL,QAAI,IAAJA,OAAI,EAAJA,EAAMxL,MACbiM,uBAAwB,6CACxBC,mBAAoB,WACdva,EAAWyE,OACbzE,EAAWyE,OAAO+V,IAElBV,EAASrV,OAAO+V,GAEpB,KAGFvZ,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CACNd,WAAS,EACT8K,YAAa,MACbC,eAAgB,WAChB0H,SAAU,OAEVzH,IAAK,EACLnL,MAAO,CAAEoZ,OAAQ,cAAeL,UAAW,IAAKzY,SAE/CwY,MAIT,EQ0IIX,SAAU,aACVxE,IAAK0D,GAAsBgC,YAE7B,CACErM,OAAOkF,EAAAA,EAAAA,GAAE,cACTqG,cCzLmF,SAAH/Y,GAI7E,IAAD8Z,EAHJd,EAAIhZ,EAAJgZ,KACAe,EAAc/Z,EAAd+Z,eACA9T,EAAIjG,EAAJiG,KAEMkJ,GAAQ1G,EAAAA,EAAAA,MACRyG,GAAQvK,EAAAA,EAAAA,IAAgBsB,GAE9B+T,GAAqDna,EAAAA,EAAAA,UAAQ,WAAO,IAADwP,EAOtByB,EANrCmJ,EAAsD,CAAC,EACvDC,EAAoB,IAAIC,IAAY,IAEpCC,EAAwD,CAAC,EACzDC,EAAgB,IAAIF,IAAY,IAAIpJ,GAAAC,EAAAA,GAAAA,GAEL,QAFK3B,EAEjB,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOO,kBAAU,IAAAJ,EAAAA,EAAI,IAAE,IAA3C,IAAA0B,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA6C,CAAC,IAADmJ,EAAlCtZ,EAAK8P,EAAA9P,MACRqQ,EAAqB,QAAfiJ,EAAGtZ,EAAM2N,cAAM,IAAA2L,OAAA,EAAZA,EAAc1V,IAE7B,GAAIyM,EAAQ,CAAC,IAADD,EAAAmJ,EACJ5L,EAAS0C,EAAgC,QAA1BD,EAAGjC,EAAMmC,yBAAiB,IAAAF,OAAA,EAAvBA,EAA0BC,QAAU9J,EAC5D2S,EAAkBM,IAAInJ,GAElB1C,IACFsL,EAAe5I,GAAU1C,GAG3B,IAAM4D,EAAUvR,EAAM4D,IACtByV,EAAcG,IAAIjI,GAElB,IAAMkI,EAASlI,IAAiC,QAAvBgI,EAAApL,EAAMmC,yBAAiB,IAAAiJ,OAAA,EAAvBA,EAA0BhI,KAAoBvR,EAClEoZ,EAAe/I,KAClB+I,EAAe/I,GAAU,IAE3B+I,EAAe/I,GAAQG,KAAKiJ,EAC9B,CACF,CAAC,OAAAhJ,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CAED,MAAO,CACLlC,WAAYyK,EACZQ,OAAQL,EACR/J,eAAgBqK,OAAOD,OAAOT,GAC9BW,cAAeR,EAEnB,GAAG,CAAM,OAALlL,QAAK,IAALA,OAAK,EAALA,EAAOO,WAAYN,EAAMmC,oBAnCrBhB,EAAc0J,EAAd1J,eAAgBsK,EAAaZ,EAAbY,cAAkBC,GAAM7L,EAAAA,EAAAA,GAAAgL,EAAA/K,IAqC1C6L,GAAmBjb,EAAAA,EAAAA,UAAQ,WAC/B,OAAqB,OAAdyQ,QAAc,IAAdA,OAAc,EAAdA,EAAgBvQ,KAAI,SAACsQ,EAAMpQ,GAChC,IAAM8a,EAAOH,EAAcvK,EAAKzL,KAEhC,OACExE,EAAAA,EAAAA,KAAC2S,GAAyB,CAElB9S,MAAAA,EAAO8Z,eAAgBA,EAAgB9L,KAAMoC,EAAM2C,MAAO+H,EAAM9U,KAAAA,GAAI,QAAA1F,OADzD,OAAJ8P,QAAI,IAAJA,OAAI,EAAJA,EAAMzL,KAIzB,GACF,GAAG,CAAC0L,EAAgByJ,EAAgBa,EAAe3U,IAEnD,OACEoF,EAAAA,EAAAA,MAACqD,GAAAA,EAAAA,KAAmB,CAClBtF,QAAS,cACTuC,IAAK,EACLrL,UAAW,uBACXE,MAAO,CAAE+Y,UAAWuB,IAAoC,OAAhBA,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBxZ,QAAS,EAAI,cAAgB,IAAKR,SAAA,EAE5FV,EAAAA,EAAAA,KAACoZ,GAAAA,EAAkB,CACjBhM,MAAW,OAAJwL,QAAI,IAAJA,OAAI,EAAJA,EAAMxL,MACbkM,mBAAoB,WAClBK,EAAe,CACb7Z,gBAAiB8a,GACjB7a,MAAO,CAAE0H,MAAO5B,IAEpB,KAGF7F,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACd,WAAS,EAACgL,IAAK,EAAG/K,WAAYka,IAAoC,OAAhBA,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBxZ,QAAS,EAAI,UAAY,WAAWR,SAC7F,QAAjBgZ,EAAAe,EAAOpL,kBAAU,IAAAqK,GAAjBA,EAAmBmB,KAClBH,GAEA1a,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,SAAuB,CAACnF,QAAS,IAAIzI,UAAE4R,EAAAA,EAAAA,GAAE,mBAKpD,EDsGIiG,SAAU,aACVxE,IAAK0D,GAAsBgC,YAE7B,CACErM,OAAOkF,EAAAA,EAAAA,GAAE,QACTqG,cElM2E,SAAH/Y,GAAwC,IAADkb,EAAjClC,EAAIhZ,EAAJgZ,KAAMe,EAAc/Z,EAAd+Z,eAAgB9T,EAAIjG,EAAJiG,KAChGiJ,GAAQvK,EAAAA,EAAAA,IAAgBsB,GAExBgN,GAAepT,EAAAA,EAAAA,UAAQ,WAAO,IAADsb,EACjC,OAAY,OAALjM,QAAK,IAALA,GAAW,QAANiM,EAALjM,EAAOkM,YAAI,IAAAD,OAAN,EAALA,EAAapb,KAAI,SAACiB,EAAOf,GAC9B,OACEG,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,aAA2B,CAA6BpO,UAAW,aAAc6S,SAAU,QAAQrS,SACjGE,EAAM4K,OAAK,UAAArL,OAD8BS,EAAM4D,KAItD,GACF,GAAG,CAAM,OAALsK,QAAK,IAALA,OAAK,EAALA,EAAOkM,OAEX,OACE/P,EAAAA,EAAAA,MAACqD,GAAAA,EAAAA,KAAmB,CAClBtF,QAAS,cACTuC,IAAK,EACLrL,UAAW,iBACXE,MAAO,CAAE+Y,UAAW,eAAgBzY,SAAA,EAEpCV,EAAAA,EAAAA,KAACoZ,GAAAA,EAAkB,CACjBhM,MAAW,OAAJwL,QAAI,IAAJA,OAAI,EAAJA,EAAMxL,MACbkM,mBAAoB,WAClBK,EAAe,CACb7Z,gBAAiB8a,GACjB7a,MAAO,CAAE0H,MAAO5B,IAEpB,KAGF7F,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACd,WAAS,EAACgL,IAAK,EAAG/K,WAAY,UAAUE,SACzC,OAALoO,QAAK,IAALA,GAAW,QAANgM,EAALhM,EAAOkM,YAAI,IAAAF,GAAXA,EAAa5Z,OACZ2R,GAEA7S,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,SAAuB,CAACnF,QAAS,IAAIzI,UAAE4R,EAAAA,EAAAA,GAAE,mBAKpD,EF4JIiG,SAAU,QACVxE,IAAK0D,GAAsBgC,YAG7B,CACErM,OAAOkF,EAAAA,EAAAA,GAAE,SACTgG,SAAU,SAAAzS,GAAI,IAAAoV,EAAA,OAAQ,OAAJpV,QAAI,IAAJA,GAAW,QAAPoV,EAAJpV,EAAMqV,aAAK,IAAAD,OAAP,EAAJA,EAAazP,KAAK,EACpC+M,SAAU,QACVxE,IAAK0D,GAAsBe,SAE7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,eACTiG,SAAU,cACVD,SAAU,SAAA9P,GACR,IACE,IAAM3C,EAA4B,OAAP2C,QAAO,IAAPA,GAAAA,EAAS2S,YAAcC,KAAKC,MAAa,OAAP7S,QAAO,IAAPA,OAAO,EAAPA,EAAS2S,aAAyB,CAAC,EAQhG,MAPY,CAAC,GAADhb,QACPmS,EAAAA,EAAAA,GAAE,QAAO,MAAAnS,QAAS,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAMyV,OAAQ,GAAC,GAAAnb,QAC7BmS,EAAAA,EAAAA,GAAE,OAAM,MAAAnS,QAAS,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAM0V,MAAO,GAAC,GAAApb,QAC3BmS,EAAAA,EAAAA,GAAE,OAAM,MAAAnS,QAAS,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAM2V,MAAO,GAAC,GAAArb,QAC3BmS,EAAAA,EAAAA,GAAE,QAAO,MAAAnS,QAAS,OAAJ0F,QAAI,IAAJA,OAAI,EAAJA,EAAM4V,OAAQ,IAGtB5O,KAAK,MAClB,CAAE,MAAOyE,GACP,MAAO,EACT,CACF,EACAyC,IAAK0D,GAAsBe,SAE7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,eACTgG,SAAU,SAAAzS,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6V,WAAW,EACnCnD,SAAU,cACVxE,IAAK0D,GAAsBe,SAK7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,kBACTgG,SAAU,SAAA9P,GAAO,IAAAmT,EAAA,OAAY,OAAPnT,QAAO,IAAPA,GAAgB,QAATmT,EAAPnT,EAASoT,eAAO,IAAAD,GAAhBA,EAAkBE,aAAe,MAAQ,IAAI,EACnEtD,SAAU,cACVxE,IAAK0D,GAAsBqE,SAG7B,CACE1O,OAAOkF,EAAAA,EAAAA,GAAE,eACTgG,SAAU,SAAA9P,GAAO,IAAAuT,EAAAC,EAAA,OAAY,OAAPxT,QAAO,IAAPA,GAAgB,QAATuT,EAAPvT,EAASoT,eAAO,IAAAG,GAAa,QAAbC,EAAhBD,EAAkBE,mBAAW,IAAAD,GAA7BA,EAA+BE,YAAc,MAAQ,IAAI,EAC/E3D,SAAU,cACVxE,IAAK0D,GAAsBqE,SAG7B,CACE1O,OAAOkF,EAAAA,EAAAA,GAAE,qBACTgG,SAAU,SAAA9P,GAAO,IAAA2T,EAAAC,EAAA,OAAY,OAAP5T,QAAO,IAAPA,GAAgB,QAAT2T,EAAP3T,EAASoT,eAAO,IAAAO,GAAkB,QAAlBC,EAAhBD,EAAkBE,wBAAgB,IAAAD,GAAlCA,EAAoCF,YAAc,MAAQ,IAAI,EACpF3D,SAAU,mBACVxE,IAAK0D,GAAsBqE,SAG7B,CACE1O,OAAOkF,EAAAA,EAAAA,GAAE,gBACTgG,SAAU,SAAA9P,GAAO,IAAA8T,EAAAC,EAAA,OAAY,OAAP/T,QAAO,IAAPA,GAAgB,QAAT8T,EAAP9T,EAASoT,eAAO,IAAAU,GAAa,QAAbC,EAAhBD,EAAkBE,mBAAW,IAAAD,GAA7BA,EAA+BL,YAAc,MAAQ,IAAI,EAC/E3D,SAAU,cACVxE,IAAK0D,GAAsBqE,SAG7B,CACE1O,OAAOkF,EAAAA,EAAAA,GAAE,aACTgG,SAAU,SAAA9P,GAAO,IAAAiU,EAAAC,EAAA,OAAY,OAAPlU,QAAO,IAAPA,GAAgB,QAATiU,EAAPjU,EAASoT,eAAO,IAAAa,GAAU,QAAVC,EAAhBD,EAAkBE,gBAAQ,IAAAD,GAA1BA,EAA4BR,YAAc,MAAQ,IAAI,EAC5E3D,SAAU,WACVxE,IAAK0D,GAAsBqE,SAG7B,CACE1O,OAAOkF,EAAAA,EAAAA,GAAE,YACTgG,SAAU,SAAAzS,GAAI,IAAA+W,EAAA,OAAQ,OAAJ/W,QAAI,IAAJA,GAAa,QAAT+W,EAAJ/W,EAAM+V,eAAO,IAAAgB,OAAT,EAAJA,EAAeC,OAAO,EACxCtE,SAAU,UACVxE,IAAK0D,GAAsBqE,SAI7B,CACE1O,OAAOkF,EAAAA,EAAAA,GAAE,kBACTqG,cGhR+E,SAAH/Y,GAAwC,IAAlCiG,EAAIjG,EAAJiG,KAAM+S,EAAIhZ,EAAJgZ,KACpFnX,GADwG7B,EAAd+Z,gBAClF9C,EAAAA,EAAAA,OACR3B,EAAgB,OAAJrP,QAAI,IAAJA,OAAI,EAAJA,EAAMqP,UAClBM,EAAe,OAAJ3P,QAAI,IAAJA,OAAI,EAAJA,EAAM2P,SACjBJ,EAAY,OAAJvP,QAAI,IAAJA,OAAI,EAAJA,EAAMuP,MACdrW,GAAaC,EAAAA,EAAAA,MACb6Z,GAAWC,EAAAA,EAAAA,MAEXgE,GAAsBrd,EAAAA,EAAAA,UAAQ,WAAO,IAADsd,EAClCzH,EAAgB,OAAJzP,QAAI,IAAJA,OAAI,EAAJA,EAAMyP,UAcxB,MAb0E,CACxE,CAAElI,OAAOkF,EAAAA,EAAAA,GAAE,SAAU1R,MAAgB,OAAT0U,QAAS,IAATA,OAAS,EAATA,EAAW9J,OACvC,CAAE4B,OAAOkF,EAAAA,EAAAA,GAAE,YAAa1R,MAAgB,OAAT0U,QAAS,IAATA,OAAS,EAATA,EAAWoD,SAC1C,CACEtL,OAAOkF,EAAAA,EAAAA,GAAE,OACT1R,MAAgB,OAAT0U,QAAS,IAATA,OAAS,EAATA,EAAW7J,KAEpB,CACE2B,OAAOkF,EAAAA,EAAAA,GAAE,cACT1R,MAAgB,OAAT0U,QAAS,IAATA,GAAqB,QAAZyH,EAATzH,EAAWjG,kBAAU,IAAA0N,OAAZ,EAATA,EAAuB7b,SAIlBvB,KAAI,SAACkO,EAAMhO,GAAW,IAADmd,EACnC,OACE/R,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAENgK,YAAa,MACbC,eAAgB,gBAChBtC,QAAS,UACTuC,IAAK,EACLhL,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACC,MAAO,GAAGxI,SAAA,GAAAP,OAAS,OAAJ0N,QAAI,IAAJA,OAAI,EAAJA,EAAMT,MAAK,SAChCpN,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACC,MAAO,GAAIC,QAAS,IAAK8T,OAAQ,QAAQvc,SACjC,QADiCsc,EACxC,OAAJnP,QAAI,IAAJA,OAAI,EAAJA,EAAMjN,aAAK,IAAAoc,EAAAA,EAAI,UATT,OAAJnP,QAAI,IAAJA,OAAI,EAAJA,EAAMT,MAajB,GACF,GAAG,CAAK,OAAJvH,QAAI,IAAJA,OAAI,EAAJA,EAAMyP,YAEJ4H,GAAkBzd,EAAAA,EAAAA,UAAQ,WAC9B,OAqGG,SACL2V,GAC8E,IAAD+H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7E,MAAO,CACL,CAAEpQ,OAAOkF,EAAAA,EAAAA,GAAE,SAAUmL,QAAQC,EAAAA,GAAAA,IAAa,OAALtI,QAAK,IAALA,OAAK,EAALA,EAAOuI,KAC5C,CAAEvQ,OAAOkF,EAAAA,EAAAA,GAAE,UAAWmL,QAAQC,EAAAA,GAAAA,IAAa,OAALtI,QAAK,IAALA,OAAK,EAALA,EAAOwI,MAC7C,CACExQ,OAAOkF,EAAAA,EAAAA,GAAE,cACTmL,QAAQC,EAAAA,GAAAA,IAAa,OAALtI,QAAK,IAALA,GAAiB,QAAZ+H,EAAL/H,EAAOyI,kBAAU,IAAAV,OAAZ,EAALA,EAAmBM,QACnCK,WAAiB,OAAL1I,QAAK,IAALA,GAAiB,QAAZgI,EAALhI,EAAOyI,kBAAU,IAAAT,GAAjBA,EAAmBU,YAAaJ,EAAAA,GAAAA,IAAa,OAALtI,QAAK,IAALA,GAAiB,QAAZiI,EAALjI,EAAOyI,kBAAU,IAAAR,OAAZ,EAALA,EAAmBS,iBAAc3W,GAEvF,CACEiG,OAAOkF,EAAAA,EAAAA,GAAE,UACTmL,QAAQC,EAAAA,GAAAA,IAAa,OAALtI,QAAK,IAALA,GAAa,QAARkI,EAALlI,EAAO2I,cAAM,IAAAT,OAAR,EAALA,EAAeG,QAC/BK,WAAiB,OAAL1I,QAAK,IAALA,GAAa,QAARmI,EAALnI,EAAO2I,cAAM,IAAAR,GAAbA,EAAeO,YAAaJ,EAAAA,GAAAA,IAAa,OAALtI,QAAK,IAALA,GAAa,QAARoI,EAALpI,EAAO2I,cAAM,IAAAP,OAAR,EAALA,EAAeM,iBAAc3W,GAGnF,CAtHW6W,CAA4B5I,GAAOzV,KAAI,SAACkO,EAAMhO,GACnD,OACEoL,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAENgK,YAAa,MACbC,eAAgB,gBAChBtC,QAAS,UACTuC,IAAK,EACLhL,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAAAvI,SAAA,GAAAP,OAAS,OAAJ0N,QAAI,IAAJA,OAAI,EAAJA,EAAMT,MAAK,SACrBnC,EAAAA,EAAAA,MAAChC,EAAAA,EAAI,CAACE,QAAS,IAAIzI,SAAA,CACZ,OAAJmN,QAAI,IAAJA,OAAI,EAAJA,EAAM4P,QAEF,OAAJ5P,QAAI,IAAJA,OAAI,EAAJA,EAAMiQ,aAAU,MAAA3d,OAAc,OAAJ0N,QAAI,IAAJA,OAAI,EAAJA,EAAMiQ,WAAU,UAXpC,OAAJjQ,QAAI,IAAJA,OAAI,EAAJA,EAAMT,MAejB,GACF,GAAG,CAACgI,IAEJ,OACEnK,EAAAA,EAAAA,MAACqD,GAAAA,EAAAA,KAAmB,CAAClO,MAAO,CAAE+Y,UAAW,eAAgBzY,SAAA,EACvDV,EAAAA,EAAAA,KAACoZ,GAAAA,EAAkB,CACjBhM,MAAW,OAAJwL,QAAI,IAAJA,OAAI,EAAJA,EAAMxL,MACbkM,mBAAoB,WACdva,EAAWyE,OACbzE,EAAWyE,OAAOya,IAElBpF,EAASrV,OAAOya,GAEpB,KAGFhT,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAACd,WAAS,EAAAG,SAAA,EAChBV,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,SAAuB,CAACnF,QAAS,IAAK/I,MAAO,CAAE8d,MAAY,OAALzc,QAAK,IAALA,OAAK,EAALA,EAAO0c,iBAAkBzd,UAC7E4R,EAAAA,EAAAA,GAAE,gBAGLtS,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACd,WAAS,EAACyS,SAAU,OAAQ3H,YAAa,MAAM3K,SACrD,CACC,CAAE8K,OAAO8G,EAAAA,EAAAA,GAAE,SAAU1R,MAAgB,OAATsU,QAAS,IAATA,OAAS,EAATA,EAAW1J,OACvC,CAAEA,OAAO8G,EAAAA,EAAAA,GAAE,QAAS1R,MAAgB,OAATsU,QAAS,IAATA,OAAS,EAATA,EAAWkJ,OACtCze,KAAI,SAAA0e,GAAI,OACRpT,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAENgK,YAAa,MACbC,eAAgB,gBAChBtC,QAAS,UACTuC,IAAK,EACLhL,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAAAvI,SAAA,GAAAP,OAAKke,EAAK7S,UACfxL,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACE,QAAS,IAAIzI,UAAM,OAAJ2d,QAAI,IAAJA,OAAI,EAAJA,EAAMzd,QAAS,UAR/Byd,EAAK7S,MASF,UAKhBP,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAACd,WAAS,EAAAG,SAAA,EAChBV,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,SAAuB,CAACnF,QAAS,IAAK/I,MAAO,CAAE8d,MAAY,OAALzc,QAAK,IAALA,OAAK,EAALA,EAAO0c,iBAAkBzd,UAC7E4R,EAAAA,EAAAA,GAAE,cAGJ,CACC,CAAE9G,OAAO8G,EAAAA,EAAAA,GAAE,SAAU1R,MAAe,OAAR4U,QAAQ,IAARA,OAAQ,EAARA,EAAUhK,OACtC,CAAEA,OAAO8G,EAAAA,EAAAA,GAAE,QAAS1R,MAAe,OAAR4U,QAAQ,IAARA,OAAQ,EAARA,EAAU4I,OACrCze,KAAI,SAAA0e,GAAI,OACRpT,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAENgK,YAAa,MACbC,eAAgB,gBAChBtC,QAAS,UACTuC,IAAK,EACLhL,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAAAvI,SAAA,GAAAP,OAAKke,EAAK7S,UACfxL,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACE,QAAS,IAAIzI,UAAM,OAAJ2d,QAAI,IAAJA,OAAI,EAAJA,EAAMzd,QAAS,UAR/Byd,EAAK7S,MASF,QAIdP,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAACd,WAAS,EAACgL,IAAK,EAAE7K,SAAA,EACxBV,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,SAAuB,CAACnF,QAAS,IAAK/I,MAAO,CAAE8d,MAAY,OAALzc,QAAK,IAALA,OAAK,EAALA,EAAO0c,iBAAkBzd,UAC7E4R,EAAAA,EAAAA,GAAE,gBAGLtS,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACd,WAAS,EAAAG,SAAEoc,QAGtB7R,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAACd,WAAS,EAACgL,IAAK,EAAE7K,SAAA,EACxBV,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,SAAuB,CAACnF,QAAS,IAAK/I,MAAO,CAAE8d,MAAY,OAALzc,QAAK,IAALA,OAAK,EAALA,EAAO0c,iBAAkBzd,UAC7E4R,EAAAA,EAAAA,GAAE,YAGLtS,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACd,WAAS,EAAAG,SAAEwc,SAI5B,EHmII3E,SAAU,WACVxE,IAAK0D,GAAsB6G,UAG7B,CACElR,OAAOkF,EAAAA,EAAAA,GAAE,4BACTgG,SAAU,SAAA9P,GAAY,IAAD+V,EAAAC,EACnB,MAAO,CACL,CAAEpR,MAAO,aAAcxM,MAAc,OAAP4H,QAAO,IAAPA,GAAe,QAAR+V,EAAP/V,EAASiW,cAAM,IAAAF,GAAM,QAANC,EAAfD,EAAiBG,YAAI,IAAAF,OAAd,EAAPA,EAAuBG,OACrD,CACEvR,MAAO,aACPxM,MACS,OAAP4H,QAAO,IAAPA,GAAAA,EAASoW,YAAaC,EAAAA,GAAAA,UAAgB,OAAPrW,QAAO,IAAPA,OAAO,EAAPA,EAASoW,YAAaE,EAAAA,EAAAA,IAAgBC,KAAK1D,MAAa,OAAP7S,QAAO,IAAPA,OAAO,EAAPA,EAASoW,YAAc,KAE3Gjf,KAAI,SAAAkO,GAAS,IAADmR,EAAAhC,EACZ,OACE/R,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAAkBkK,IAAK,EAAGhL,WAAS,EAAC+K,eAAgB,gBAAiBD,YAAa,MAAM3K,SAAA,EAC9FV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAAAvI,SAAY,QAAZse,EAAEnR,EAAKT,aAAK,IAAA4R,EAAAA,GAAI1M,EAAAA,EAAAA,GAAE,gBACvBtS,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAAAvI,SAAY,QAAZsc,EAAEnP,EAAKjN,aAAK,IAAAoc,EAAAA,GAAI1K,EAAAA,EAAAA,GAAE,iBAFXzE,EAAKT,MAKvB,GACF,EACAmL,SAAU,UACVxE,IAAK0D,GAAsBe,SAE7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,4BACTgG,SAAU,SAAA9P,GAAY,IAADyW,EAAAC,EACnB,MAAO,CACL,CAAE9R,MAAO,aAAcxM,MAAc,OAAP4H,QAAO,IAAPA,GAAe,QAARyW,EAAPzW,EAAS2W,cAAM,IAAAF,GAAM,QAANC,EAAfD,EAAiBP,YAAI,IAAAQ,OAAd,EAAPA,EAAuBP,OACrD,CACEvR,MAAO,aACPxM,MACS,OAAP4H,QAAO,IAAPA,GAAAA,EAAS4W,YAAaP,EAAAA,GAAAA,UAAgB,OAAPrW,QAAO,IAAPA,OAAO,EAAPA,EAAS4W,YAAaN,EAAAA,EAAAA,IAAgBC,KAAK1D,MAAa,OAAP7S,QAAO,IAAPA,OAAO,EAAPA,EAAS4W,YAAc,KAE3Gzf,KAAI,SAAAkO,GAAS,IAADwR,EAAAC,EACZ,OACErU,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAAkBkK,IAAK,EAAGhL,WAAS,EAAC+K,eAAgB,gBAAiBD,YAAa,MAAM3K,SAAA,EAC9FV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAAAvI,SAAY,QAAZ2e,EAAExR,EAAKT,aAAK,IAAAiS,EAAAA,GAAI/M,EAAAA,EAAAA,GAAE,gBACvBtS,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAAAvI,SAAY,QAAZ4e,EAAEzR,EAAKjN,aAAK,IAAA0e,EAAAA,GAAIhN,EAAAA,EAAAA,GAAE,iBAFXzE,EAAKT,MAKvB,GACF,EACAmL,SAAU,UACVxE,IAAK0D,GAAsBe,SAG7B,CACEpL,OAAOkF,EAAAA,EAAAA,GAAE,UACTqG,cI3U6E,SAAH/Y,GAAwC,IAAlCiG,EAAIjG,EAAJiG,KAAM+S,EAAIhZ,EAAJgZ,KAAMe,EAAc/Z,EAAd+Z,eACxF4F,GAAkB9f,EAAAA,EAAAA,UAAQ,WAAO,IAAD+f,EACpC,OAAW,OAAJ3Z,QAAI,IAAJA,GAAY,QAAR2Z,EAAJ3Z,EAAM8Q,cAAM,IAAA6I,OAAR,EAAJA,EAAc7f,KAAI,SAAC8f,EAAS5f,GACjC,OACEG,EAAAA,EAAAA,KAACsO,GAAAA,EAAAA,aAA2B,CAAsCjD,YAAa,MAAOE,IAAK,EAAGpK,SAAU,OAAOT,SAC5Ggf,GAAAA,GAAAA,KACC,SAAAjd,GAAE,OAAIA,EAAG7B,QAASZ,EAAAA,EAAAA,KAAC2f,GAAAA,EAAiB,CAAyBC,IAAKH,EAAQhd,EAAG7B,QAAU,GAAIqG,UAAQ,UAAA9G,OAAlDsC,EAAG7B,OAAkD,KACvG,OAAAT,QAH6C,OAAPsf,QAAO,IAAPA,OAAO,EAAPA,EAASjb,MAAO3E,GAM7D,GACF,GAAG,CAAK,OAAJgG,QAAI,IAAJA,OAAI,EAAJA,EAAM8Q,SAEV,OACE1L,EAAAA,EAAAA,MAACqD,GAAAA,EAAAA,KAAmB,CAAClO,MAAO,CAAE+Y,UAAW,cAAenQ,QAAS,SAAUtI,SAAA,EACzEV,EAAAA,EAAAA,KAACoZ,GAAAA,EAAkB,CACjBhM,MAAW,OAAJwL,QAAI,IAAJA,OAAI,EAAJA,EAAMxL,MACbkM,mBAAoB,WAClBK,EAAe,CAAE7Z,gBAAiB+f,GAAmB9f,MAAO,CAAE0H,MAAO5B,IACvE,KAGF7F,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAACkK,IAAK,EAAGiO,OAAQ,cAAexQ,QAAS,QAAS5I,MAAO,CAAE+Y,UAAW,IAAKzY,SAChF6e,MAIT,EJiTIhH,SAAU,SACVxE,IAAK0D,GAAsBqI,SAyB/B,I,MAAA,GAlU0D,SAAHlgB,GAA6B,IAADmgB,EAAtB7f,EAASN,EAATM,UAAcsB,GAACoN,EAAAA,EAAAA,GAAAhP,EAAAiP,IACpEmR,GAASC,EAAAA,EAAAA,MAETxY,GADOuC,EAAAA,EAAAA,MACM1F,aACbvF,GAAaC,EAAAA,EAAAA,MACbkhB,EAwSR,WAIE,IAAMC,EAGF,CAAC,EAWL,OAVA9H,GAAmBvE,SAAQ,SAAAjG,GACzB,IAEkCuS,EAF5BrM,EAAMlG,EAAKkG,IACbA,IACEoM,EAAsBpM,GACE,QAA1BqM,EAAAD,EAAsBpM,UAAI,IAAAqM,GAA1BA,EAA4BhP,KAAKvD,GAEjCsS,EAAsBpM,GAAO,CAAClG,GAGpC,IACOsS,CACT,CA3TmBE,GAEjBre,GAAoCC,EAAAA,EAAAA,UAAgCwV,GAAsBe,SAAQtW,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3FkI,EAAUhI,EAAA,GAAEiI,EAAajI,EAAA,GAE1Boe,GAAc7gB,EAAAA,EAAAA,UAClB,eAAA8gB,EAAA,OACGL,EAAShW,GAEc,QADhBqW,EACJL,EAAShW,UAAW,IAAAqW,OAAA,EAApBA,EAAsB5gB,KAAI,SAAA0F,GAAiC,IAA9BsT,EAAatT,EAAbsT,cAAkBC,GAAIhK,EAAAA,EAAAA,GAAAvJ,EAAAmb,IACjD,OAAI7H,GACK3Y,EAAAA,EAAAA,KAAC2Y,EAAa,CAAkBgB,eAAgB5a,EAAWwE,KAAMqV,KAAMA,EAAM/S,KAAM4B,GAA/DmR,EAAKxL,QAE3BpN,EAAAA,EAAAA,KAACygB,GAAAA,EAAgB,CAAkB9G,eAAgB5a,EAAWwE,KAAMqV,KAAMA,EAAM/S,KAAM4B,GAA/DmR,EAAKxL,MACrC,IANA,IAME,GACR,CAAC8S,EAAUhW,EAAYnL,EAAWwE,KAAMkE,IAG1C,OACEwD,EAAAA,EAAAA,MAAC0M,GAAS,CAACpX,WAAS,EAACuL,KAAM,EAAG5L,UAAWA,EAAW8I,QAAS,QAAQtI,SAAA,EACnEV,EAAAA,EAAAA,KAACkL,EAAAA,GAAY,CAACkC,OAAOkF,EAAAA,EAAAA,GAAE,kBAAmBnH,YAAa6U,EAAOU,UAE9D1gB,EAAAA,EAAAA,KAAC0L,EAAAA,EAAW,CACViV,YAAa,CAAEC,aAAa,GAC5BjV,QAAS+L,GACT9L,YAAa,SAAAiV,GACXb,EAAOc,QAAQ,CAAEC,KAAY,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQjgB,SACzB,OAANigB,QAAM,IAANA,OAAM,EAANA,EAAQjgB,QAASuJ,EAAoB,OAAN0W,QAAM,IAANA,OAAM,EAANA,EAAQjgB,MACzC,KAGFZ,EAAAA,EAAAA,KAAC+L,GAAO,CAACxL,WAAS,EAACuL,KAAM,EAAG3K,SAAU,OAAOT,SAC1C4f,KAGHrV,EAAAA,EAAAA,MAAC2M,GAAM,CAACrX,WAAS,EAAC8K,YAAa,MAAOE,IAAK,EAAGvC,QAAS,QAAQtI,SAAA,EAC7DV,EAAAA,EAAAA,KAAC+X,EAAAA,GAAU,CACT8C,KAAM,OACNmG,QAAS,WACTC,SAAU,MACVna,KAAM,OACNG,WAAY,OAADzF,QAAC,IAADA,GAAAA,EAAG0f,QACdzgB,QAAU,OAADe,QAAC,IAADA,OAAC,EAADA,EAAG0f,UAGdlhB,EAAAA,EAAAA,KAAC+X,EAAAA,GAAU,CACTiJ,QAAS,WACTnG,KAAM,OACNoG,SAAU,MACVna,KAAO,OAADtF,QAAC,IAADA,GAAU,QAATue,EAADve,EAAGgH,eAAO,IAAAuX,GAAVA,EAAYoB,QAAU,eAAiB,gBAC7Cla,WAAY,OAADzF,QAAC,IAADA,GAAAA,EAAG4f,QACd3gB,QAAU,OAADe,QAAC,IAADA,OAAC,EAADA,EAAG4f,UAGdphB,EAAAA,EAAAA,KAAC8X,GAAS,CACRkJ,QAAS,WACTnG,KAAM,OACNoG,SAAU,MACVna,KAAM,SACNG,WAAY,OAADzF,QAAC,IAADA,GAAAA,EAAG6f,UACd5gB,QAAU,OAADe,QAAC,IAADA,OAAC,EAADA,EAAG6f,YAGdpW,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CAACgK,YAAa,MAAOE,IAAK,EAAG+V,OAAQ,aAAa5gB,SAAA,EACxDV,EAAAA,EAAAA,KAAC+X,EAAAA,GAAU,CACT8C,KAAM,OACNmG,QAAS,WACTC,SAAU,MACVna,KAAM,UACNG,WAAY,OAADzF,QAAC,IAADA,GAAAA,EAAG+f,WACd9gB,QAAU,OAADe,QAAC,IAADA,OAAC,EAADA,EAAG+f,aAGdvhB,EAAAA,EAAAA,KAACmY,GAAO,CACN0C,KAAM,OACNmG,QAAS,WACTC,SAAU,MACVna,KAAM,iBACNG,WAAY,OAADzF,QAAC,IAADA,GAAAA,EAAGggB,iBACd/gB,QAAU,OAADe,QAAC,IAADA,OAAC,EAADA,EAAGggB,0BAMxB,E,WK9EMC,IAAWrgB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0FAKJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMkI,gBAAgB,IAGzD,GAjD4E,SAAH/J,GAAuC,IAAjC8hB,EAAyB9hB,EAAzB8hB,0BACvE3X,GAAOC,EAAAA,EAAAA,MACPrF,EAAUgd,KAEV5d,GAASC,EAAAA,EAAAA,MAEC4d,GAAc1d,EAAAA,EAAAA,MAAtB2d,OAER,OACE5W,EAAAA,EAAAA,MAACwW,GAAQ,CAAA/gB,SAAA,EACPV,EAAAA,EAAAA,KAAC8hB,GAAe,CACdtZ,QAAa,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMzF,aACf4c,OAAQ,WACDnX,EAAKzF,cAIVP,EAAOge,UAAU,CACfC,MAAOC,GAAAA,EAAAA,UACPliB,MAAO,CACL0H,MAAW,OAAJsC,QAAI,IAAJA,OAAI,EAAJA,EAAMzF,aACb8I,OAAOkF,EAAAA,EAAAA,GAAE,gBAGf,EACAiP,UAAW,WAAO,IAAD3X,EAAAC,EACO,QAAlBD,EAACG,EAAKzF,oBAAY,IAAAsF,GAAjBA,EAAmBpF,KAExBod,EAAUM,OAAO,CACfrc,KAAM,CAAEjD,OAAQ,CAAE4B,IAAsB,QAAnBqF,EAAEE,EAAKzF,oBAAY,IAAAuF,OAAA,EAAjBA,EAAmBrF,IAAK2d,WAAW,EAAOC,eAAe,IAChFpc,UAAWrB,EAAQqB,UAAU,UAEjC,EACAwb,gBAAiBE,KAGnB1hB,EAAAA,EAAAA,KAACnB,EAAAA,EAAY,MAGnB,ECrCa8iB,GAA0B,WAAH,OAAS/c,EAAAA,EAAAA,KAA6C,EA8BpFyd,GAAOjhB,EAAAA,GAAAA,IAAUE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mVAInB+gB,EAAAA,IAYJ,GA5C2C,SAAH1iB,GAAkB,IAAZ0P,EAAI1P,EAAJ0P,KACtC3K,GAAUsF,EAAAA,EAAAA,GAAmC,CACjDxC,MAAO,CAAEL,SAASkL,EAAAA,EAAAA,GAAE,yBACpBtK,OAAQ,CAAEZ,QAAS,kBACnBmb,WAAY,CAAEnb,QAAS,wBAEzBpF,GAAoDC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArEwgB,EAAkBtgB,EAAA,GAAEugB,EAAqBvgB,EAAA,GAE1CwgB,GAAkBxjB,EAAAA,EAAAA,cAAY,WAClCujB,GAAsB,SAAAjhB,GAAC,OAAKA,CAAC,GAC/B,GAAG,IAEH,OACExB,EAAAA,EAAAA,KAACgL,EAAAA,GAAe,CAACpK,MAAO+D,EAAQjE,UAC9BV,EAAAA,EAAAA,KAAC2iB,EAAAA,GAAiB,CAAAjiB,UAChBV,EAAAA,EAAAA,KAAC4iB,EAAAA,GAAoB,CAAAliB,UACnBV,EAAAA,EAAAA,KAAC6iB,EAAAA,QAAW,CAACvT,KAAMA,EAAK5O,UACtBuK,EAAAA,EAAAA,MAACoX,GAAI,CAAA3hB,SAAA,EACHV,EAAAA,EAAAA,KAAC8iB,GAAyB,CAACpB,0BAA2BgB,KAEtD1iB,EAAAA,EAAAA,KAAC+iB,EAA0B,CAACtZ,UAAW+Y,EAAoB1Y,iBAAkB4Y,cAO3F,C,8GC/BaM,GAAsBpkB,EAAAA,EAAAA,eAAc,CAAC,GAErCoL,EAAsB,WAAH,OAASjI,EAAAA,EAAAA,YAAWihB,EAAoB,EAuDxE,KArD4D,SAAHpjB,GAAsB,IAAhBc,EAAQd,EAARc,SACvDkhB,GAAY1d,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QACpCQ,GAAUgd,EAAAA,EAAAA,2BACV/e,GAASyB,EAAAA,EAAAA,MACTD,EAAgB,OAANxB,QAAM,IAANA,OAAM,EAANA,EAAQwB,QAElBE,GAAeC,EAAAA,EAAAA,IAAgB,CAAEC,IAAKJ,KAE5CuD,EAAAA,EAAAA,YAAU,WAAO,IAADjE,EACH,OAAPiB,QAAO,IAAPA,GAAkB,QAAXjB,EAAPiB,EAASoD,iBAAS,IAAArE,GAAlBA,EAAoB+D,OAEpBrD,GACFwd,EACGM,OAAO,CACNrc,KAAM,CACJjD,OAAQ,CACN4B,IAAKJ,EACLge,eAAe,EACfD,WAAW,IAGfnc,UAAWrB,EAAQqB,UAAU,WAE9Bid,OAGP,GAAG,CAAC7e,IAgBJ,OARAuD,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLia,EAAUsB,kBAAa/b,EACzB,CAGF,GAAG,KAGDnH,EAAAA,EAAAA,KAACgjB,EAAoBriB,SAAQ,CAC3BC,MAAO,CACLsiB,aAfe,WACnBtB,EAAUsB,kBAAa/b,EACzB,EAcM7C,aAAAA,GACA5D,SAEDA,GAGP,C,4eC1BMyiB,EAAUC,EAAAA,KAAaC,MAAM,CACjC7X,MAAO4X,EAAAA,KAAaE,WAAW/H,IAAI,GAAGC,IAAI,KAC1C/P,IAAK2X,EAAAA,KAAaE,WAAW/H,IAAI,GAAGC,IAAI,IACxC9C,QAAS0K,EAAAA,KAAa5H,IAAI,IAC1B+H,IAAKH,EAAAA,KAAaC,MAAM,CACtBG,OAAQJ,EAAAA,KAAaC,MAAM,CACzBI,GAAIL,EAAAA,KAAa7H,IAAI,GAAGC,IAAI,IAC5BkI,GAAIN,EAAAA,KAAa7H,IAAI,GAAGC,IAAI,QAGhCmI,cAAeP,EAAAA,KAEZC,MAAM,CACL,GAEDO,cACAN,WACH7b,MAAO2b,EAAAA,KAAaC,MAAM,CACxB7e,IAAK4e,EAAAA,KAAaE,WAClB9X,MAAO4X,EAAAA,KACPI,OAAQJ,EAAAA,KAAaC,MAAM,CACzBI,GAAIL,EAAAA,KAAa7H,IAAI,GAAGC,IAAI,IAC5BkI,GAAIN,EAAAA,KAAa7H,IAAI,GAAGC,IAAI,QAGhCqI,SAAUT,EAAAA,KACVU,OAAQV,EAAAA,KACRhO,MAAOgO,EAAAA,KAAaC,MAAM,CACxBzF,IAAKwF,EAAAA,SAGHW,EAAkB,CACtB,CAAE3W,OAAOkF,EAAAA,EAAAA,GAAE,eAAgBzP,KAAM,QAASygB,UAAU,EAAMxX,KAAM,YAChE,CAAEsB,OAAOkF,EAAAA,EAAAA,GAAE,OAAQzP,KAAM,MAAOygB,UAAU,EAAMxX,KAAM,WACtD,CAAEsB,OAAOkF,EAAAA,EAAAA,GAAE,YAAazP,KAAM,UAAWygB,UAAU,EAAOxX,KAAM,YAkR5DkY,GAAgB5iB,EAAAA,EAAAA,IAAOqV,EAAAA,GAAPrV,CAAgBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8LAW3B,SAAAC,GAAC,OAAIA,EAAEC,MAAMwiB,gBAAgB,IAClB,SAAAziB,GAAC,OAAIA,EAAEC,MAAMyiB,oBAAoB,IAEjDnY,GAAU3K,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAC5B,SAAAxK,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAGtDmY,GAAiB/iB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeyW,IAAAA,GAAAtW,EAAAA,EAAAA,GAAA,2CACT,SAAAC,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAG5D,EAvSoE,SAAHpM,GAS1D,IAADwkB,EAAA1gB,EARJ7C,EAAOjB,EAAPiB,QACAuM,EAAKxN,EAALwN,MAEA1F,GADQ9H,EAARoN,SACQpN,EAAR8H,UAEAtD,GADMxE,EAAN4D,OACO5D,EAAPwE,SACAqD,EAAK7H,EAAL6H,MACG1H,GAAK6O,EAAAA,EAAAA,GAAAhP,EAAAiP,GAEFE,GAAQ1G,EAAAA,EAAAA,MACR8D,GAAUjI,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QAClCQ,GAAUsF,EAAAA,EAAAA,KACVoa,GAAYC,EAAAA,EAAAA,IAAoB,CAAE9f,IAAKkD,IACvCoH,GAAQvK,EAAAA,EAAAA,IAAgB,CAAEC,KAAc,OAAT6f,QAAS,IAATA,GAAgB,QAAPD,EAATC,EAAW5c,aAAK,IAAA2c,OAAP,EAATA,EAAkB5f,MAAOJ,IAAgB,OAALqD,QAAK,IAALA,OAAK,EAALA,EAAOjD,OAE1E+f,GAAgBC,EAAAA,EAAAA,KACtBxiB,GAA8CC,EAAAA,EAAAA,UAA4CoiB,EAAU3V,UAASxM,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtGwN,EAAetN,EAAA,GAAEuN,EAAkBvN,EAAA,GAEpCuiB,GAAc9P,EAAAA,EAAAA,IAA8B,CAChDC,eAAe8P,EAAAA,EAAAA,IACbL,GAAStjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAsjB,GAAS,IAAE5c,MAAOqH,EAAOJ,SAAUc,IACxC,CAAE/H,MAAOqH,EAAOJ,SAAUc,GAC9BV,GAEF6V,UAAUC,EAAAA,EAAAA,GAAYzB,GACtB0B,eAAgB,aAIhBhQ,GAME4P,EANF5P,SACApD,GAKEgT,EALFhT,aACAqT,GAIEL,EAJFK,SACaC,GAGXN,EAHFO,UAAaD,OACbhQ,GAEE0P,EAFF1P,WACAkQ,GACER,EADFQ,MAGI/U,IAAiBzQ,EAAAA,EAAAA,UAAQ,WAAO,IAAD0Q,EAAAC,EAAA8U,EACnC,GAAmB,OAAf1V,QAAe,IAAfA,GAA6B,QAAdW,EAAfX,EAAiBrB,oBAAY,IAAAgC,GAA7BA,EAA+BjP,OACjC,OAAsB,OAAfsO,QAAe,IAAfA,OAAe,EAAfA,EAAiBrB,aAAa3L,QAAO,SAAAqL,GAAI,IAAAK,EAAA,OAAIL,EAAKwC,eAAoB,OAAJxC,QAAI,IAAJA,GAAkB,QAAdK,EAAJL,EAAMM,oBAAY,IAAAD,OAAd,EAAJA,EAAoBhN,OAAQ,IAGvG,IAMmCwP,EAN7BJ,EAAyB,OAAfd,QAAe,IAAfA,OAAe,EAAfA,EAAiBhL,IAC3B+L,EAAoC,GAGpCC,EAA4D,QAA9CJ,EAA0B,QAA1B8U,EAAGnW,EAAM0B,yBAAiB,IAAAyU,OAAA,EAAvBA,EAAiC,OAAP5U,QAAO,IAAPA,EAAAA,EAAW,cAAM,IAAAF,EAAAA,EAAI,GAAGO,GAAAC,EAAAA,EAAAA,GAEpDJ,GAAc,IAAnC,IAAAG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAqC,CAAC,IAADC,EAA1BC,EAAMP,EAAA9P,MACTqP,EAA8B,QAA1Be,EAAGjC,EAAMmC,yBAAiB,IAAAF,OAAA,EAAvBA,EAA0BC,GACvC,GAAQ,OAAJhB,QAAI,IAAJA,GAAAA,EAAMI,aAAc,CACtB,IAAMc,EAAcpC,EAAM0B,kBAAsB,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMzL,KACnC,OAAX2M,QAAW,IAAXA,GAAAA,EAAajQ,QACfqP,EAAgBa,KAAKnB,EAEzB,CACF,CAAC,OAAAoB,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CAED,OAAOhB,CACT,GAAG,CAAgB,OAAff,QAAe,IAAfA,OAAe,EAAfA,EAAiBhL,IAAoB,OAAfgL,QAAe,IAAfA,OAAe,EAAfA,EAAiBrB,aAAcY,EAAMmC,kBAAmBnC,EAAM0B,oBAElF0U,IAAejmB,EAAAA,EAAAA,cACnB,SAACkmB,GACC,IAAKA,EACH,MAAM,GAANjlB,OAAe,OAAL2O,QAAK,IAALA,OAAK,EAALA,EAAOtD,MAAK,yBAGxB,IAI+B6Z,EAJzBC,EAAcF,GAAiB5Y,EAAAA,EAAAA,IAAQ+N,OAAOgL,KAAKH,IAAzB,GAE1BI,EAAyB,OAAL1W,QAAK,IAALA,GAAAA,EAAOtD,MAAQ,CAAM,OAALsD,QAAK,IAALA,OAAK,EAALA,EAAOtD,OAAS,GAAGia,GAAA7U,EAAAA,EAAAA,GAExC0U,GAAU,IAA/B,IAAAG,EAAA5U,MAAAwU,EAAAI,EAAA3U,KAAAC,MAAiC,CAAC,IAC1BnQ,EAAQwkB,EADCC,EAAAzkB,QAGV,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO4K,QAASga,EAAQpU,KAAU,OAALxQ,QAAK,IAALA,OAAK,EAALA,EAAO4K,MACtC,CAAC,OAAA6F,GAAAoU,EAAAnU,EAAAD,EAAA,SAAAoU,EAAAlU,GAAA,CACD,IAAMmU,EAAoB,OAAPF,QAAO,IAAPA,GAAAA,EAAStkB,OAExBskB,EAAQ3Y,KAAK,OADJ,OAATwX,QAAS,IAATA,OAAS,EAATA,EAAW7Y,QAAK,GAAArL,OAAY,OAAL2O,QAAK,IAALA,OAAK,EAALA,EAAOtD,MAAK,yBAIvC,OADAqJ,GAAS,QAAS6Q,GACXA,CACT,GACA,CAAM,OAAL5W,QAAK,IAALA,OAAK,EAALA,EAAOtD,MAAgB,OAAT6Y,QAAS,IAATA,OAAS,EAATA,EAAW7Y,MAAOqJ,KAG7B8Q,IAAUzmB,EAAAA,EAAAA,cACd,SAAC2G,GACK6B,EACFyE,EAAQyZ,oBAAoB,CAC1Bve,UAAW1C,EAAQ0C,UAAU,SAAUxG,GACvCmF,UAAWrB,EAAQqB,UAAU,UAC7B6f,QAAS/T,EAAAA,GAAAA,gBACTjM,KAAM,CAAEA,MAAMigB,EAAAA,EAAAA,IAAmBjgB,MAGnCsG,EAAQ4Z,gBAAgB,CACtBF,QAAS/T,EAAAA,GAAAA,gBACT9L,UAAWrB,EAAQqB,UAAU,UAC7BqB,UAAW,SAAAxB,GAGD,IAADmgB,EAFHzB,EAAcxV,MAAMkX,MACtBplB,GAAWA,KAEX0jB,EAAcxV,MAAMmX,OAASjB,KAC7BpQ,GAAS,OAAkB,QAAXmR,EAAM,OAALlX,QAAK,IAALA,OAAK,EAALA,EAAOrD,WAAG,IAAAua,EAAAA,EAAI,KAAMljB,EAAAA,EAAAA,IAAO,KAEhD,EACA+C,KAAM,CAAEA,MAAMigB,EAAAA,EAAAA,IAAmBjgB,KAKvC,GACA,CACO,OAALiJ,QAAK,IAALA,OAAK,EAALA,EAAOrD,IACP9G,EACA9D,EACAokB,GACA9Y,EACA0I,GACA0P,EAAcxV,MAAMmX,MACpB3B,EAAcxV,MAAMkX,MACpBve,IAIEuK,IAAe/S,EAAAA,EAAAA,cACnB,SAACinB,EAAkBhU,GAAqB,IAADiU,EAC/BC,EAAgC,QAA3BD,EAAGrR,GAAW4O,qBAAa,IAAAyC,OAAA,EAAxBA,EAA2BD,GACzC,GAAIE,GAASA,EAAM7hB,MAAQ2N,EAAS,CAClC,IAAMmU,EAASxnB,IAAAA,KAAOiW,GAAW4O,cAAewC,GAChDtR,GAAS,gBAAiByR,GAC1BnB,GAAamB,EACf,KAAO,CAAC,IAADnM,EACCvZ,EAA+B,QAA1BuZ,EAAGpL,EAAMmC,yBAAiB,IAAAiJ,OAAA,EAAvBA,EAA0BhI,GACxC,GAAIvR,EAAO,CACT,IAAM0lB,GAAMvlB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQgU,GAAW4O,eAAa,IAAAnZ,EAAAA,EAAAA,GAAA,GAAG2b,EAAWvlB,IAC1DiU,GAAS,gBAAiByR,GAC1BnB,GAAamB,EACf,CACF,CACF,GACA,CAACnB,GAAcpQ,GAAW4O,cAAe9O,GAAU9F,EAAMmC,oBAGrDlD,IAAcvO,EAAAA,EAAAA,UAAQ,WAC1B,OAAiB,OAAVsV,SAAU,IAAVA,IAAAA,GAAY4O,cAAgBpJ,OAAOD,OAAiB,OAAVvF,SAAU,IAAVA,QAAU,EAAVA,GAAY4O,eAAehkB,KAAI,SAAAkO,GAAI,OAAIA,EAAKrJ,GAAG,IAAI,EACtG,GAAG,CAACuQ,KAEEnI,IAAYnN,EAAAA,EAAAA,UAAQ,WAAO,IAAD+R,EAAA+U,EACxBC,EAAenC,EAAUoC,iBAAkE,QAAtCjV,GAAGhF,EAAAA,EAAAA,IAAQ6X,EAAUoC,yBAAiB,IAAAjV,OAAA,EAAnCA,EAAqC3E,KAAK,UAAtD1F,EAE5Cuf,EAAkB1Y,GAA8C,QAAvBuY,GAAG/Z,EAAAA,EAAAA,IAAQwB,WAAY,IAAAuY,OAAA,EAApBA,EAAsB1Z,KAAK,UAAvC1F,EAEtC,QAASuf,GAAkBA,IAAmBF,CAChD,GAAG,CAACnC,EAAUoC,iBAAkBzY,KAE1B2Y,IAAgBlnB,EAAAA,EAAAA,UAAQ,WAC5B,OAAiB,OAAVsV,SAAU,IAAVA,IAAAA,GAAY4O,cACfpJ,OAAOqM,YACLrM,OAAOnG,QAAkB,OAAVW,SAAU,IAAVA,QAAU,EAAVA,GAAY4O,eAAehkB,KAAI,SAAA0F,GAAqB,IAADL,GAAA7C,EAAAA,EAAAA,GAAAkD,EAAA,GAAlB4L,EAAMjM,EAAA,GAAE6I,EAAI7I,EAAA,GAC1D,MAAO,CAACiM,EAAY,OAAJpD,QAAI,IAAJA,OAAI,EAAJA,EAAMrJ,IACxB,KAEF,CAAC,CACP,GAAG,CAAW,OAAVuQ,SAAU,IAAVA,QAAU,EAAVA,GAAY4O,gBAEVvR,IAAuB3S,EAAAA,EAAAA,UAAQ,WACnC,OAAqB,OAAdyQ,SAAc,IAAdA,QAAc,EAAdA,GAAgBvQ,KAAI,SAAAsQ,GACzB,IAAM4W,EAAaF,GAAc1W,EAAKzL,KAEtC,OACExE,EAAAA,EAAAA,KAACqS,EAAAA,EAAqB,CAEpBxE,KAAMoC,EACNjC,YAAa6Y,EAAa,CAACA,GAAc,GACzCljB,SAAUsO,IAAa,QAAA9R,OAHV8P,EAAKzL,KAMxB,GACF,GAAG,CAAC0L,GAAgByW,GAAe1U,KAEnC,OACEjS,EAAAA,EAAAA,KAAC8mB,EAAAA,EAAU,CAACxmB,YAAU,EAAC6K,YAAatK,EAASwM,UAAU,EAAOD,MAAOA,GAAS,mBAAmB1M,UAC/FV,EAAAA,EAAAA,KAACgL,EAAAA,GAAe,CAACpK,MAAO+D,EAAQjE,UAC9BuK,EAAAA,EAAAA,MAAC+Y,GAAajjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACZiM,SAAUyE,GAAakU,IAAS,SAAAZ,GAC9BhT,QAAQmG,MAAM,iBAAkB6M,EAClC,KACIhlB,GAAK,IAAAW,SAAA,EAETuK,EAAAA,EAAAA,MAACc,EAAO,CAACD,KAAM,EAAGvL,WAAS,EAACY,SAAU,OAAOT,SAAA,EAC3CV,EAAAA,EAAAA,KAAC+mB,EAAAA,EAAiB,CAACvb,MAAO,QAASwb,YAAU,EAACC,QAAQ,EAAMvmB,UAC1DV,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CACNnB,UAAW,4BACX8S,SAAU,OACV3H,YAAa,MACb7K,WAAY,WACZJ,MAAO,CAAE8mB,UAAW,IAAKxmB,SAExBqjB,EAAgBpkB,KAAI,SAAAwnB,GAA4B,IAADC,EAAxBvkB,EAAIskB,EAAJtkB,KAAMuK,EAAK+Z,EAAL/Z,MAAOtB,EAAIqb,EAAJrb,KACnC,OACE9L,EAAAA,EAAAA,KAACqnB,EAAAA,EAAU,CAAYnnB,UAAW2C,EAAMiJ,KAAMA,EAAMN,MAAO4B,EAAOnG,UAAQ,EAAAvG,UAExEV,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAAC2H,QAAS,UAAWmQ,UAAW,OAAOzY,UAC7CV,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CAACE,QAAS,IAAKD,MAAO,GAAGxI,SACd,QADc0mB,EACtB,OAALtY,QAAK,IAALA,OAAK,EAALA,EAAQjM,UAAK,IAAAukB,EAAAA,OAAIjgB,OAJPtE,EASrB,SAIJ7C,EAAAA,EAAAA,KAAC+mB,EAAAA,EAAiB,CAACvb,MAAO,YAAa8b,YAAY,EAAON,YAAU,EAAAtmB,UAClEV,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CACNnB,UAAW,sBACX8S,SAAU,OACV3H,YAAa,MACb7K,WAAY,WACZJ,MAAO,CAAE8mB,UAAW,IAAKxmB,SAExBqjB,EAAgBpkB,KAAI,SAAA4nB,GAAsC,IAAnC1kB,EAAI0kB,EAAJ1kB,KAAMuK,EAAKma,EAALna,MAAOtB,EAAIyb,EAAJzb,KAAMwX,EAAQiE,EAARjE,SACzC,OACEtjB,EAAAA,EAAAA,KAACqnB,EAAAA,EAAU,CAETnnB,UAAW2C,EACX2I,MAAO4B,EACP8K,MAAa,OAAN6M,SAAM,IAANA,QAAM,EAANA,GAASliB,GAChBygB,SAAUA,EACVxX,KAAMA,EAAKpL,UAEXV,EAAAA,EAAAA,KAACwnB,EAAAA,IAASzmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK+jB,GAASjiB,EAAM,CAAEygB,SAAAA,KAAW,IAAEmE,aAAanV,EAAAA,EAAAA,GAAE,aAPvDzP,EAUX,SAIJoI,EAAAA,EAAAA,MAAC8b,EAAAA,EAAiB,CAACvb,OAAO8G,EAAAA,EAAAA,GAAE,cAAegV,YAAY,EAAON,YAAU,EAAAtmB,SAAA,EACtEV,EAAAA,EAAAA,KAACuS,EAAAA,EAAuB,CACtB5O,SAAU,SAAA+jB,GACR7S,GAAS,WAAY6S,GACrBjY,EAAmBiY,EACrB,EACA9jB,SAAU4L,KAGZxP,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CAAC2H,QAAS,QAAQtI,SAAE0R,YAIhCpS,EAAAA,EAAAA,KAACyN,EAAAA,GAAa,CACZnF,QAA0B,QAAnB5E,EAAEiB,EAAQoD,iBAAS,IAAArE,OAAA,EAAjBA,EAAmBF,OAC5BmkB,cAAe9mB,EACf6R,kBAAkBJ,EAAAA,EAAAA,GAAE,UACpB1F,UAAWA,GACXgb,aACE5nB,EAAAA,EAAAA,KAACmkB,EAAc,CAAAzjB,UACbV,EAAAA,EAAAA,KAAC6nB,EAAAA,GAAsB9mB,EAAAA,EAAAA,GAAA,GAAKwjB,eAQ5C,ECzNA,EAjHoD,SAAH3kB,GAA2D,IAAD8D,EAApDC,EAAQ/D,EAAR+D,SAAUC,EAAQhE,EAARgE,SAAQC,EAAAjE,EAAEkE,YAAAA,OAAW,IAAAD,GAAOA,EAAE4D,EAAK7H,EAAL6H,MACvF9C,GAAUsF,EAAAA,EAAAA,KAEVF,GAAOC,EAAAA,EAAAA,MACP8E,GAAQvK,EAAAA,EAAAA,IAAgBkD,IAAa,OAAJsC,QAAI,IAAJA,OAAI,EAAJA,EAAMzF,eAEvCP,GAASC,EAAAA,EAAAA,MACT8jB,GAAW5jB,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,QAGnCY,GAAW7F,EAAAA,EAAAA,cACf,SAAAmG,GAAmE,IAAhEC,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACLuJ,GAELgZ,EAASC,iBAAiB,CACxBliB,KAAM,CAAC,EACPjD,OAAQ,CACNwB,QAAS0K,EAAMtK,KAEjBe,OAAAA,EACAD,QAAAA,EACAU,UAAWrB,EAAQqB,UAAU,eAEjC,GACA,CAAC8I,EAAOnK,EAASmjB,IAEbE,GAAwBvoB,EAAAA,EAAAA,UAAQ,WAAO,IAADwoB,EAEKvX,EADzCiT,EAAgD,CAAC,EAAEhT,GAAAC,EAAAA,EAAAA,GAChB,QADgBqX,EAC5B,OAALnZ,QAAK,IAALA,OAAK,EAALA,EAAOyT,kBAAU,IAAA0F,EAAAA,EAAI,IAAE,IAA/C,IAAAtX,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAiD,CAAC,IAGdsU,EAF5B6C,EADYxX,EAAA9P,MACUyO,WAAWoW,GAAA7U,EAAAA,EAAAA,GAEX,OAATsX,QAAS,IAATA,EAAAA,EAAa,IAAE,IAAlC,IAAAzC,EAAA5U,MAAAwU,EAAAI,EAAA3U,KAAAC,MAAoC,CAAC,IAADoX,EAAzBlY,EAAIoV,EAAAzkB,MACPqQ,EAAa,OAAJhB,QAAI,IAAJA,GAAY,QAARkY,EAAJlY,EAAM1B,cAAM,IAAA4Z,OAAR,EAAJA,EAAc3jB,IACzByM,GAAUhB,EAAK1B,SACjBoV,EAAc1S,GAAUhB,EAAK1B,OAEjC,CAAC,OAAA8C,GAAAoU,EAAAnU,EAAAD,EAAA,SAAAoU,EAAAlU,GAAA,CACH,CAAC,OAAAF,GAAAV,EAAAW,EAAAD,EAAA,SAAAV,EAAAY,GAAA,CACD,OAAO6W,EAAAA,EAAAA,IAAgC7N,OAAOD,OAAOqJ,GACvD,GAAG,CAAM,OAAL7U,QAAK,IAALA,OAAK,EAALA,EAAOyT,aAELlc,GAAc5G,EAAAA,EAAAA,UAAQ,WAC1B,MAAO,CACL6G,WAAY,SAAAT,GACNlC,GAAgB,OAAJkC,QAAI,IAAJA,GAAAA,EAAMW,SACpB7C,EAAa,OAAJkC,QAAI,IAAJA,OAAI,EAAJA,EAAMW,QAEnB,EACAE,eAAiB5C,EAEb,SAAA6C,GAAQ,IAADC,EACCC,EAA2B,QAAlBD,EAAGD,EAAIlC,mBAAW,IAAAmC,OAAA,EAAfA,EAAiBpC,IAEnC,MAAO,CACL,CAAEsC,KAAM,UAAWC,KAAM,WAAYtG,QAAS,kBAAMsE,EAAS,CAAEO,SAAS,GAAO,GAE/E,CAAE0B,WAAW,GACb,CACEF,KAAM,SACNC,KAAM,WACNE,UAAWJ,EACXpG,QAAS,WACP4nB,OAAOC,QAAQ,wGAADnoB,OAAyB0G,GACzC,GAEF,CAAEC,KAAM,OAAQC,KAAM,WAAYE,UAAWJ,GAC7C,CACEC,KAAM,OACNC,KAAM,WACNE,UAAWJ,EACXpG,QAAS,WACFoG,GAAcF,EAAIlC,aAEvBV,EAAOP,OAAO+kB,EAAwB,CACpC7gB,SAAUb,GAEd,GAEF,CAAEG,WAAW,GACb,CACEF,KAAM,OACNC,KAAM,iBACNtG,QAAS,WAGPsD,EAAOP,OAAO+kB,EAAwB,CAAE9gB,MAAOqH,GACjD,GAGN,OAxCA3H,EA0CR,GAAG,CAAC2H,EAAO/J,EAAUhB,EAAQJ,EAAUG,IASvC,OAPA6D,EAAAA,EAAAA,YAAU,WACJmH,GACF/J,EAAS,CAAEO,SAAS,GAGxB,GAAG,KAGDtF,EAAAA,EAAAA,KAAC4H,EAAAA,IAAS7G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJsF,GAAW,IACfwB,WAAW,EACXC,WAAW,EACXC,UAAkB,OAAPpD,QAAO,IAAPA,GAAkB,QAAXjB,EAAPiB,EAASoD,iBAAS,IAAArE,OAAX,EAAPA,EAAoB6e,WAC/B9d,YAAab,EACbqE,UAAgB,OAAL6G,QAAK,IAALA,OAAK,EAALA,EAAOyT,WAClBra,YAAa8f,EACbQ,cAAeC,EAAAA,KAGrB,C,6GCpIanG,GAAmBoG,EAAAA,EAAAA,IAAGpnB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAItBonB,GAAgBD,EAAAA,EAAAA,IAAG7mB,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4CAIVmnB,EAAAA,EAAAA,IAAG7Q,IAAAA,GAAAtW,EAAAA,EAAAA,GAAA,uC,gHCNnBqnB,EAAexnB,EAAAA,GAAAA,OAAaE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ySAWvB,SAAAC,GAAC,OAAIA,EAAEC,MAAMonB,YAAYC,IAAI,IAM3B,SAAAtnB,GAAC,OAAIA,EAAEC,MAAMkI,gBAAgB,IAIpCof,GAAO3nB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oNAWA,SAAAC,GAAC,OAAIA,EAAEC,MAAMuK,kBAAkB,IAIrDgd,GAAM5nB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeyW,IAAAA,GAAAtW,EAAAA,EAAAA,GAAA,8OAQL,SAAAC,GAAC,OAAIA,EAAEC,MAAMwnB,oBAAoB,IAKjC,SAAAznB,GAAC,OAAIA,EAAEC,MAAMkI,gBAAgB,IAG7Cuf,GAAW9nB,EAAAA,EAAAA,IAAO6H,EAAAA,EAAP7H,CAAY4W,IAAAA,GAAAzW,EAAAA,EAAAA,GAAA,wHAMlB,SAAAC,GAAC,OACRA,EAAE2nB,UAEE3nB,EAAE4nB,UADF5nB,EAAEC,MAAME,QAAQ0nB,2BAGhBliB,CAAS,IAEXmiB,GAAeloB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAegX,IAAAA,GAAA7W,EAAAA,EAAAA,GAAA,wEAO9BgoB,GAAanoB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeooB,IAAAA,GAAAjoB,EAAAA,EAAAA,GAAA,kIAOZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMwnB,oBAAoB,IAqB1C3a,EAAiB,CAC5Bmb,cApBmBroB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAesoB,IAAAA,GAAAnoB,EAAAA,EAAAA,GAAA,+QAUzB,SAAAC,GAAC,OAAIA,EAAEC,MAAMwiB,gBAAgB,IAKhB,SAAAziB,GAAC,OAAIA,EAAEC,MAAMwS,MAAM0V,eAAe,IACpC,SAAAnoB,GAAC,OAAIA,EAAEC,MAAMonB,YAAYC,IAAI,IAKjDQ,aAAAA,EACAJ,SAAAA,EACAF,IAAAA,EACAJ,aAAAA,EACAG,KAAAA,EACAQ,WAAAA,E,6GC1GWnQ,EAAqB,SAAHxZ,GAyBxB,IAADgqB,EAAAhqB,EAxBJwN,MAAAA,OAAK,IAAAwc,EAAG,QAAOA,EAAAC,EAAAjqB,EACfyZ,uBAAAA,OAAsB,IAAAwQ,GAAGvX,EAAAA,EAAAA,GAAE,UAASuX,EACpCvQ,EAAkB1Z,EAAlB0Z,mBAAkBwQ,EAAAlqB,EAClBmqB,eAAAA,OAAc,IAAAD,GAAGxX,EAAAA,EAAAA,GAAE,UAASwX,EAC5BE,EAAWpqB,EAAXoqB,YAAWC,EAAArqB,EACXsqB,iBAAAA,OAAgB,IAAAD,GAAG3X,EAAAA,EAAAA,GAAE,MAAK2X,EAC1BE,EAAavqB,EAAbuqB,cAAaC,EAAAxqB,EACbyqB,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA1qB,EAChB2qB,UAAAA,OAAS,IAAAD,GAAQA,EAAAE,EAAA5qB,EACjB6qB,iBAAAA,OAAgB,IAAAD,GAAGlY,EAAAA,EAAAA,GAAE,UAASkY,EAC9BE,EAAa9qB,EAAb8qB,cAeA,OACEzf,EAAAA,EAAAA,MAAC5J,EAAAA,GAAO,CACNgK,YAAa,MACbC,eAAgB,gBAChBkO,OAAQ,cACRhZ,WAAY,SACZ2Y,UAAW,OACXnQ,QAAS,QAAQtI,SAAA,EAEjBV,EAAAA,EAAAA,KAACsO,EAAAA,EAAAA,SAAuB,CAAC6a,UAAQ,EAACjgB,MAAO,GAAI9I,MAAO,CAAEuqB,YAAa,QAASjqB,SACzE0M,IAGFkM,IACCtZ,EAAAA,EAAAA,KAACsO,EAAAA,EAAAA,aAA2B,CAACvH,KAAM,SAAUtG,QAAS6Y,EAAmB5Y,SACtE2Y,KAIHgR,GAAYL,IACZhqB,EAAAA,EAAAA,KAACsO,EAAAA,EAAAA,aAA2B,CAACvH,KAAM,SAAUtG,QAASupB,EAAYtpB,SAC/DqpB,IAIJM,GAAYK,IACX1qB,EAAAA,EAAAA,KAACsO,EAAAA,EAAAA,aAA2B,CAACvH,KAAM,SAAUtG,QAASiqB,EAAchqB,SACjE+pB,IAIJJ,GAAYF,IACXnqB,EAAAA,EAAAA,KAACsO,EAAAA,EAAAA,aAA2B,CAACvH,KAAM,SAAUE,UAAWsjB,EAAW9pB,QAAS0pB,EAAczpB,SACvFwpB,MAKX,C,6GC/DazJ,EAAgD,SAAH7gB,GAAwB,IAAlBgZ,EAAIhZ,EAAJgZ,KAAM/S,EAAIjG,EAAJiG,KAC9DjF,GAAQnB,EAAAA,EAAAA,UAAQ,kBAAOmZ,EAAKN,SAAWM,EAAKN,SAASzS,GAAQ,IAAI,GAAG,CAAC+S,EAAM/S,IAEjF,OACEoF,EAAAA,EAAAA,MAACqD,EAAAA,EAAAA,KAAmB,CAAA5N,SAAA,EAClBV,EAAAA,EAAAA,KAACsO,EAAAA,EAAAA,SAAuB,CAAC6a,UAAQ,EAACjgB,MAAO,GAAI0hB,SAAU,UAAUlqB,SAC1D,OAAJkY,QAAI,IAAJA,OAAI,EAAJA,EAAMxL,SAGTpN,EAAAA,EAAAA,KAACqB,EAAAA,GAAO,CACNd,WAAS,EACTuL,KAAM,EACNT,YAAa,SACbE,IAAK,EACLD,eAAgB,WAChB9K,WAAY,WACZW,SAAU,SACVf,MAAO,CAAE+Y,UAAW,IAAKzY,UAEvBE,GAAS,CAAC,SAAU,UAAUsC,gBAAgBtC,IAC9CZ,EAAAA,EAAAA,KAACsO,EAAAA,EAAAA,SAAuB,CAAC6a,UAAWvoB,EAAOuI,QAAS,IAAIzI,SACrDE,IAAS0R,EAAAA,EAAAA,GAAE,eAGd1R,MAKV,C,gOCdMkmB,EAAwC,SAAHlnB,GAYpC,IAXLwN,EAAKxN,EAALwN,MAEA1M,GAFKd,EACLirB,OACQjrB,EAARc,UAEAoqB,GADWlrB,EAAXgoB,YACWhoB,EAAXkrB,aAEAC,GAFWnrB,EACXmI,UACYnI,EAAZmrB,cACA5f,EAAWvL,EAAXuL,YACAkC,EAAQzN,EAARyN,SACAT,EAAShN,EAATgN,UACG7M,GAAK6O,EAAAA,EAAAA,GAAAhP,EAAAiP,GAER,OACE5D,EAAAA,EAAAA,MAAC+f,GAAejqB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACb,UAAU,cAAiBH,GAAK,IAAAW,SAAA,EAC/CV,EAAAA,EAAAA,KAACkL,EAAAA,GAAY,CACXC,YAAaA,EACb4f,aAAcA,EACd3d,MAAOA,EACPR,UAAWA,EACXS,SAAUA,EAAS3M,SAElBoqB,KAGH9qB,EAAAA,EAAAA,KAAC+L,EAAO,CAAC7L,UAAU,OAAMQ,SAAEA,OAGjC,EAEMsqB,EAAkB5pB,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+lBAavB,SAAAC,GAAC,OAAIA,EAAEC,MAAMwiB,gBAAgB,IAC7B,SAAA5e,GAAA,IAAA4lB,EAAA5lB,EAAG6lB,MAAAA,OAAK,IAAAD,EAAG,QAAOA,EAAE1qB,EAAS8E,EAAT9E,UAAWqgB,EAAWvb,EAAXub,YAAW,OAChDrgB,EAAa,QAAaqgB,GAAe,gBAAkBsK,CAAK,IACzD,SAAAlmB,GAAA,IAAAmmB,EAAAnmB,EAAGwU,OAAAA,OAAM,IAAA2R,EAAG,GAAEA,EAAE7qB,EAAU0E,EAAV1E,WAAY8qB,EAAWpmB,EAAXomB,YAAW,OAC9C9qB,EAAc,OAAY8qB,GAAe,gBAAkB5R,CAAM,IAOtD,SAAA2N,GAAQ,OAAAA,EAAL1lB,MAAkBE,QAAQ0pB,UAAU,IAC7C,SAAA9D,GAAQ,OAAAA,EAAL9lB,MAAkB6pB,SAAS,IAC7B,SAAAC,GAAQ,OAAAA,EAAL9pB,MAAkB+pB,SAAS,IACnB,SAAAC,GAAQ,OAAAA,EAALhqB,MAAkB6S,oBAAoB,IAGlC,SAAAoX,GAAQ,OAAAA,EAALjqB,MAAkBkI,gBAAgB,IAQrD,SAAAnI,GAAC,OAAKA,EAAEjB,UAAY,OAAS,OAAO,IAI3CwL,EAAU3K,EAAAA,GAAAA,KAAWS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+UAWL,SAAAoqB,GAAQ,OAAAA,EAALlqB,MAAkB6S,oBAAoB,IAMjC,SAAAsX,GAAQ,OAAAA,EAALnqB,MAAkBkI,gBAAgB,IACtC,SAAAkiB,GAAQ,OAAAA,EAALpqB,MAAkBkI,gBAAgB,IAGlE,KAAemiB,EAAAA,EAAAA,MAAKhF,E,+HC7GPpT,EAA6D,CACxE,CACEqY,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,SAAU0Z,QAAS,SAAAC,GAAE,OAAIA,EAAGzgB,KAAK,GAChD0gB,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,QAAS0Z,QAAS,SAAAC,GAAE,OAAIA,EAAG7N,IAAI,GACjD8M,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,QAAS0Z,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIllB,IAAI,GAE/CmkB,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,SAAUhD,KAAM,SAC/B4c,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,SAAUhD,KAAM,SAClC4b,MAAO,QACPiB,OAAQ,YAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAY0Z,QAAS,SAAAC,GAAE,OAAIA,EAAGG,SAAW,qEAAc,GACtEF,OAAQ,CACNrpB,KAAK,GAAD1C,QAAKmS,EAAAA,EAAAA,GAAE,aAAY,KAAAnS,QAAImS,EAAAA,EAAAA,GAAE,aAC7B0Z,QAAS,SAAAC,GAAE,IAAAI,EAAAC,EAAA,SAAAnsB,SAAmB,QAAXksB,EAAAJ,EAAGM,gBAAQ,IAAAF,OAAA,EAAXA,EAAaG,YAAa,OAAS,OAAmB,QAAXF,EAAAL,EAAGM,gBAAQ,IAAAD,OAAA,EAAXA,EAAaG,WAAY,OAAM,GAE/FvB,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAY0Z,QAAS,SAAAC,GAAE,IAAAS,EAAAC,EAAA,SAAAxsB,QAAiB,QAAVusB,EAAAT,EAAGW,eAAO,IAAAF,GAAM,QAANC,EAAVD,EAAYhO,YAAI,IAAAiO,OAAN,EAAVA,EAAkB9pB,OAAQ,MAAK,GAC5EqpB,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,SAAU0Z,QAAS,SAAAC,GAAE,IAAAY,EAAAC,EAAA,SAAA3sB,QAAiB,QAAV0sB,EAAAZ,EAAGW,eAAO,IAAAC,GAAM,QAANC,EAAVD,EAAYnO,YAAI,IAAAoO,OAAN,EAAVA,EAAkBnO,QAAS,MAAK,GAC9EuM,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAYya,MAAO,SAAUzd,KAAM,aAClD4c,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAYya,MAAO,SAAUzd,KAAM,aACrD4b,MAAO,QACPiB,OAAQ,eAGCtjB,EAAwE,CACnF,CACEkjB,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,kBAAmB0Z,QAAS,SAAAC,GAAE,IAAAe,EAAA,OAAgB,QAAhBA,EAAIf,EAAG3W,iBAAS,IAAA0X,OAAA,EAAZA,EAAcxhB,KAAK,GACpEyhB,cAAe,SAAAC,GAAC,IAAAC,EAAAC,EAAAC,EAAA,OAAY,QAAPF,EAAAD,EAAEzlB,aAAK,IAAA0lB,GAAPA,EAASxW,OAAgB,QAAVyW,EAAGF,EAAEzlB,aAAK,IAAA2lB,GAAW,QAAXC,EAAPD,EAASzW,OAAO,UAAE,IAAA0W,OAAX,EAAPA,EAAoBC,YAAc,EAAE,EAC3EpC,MAAO,QACPiB,OAAQ,wBAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,OAAQ0Z,QAAS,SAAAC,GAAE,IAAAsB,EAAA,OAAgB,QAAhBA,EAAItB,EAAG3W,iBAAS,IAAAiY,OAAA,EAAZA,EAAc9hB,GAAG,GACvDygB,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAY0Z,QAAS,SAAAC,GAAE,IAAAuB,EAAA,OAAgB,QAAhBA,EAAIvB,EAAG3W,iBAAS,IAAAkY,OAAA,EAAZA,EAAc9U,OAAO,GAClEwS,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,QAAShD,KAAM,QAC9B4c,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,UAAWhD,KAAM,UACnC4b,MAAO,QACPiB,OAAQ,UAEV,CACEJ,IAAK,CAAElpB,KAAM,yDAAakqB,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAIA,EAAGwB,OAAS,CAAC,GACpEvB,OAAQ,CAAErpB,KAAM,uCAAUkqB,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAIA,EAAGyB,UAAY,CAAC,GACvExC,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,KAAM,+DAAckqB,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI0B,WAAY,CAAC,GACzEzB,OAAQ,CAAErpB,KAAM,mDAAYkqB,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI2B,OAAQ,CAAC,GACtE1C,MAAO,QACPiB,OAAQ,eAQV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,aAAc0Z,QAAS,SAAAC,GAAE,IAAA4B,EAAA,OAAgB,QAAhBA,EAAI5B,EAAG/W,iBAAS,IAAA2Y,OAAA,EAAZA,EAAcriB,KAAK,GAC/D0gB,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,QAAS0Z,QAAS,SAAAC,GAAE,IAAA6B,EAAA,OAAgB,QAAhBA,EAAI7B,EAAG/W,iBAAS,IAAA4Y,OAAA,EAAZA,EAAc1P,IAAI,GAC5D8M,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,KAAM,2BAAQyM,KAAM,eAC3B4b,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,KAAM,iCAASyM,KAAM,eAC5B4c,OAAQ,CAAErpB,KAAM,iCAASyM,KAAM,gBAC/B4b,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,KAAM,mDAAYkqB,MAAO,SAAUzd,KAAM,aAChD4c,OAAQ,CAAErpB,KAAM,mDAAYkqB,MAAO,SAAUzd,KAAM,aACnD4b,MAAO,QACPiB,OAAQ,eA4BN4B,EAA6D,CACjE,CACEhC,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,aAAcya,MAAO,MAAOf,QAAS,SAAAkB,GAAC,IAAAc,EAAA,OAAIC,EAAAA,EAAAA,IAAiBC,QAAQ,OAADhB,QAAC,IAADA,GAAQ,QAAPc,EAADd,EAAG9X,aAAK,IAAA4Y,OAAP,EAADA,EAAUrQ,KAAM,GAAG,GACpGuO,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,YAAaya,MAAO,MAAOf,QAAS,SAAAkB,GAAC,IAAAiB,EAAA,OAAIF,EAAAA,EAAAA,IAAiBC,QAAQ,OAADhB,QAAC,IAADA,GAAQ,QAAPiB,EAADjB,EAAG9X,aAAK,IAAA+Y,OAAP,EAADA,EAAUvQ,MAAO,GAAG,GACvGsN,MAAO,QACPiB,OAAQ,eAwEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAYya,MAAO,QAASzd,KAAM,eACjD4b,MAAO,QACPiB,OAAQ,gBAICiC,EAA6D,CACxE,CACErC,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,UAEf4Y,MAAO,QACPiB,OAAQ,eAoBV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,aAAc0Z,QAAS,SAAAC,GAAE,IAAAoC,EAAA,OAAgB,QAAhBA,EAAIpC,EAAG/W,iBAAS,IAAAmZ,OAAA,EAAZA,EAAc7iB,KAAK,GAC/D0gB,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,QAAS0Z,QAAS,SAAAC,GAAE,IAAAqC,EAAA,OAAgB,QAAhBA,EAAIrC,EAAG/W,iBAAS,IAAAoZ,OAAA,EAAZA,EAAclQ,IAAI,GAC5D8M,MAAO,QACPiB,OAAQ,eAGV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,SAAUya,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAIA,EAAGwB,OAAS,CAAC,GACnEvB,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,YAAaya,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAIA,EAAGyB,UAAY,CAAC,GAC5ExC,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,YAAaya,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI0B,WAAY,CAAC,GAC1EzB,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,QAASya,MAAO,MAAOf,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI2B,OAAQ,CAAC,GACrE1C,MAAO,QACPiB,OAAQ,eAEV,CACEJ,IAAK,CAAElpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAYya,MAAO,SAAUzd,KAAM,aAClD4c,OAAQ,CAAErpB,MAAMyP,EAAAA,EAAAA,GAAE,WAAYya,MAAO,SAAUzd,KAAM,aACrD4b,MAAO,QACPiB,OAAQ,eACThsB,OACE4tB,E","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/offers/tabs/SalesTab.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Overlays/FromSelectCategoriesOverlay.tsx","components/Overviews/offer/components/OfferOverviewCategoriesCell.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormOfferDefaultsOverlay.tsx","components/Overlays/FormOfferImagesOverlay.tsx","components/Overviews/offer/OfferOverviewXL.tsx","components/Overviews/offer/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/offer/components/OfferOverviewTagsCell.tsx","components/Overviews/offer/components/OfferOverviewDefaultsCell.tsx","components/Overviews/offer/components/OfferOverviewImagesCell.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Overviews/components/OverviewTextCell.tsx","components/atoms/OverlayBase.tsx","data/warehauses.data.ts"],"sourcesContent":["import { CreatedOverlay, useOverlayService } from './OverlayStackProvider';\nimport React, { createContext, MouseEventHandler, useCallback, useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport interface OverlayLocalValue extends CreatedOverlay {}\nexport const OverlayLocalCTX = createContext<OverlayLocalValue>({});\nexport const useOverlay = () => useContext(OverlayLocalCTX);\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <OverlayLocalCTX.Provider\n            value={{\n              onClose: () => {\n                overlaySrv.remove(id);\n              },\n              compId: id,\n              index: index,\n            }}\n          >\n            <RenderComponent\n              key={`overlay-${id}`}\n              {...props}\n              onClose={() => {\n                overlaySrv.remove(id);\n              }}\n              compId={id}\n              index={index}\n            />\n          </OverlayLocalCTX.Provider>\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 200;\n\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  background-color: ${p => p.theme.backdropColorDark};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  height: 100%;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  create: OverlayCreator;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport type OverlayCreator = <Props = any>(\n  Component: React.FC<OverlayRenderComponentProps<Props>>,\n  props?: OverlayRenderComponentProps<Props>\n) => CreatedOverlay;\n\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n    create: (Component, props) => createOverlayComponent({ RenderComponent: Component, props }),\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { PriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { OnlyUUID } from 'redux/app-redux.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport CreatePriceModal from '../../../Modals/CreatePriceModal';\nimport { pricesColumnsForProductReview } from '../../../../data/priceManagement.data';\nimport { IBase } from '../../../../types/utils.types';\nimport { useAppDispatch } from '../../../../redux/store.store';\nimport { getPriceThunk } from '../../../../redux/priceManagement/priceManagement.thunks';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ _id: offerId });\n  const [selectedRow, setSelectedRoe] = useState<IBase>();\n  const loaders = useLoadersProvider<'prices' | 'price' | 'discounts' | 'discount'>();\n  const dispatch = useAppDispatch();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  const tableConfig = useMemo((): ITableListProps<PriceEntity> => {\n    return {\n      onRowClick: data => {\n        setSelectedRoe(data?.rowData);\n\n        if (onSelect) {\n          onSelect({ _id: data?.rowId || data?.rowData?._id || '' });\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id || selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: true },\n              { icon: 'copy', type: 'onlyIcon', disabled: true },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  dispatch(\n                    getPriceThunk({\n                      data: { params: { _id: currentId } },\n                      onLoading: loaders.onLoading('price', undefined, { content: 'Refreshing price info...' }),\n                      onSuccess: () => {\n                        modalS.open({\n                          ModalChildren: CreatePriceModal,\n                          modalChildrenProps: {\n                            offer: currentOffer,\n                            updateId: currentId,\n                          },\n                        });\n                      },\n                    })\n                  );\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: CreatePriceModal,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [withActions, onSelect, selectedRow?._id, loadData, dispatch, loaders, modalS, currentOffer]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n      tableData={currentOffer?.prices}\n      tableTitles={pricesColumnsForProductReview}\n    />\n  );\n};\n\nexport default PricesTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useOffersSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} hasSearch={false} hasFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferOverviewAddsTabProps } from './types';\nimport { Text } from '../../../atoms/Text';\n\ninterface OfferSalesTabProps extends OfferOverviewAddsTabProps {}\nexport const SalesTab = (props: OfferSalesTabProps) => {\n  return (\n    <FlexBox padding={'16px'}>\n      <Text $size={16} $weight={600}>\n        In work\n      </Text>\n    </FlexBox>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { SalesTab } from './tabs/SalesTab';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { OfferOverlayLoaderKey } from '../../Overlays/FormOfferDefaultsOverlay';\nimport { LoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { DrawerHeader } from '../../Overlays';\n\nenum RightSideOptionEnum {\n  Prices = 'Prices',\n  Variations = 'Variations',\n  Warehousing = 'Warehousing',\n  Sales = 'Sales',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(TabsList[0].value);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n      [RightSideOptionEnum.Sales]: <SalesTab withActions />,\n    };\n    return currentTab ? tabs?.[currentTab] ?? null : null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    value && setCurrentTab(value);\n  };\n\n  return (\n    <LoadersProvider value={loaders}>\n      <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n        {isVisible && (\n          <DrawerHeader\n            onBackPress={toggleVisibility}\n            renderTitle={\n              <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n                <Text $weight={600} $size={14}>\n                  {page?.currentOffer?.label}\n                </Text>\n\n                <Text $size={14} $weight={400}>\n                  {page?.currentOffer?.sku}\n                </Text>\n              </FlexBox>\n            }\n          />\n        )}\n\n        <TabSelector options={TabsList} onOptSelect={filterHandler} preventDefault />\n\n        <TabBox overflow={'hidden'} fillWidth flex={1}>\n          {renderTab}\n        </TabBox>\n      </RightSide>\n    </LoadersProvider>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  padding: 0 8px;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: ${p => (p.isVisible ? '0 12px 26px rgba(0, 0, 0, 0.25)' : '')};\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  //border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef, sortIds } from '../../utils';\nimport OfferCategoriesSelector from '../Forms/offers/categories/OfferCategoriesSelector';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { DrawerHeader, OverlayFooter, OverlayForm } from './index';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { useCurrentOffer } from '../../hooks';\n\nexport interface FormSelectCategoriesOverlayProps extends CreatedOverlay {}\n\nconst OfferCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const currentOffer = useCurrentOffer();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const loaders = useLoaders<'update'>({ update: { content: 'Loadings...' } });\n  const initIds = sortIds(currentOffer?.categories?.map(p => p._id));\n\n  const [categoriesIds, setCategoriesIds] = useState<string[]>(initIds);\n\n  const canSubmit = useMemo(() => {\n    return initIds?.join(',') !== sortIds(categoriesIds).join(',');\n  }, [initIds, categoriesIds]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    currentOffer &&\n      service.updateById({\n        onLoading: loaders.onLoading('update'),\n        data: { data: { ...getIdRef(currentOffer), data: { categories: categoriesIds } } },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setCategoriesIds(currentOffer?.categories.map(c => c._id));\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <DrawerHeader\n        title={'Категорії'}\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        okButton\n        isLoading={loaders.isLoading?.update}\n      />\n\n      <Content padding={'0 0 8px 0'} flex={1} overflow={'auto'}>\n        <OfferCategoriesSelector\n          onChangeIds={setCategoriesIds}\n          options={directory}\n          defaultData={categoriesIds}\n          offer={currentOffer}\n        />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} loading={loaders.isLoading?.update} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default OfferCategoriesOverlay;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport OfferCategoriesOverlay from '../../../Overlays/FromSelectCategoriesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { OfferCategoryEntity } from '../../../../types/dir.types';\nimport { useOverlayService } from '../../../../Providers/Overlay/OverlayStackProvider';\nimport { useModalService } from '../../../../Providers/ModalProvider/ModalProvider';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({ cell, data }) => {\n  const overlaySrv = useOverlayService();\n  const modalSrv = useModalService();\n\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map(c => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          if (overlaySrv.create) {\n            overlaySrv.create(OfferCategoriesOverlay);\n          } else {\n            modalSrv.create(OfferCategoriesOverlay);\n          }\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: OfferCategoryEntity;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { DrawerHeader, OverlayFooter, OverlayForm } from './index';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { PropertiesGroupEntity, PropertyEntity } from '../../types/offers/properties.types';\nimport OfferPropertySelector from '../Forms/offers/variations/OfferPropertySelector';\nimport { PropertiesFilterData, PropertiesGroupSelector } from '../atoms/PropertiesGroupSelector';\nimport { useCurrentOffer } from '../../hooks';\nimport { sortIds } from '../../utils';\nimport { t } from '../../lang';\n\nexport interface FormSelectPropertiesProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  updateId?: string;\n\n  filterValue?: Partial<PropertiesFilterData>;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  updateId,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const Offer = useCurrentOffer(offer);\n  const state = useOffersSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n\n  const initialTemplate = useMemo(() => {\n    if (!Offer?.template) {\n      const id = Offer?.properties?.[0]?.path?.split('.')?.[0];\n\n      return id ? { _id: id } : undefined;\n    }\n\n    // return undefined;\n    return Offer?.template;\n  }, [Offer?.properties, Offer?.template]);\n\n  const [currentTemplate, setCurrentTemplate] = useState<PropertiesGroupEntity | undefined>();\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const initState = useMemo(() => {\n    return sortIds(Offer?.properties?.map(prop => prop._id));\n  }, [Offer?.properties]);\n\n  useEffect(() => {\n    if (initState?.length) {\n      setSelectedIds(initState);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const propertiesList = useMemo(() => {\n    if (currentTemplate?.childrenList?.length) {\n      return currentTemplate?.childrenList.filter(item => !item.isSelectable);\n    }\n\n    const _rootId = currentTemplate?._id;\n    if (!_rootId) return undefined;\n    const _propertiesList: PropertyEntity[] = [];\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId];\n    if (!_propertiesIds) return undefined;\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop && !prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, currentTemplate?.childrenList, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const canSubmit = useMemo(() => {\n    return sortIds(initState)?.join(',') !== sortIds(selectedIds).join(',');\n  }, [initState, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      const id = updateId ?? Offer?._id;\n      if (id) {\n        service.updateById({\n          data: { data: { _id: id, data: { propertiesIds: selectedIds, templateId: currentTemplate?._id } } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Offer updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [Offer?._id, currentTemplate?._id, onClose, onSubmit, selectedIds, service, updateId]\n  );\n\n  const handleSelect = useCallback((_parentId?: string, valueId: string = '') => {\n    setSelectedIds(prev => {\n      return prev.includes(valueId) ? prev.filter(el => el !== valueId) : [...prev, valueId];\n    });\n  }, []);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferPropertySelector key={`prop_${prop._id}`} item={prop} selectedIds={selectedIds} onSelect={handleSelect} />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  useEffect(() => {\n    if (Offer?.properties) {\n      setSelectedIds(Offer?.properties.map(p => p._id));\n    }\n  }, [Offer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <DrawerHeader onBackPress={onClose} canSubmit={canSubmit} title={t('Properties')} okButton />\n\n      <PropertiesGroupSelector\n        onSelect={setCurrentTemplate}\n        filterValue={{ isSelectable: false }}\n        selected={currentTemplate}\n        defaultValue={initialTemplate}\n      />\n\n      <PropertiesBox flex={1} padding={'0 8px'} overflow={'auto'}>\n        {renderPropertiesList}\n      </PropertiesBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst PropertiesBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { PropertyEntity, PropertyValueEntity } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: PropertyEntity;\n  selectedIds?: string[];\n  items?: PropertyValueEntity[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedIds, items }) => {\n  const renderValues = useMemo(() => {\n    const _list = items?.length ? items : item.childrenList?.filter(el => selectedIds?.includes(el._id));\n\n    return _list?.map((value, index) => {\n      return (\n        <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n          {value.label}\n        </CellStyledComp.CategoryItem>\n      );\n    });\n  }, [item.childrenList, selectedIds, items]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/app-redux.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList hasSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { WarehouseEntity } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormOfferDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseEntity> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList hasSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OfferDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, getIdRef, ObjectFromEntries, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { Keys } from '../../types/utils.types';\nimport _ from 'lodash';\n\nexport interface FormOfferDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<OfferDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum OfferDefaultFieldKeyEnum {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\n\nexport type OfferOverlayLoaderKey =\n  | keyof typeof OfferDefaultFieldKeyEnum\n  | `${keyof typeof OfferDefaultFieldKeyEnum}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(OfferDefaultFieldKeyEnum);\nfunction getFormDefaultValues(offer: OfferEntity) {\n  const map = new Map<OfferDefaultFieldKeyEnum, OnlyUUID>();\n\n  tabs.forEach(tab => {\n    const key = tab.value;\n    if (key) {\n      const field = key ? offer?.[key] : undefined;\n      if (field) map.set(key, getIdRef(field));\n    }\n  });\n\n  return ObjectFromEntries(map.entries());\n}\nconst FormOfferDefaultsOverlay: React.FC<FormOfferDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const Offer = useCurrentOffer({ _id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, getValues, formValues, handleSubmit } = useAppForm<OfferDefaultsFormData>({\n    defaultValues: !Offer ? undefined : getFormDefaultValues(Offer),\n  });\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      const key = tabs[currentTabIdx].value;\n\n      key && setValue(key, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: OfferDefaultsFormData) => {\n    Offer?._id &&\n      productsS.updateById({\n        data: { data: { _id: Offer?._id, ...toReqData(fData) } },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n  const tabsMap = useMemo(() => {\n    const _tabsMap: Record<OfferDefaultFieldKeyEnum, React.FC> = {\n      [OfferDefaultFieldKeyEnum.warehouse]: () => (\n        <WarehousesTab withActions onSelect={handleSelect} selected={getValues('warehouse')} />\n      ),\n      [OfferDefaultFieldKeyEnum.price]: () => {\n        console.log(\"getValues('price')\", getValues('price'));\n        return <PricesTab withActions onSelect={handleSelect} selected={getValues('price')} />;\n      },\n      [OfferDefaultFieldKeyEnum.variation]: () => (\n        <VariationsTab withActions onSelect={handleSelect} selected={getValues('variation')} />\n      ),\n      [OfferDefaultFieldKeyEnum.inventory]: () => (\n        <WarehousingTab withActions onSelect={handleSelect} selected={getValues('inventory')} />\n      ),\n      [OfferDefaultFieldKeyEnum.supplier]: () => (\n        <CounterpartyTab\n          withActions\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          onSelect={handleSelect}\n          selected={getValues('supplier')}\n        />\n      ),\n    };\n    return _tabsMap;\n  }, [getValues, handleSelect]);\n\n  const renderTab = useMemo(() => {\n    const currentKey = tabs?.[currentTabIdx]?.value;\n    const Tab = currentKey ? tabsMap[currentKey] ?? null : null;\n\n    return Tab ? <Tab /> : null;\n  }, [currentTabIdx, tabsMap]);\n\n  const canSubmit = useMemo(() => {\n    const currentKey = tabs?.[currentTabIdx]?.value;\n    const compareIdsByPath = (key: Keys<typeof OfferDefaultFieldKeyEnum>) => {\n      const dataKey = `${key}._id` as const;\n      const id_a = _.get(formValues, dataKey);\n\n      return !!id_a && id_a !== _.get(Offer, dataKey);\n    };\n\n    return !currentKey ? false : compareIdsByPath(currentKey);\n  }, [currentTabIdx, formValues, Offer]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector options={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormOfferDefaultsOverlay;\n","import FormOfferImagesComponent from '../Forms/offers/images/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils';\nimport { DrawerHeader, OverlayFooter } from './index';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useCurrentOffer } from '../../hooks';\nimport { FlexForm } from '../atoms/FlexBox';\n\nexport interface FormProductImagesOverlayProps extends CreatedOverlay {\n  offer?: OfferEntity;\n}\n\nconst FormOfferImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose, offer }) => {\n  const Offer = useCurrentOffer(offer);\n\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(Offer?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    Offer &&\n      service.updateById({\n        data: { data: { ...getIdRef(Offer), data: { images: state as OfferImageSlotEntity[] } } },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onlyPreviews={false}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={<DrawerHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />}\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled(FlexForm)`\n  flex: 1;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormOfferImagesOverlay;\n","import { OfferEntity } from '../../../types/offers/offers.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../../lang';\nimport { usePageCurrentOffer } from '../../AppPages/offers/PageOfferProvider';\nimport { DrawerHeader } from '../../Overlays';\nimport TabSelector from '../../atoms/TabSelector';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../../hooks';\nimport { OverviewTextCell } from '../components/OverviewTextCell';\nimport { enumToFilterOptions, toAppDateFormat } from '../../../utils';\nimport { OverviewCellProps } from '../components/overview-types';\nimport { IMeasurement, PartialRecord } from '../../../types/utils.types';\nimport { isString } from 'lodash';\nimport { OfferOverviewCategoriesCell } from './components/OfferOverviewCategoriesCell';\nimport { OfferOverviewStaticProperties } from './components/OfferOverviewStaticPropertiesCell';\nimport { OfferOverviewDefaultsCell } from './components/OfferOverviewDefaultsCell';\nimport { OfferOverviewImagesCell } from './components/OfferOverviewImagesCell';\nimport { Text } from '../../atoms/Text';\nimport { OfferOverviewTagsCell } from './components/OfferOverviewTagsCell';\n\nexport enum OfferOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nexport const ProductOverviewTabsList = enumToFilterOptions(OfferOverviewTabsEnum);\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n  const cellsMap = getOfferOverviewCellsMap();\n\n  const [currentTab, setCurrentTab] = useState<OfferOverviewTabsEnum>(OfferOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n            }\n            return <OverviewTextCell key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n          }),\n    [cellsMap, currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <DrawerHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        options={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          option?.value && setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nconst offerOverviewCells: OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Categories'),\n    CellComponent: OfferOverviewCategoriesCell,\n    gridArea: 'categories',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n  {\n    title: t('Properties'),\n    CellComponent: OfferOverviewStaticProperties,\n    gridArea: 'properties',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n  {\n    title: t('Tags'),\n    CellComponent: OfferOverviewTagsCell,\n    gridArea: 'tagss',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  {\n    title: t('Brand'),\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OfferOverviewDefaultsCell,\n    gridArea: 'defaults',\n    tab: OfferOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    getValue: product => {\n      return [\n        { title: 'Created by', value: product?.author?.user?.email },\n        {\n          title: 'Created at',\n          value:\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : '',\n        },\n      ].map(item => {\n        return (\n          <FlexBox key={item.title} gap={4} fillWidth justifyContent={'space-between'} fxDirection={'row'}>\n            <Text>{item.title ?? t('undefined')}</Text>\n            <Text>{item.value ?? t('undefined')}</Text>\n          </FlexBox>\n        );\n      });\n    },\n    gridArea: 'created',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    getValue: product => {\n      return [\n        { title: 'Updated by', value: product?.editor?.user?.email },\n        {\n          title: 'Updated at',\n          value:\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : '',\n        },\n      ].map(item => {\n        return (\n          <FlexBox key={item.title} gap={4} fillWidth justifyContent={'space-between'} fxDirection={'row'}>\n            <Text>{item.title ?? t('undefined')}</Text>\n            <Text>{item.value ?? t('undefined')}</Text>\n          </FlexBox>\n        );\n      });\n    },\n    gridArea: 'updated',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OfferOverviewImagesCell,\n    gridArea: 'images',\n    tab: OfferOverviewTabsEnum.Images,\n  },\n];\n\nfunction getOfferOverviewCellsMap(): PartialRecord<\n  OfferOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n> {\n  const offerOverviewCellsMap: PartialRecord<\n    OfferOverviewTabsEnum | string,\n    OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n  > = {};\n  offerOverviewCells.forEach(item => {\n    const tab = item.tab;\n    if (tab) {\n      if (offerOverviewCellsMap[tab]) {\n        offerOverviewCellsMap[tab]?.push(item);\n      } else {\n        offerOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return offerOverviewCellsMap;\n}\n\nexport default OfferOverviewXL;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport React, { useMemo } from 'react';\nimport FormSelectPropertiesOverlay from '../../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { OverviewPropertyComponent } from '../../components/OverviewPropertyComponent';\nimport { PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { useCurrentOffer } from '../../../../hooks';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const state = useOffersSelector();\n  const Offer = useCurrentOffer(data);\n\n  const { propertiesList, valuesListMap, ...idsSet } = useMemo(() => {\n    const _propertiesMap: Record<string, PropertyValueEntity> = {};\n    const _propertiesIdsSet = new Set<string>([]);\n\n    const _valuesListMap: Record<string, PropertyValueEntity[]> = {};\n    const _valuesIdsSet = new Set<string>([]);\n\n    for (const value of Offer?.properties ?? []) {\n      const propId = value.parent?._id;\n\n      if (propId) {\n        const parent = propId ? state.propertiesDataMap?.[propId] : undefined;\n        _propertiesIdsSet.add(propId);\n\n        if (parent) {\n          _propertiesMap[propId] = parent;\n        }\n\n        const valueId = value._id;\n        _valuesIdsSet.add(valueId);\n\n        const _value = valueId ? state.propertiesDataMap?.[valueId] || value : value;\n        if (!_valuesListMap[propId]) {\n          _valuesListMap[propId] = [];\n        }\n        _valuesListMap[propId].push(_value);\n      }\n    }\n\n    return {\n      properties: _propertiesIdsSet,\n      values: _valuesIdsSet,\n      propertiesList: Object.values(_propertiesMap),\n      valuesListMap: _valuesListMap,\n    };\n  }, [Offer?.properties, state.propertiesDataMap]);\n\n  const renderProperties = useMemo(() => {\n    return propertiesList?.map((prop, index) => {\n      const list = valuesListMap[prop._id];\n\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, items: list, data }}\n        />\n      );\n    });\n  }, [propertiesList, overlayHandler, valuesListMap, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {idsSet.properties?.size ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport FormSelectPropertiesOverlay from '../../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { useCurrentOffer } from '../../../../hooks';\n\nexport const OfferOverviewTagsCell: RenderOverviewCellComponent<OfferEntity> = ({ cell, overlayHandler, data }) => {\n  const Offer = useCurrentOffer(data);\n\n  const renderValues = useMemo(() => {\n    return Offer?.tags?.map((value, index) => {\n      return (\n        <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n          {value.label}\n        </CellStyledComp.CategoryItem>\n      );\n    });\n  }, [Offer?.tags]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'TAGS_LIST_CELL'}\n      style={{ minHeight: 'max-content' }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={'stretch'}>\n        {Offer?.tags?.length ? (\n          renderValues\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport FormOfferDefaultsOverlay from '../../../Overlays/FormOfferDefaultsOverlay';\n\nimport { PriceEntity } from '../../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { toPrice } from '../../../../utils/numbers';\nimport { useOverlayService } from '../../../../Providers/Overlay/OverlayStackProvider';\nimport { useModalService } from '../../../../Providers/ModalProvider/ModalProvider';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n  const overlaySrv = useOverlayService();\n  const modalSrv = useModalService();\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          if (overlaySrv.create) {\n            overlaySrv.create(FormOfferDefaultsOverlay);\n          } else {\n            modalSrv.create(FormOfferDefaultsOverlay);\n          }\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: PriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../../Overlays/FormOfferImagesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((imgsSet, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${imgsSet?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(\n            el => el.value && <ImagePreviewSmall key={`img_${el.value}`} src={imgsSet[el.value] || ''} disabled />\n          )}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages, props: { offer: data } });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../../Providers/ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/offer/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { offers: offersSrv } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              offer: page?.currentOffer,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          offersSrv.getOne({\n            data: { params: { _id: page.currentOffer?._id, getPrices: false, getVariations: false } },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({\n    offer: { content: t('Loading product info') },\n    prices: { content: 'Loading prices' },\n    variations: { content: 'Loading variations' },\n  });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const offersSrv = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ _id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      offersSrv\n        .getOne({\n          data: {\n            params: {\n              _id: offerId,\n              getVariations: false,\n              getPrices: false,\n            },\n          },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .catch();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    offersSrv.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      offersSrv.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import styled from 'styled-components';\nimport FlexBox, { FlexForm } from '../atoms/FlexBox';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { sortIds, toVariationFormData, toVariationReqData } from '../../utils';\nimport { VariationEntity, VariationFormData } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../atoms/FormAfterSubmitOptions';\nimport { OverlayFooter } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer, useCurrentVariation } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport { UUID } from '../../types/utils.types';\nimport OfferPropertySelector from '../Forms/offers/variations/OfferPropertySelector';\nimport { PropertiesGroupEntity, PropertyEntity } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity, PropertyValuesMap } from '../../types/offers/offers.types';\nimport DrawerBase from '../atoms/OverlayBase';\nimport { PropertiesGroupSelector } from '../atoms/PropertiesGroupSelector';\nimport { AccordionFormArea } from '../atoms/FormArea/AccordionForm';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport _ from 'lodash';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Text } from '../atoms/Text';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<VariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  updateId?: UUID;\n\n  create?: boolean;\n\n  defaultState?: Partial<VariationEntity>;\n}\n\nconst _schema = yup.object().shape({\n  label: yup.string().required().min(5).max(128),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\nconst mainInputsProps = [\n  { title: t('Offer label'), name: 'label', required: true, flex: '2 0 100%' },\n  { title: t('SKU'), name: 'sku', required: true, flex: '1 1 40%' },\n  { title: t('Bar-code'), name: 'barCode', required: false, flex: '1 1 40%' },\n] as const;\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  onSubmit,\n  updateId,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const state = useOffersSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useLoaders<'create' | 'update' | 'refresh'>();\n  const Variation = useCurrentVariation({ _id: updateId });\n  const Offer = useCurrentOffer({ _id: Variation?.offer?._id || offerId || offer?._id });\n\n  const submitOptions = useAfterSubmitOptions();\n  const [currentTemplate, setCurrentTemplate] = useState<PropertiesGroupEntity | undefined>(Variation.template);\n\n  const formMethods = useAppForm<VariationFormData>({\n    defaultValues: toVariationFormData(\n      Variation\n        ? { ...Variation, offer: Offer, template: currentTemplate }\n        : { offer: Offer, template: currentTemplate },\n      Offer\n    ),\n    resolver: yupResolver(_schema),\n    reValidateMode: 'onSubmit',\n  });\n\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  const propertiesList = useMemo(() => {\n    if (currentTemplate?.childrenList?.length) {\n      return currentTemplate?.childrenList.filter(item => item.isSelectable && item?.childrenList?.length);\n    }\n\n    const _rootId = currentTemplate?._id;\n    const _propertiesList: PropertyEntity[] = [];\n    // const _sortedPropertiesIds=sortIds(ObjectKeys(state.propertiesKeysMap))\n\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId ?? 'def'] ?? [];\n\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, currentTemplate?.childrenList, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const compileLabel = useCallback(\n    (valuesMap: PropertyValuesMap) => {\n      if (!valuesMap) {\n        return `${Offer?.label}. {{VARIATION_LABEL}}`;\n      }\n\n      const _sortedIds = !valuesMap ? [] : sortIds(Object.keys(valuesMap));\n\n      const _labels: string[] = Offer?.label ? [Offer?.label] : [];\n\n      for (const propId of _sortedIds) {\n        const value = valuesMap[propId];\n\n        value?.label && _labels.push(value?.label);\n      }\n      const _compiled = !_labels?.length\n        ? Variation?.label || `${Offer?.label}. {{VARIATION_LABEL}}`\n        : _labels.join('. ');\n\n      setValue('label', _compiled);\n      return _compiled;\n    },\n    [Offer?.label, Variation?.label, setValue]\n  );\n\n  const onValid = useCallback(\n    (data: VariationFormData) => {\n      if (updateId) {\n        service.updateVariationById({\n          onSuccess: loaders.onSuccess('update', onClose),\n          onLoading: loaders.onLoading('update'),\n          onError: ToastService.toastAxiosError,\n          data: { data: toVariationReqData(data) },\n        });\n      } else {\n        service.createVariation({\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('create'),\n          onSuccess: data => {\n            if (submitOptions.state.close) {\n              onClose && onClose();\n            } else {\n              submitOptions.state.clear && reset();\n              setValue('sku', (Offer?.sku ?? '') + nanoid(12));\n            }\n          },\n          data: { data: toVariationReqData(data) },\n        });\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [\n      Offer?.sku,\n      loaders,\n      onClose,\n      reset,\n      service,\n      setValue,\n      submitOptions.state.clear,\n      submitOptions.state.close,\n      updateId,\n    ]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, valueId: string) => {\n      const exist = formValues.propertiesMap?.[parentId];\n      if (exist && exist._id === valueId) {\n        const newMap = _.omit(formValues.propertiesMap, parentId);\n        setValue('propertiesMap', newMap);\n        compileLabel(newMap);\n      } else {\n        const value = state.propertiesDataMap?.[valueId];\n        if (value) {\n          const newMap = { ...formValues.propertiesMap, [parentId]: value };\n          setValue('propertiesMap', newMap);\n          compileLabel(newMap);\n        }\n      }\n    },\n    [compileLabel, formValues.propertiesMap, setValue, state.propertiesDataMap]\n  );\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap).map(item => item._id) : [];\n  }, [formValues]);\n\n  const canSubmit = useMemo(() => {\n    const _sortedInit = !Variation.propValuesIdsSet ? undefined : sortIds(Variation.propValuesIdsSet)?.join('.');\n\n    const _sortedCurrent = !selectedIds ? undefined : sortIds(selectedIds)?.join('.');\n\n    return !!_sortedCurrent && _sortedCurrent !== _sortedInit;\n  }, [Variation.propValuesIdsSet, selectedIds]);\n\n  const propValuesIds = useMemo((): Record<string, string | undefined> => {\n    return formValues?.propertiesMap\n      ? Object.fromEntries(\n          Object.entries(formValues?.propertiesMap).map(([propId, item]) => {\n            return [propId, item?._id];\n          })\n        )\n      : {};\n  }, [formValues?.propertiesMap]);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      const selectedId = propValuesIds[prop._id];\n\n      return (\n        <OfferPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedId ? [selectedId] : []}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, propValuesIds, handleSelect]);\n\n  return (\n    <DrawerBase fillHeight onBackPress={onClose} okButton={false} title={title || 'Create variation'}>\n      <LoadersProvider value={loaders}>\n        <FormContainer\n          onSubmit={handleSubmit(onValid, errors => {\n            console.error('[SUBMIT ERROR]', errors);\n          })}\n          {...props}\n        >\n          <Content flex={1} fillWidth overflow={'auto'}>\n            <AccordionFormArea label={'Offer'} hideFooter isOpen={false}>\n              <FlexBox\n                className={'Variation_Main_Offer_Info'}\n                flexWrap={'wrap'}\n                fxDirection={'row'}\n                alignItems={'flex-end'}\n                style={{ columnGap: 12 }}\n              >\n                {mainInputsProps.map(({ name, title, flex }) => {\n                  return (\n                    <InputLabel key={name} className={name} flex={flex} label={title} disabled>\n                      {/*<InputText value={Offer?.[name] ?? undefined} placeholder={title} disabled />*/}\n                      <FlexBox padding={'4px 8px'} minHeight={'32px'}>\n                        <Text $weight={600} $size={14}>\n                          {Offer?.[name] ?? undefined}\n                        </Text>\n                      </FlexBox>\n                    </InputLabel>\n                  );\n                })}\n              </FlexBox>\n            </AccordionFormArea>\n\n            <AccordionFormArea label={'Main info'} expandable={false} hideFooter>\n              <FlexBox\n                className={'Variation_Main_info'}\n                flexWrap={'wrap'}\n                fxDirection={'row'}\n                alignItems={'flex-end'}\n                style={{ columnGap: 12 }}\n              >\n                {mainInputsProps.map(({ name, title, flex, required }) => {\n                  return (\n                    <InputLabel\n                      key={name}\n                      className={name}\n                      label={title}\n                      error={errors?.[name]}\n                      required={required}\n                      flex={flex}\n                    >\n                      <InputText {...register(name, { required })} placeholder={t('label')} />\n                    </InputLabel>\n                  );\n                })}\n              </FlexBox>\n            </AccordionFormArea>\n\n            <AccordionFormArea label={t('Properties')} expandable={false} hideFooter>\n              <PropertiesGroupSelector\n                onSelect={opt => {\n                  setValue('template', opt);\n                  setCurrentTemplate(opt);\n                }}\n                selected={currentTemplate}\n              />\n\n              <FlexBox padding={'0 8px'}>{renderPropertiesList}</FlexBox>\n            </AccordionFormArea>\n          </Content>\n\n          <OverlayFooter\n            loading={loaders.isLoading?.create}\n            onGoBackPress={onClose}\n            submitButtonText={t('Accept')}\n            canSubmit={canSubmit}\n            extraFooter={\n              <ExtraFooterBox>\n                <FormAfterSubmitOptions {...submitOptions} />\n              </ExtraFooterBox>\n            }\n          />\n        </FormContainer>\n      </LoadersProvider>\n    </DrawerBase>\n  );\n};\n\nconst FormContainer = styled(FlexForm)`\n  flex: 1;\n  max-height: 100%;\n  height: 100vh;\n\n  width: 100%;\n  //padding: 0 12px;\n\n  overflow: hidden;\n\n  //max-width: 380px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormOfferDefaultsOverlay';\nimport { PropertyEntity } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\nimport { VariationEntity } from '../../../../types/offers/variations.types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useCurrentOffer } from '../../../../hooks';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: VariationEntity) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  offer?: OfferEntity;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true, offer }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const page = usePageCurrentOffer();\n  const Offer = useCurrentOffer(offer || page?.currentOffer);\n\n  const modalS = useModalProvider();\n  const offerSrv = useAppServiceProvider()[ServiceName.offers];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!Offer) return;\n\n      offerSrv.getAllVariations({\n        data: {},\n        params: {\n          offerId: Offer._id,\n        },\n        update,\n        refresh,\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [Offer, loaders, offerSrv]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, PropertyEntity> = {};\n    for (const variation of Offer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [Offer?.variations]);\n\n  const tableConfig = useMemo((): ITableListProps<VariationEntity> => {\n    return {\n      onRowClick: data => {\n        if (onSelect && data?.rowData) {\n          onSelect(data?.rowData);\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { icon: 'done', type: 'onlyIconOutlined', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n\n                  modalS.create(CreateVariationOverlay, {\n                    updateId: currentId,\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.create(CreateVariationOverlay, { offer: Offer });\n                },\n              },\n            ];\n          },\n    };\n  }, [Offer, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    if (Offer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n      tableData={Offer?.variations}\n      tableTitles={variationsTableTitles}\n      transformData={transformVariationTableData as never}\n    />\n  );\n};\nexport default VariationsTab;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 8px;\n\n  font-weight: 500;\n  font-size: 13px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'max-content'}\n      alignItems={'center'}\n      minHeight={'36px'}\n      padding={'4px 0'}\n    >\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={13} $padding={'6px 8px'}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'column'}\n        gap={8}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 32 }}\n      >\n        {!value || ['string', 'number'].includes(typeof value) ? (\n          <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n            {value || t('undefined')}\n          </CellStyledComp.CellText>\n        ) : (\n          value\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import styled from 'styled-components';\nimport React, { memo } from 'react';\nimport { DrawerHeader } from '../Overlays';\n\nexport interface DrawerBaseProps extends Omit<React.FormHTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onReset'> {\n  footer?: boolean;\n  onClosePress?: () => void;\n  onBackPress?: () => void;\n  isLoading?: boolean;\n  extraFooter?: React.ReactNode;\n  extraHeader?: React.ReactNode;\n  fillWidth?: boolean;\n  fillHeight?: boolean;\n  fitContentV?: boolean;\n  fitContentH?: boolean;\n  height?: string;\n  width?: string;\n  canSubmit?: boolean;\n  okButton?: boolean;\n}\n\nconst DrawerBase: React.FC<DrawerBaseProps> = ({\n  title,\n  footer = false,\n  children,\n  extraFooter,\n  extraHeader,\n  isLoading = false,\n  onClosePress,\n  onBackPress,\n  okButton,\n  canSubmit,\n  ...props\n}) => {\n  return (\n    <DrawerContainer className=\"modal_base\" {...props}>\n      <DrawerHeader\n        onBackPress={onBackPress}\n        onClosePress={onClosePress}\n        title={title}\n        canSubmit={canSubmit}\n        okButton={okButton}\n      >\n        {extraHeader}\n      </DrawerHeader>\n\n      <Content className=\"main\">{children}</Content>\n    </DrawerContainer>\n  );\n};\n\nconst DrawerContainer = styled.div<\n  Pick<DrawerBaseProps, 'fillHeight' | 'fillWidth' | 'fitContentH' | 'fitContentV' | 'width' | 'height'>\n>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr max-content;\n\n  position: relative;\n  padding: 0 8px;\n\n  min-height: 200px;\n  max-height: 90vh;\n\n  color: ${p => p.theme.fontColorSidebar};\n  width: ${({ width = '480px', fillWidth, fitContentH }) =>\n    (fillWidth && '100vw') || (fitContentH && 'max-content') || width};\n  height: ${({ height = '', fillHeight, fitContentV }) =>\n    (fillHeight && '90vh') || (fitContentV && 'max-content') || height};\n\n  min-width: 250px;\n  max-width: 100%;\n\n  //overflow: hidden;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  border-radius: 2px;\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: ${p => (p.fillWidth ? '98vw' : '450px')};\n  }\n`;\n\nconst Content = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  overflow: auto;\n  position: relative;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\n\nexport default memo(DrawerBase);\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseEntity, WarehouseItemEntity } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<WarehouseEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email'), path: 'email' },\n    bottom: { name: t('phone'), path: 'phone' },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayLocalCTX","createContext","OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","Provider","value","onClose","compId","_objectSpread","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColorDark","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","open","create","Component","_loaders$isLoading","onSelect","selected","_ref$withActions","withActions","modalS","useModalProvider","productsS","useAppServiceProvider","ServiceName","offerId","useAppParams","currentOffer","useCurrentOffer","_id","selectedRow","setSelectedRoe","loaders","useLoadersProvider","dispatch","useAppDispatch","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","refresh","update","wrap","_context","next","abrupt","getAllPrices","data","refreshCurrent","updateCurrent","onLoading","stop","_x","apply","arguments","tableConfig","onRowClick","_data$rowData","rowData","rowId","actionsCreator","ctx","_ctx$selectedRow","currentId","icon","type","separator","disabled","getPriceThunk","undefined","content","onSuccess","ModalChildren","CreatePriceModal","modalChildrenProps","offer","updateId","useEffect","TableList","hasSearch","hasFilter","isLoading","prices","tableData","tableTitles","pricesColumnsForProductReview","currentProduct","useOffersSelector","loading","setLoading","product","getIdRef","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","SalesTab","padding","Text","$size","$weight","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","modalBorderColor","_page$currentOffer","_page$currentOffer2","toggleVisibility","page","usePageCurrentOffer","useLoaders","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","tabs","_defineProperty","Variations","VariationsTab","Warehousing","WarehousingTab","Prices","PricesTab","Sales","LoadersProvider","_jsxs","DrawerHeader","onBackPress","renderTitle","fxDirection","justifyContent","gap","label","sku","TabSelector","options","onOptSelect","preventDefault","flex","Content","sideBarBorderColor","_currentOffer$categor","_loaders$isLoading2","service","directory","useDirectorySelector","ApiDirType","initIds","sortIds","categories","categoriesIds","setCategoriesIds","canSubmit","join","c","OverlayForm","onSubmit","stopPropagation","updateById","meta","title","okButton","OfferCategoriesSelector","onChangeIds","defaultData","OverlayFooter","NotActiveTreeDataItem","_item$parent","_item$parent2","item","_ref2$lvl","lvl","selectedIds","renderChildren","_item$childrenList","childrenList","isSelected","_Fragment","CellStyledComp","parent","PropertiesBox","defaultState","template","onChange","_objectWithoutProperties","_excluded","Offer","state","initialTemplate","_Offer$properties","_Offer$properties$","_Offer$properties$$pa","_Offer$properties$$pa2","properties","path","split","currentTemplate","setCurrentTemplate","_useState3","_useState4","_useState5","_useState6","setSelectedIds","initState","_Offer$properties2","prop","propertiesList","_currentTemplate$chil","_state$propertiesKeys","isSelectable","_rootId","_propertiesList","_propertiesIds","propertiesKeysMap","_step","_iterator","_createForOfIteratorHelper","s","n","done","_state$propertiesData","propId","propertiesDataMap","childrenIds","push","err","e","f","_sortIds","handleSubmit","event","propertiesIds","templateId","_meta","ToastService","console","debug","handleSelect","_parentId","valueId","renderPropertiesList","OfferPropertySelector","t","PropertiesGroupSelector","filterValue","defaultValue","submitButtonText","OverviewPropertyComponent","items","renderValues","_list","maxWidth","flexWrap","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","OfferDefaultFieldKeyEnum","getFormDefaultValues","Map","forEach","tab","key","field","set","ObjectFromEntries","entries","Form","modalBackgroundColor","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","useAppForm","defaultValues","setValue","getValues","formValues","tabsMap","_tabsMap2","warehouse","WarehousesTab","price","log","variation","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx","_tabsMap$currentKey","currentKey","Tab","_tabs$currentTabIdx2","dataKey","id_a","compareIdsByPath","fData","toReqData","ModalHeader","currentIndex","onChangeIndex","hasLoading","FlexForm","sideBarBackgroundColor","images","setState","useTheme","FormOfferImagesComponent","initialData","onlyPreviews","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onCreatePress","onAddNewImageSetPress","OfferOverviewTabsEnum","ProductOverviewTabsList","Container","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","offerOverviewCells","getValue","gridArea","General","approved","barCode","CellComponent","cell","modalSrv","useModalService","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","minHeight","OverviewCellHeader","openOverlayButtonTitle","onOpenOverlayPress","OfferCategoriesOverlay","height","Properties","_idsSet$properties","overlayHandler","_useMemo","_propertiesMap","_propertiesIdsSet","Set","_valuesListMap","_valuesIdsSet","_value$parent","_state$propertiesData2","add","_value","values","Object","valuesListMap","idsSet","renderProperties","list","FormSelectPropertiesOverlay","size","_Offer$tags2","_Offer$tags","tags","_data$brand","brand","measurement","JSON","parse","unit","min","max","step","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","renderVariationTags","_variation$properties","_item$value","$align","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","out","commission","percentage","markup","createPriceOverviewTagsData","FormOfferDefaultsOverlay","color","fontColorHeader","code","info","Defaults","_product$author","_product$author$user","author","user","email","createdAt","isString","toAppDateFormat","Date","_item$title","_product$editor","_product$editor$user","editor","updatedAt","_item$title2","_item$value2","renderImageSets","_data$images","imgsSet","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","Images","_p$product","router","useAppRouter","cellsMap","offerOverviewCellsMap","_offerOverviewCellsMa","getOfferOverviewCellsMap","renderCells","_cellsMap$currentTab","_excluded2","OverviewTextCell","goBack","optionProps","fitContentH","option","replace","hash","variant","iconSize","onEdit","visible","onHide","onDelete","margin","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","useOfferOverviewLoaders","offersSrv","offers","OfferOverviewXL","openModal","Modal","Modals","getOne","getPrices","getVariations","Page","takeFullGridArea","variations","isRightSideVisible","setIsRightSideVisible","toggleRightSide","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","PageCurrentOfferCTX","catch","clearCurrent","_schema","yup","shape","required","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","mainInputsProps","FormContainer","fontColorSidebar","tableBackgroundColor","ExtraFooterBox","_Variation$offer","Variation","useCurrentVariation","submitOptions","useAfterSubmitOptions","formMethods","toVariationFormData","resolver","yupResolver","reValidateMode","register","errors","formState","reset","_state$propertiesKeys2","compileLabel","valuesMap","_step2","_sortedIds","keys","_labels","_iterator2","_compiled","onValid","updateVariationById","onError","toVariationReqData","createVariation","_Offer$sku","close","clear","parentId","_formValues$propertie","exist","newMap","_sortIds2","_sortedInit","propValuesIdsSet","_sortedCurrent","propValuesIds","fromEntries","selectedId","DrawerBase","AccordionFormArea","hideFooter","isOpen","columnGap","_ref4","_Offer$name","InputLabel","expandable","_ref5","InputText","placeholder","opt","onGoBackPress","extraFooter","FormAfterSubmitOptions","offerSrv","getAllVariations","variationsTableTitles","_Offer$variations","propsList","_prop$parent","createTableTitlesFromProperties","window","confirm","CreateVariationOverlay","transformData","transformVariationTableData","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","_templateObject6","CategoryItem","_templateObject7","backgroundColor","_ref$title","_ref$openOverlayButto","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","marginRight","$padding","footer","extraHeader","onClosePress","DrawerContainer","_ref2$width","width","_ref3$height","fitContentV","shadowMain","fillColor","_ref6","fontColor","_ref7","_ref8","_ref9","_ref10","_ref11","memo","top","getData","rd","bottom","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}