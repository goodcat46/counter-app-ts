{"version":3,"file":"static/js/64.e0b33715.chunk.js","mappings":"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","sources":["components/AppPages/PageProductOverview/PageCurrentProductProvider.tsx","components/AppPages/PageProductOverview/tabs/PricesTab.tsx","components/AppPages/PageProductOverview/tabs/VariationsTab.tsx","components/AppPages/PageProductOverview/tabs/WarehousingTab.tsx","components/AppPages/pagesStyles.tsx","components/Forms/FormProduct/FormCreateVariationOverlay.tsx","components/Forms/FormProduct/FormSelectPropertiesOverlay.tsx","components/Forms/FormProduct/components/index.tsx","components/Forms/FormProduct/FormProductImagesOverlay.tsx","components/Forms/FormProduct/FormSelectCategoriesOverlay.tsx","components/Forms/FormProduct/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/FormProduct/tabs/WarehousesTab.tsx","components/Forms/FormProduct/FormProductDefaultsOverlay.tsx","components/atoms/Changer.tsx","components/Overviews/components/Cells.tsx","data/products.data.ts","data/warehauses.data.ts"],"sourcesContent":["import React, { createContext, useCallback, useContext, useMemo, useState } from 'react';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { IProduct } from '../../../redux/products/products.types';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\n\nexport interface PageCurrentProductProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageCurrentProductProviderValue {\n  currentProduct?: IProduct;\n  clearCurrent: () => void;\n  getOverlayStack: () => OverlayStackItemData[];\n  overlayStack: OverlayStackItemData[];\n  createOverlayComponent: OverlayHandler;\n  removeStackItem: (id: string) => void;\n  clearStack: () => void;\n  mainPagePath?: string;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => OverlayHandlerReturn;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport type OverlayRenderComponentProps<Props = any> = OverlayHandlerReturn & Props;\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface OverlayHandlerReturn {\n  onClose?: () => void;\n  index?: number;\n  overlayId?: string;\n}\n\nexport const PageCurrentProductCTX = createContext({});\n\nexport const usePageCurrentProduct = () => useContext(PageCurrentProductCTX) as PageCurrentProductProviderValue;\n\nconst PageCurrentProductProvider: React.FC<PageCurrentProductProviderProps> = ({ children }) => {\n  const { currentProduct } = useProductsSelector();\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const clearCurrent = useCallback(() => {\n    service.clearCurrent(undefined);\n  }, [service]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.id !== isExist.id);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: OverlayHandlerReturn = {\n        onClose: () => removeStackItem(id),\n        overlayId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getOverlayStack = useCallback(() => overlayStack, [overlayStack]);\n\n  const CTX = useMemo(\n    (): PageCurrentProductProviderValue => ({\n      currentProduct,\n      createOverlayComponent,\n      overlayStack,\n      removeStackItem,\n      getOverlayStack,\n      clearStack,\n      clearCurrent,\n    }),\n    [currentProduct, createOverlayComponent, overlayStack, removeStackItem, getOverlayStack, clearStack, clearCurrent]\n  );\n\n  return <PageCurrentProductCTX.Provider value={CTX}>{children}</PageCurrentProductCTX.Provider>;\n};\nexport default PageCurrentProductProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { pricesColumnsForProductReview } from 'data/priceManagement.data';\nimport FormCreatePrice from '../../../Forms/FormCreatePrice/FormCreatePrice';\nimport { IPriceListItem } from 'redux/priceManagement/priceManagement.types';\nimport { useProductsSelector } from 'redux/selectors.store';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { getIdRef } from 'utils/dataTransform';\nimport { OnlyUUID } from 'redux/global.types';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n\n      productsS.getAllPricesByProductId({\n        data: { params: { product }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfig = useMemo((): ITableListProps<IPriceListItem> => {\n    return {\n      tableData: currentProduct?.prices,\n      tableTitles: pricesColumnsForProductReview,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  const m = modalS.open({\n                    ModalChildren: FormCreatePrice,\n                    modalChildrenProps: {\n                      product: currentProduct,\n                      onSubmit: (d, o) => {\n                        console.log('FormCreatePrice submit pr overview', d);\n                        pricesS.addPriceToList({\n                          data: { updateCurrent: true, data: { data: d } },\n                          onSuccess: () => {\n                            o?.close && m?.onClose();\n                          },\n                        });\n                      },\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct, withActions, onSelect, loadData, modalS, pricesS]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.prices || currentProduct?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfig} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default PricesTab;\n","import { usePageCurrentProduct } from '../PageCurrentProductProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { createTableTitlesFromTemplate, transformVariationTableData } from '../../../../utils/tables';\nimport FormCreateVariation from '../../../Forms/FormProduct/FormCreateVariationOverlay';\nimport { IVariationTableData } from '../../../../redux/products/variations.types';\nimport { useProductsSelector, usePropertiesSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const page = usePageCurrentProduct();\n  const modalS = useModalProvider();\n  const currentProduct = useProductsSelector().currentProduct;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, product },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const variationsTableTitles = useMemo(() => {\n    const template = templates.find(t => t._id === currentProduct?.template?._id);\n\n    return createTableTitlesFromTemplate(template);\n  }, [currentProduct?.template?._id, templates]);\n\n  const tableConfig = useMemo(() => {\n    return {\n      tableTitles: variationsTableTitles,\n      tableData: currentProduct?.variations,\n      transformData: transformVariationTableData,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n                  const dataForUpdate = currentProduct?.variations?.find(v => v?._id === currentId);\n\n                  modalS.open({\n                    ModalChildren: FormCreateVariation,\n                    modalChildrenProps: {\n                      update: currentId,\n                      defaultState: dataForUpdate,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: FormCreateVariation,\n                    modalChildrenProps: { product: page.currentProduct },\n                  });\n                },\n              },\n            ];\n          },\n    } as ITableListProps<IVariationTableData>;\n  }, [currentProduct?.variations, loadData, modalS, onSelect, page.currentProduct, variationsTableTitles, withActions]);\n\n  useEffect(() => {\n    loadData({ refresh: true });\n    // if ((!currentProduct?.variations || currentProduct?.variations?.length === 0) && currentProduct?._id) {\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfig} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\nexport default VariationsTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { IProductInventory } from '../../../../redux/warehouses/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventoriesByProductId({\n        data: { refreshCurrent: refresh, params: { product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<IProductInventory> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { useProductsSelector, usePropertiesSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../atoms/Text';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { createVariationFormData, createVariationReqData } from '../../../utils/dataTransform';\nimport { IVariation, IVariationFormData } from '../../../redux/products/variations.types';\nimport { OnlyUUID } from '../../../redux/global.types';\nimport { ToastService } from '../../../services';\nimport { ModalFormProps } from '../../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../components/FormAfterSubmitOptions';\nimport { OverlayFooter, OverlayHeader } from './components';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { IProperty, IPropertyValue } from '../../../redux/products/properties.types';\nimport { useAppForm } from '../../../hooks';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { t } from '../../../lang';\nimport { checks } from '../../../utils';\nimport { Path } from 'react-hook-form';\n\nconst dimensionsInputs: {\n  label?: string;\n  placeholder?: string;\n  name: Path<IVariationFormData>;\n}[] = [\n  { name: 'dimensions.height', label: t('Height'), placeholder: t('Sm') },\n  { name: 'dimensions.width', label: t('Width'), placeholder: t('Sm') },\n  { name: 'dimensions.length', label: t('Length'), placeholder: t('Sm') },\n  { name: 'dimensions.weight', label: t('Weight'), placeholder: t('Kg') },\n];\nexport interface FormVariationProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, IVariation>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  product?: OnlyUUID;\n\n  create?: boolean;\n  update?: string;\n\n  defaultState?: IVariation;\n}\nconst validation = yup.object().shape({\n  label: yup.string().required().min(5).max(50),\n  sku: yup.string().required().min(8).max(36),\n  barCode: yup.string(),\n  propertiesMap: yup.object().shape<{}>({\n    // Ваша схема для propertiesMap\n  }),\n  product: yup.object().shape({\n    label: yup.string(),\n    _id: yup.string(),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n});\n\nconst FormCreateVariationOverlay: React.FC<FormVariationProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const currentProduct = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n  } = useAppForm<IVariationFormData>({\n    defaultValues: createVariationFormData(\n      defaultState ? { ...defaultState, product: currentProduct } : { product: currentProduct }\n    ),\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n\n  const [propLabelsByParentId, setPropLabelsByParentId] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    if (update) return;\n\n    let newLabel = '';\n    console.log(propLabelsByParentId);\n    const labels = Object.values(propLabelsByParentId);\n\n    if (labels.length === 0) {\n      newLabel = `${currentProduct?.label}. {{VARIATION_LABEL}}`;\n      return;\n    } else {\n      const propLabelsString = labels.join('. ');\n      newLabel = currentProduct?.label ? `${currentProduct?.label}. ${propLabelsString}` : propLabelsString;\n    }\n    setValue('label', newLabel);\n  }, [currentProduct?.label, propLabelsByParentId, setValue, update]);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentProduct?.template?._id);\n  }, [currentProduct, templates]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: createVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: setLoading,\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: createVariationReqData(data),\n            onSuccess: data => {\n              submitOptions.state.close && onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: setLoading,\n          })\n          .then();\n      }\n\n      onSubmit && onSubmit(data);\n    },\n    [onClose, onSubmit, service, submitOptions.state.close, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string, label?: string) => {\n      setValue(`propertiesMap.${parentId}`, id);\n      label && setPropLabelsByParentId(p => ({ ...p, [parentId]: label }));\n    },\n    [setValue]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setPropLabelsByParentId({});\n  }, [setValue]);\n\n  const preparedTemplate = useMemo(\n    () => template?.childrenList?.filter(el => el?.isSelectable),\n    [template?.childrenList]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return preparedTemplate?.map(prop => {\n      return (\n        <RenderVariationProperty\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [preparedTemplate, selectedIds, handleSelect]);\n\n  return (\n    <FormContainer onSubmit={handleSubmit(onValid)} onReset={handleClearMap} {...props}>\n      <OverlayHeader onClose={onClose} title={title || template?.label} canSubmit={canSubmit} showSubmitButton />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <Inputs padding={'0 8px'}>\n          <InputLabel label={t('label')} error={errors.label}>\n            <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n          </InputLabel>\n\n          <FlexBox fxDirection={'row'} gap={8} fillWidth>\n            <InputLabel label={t('sku')} error={errors.sku}>\n              <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n            </InputLabel>\n\n            <InputLabel label={t('barCode')} error={errors.barCode}>\n              <InputText {...register('barCode')} placeholder={t('barCode')} />\n            </InputLabel>\n          </FlexBox>\n\n          <FlexBox gap={8} fillWidth style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)' }}>\n            {dimensionsInputs.map(input => {\n              return (\n                <InputLabel key={input.name} label={input.label} error={errors[input.name as never]}>\n                  <InputText\n                    placeholder={input.placeholder}\n                    min={1}\n                    type={'number'}\n                    {...register(input.name, {\n                      valueAsNumber: true,\n                      min: 1,\n                    })}\n                  />\n                </InputLabel>\n              );\n            })}\n          </FlexBox>\n        </Inputs>\n\n        <TemplateBox padding={'0 0 8px'} margin={'8px 0 0'}>\n          {renderTemplate}\n        </TemplateBox>\n      </Content>\n\n      <OverlayFooter\n        loading={loading}\n        resetButtonShown\n        submitButtonText={loading ? 'Loading...' : update ? 'Підтвердити' : 'Додати'}\n        canSubmit={canSubmit}\n        extraFooter={\n          <ExtraFooterBox>\n            <FormAfterSubmitOptions {...submitOptions} />\n          </ExtraFooterBox>\n        }\n      />\n    </FormContainer>\n  );\n};\n\nexport const RenderVariationProperty = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: {\n  item: IProperty;\n  selectedValue?: string;\n  selectedIds?: string[];\n  onSelect?: (propId: string, valueId: string, label?: string) => void;\n}) => {\n  const renderChildren = useMemo(() => {\n    return item.childrenList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, item.childrenList, onSelect, selectedIds]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox\n        fillWidth\n        padding={'8px 0'}\n        gap={6}\n        numColumns={item.label && ['розмір'].includes(item.label.toLowerCase()) ? 4 : 3}\n      >\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ numColumns?: number }>`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(${({ numColumns = 2 }) => numColumns}, 1fr);\n`;\nconst Inputs = styled(FlexBox)``;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: IPropertyValue;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    if (!checks.isUnd(isSelected)) {\n      setIsActive(isSelected);\n    }\n  }, [isSelected]);\n\n  return (\n    <ValueTag\n      variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nexport default FormCreateVariationOverlay;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { useProductsSelector, usePropertiesSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../atoms/Text';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { OnlyUUID } from '../../../redux/global.types';\nimport { ModalFormProps } from '../../ModalForm';\nimport { ToastService } from '../../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './components';\n\nexport interface FormSelectPropertiesProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  product?: OnlyUUID;\n  template?: OnlyUUID;\n\n  update?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  product,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === (template?._id || currentProduct?.template?._id));\n  }, [currentProduct?.template?._id, template?._id, templates]);\n\n  const canSubmit = useMemo(() => {\n    return currentProduct?.properties?.map(p => p._id).join(',') !== selectedIds.join(',');\n  }, [currentProduct?.properties, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = update ?? currentProduct?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentProduct?._id, onClose, onSubmit, selectedIds, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentId?: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n        onChange && onChange(newData);\n        onSelect && onSelect(id);\n\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (currentProduct?.properties) {\n      setSelectedIds(currentProduct?.properties.map(p => p._id));\n    }\n  }, [currentProduct?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader onClose={onClose} canSubmit={canSubmit} title={title || templateData?.label} showSubmitButton />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>`\n  //display: grid;\n  //grid-template-columns: repeat(auto-fill, 25%);\n  //\n  //@media screen and (max-width: 480px) {\n  //  grid-template-columns: repeat(auto-fill, 50%);\n  //}\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  //width: 100%;\n  //min-width: unset;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormSelectPropertiesOverlay;\n","import FlexBox from '../../../atoms/FlexBox';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport * as React from 'react';\n\nexport const OverlayHeader = ({\n  onClose,\n  title,\n  showSubmitButton,\n  canSubmit,\n}: {\n  canSubmit?: boolean;\n  onClose?: () => void;\n  title?: string;\n  showSubmitButton?: boolean;\n}) => {\n  return (\n    <Header padding={'4px 0'}>\n      <FlexBox fillWidth fxDirection={'row'} justifyContent={'space-between'} alignItems={'stretch'} height={'32px'}>\n        <ButtonIcon\n          variant={'textExtraSmall'}\n          icon={'SmallArrowLeft'}\n          iconSize={'22px'}\n          padding={'0 6px'}\n          style={{ minWidth: 'max-content', minHeight: '100%' }}\n          onClick={onClose}\n        >\n          {'Back'}\n        </ButtonIcon>\n\n        <FlexBox justifyContent={'center'} overflow={'hidden'}>\n          <Text\n            $weight={600}\n            $size={14}\n            style={{ textTransform: 'uppercase', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n          >\n            {title}\n          </Text>\n        </FlexBox>\n\n        {showSubmitButton && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            gap={'6px'}\n            type={'submit'}\n            padding={'0 6px'}\n            endIcon={'done'}\n            endIconSize={'22px'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            disabled={!canSubmit}\n          >\n            {'Ok'}\n          </ButtonIcon>\n        )}\n      </FlexBox>\n    </Header>\n  );\n};\nconst Header = styled(FlexBox)`\n  height: 32px;\n`;\n\nexport const OverlayFooter = ({\n  submitButtonText = 'Прийняти',\n  loading,\n  extraFooter,\n  canSubmit,\n  onCreatePress,\n  resetButtonShown,\n}: {\n  canSubmit?: boolean;\n  resetButtonShown?: boolean;\n  extraFooter?: React.ReactNode;\n  loading?: boolean;\n  onCreatePress?: () => void;\n  submitButtonText?: string;\n}) => {\n  return (\n    <Footer fillWidth>\n      {extraFooter}\n\n      <FlexBox padding={'8px 8px'} fxDirection={'row'} gap={8} alignItems={'center'}>\n        {resetButtonShown && (\n          <ButtonIcon variant={'onlyIcon'} icon={'clear'} size={'36px'} iconSize={'80%'} type={'reset'} />\n        )}\n\n        {onCreatePress && (\n          <ButtonIcon variant={'onlyIcon'} icon={'plus'} size={'36px'} iconSize={'80%'} onClick={onCreatePress} />\n        )}\n\n        <ButtonIcon\n          variant={'filledLarge'}\n          flex={1}\n          type={'submit'}\n          style={{ padding: '0 12px' }}\n          textTransform={'uppercase'}\n          fontWeight={600}\n          endIcon={'SmallArrowRight'}\n          endIconSize={'24px'}\n          disabled={loading || !canSubmit}\n        >\n          {submitButtonText}\n        </ButtonIcon>\n      </FlexBox>\n    </Footer>\n  );\n};\n\nconst Footer = styled(FlexBox)``;\n\nexport const OverlayForm = ({\n  children,\n  ...props\n}: { children?: React.ReactNode } & React.HTMLAttributes<HTMLFormElement>) => {\n  return <Form {...props}>{children}</Form>;\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n","import FormProductImagesComponent from './FormProductImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { IProduct, IProductImage } from '../../../redux/products/products.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../../utils/dataTransform';\nimport { OverlayFooter, OverlayHeader } from './components';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: IProduct;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const theme = useTheme();\n\n  const [state, setState] = useState<Partial<IProductImage>[]>(currentProduct?.images || []);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as IProductImage[] }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormProductImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={<OverlayHeader title={'Зображення'} onClose={onClose} showSubmitButton />}\n        FooterComponent={props => {\n          return <OverlayFooter onCreatePress={props.onAddNewImageSetPress} />;\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useDirectoriesSelector, useProductsSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../../utils/dataTransform';\nimport FormProductCategories from './FormProductCategories';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './components';\n\nexport interface FormSelectCategoriesOverlayProps extends OverlayHandlerReturn {}\n\nconst FormProductCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const { currentProduct } = useProductsSelector();\n  const { directory } = useDirectoriesSelector(ApiDirType.CATEGORIES_PROD);\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<string[]>([]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { categories: state }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  const canSubmit = useMemo(() => {\n    const initialString = currentProduct?.categories?.map(c => c._id)?.toString();\n    const currentString = state.toString();\n\n    return initialString !== currentString;\n  }, [currentProduct?.categories, state]);\n\n  useEffect(() => {\n    if (currentProduct?.categories) {\n      setState(currentProduct?.categories.map(c => c._id));\n    }\n  }, [currentProduct?.categories]);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader title={'Категорії'} onClose={onClose} canSubmit={canSubmit} showSubmitButton />\n\n      <Content padding={'0 0 8px 0'} flex={1}>\n        <FormProductCategories onChange={setState} options={directory} defaultData={state} />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductCategoriesOverlay;\n","import { OnlyUUID } from '../../../../redux/global.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectoriesSelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectoriesSelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../components/Directories/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../companies/companies.types';\n\nexport interface ICounterpartyBase {\n  name?: string;\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  label?: string;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useMemo } from 'react';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { IWarehouse } from '../../../../redux/warehouses/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  // const [loading, setLoading] = useState(false);\n\n  const warehouses = useWarehousesSelector().warehouses;\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [onSelect, warehouses, withActions]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return <TableList isSearch={false} {...tableConfigs} selectedRow={selected} />;\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData } from '../../../redux/products/products.types';\nimport styled from 'styled-components';\nimport { OverlayHandlerReturn } from '../../atoms/PageOverlayProvider';\nimport { ModalHeader, OverlayFooter } from '../../atoms';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useAppForm } from '../../../hooks';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport ModalFilter from '../../ModalForm/ModalFilter';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../../AppPages/PageProductOverview/tabs/PricesTab';\nimport VariationsTab from '../../AppPages/PageProductOverview/tabs/VariationsTab';\nimport WarehousingTab from '../../AppPages/PageProductOverview/tabs/WarehousingTab';\nimport CounterpartyTab from './tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../../redux/directories/counterparties.types';\nimport { t } from '../../../lang';\nimport WarehousesTab from './tabs/WarehousesTab';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { OnlyUUID } from '../../../redux/global.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { createDataForReq } from '../../../utils/dataTransform';\n\nexport interface FormProductDefaultsOverlayProps extends OverlayHandlerReturn {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n}\n\nexport enum FormProductDefaultsTabs {\n  variation = 'variation',\n  price = 'price',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const currentProduct = useProductsSelector()?.currentProduct;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    productsS.setDefaults({\n      data: { data: { defaults: createDataForReq(fData) as never }, _id: currentProduct?._id, updateCurrent: true },\n      onSuccess: (data, meta) => {\n        console.log(data, meta);\n      },\n    });\n  };\n\n  const renderTab = useMemo(() => {\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.warehouse) {\n      return <WarehousesTab onSelect={handleSelect} selected={formValues?.variation} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.price) {\n      return <PricesTab withActions={false} onSelect={handleSelect} selected={formValues?.price} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.variation) {\n      return <VariationsTab withActions={false} onSelect={handleSelect} selected={formValues?.variation} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.inventory) {\n      return <WarehousingTab withActions={false} onSelect={handleSelect} selected={formValues?.inventory} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.supplier) {\n      return (\n        <CounterpartyTab\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          withActions={false}\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      );\n    }\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentProduct?.defaults;\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentProduct?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <Form onSubmit={handleSubmit(onValid)}>\n      <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n      <Content flex={1} fillWidth>\n        <ModalFilter filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} /> {renderTab}\n      </Content>\n\n      <OverlayFooter onCreatePress={() => {}} canSubmit={canSubmit} />\n    </Form>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FlexBox from './FlexBox';\nimport ButtonIcon from './ButtonIcon/ButtonIcon';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { Text } from './Text';\nimport { IconIdType } from '../../img/sprite';\nimport { LangPack } from '../../lang';\nimport { checks } from '../../utils';\n\nexport interface ChangerOption<T = any, D = any> {\n  _id?: string;\n  value: T;\n  data?: D;\n  color?: string;\n  icon?: IconIdType;\n  backgroundColor?: string;\n  label?: string;\n  lang?: LangPack;\n}\n\nexport interface StatusChangerProps<V = any, N = any> {\n  name?: N;\n  options?: ChangerOption<V>[];\n  onChange?: (event: ChangerEvent<V, N>) => void;\n  currentIndex?: number;\n  currentOption?: ChangerOption<V>;\n  colorIndicator?: boolean;\n  disabled?: boolean;\n}\n\nexport interface ChangerEvent<V = any, N = any> {\n  index: number;\n  name?: N;\n  value: ChangerOption<V>['value'];\n  option?: ChangerOption<V>;\n}\n\nconst Changer = <V = any,>({\n  options = [],\n  colorIndicator = true,\n  onChange,\n  currentOption,\n  currentIndex,\n  disabled,\n  name,\n}: StatusChangerProps<V>): JSX.Element => {\n  const [current, setCurrent] = useState<number>(0);\n  const currentStatus = useMemo(() => (options ? options[current] : null), [current, options]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    if (checks.isFun(onChange) && checks.isUnd(currentOption ?? currentIndex)) {\n      console.warn('Changer', 'You try to use uncontrolled \"Changer\" component\\n', 'You need to pass option or index');\n    }\n  }, [onChange, currentOption, currentIndex]);\n  const handleChange = (increment: number) => () => {\n    if (checks.isFun(onChange)) {\n      const newIndex = current + increment;\n      onChange({ index: newIndex, value: options[newIndex]?.value, option: options[newIndex] });\n      return;\n    }\n\n    if (current >= 0 && current + 1 <= options?.length) {\n      setCurrent(prev => prev + increment);\n    }\n  };\n  useEffect(() => {\n    if (!checks.isUnd(currentIndex) && current >= 0 && current + 1 <= options.length) {\n      setCurrent(currentIndex);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentIndex]);\n\n  useEffect(() => {\n    if (!checks.isUnd(currentOption)) {\n      const index = options.findIndex(o => {\n        if (currentOption?.value) {\n          return o?.value === currentOption?.value;\n        } else if (currentOption?._id) {\n          return o?._id === currentOption?._id;\n        }\n        return false;\n      });\n\n      index >= 0 && index !== current && setCurrent(index);\n    }\n\n    // eslint-disable-next-line\n  }, [currentOption]);\n\n  return (\n    <FlexBox fxDirection={'row'} fillWidth height={'28px'} alignItems={'center'} gap={8}>\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowLeft'}\n        iconSize={'28px'}\n        disabled={disabled || current === 0}\n        onClick={handleChange(-1)}\n      />\n\n      <FlexBox\n        flex={1}\n        alignItems={'stretch'}\n        justifyContent={'center'}\n        overflow={'hidden'}\n        style={{\n          borderRadius: 2,\n          backgroundColor: theme.fieldBackgroundColor,\n          color: theme.fontColorSidebar,\n          height: '100%',\n        }}\n      >\n        <FlexBox fillWidth fxDirection={'row'} justifyContent={'center'} alignItems={'center'} flex={1}>\n          <Text $size={15} $weight={600} className={'inner'} $ellipsisMode={true}>\n            {currentStatus?.label}\n          </Text>\n        </FlexBox>\n\n        {colorIndicator && currentStatus?.color && (\n          <FlexBox fillWidth height={'4px'} style={{ backgroundColor: currentStatus?.backgroundColor }} />\n        )}\n      </FlexBox>\n\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowRight'}\n        iconSize={'28px'}\n        disabled={disabled || current + 1 === options.length}\n        onClick={handleChange(1)}\n      />\n    </FlexBox>\n  );\n};\nexport default Changer;\n","import FlexBox from '../../atoms/FlexBox';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport FormCreateVariation from '../../Forms/FormProduct/FormCreateVariationOverlay';\nimport { IProperty, IPropertyValue } from '../../../redux/products/properties.types';\nimport styled, { useTheme } from 'styled-components';\nimport { Text } from '../../atoms/Text';\nimport { useDirectoriesSelector, useProductsSelector } from '../../../redux/selectors.store';\nimport FormSelectPropertiesOverlay from '../../Forms/FormProduct/FormSelectPropertiesOverlay';\nimport { IProduct, ProductStatusEnum } from '../../../redux/products/products.types';\nimport { formAddImageSetTabs } from '../../Forms/FormProduct/FormAddImageSet';\nimport FormProductImages from '../../Forms/FormProduct/FormProductImagesOverlay';\nimport ImagePreviewSmall from '../../atoms/ImagePreviewSmall';\nimport { IProductCategoryDirItem } from '../../Directories/dir.types';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport FormProductCategoriesOverlay from '../../Forms/FormProduct/FormSelectCategoriesOverlay';\nimport { OverlayHandler } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport numberWithSpaces from '../../../utils/numbers';\nimport { t } from '../../../lang';\nimport { checks } from '../../../utils';\nimport FormProductDefaultsOverlay from '../../Forms/FormProduct/FormProductDefaultsOverlay';\nimport Changer from '../../atoms/Changer';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { productStatusesData } from '../../../data/products.data';\nimport { getStatusData } from '../../../data/statuses.data';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { ToastService } from '../../../services';\nimport { IPriceListItem } from '../../../redux/priceManagement/priceManagement.types';\n\nexport type RenderOverviewCellComponent<Data = any> = React.FC<{\n  cell: OverviewCellProps<Data>;\n  setOverlayContent: OverlayHandler;\n  data?: Data;\n}>;\n\nexport interface OverviewCellProps<Data = any> {\n  value?: string | number;\n  title?: string;\n  gridArea?: keyof Data | string;\n  CellComponent?: RenderOverviewCellComponent<Data>;\n  getValue?: (data: Data) => React.ReactNode | undefined | null;\n}\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = cell.getValue ? cell.getValue(data) : null;\n\n  return (\n    <Cell>\n      <CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellText>\n      </FlexBox>\n    </Cell>\n  );\n};\n\nexport const ProductStatusChangerCell: RenderOverviewCellComponent<IProduct> = ({ cell, data }) => {\n  const [canEdit, setCanEdit] = useState(false);\n  const [current, setCurrent] = useState<ProductStatusEnum | undefined>(data?.approved);\n\n  const service = useAppServiceProvider()[ServiceName.products];\n\n  const currentStatusData = useMemo(() => getStatusData(current), [current]);\n\n  const canAccept = useMemo(() => {\n    return current !== data?.approved;\n  }, [current, data?.approved]);\n  const handleCancelPress = () => {\n    setCurrent(data?.approved ?? (productStatusesData[0].value as never));\n    setCanEdit(false);\n  };\n\n  const handleAcceptPress = () => {\n    service.updateById({\n      data: { _id: data?._id, data: { approved: current }, refreshCurrent: true },\n      onSuccess: () => {\n        setCanEdit(false);\n        ToastService.success('Product updated');\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (data?.approved) {\n      setCurrent(data.approved);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Cell style={{ minHeight: 'max-content' }}>\n      <CellHeader\n        title={cell?.title}\n        onCancelPress={handleCancelPress}\n        onEditPress={() => setCanEdit(true)}\n        editMode={canEdit}\n      />\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        justifyContent={'flex-end'}\n        alignItems={'stretch'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n        gap={8}\n      >\n        {canEdit ? (\n          <>\n            <Changer\n              disabled={!canEdit}\n              options={productStatusesData}\n              currentOption={{ value: current }}\n              onChange={e => setCurrent(e?.value as never)}\n            />\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <ButtonIcon variant={'outlinedSmall'} disabled={!canAccept} onClick={handleCancelPress}>\n                {t('Cancel')}\n              </ButtonIcon>\n\n              <ButtonIcon variant={'filledSmall'} disabled={!canAccept} flex={1} onClick={handleAcceptPress}>\n                {t('Ok')}\n              </ButtonIcon>\n            </FlexBox>\n          </>\n        ) : (\n          <Tag\n            style={{\n              alignSelf: 'flex-end',\n              borderColor: currentStatusData?.backgroundColor,\n              backgroundColor: currentStatusData?.backgroundColor,\n            }}\n          >\n            <CellText $isTitle={!current} $weight={600} $align={'right'}>\n              {t(current || 'undefined')}\n            </CellText>\n          </Tag>\n        )}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nexport const ProductDefaultsCell: RenderOverviewCellComponent<IProduct> = ({ data, cell, setOverlayContent }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: number | string }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <DefaultTag key={item?.title}>\n          {`${item?.title}: `}\n          {item?.value || '---'}\n        </DefaultTag>\n      );\n    });\n  }, [data?.variation]);\n\n  const priceInfoCellsData = useMemo(() => createPriceOverviewTagsData(data?.price), [data?.price]);\n\n  const renderPriceInfo = useMemo(() => {\n    return priceInfoCellsData.map((item, index) => {\n      return (\n        <DefaultTag key={item?.title}>\n          {`${item?.title}: `}\n          {numberWithSpaces(item?.amount || 0)}\n          {checks.isNum(item?.percentage) && ` | ${numberWithSpaces(item?.percentage)}%`}\n        </DefaultTag>\n      );\n    });\n  }, [priceInfoCellsData]);\n\n  return (\n    <Cell style={{ minHeight: 'max-content' }}>\n      <CellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          setOverlayContent({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $isTitle $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('warehouse')}\n        </CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          <DefaultTag>{`${t('Label')}: ${warehouse?.label || '---'}`}</DefaultTag>\n          <DefaultTag>{`${t('Code')}: ${warehouse?.code || '---'}`}</DefaultTag>\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $isTitle $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('supplier')}\n        </CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          <DefaultTag>{`${t('Label')}: ${supplier?.label || '---'}`}</DefaultTag>\n          <DefaultTag>{`${t('Code')}: ${supplier?.code || '---'}`}</DefaultTag>\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('variation')}\n        </CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          {renderVariationTags}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $isTitle $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('price')}\n        </CellText>\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          {renderPriceInfo}\n        </FlexBox>\n      </FlexBox>\n    </Cell>\n  );\n};\nexport const CategoriesCell: RenderOverviewCellComponent<IProduct> = ({ cell, setOverlayContent, data }) => {\n  const categories = useDirectoriesSelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <Cell style={{ minHeight: 'max-content' }}>\n      <CellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          setOverlayContent({\n            RenderComponent: FormProductCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: IProductCategoryDirItem;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, index = 0, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n\nexport const VariationsTemplateCell: RenderOverviewCellComponent = ({ cell, setOverlayContent, data }) => {\n  return (\n    <Cell padding={'4px'}>\n      <CellHeader\n        title={cell.title}\n        openOverlayButtonTitle={'Перегляд'}\n        onOpenOverlayPress={() => {\n          setOverlayContent({ RenderComponent: FormCreateVariation, props: { create: true } });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        gap={8}\n        height={'24px'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n      >\n        <CellText $disabled={!data?.template?.label} $weight={500}>{`${data?.template?.label}`}</CellText>\n      </FlexBox>\n    </Cell>\n  );\n};\n\ninterface OverviewPropertyComponentProps {\n  item: IProperty;\n  selectedItems?: string[];\n  data?: IProduct;\n  index: number;\n}\n\nexport const ImagesCell: RenderOverviewCellComponent<IProduct> = ({ data, cell, setOverlayContent }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} title={el.label} disabled />\n          ))}\n        </ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <CellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          setOverlayContent({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nexport const StaticProperties: RenderOverviewCellComponent<IProduct> = ({ cell, setOverlayContent, data }) => {\n  const templates = useProductsSelector().properties;\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === data?.template?._id);\n  }, [data?.template?._id, templates]);\n\n  const availableProperties = useMemo(() => {\n    return template?.childrenList?.filter(prop => !prop.isSelectable);\n  }, [template?.childrenList]);\n\n  const selectedItems = useMemo(() => {\n    return data?.properties?.map(p => p._id);\n  }, [data?.properties]);\n\n  const renderProperties = useMemo(() => {\n    return availableProperties?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, setOverlayContent, item: prop, selectedItems }}\n        ></OverviewPropertyComponent>\n      );\n    });\n  }, [availableProperties, setOverlayContent, selectedItems]);\n\n  const renderPropertiesFromVariations = useMemo(() => {\n    const propsFromVariations = data?.variations?.map(vr => vr.properties)?.flat(1);\n    const unicValuesMap: Record<string, IPropertyValue> = {};\n\n    propsFromVariations?.forEach(propVal => {\n      if (propVal?._id) {\n        unicValuesMap[propVal?._id] = propVal;\n      }\n    });\n\n    return Object.values(unicValuesMap).map(el => {\n      return <FlexBox>{el.label}</FlexBox>;\n    });\n  }, [data?.variations]);\n\n  console.log('renderPropertiesFromVariations', renderPropertiesFromVariations);\n  return (\n    <Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <CellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          if (!template) return;\n\n          setOverlayContent({\n            RenderComponent: FormSelectPropertiesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {renderProperties && renderProperties?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellText $weight={500}>{t('undefined')}</CellText>\n        )}\n\n        {renderPropertiesFromVariations}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nconst OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedItems }) => {\n  const renderValues = useMemo(() => {\n    return item.childrenList\n      ?.filter(el => selectedItems?.includes(el._id))\n      ?.map((value, index) => {\n        return (\n          <CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n            {value.label}\n          </CategoryItem>\n        );\n      });\n  }, [item.childrenList, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellText $size={14} $weight={600}>\n          {item?.label}\n        </CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row-reverse'} flexWrap={'wrap'} fillWidth gap={8}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n\nconst CellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox fxDirection={'row'} justifyContent={'space-between'}>\n      <CellText $isTitle $size={12} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellText>\n\n      {onOpenOverlayPress && (\n        <CellHeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellHeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellHeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellHeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellHeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellHeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellHeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellHeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n\nconst CellHeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 12px;\n  padding: 0 6px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  min-height: 50px;\n  height: max-content;\n\n  padding: 4px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 12px;\n\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  background-color: ${p => p.theme.field.backgroundColor};\n  //border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport function createPriceOverviewTagsData(\n  price?: IPriceListItem\n): { title: string; amount?: number; percentage?: number }[] {\n  return [\n    { title: t('Price'), amount: price?.in },\n    { title: t('Cost'), amount: price?.out },\n    {\n      title: t('Commission'),\n      ...price?.commission,\n    },\n    {\n      title: t('Markup'),\n      ...price?.markup,\n    },\n    {\n      title: t('Discount'),\n      ...price?.discount,\n    },\n    {\n      title: t('Bonus'),\n      ...price?.bonus,\n    },\n    {\n      title: t('Cashback'),\n      ...price?.cashback,\n    },\n  ];\n}\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { IProduct, ProductStatusEnum } from '../redux/products/products.types';\nimport { getStatusesByEnum } from './statuses.data';\n\nexport const productStatusesData = getStatusesByEnum(ProductStatusEnum);\n\nexport const productsColumns: CellTittleProps<IProduct>[] = [\n  {\n    top: { name: t('label'), align: 'start', getData: rd => rd?.label },\n    // bottom: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), align: 'start', getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), align: 'start', path: 'type' },\n    bottom: { name: t('status'), align: 'start', getData: d => d.approved as never },\n    width: '100px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      getData: rd => rd.category?.label,\n    },\n    bottom: {\n      name: t('parentCategory'),\n      align: 'start',\n      getData: rd => rd.category?.parent?.label,\n    },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Бренд', align: 'start', path: 'brand.label' },\n    bottom: { name: 'Виробник', align: 'start', path: 'manufacturer.name' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновив', align: 'start', getData: rd => rd?.editor?.email },\n    bottom: { name: 'Автор', align: 'start', getData: rd => rd?.author?.email },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const productsSearchParams: SelectItem[] = [\n  // {\n  //   label: t('type'),\n  //   dataPath: 'type',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('price'),\n  //   dataPath: 'price',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Оновлено',\n  //   dataPath: 'createdAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Створено',\n  //   dataPath: 'updatedAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countIn'),\n  //   dataPath: 'countIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountIn'),\n  //   dataPath: 'subCountIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countOut'),\n  //   dataPath: 'countOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountOut'),\n  //   dataPath: 'subCountOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('category'),\n  //   dataPath: 'category.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCategory'),\n  //   dataPath: 'subCategory.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  //\n  // {\n  //   label: 'Контрагент',\n  //   dataPath: 'contractor.name',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Документ',\n  //   dataPath: 'document',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('project'),\n  //   dataPath: 'project.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  // {\n  //   label: 'Статус',\n  //   dataPath: 'status',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { IProductInventory, IWarehouse } from '../redux/warehouses/warehouses.types';\nimport { t } from '../lang';\nimport numberWithSpaces from '../utils/numbers';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email') },\n    bottom: { name: t('phone') },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<IProductInventory>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.product?.images ? d.product?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<IProductInventory>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<IProductInventory>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["PageCurrentProductCTX","createContext","usePageCurrentProduct","useContext","_ref","children","currentProduct","useProductsSelector","service","useAppServiceProvider","ServiceName","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","clearCurrent","useCallback","undefined","removeStackItem","id","pStack","filter","el","clearStack","createOverlayComponent","params","concat","RenderComponent","name","nanoid","prev","isExist","find","includes","clearedStack","_toConsumableArray","_objectSpread","onClose","overlayId","getOverlayStack","CTX","useMemo","_jsx","Provider","value","onSelect","selected","_ref$withActions","withActions","pricesS","modalS","useModalProvider","productsS","loading","setLoading","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","refresh","update","product","wrap","_context","next","abrupt","getIdRef","getAllPricesByProductId","data","refreshCurrent","updateCurrent","onLoading","stop","_x","apply","arguments","tableConfig","tableData","prices","tableTitles","pricesColumnsForProductReview","onRowClick","rowData","_id","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","icon","type","onClick","separator","disabled","m","open","ModalChildren","FormCreatePrice","modalChildrenProps","onSubmit","d","o","console","log","addPriceToList","onSuccess","close","useEffect","TableList","isSearch","isFilter","isLoading","_currentProduct$templ2","page","templates","usePropertiesSelector","getAllVariationsByProductId","variationsTableTitles","template","t","_currentProduct$templ","createTableTitlesFromTemplate","variations","transformData","transformVariationTableData","window","confirm","_currentProduct$varia","dataForUpdate","v","FormCreateVariation","defaultState","getAllInventoriesByProductId","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","takeFullGridArea","css","_templateObject","_taggedTemplateLiteral","takeFullPlace","_templateObject2","_templateObject3","dimensionsInputs","label","placeholder","validation","yup","shape","required","min","max","sku","barCode","propertiesMap","timeFrom","timeTo","RenderVariationProperty","item","_ref2$selectedIds","selectedIds","renderChildren","_item$childrenList","childrenList","map","isSelected","RenderPropertyValue","_jsxs","PropertyBox","gap","fillWidth","padding","Text","style","flex","paddingLeft","$weight","PropertyValuesBox","numColumns","toLowerCase","FormContainer","styled","p","theme","fontColorSidebar","tableBackgroundColor","Content","FlexBox","sideBarBorderColor","TemplateBox","_templateObject4","_templateObject5","_ref3$numColumns","Inputs","_templateObject6","ExtraFooterBox","_templateObject7","ValueTag","ButtonIcon","_templateObject8","_ref4","_useState5","_useState6","isActive","setIsActive","checks","variant","fontWeight","title","props","create","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppForm","useAppForm","defaultValues","createVariationFormData","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","_useState3","_useState4","propLabelsByParentId","setPropLabelsByParentId","newLabel","labels","Object","values","length","propLabelsString","join","canSubmit","onValid","updateVariationById","createVariationReqData","onError","ToastService","then","createVariation","state","handleSelect","parentId","_defineProperty","handleClearMap","preparedTemplate","_template$childrenLis","isSelectable","renderTemplate","prop","onReset","OverlayHeader","showSubmitButton","overflow","InputLabel","error","InputText","fxDirection","display","gridTemplateColumns","input","valueAsNumber","margin","OverlayFooter","resetButtonShown","submitButtonText","extraFooter","FormAfterSubmitOptions","PropertyValuesList","accentColor","light","base","onChange","setSelectedIds","templateData","_currentProduct$prope","properties","event","preventDefault","updateById","_meta","debug","newData","_templateData$childre","_prop$childrenList","flexWrap","OverlayForm","Header","justifyContent","alignItems","height","iconSize","minWidth","minHeight","$size","textTransform","textOverflow","whiteSpace","endIcon","endIconSize","_ref2$submitButtonTex","onCreatePress","Footer","size","Form","modalBackgroundColor","sideBarBackgroundColor","useTheme","images","setState","ev","meta","FormProductImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","directory","useDirectoriesSelector","ApiDirType","_currentProduct$categ","_currentProduct$categ2","categories","c","toString","FormProductCategories","options","defaultData","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","warehouses","useWarehousesSelector","warehousesTableColumns","FormProductDefaultsTabs","tabs","enumToFilterOptions","modalBorderColor","_useProductsSelector","currentTabIdx","setCurrentTabIdx","renderTab","warehouse","WarehousesTab","variation","price","PricesTab","VariationsTab","inventory","WarehousingTab","supplier","CounterpartyTab","SUPPLIER","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","fData","setDefaults","createDataForReq","ModalHeader","onBackPress","ModalFilter","filterOptions","currentIndex","onChangeIndex","_ref$options","_ref$colorIndicator","colorIndicator","currentOption","current","setCurrent","currentStatus","warn","handleChange","increment","_options$newIndex","newIndex","index","option","findIndex","borderRadius","backgroundColor","fieldBackgroundColor","color","className","$ellipsisMode","OverviewTextCell","cell","getValue","Cell","CellText","$isTitle","ProductStatusChangerCell","canEdit","setCanEdit","approved","currentStatusData","getStatusData","canAccept","handleCancelPress","_data$approved","productStatusesData","CellHeader","onCancelPress","onEditPress","editMode","_Fragment","Changer","e","Tag","alignSelf","borderColor","$align","DefaultTag","ProductDefaultsCell","setOverlayContent","renderVariationTags","priceInfoCellsData","amount","in","out","commission","markup","discount","bonus","cashback","renderPriceInfo","numberWithSpaces","percentage","onOpenOverlayPress","FormProductDefaultsOverlay","fontColorHeader","marginInline","code","CategoriesCell","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","NotActiveTreeDataItem","openOverlayButtonTitle","FormProductCategoriesOverlay","_ref5","_item$parent","_item$parent2","_ref5$lvl","lvl","CategoryItem","parent","VariationsTemplateCell","_ref6","_data$template","_data$template2","$disabled","ImagesCell","_ref7","renderImageSets","_data$images","set","ImagesSetBox","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","StaticProperties","_ref8","_data$template4","_data$template3","availableProperties","selectedItems","_data$properties","renderProperties","OverviewPropertyComponent","renderPropertiesFromVariations","_data$variations","_data$variations$map","propsFromVariations","vr","flat","unicValuesMap","forEach","propVal","FormSelectPropertiesOverlay","_ref9","renderValues","_item$childrenList2","_item$childrenList2$f","maxWidth","_ref10","_ref10$title","_ref10$openOverlayBut","_ref10$editButtonText","editButtonText","_ref10$acceptButtonTe","acceptButtonText","onAcceptPress","_ref10$editMode","_ref10$canAccept","_ref10$cancelButtonTe","cancelButtonText","marginRight","CellHeaderButton","globals","inputPlaceholderColor","field","getStatusesByEnum","ProductStatusEnum","productsColumns","top","align","getData","rd","getImgPreview","pr","_pr$images$","img_preview","width","action","bottom","path","_rd$category","category","_rd$category2","_rd$category2$parent","_rd$editor","editor","email","_rd$author","author","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","user","_rd$manager2","_rd$manager2$user","_rd$variation","_d$product","_d$product2","_d$product2$images$","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}