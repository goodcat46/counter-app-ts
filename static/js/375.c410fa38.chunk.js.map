{"version":3,"file":"static/js/375.c410fa38.chunk.js","mappings":"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","sources":["hooks/useOrdersActionsCreator.hook.ts","components/AppPages/orders/PageOrders.tsx","components/AppPages/pagesStyles.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import { useModalProvider } from '../Providers/ModalProvider/ModalProvider';\nimport { useCallback } from 'react';\nimport { ITableListContext, TableActionsCreator } from '../components/TableList/tableTypes.types';\nimport { OrderEntity } from '../types/orders/orders.types';\nimport { Modals } from '../components/Modals/Modals';\nimport { useNavigate } from 'react-router-dom';\nimport { ExtractIdString } from '../utils/data-transform';\nimport { t } from '../lang';\nimport { useAppServiceProvider } from './useAppServices.hook';\nimport { AppModuleName } from '../redux/reduxTypes.types';\n\nexport type OrdersActionsCreator = TableActionsCreator<OrderEntity>;\nconst useOrdersActionsCreatorHook = (): OrdersActionsCreator => {\n  const modalS = useModalProvider();\n  const navigate = useNavigate();\n  const { getAll } = useAppServiceProvider()[AppModuleName.orders];\n  // const { orders } = useAppServiceProvider();\n\n  return useCallback(\n    (ctx: ITableListContext<OrderEntity>) => {\n      const selected = ctx?.selectedRow;\n      const selectedId = selected ? ExtractIdString(selected) : '';\n\n      return [\n        {\n          icon: 'refresh',\n          onClick: () => {\n            getAll({\n              data: { refresh: true },\n              onLoading: ctx.onRefresh,\n            });\n          },\n        },\n        { separator: true },\n        {\n          name: 'openOrderOverview',\n          icon: 'openInNew',\n          disabled: !selectedId,\n          onClick: () => {\n            selectedId && navigate(selectedId);\n            // modalS.open({\n            //   Modal: Modals.OrderOverview,\n            //   props: {\n            //     order: ctx.tableData?.find(el => el._id === selectedId),\n            //   },\n            // });\n          },\n        },\n        {\n          name: 'archiveOrder',\n          icon: 'archive',\n          disabled: !selectedId,\n          onClick: () => {\n            if (selectedId) window.confirm(`Архівувати замовення: ${selectedId}`);\n          },\n        },\n        {\n          name: 'editOrder',\n          icon: 'edit',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: 'Edit order',\n              },\n            });\n          },\n        },\n        {\n          name: 'copyOrder',\n          icon: 'copy',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: `Copy order: ${selectedId}`,\n              },\n            });\n          },\n        },\n        { separator: true },\n        {\n          name: 'createOrder',\n          icon: 'AddToList',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrdersGroup,\n              props: {\n                title: t(`Create orders group`),\n              },\n            });\n          },\n        },\n        {\n          name: 'createOrder',\n          icon: 'plus',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: t(`Create order`),\n              },\n            });\n          },\n        },\n      ];\n    },\n    [getAll, modalS, navigate]\n  );\n};\nexport default useOrdersActionsCreatorHook;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { ISortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport { ordersSearchParams, ordersTableColumns } from '../../../data';\nimport { OrderEntity, OrderStatusEnum } from '../../../types/orders/orders.types';\nimport useOrdersActionsCreatorHook from '../../../hooks/useOrdersActionsCreator.hook';\nimport { BaseAppPageProps } from '../index';\nimport { enumToFilterOptions } from '../../../utils';\nimport TabSelector, { FilterOption } from '../../atoms/TabSelector';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../redux/reduxTypes.types';\n\ninterface Props extends BaseAppPageProps {}\nconst ordersFilterOptions = enumToFilterOptions(OrderStatusEnum);\n\n// const useDynamicFilterOptionsByEnum = <T extends Record<string, any> = any>(\n//   enumObj: T,\n//   builder: (\n//     option: FilterOption<T[keyof T]>,\n//     index: number,\n//     arr: FilterOption<T[keyof T]>[]\n//   ) => Partial<DynamicFilterOption<T[keyof T]>>\n// ) => {\n//   const options = useMemo(() => {\n//     return enumToFilterOptions(enumObj).map((value, index, array) => ({ ...value, ...builder(value, index, array) }));\n//   }, [builder, enumObj]);\n//\n//   return options;\n// };\n\nconst PageOrders: React.FC<any> = (props: Props) => {\n  const { tableConfig, isLoading } = useOrderTableConfigs();\n\n  const [filterButtonResults] = useState<Record<OrderStatusEnum | string, number | string>>({});\n  const renderLabel = useCallback(\n    (info: { option?: FilterOption<OrderStatusEnum>; index: number; isActive: boolean }) => {\n      return (\n        <FlexBox\n          justifyContent={'space-between'}\n          fillHeight\n          fillWidth\n          overflow={'hidden'}\n          padding={'2px 4px'}\n          gap={6}\n          style={{ cursor: 'inherit' }}\n        >\n          <Text $size={11} $weight={500} $textTransform={'none'}>\n            {info?.option?.label ?? null}\n          </Text>\n\n          <Text $size={10} $ellipsisMode>\n            {info?.option?.value ? filterButtonResults[info?.option?.value] : 0}\n          </Text>\n        </FlexBox>\n      );\n    },\n    [filterButtonResults]\n  );\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TabSelector\n          style={{ height: 52 }}\n          options={ordersFilterOptions}\n          renderLabel={renderLabel}\n          optionProps={{ fitContentH: false }}\n        />\n\n        <FlexBox fillWidth flex={1} overflow={'hidden'}>\n          <TableList {...tableConfig} isLoading={isLoading} />\n        </FlexBox>\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled(FlexBox)`\n  ${takeFullGridArea}\n`;\n\nexport default PageOrders;\n\nexport const useOrderTableConfigs = () => {\n  const { getAll } = useAppServiceProvider()[AppModuleName.orders];\n  const state = useOrdersSelector();\n  const actionsCreator = useOrdersActionsCreatorHook();\n  // const filterSelectors = useProductsFilterSelectorsHook();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<OrderEntity> => ({\n      tableData: state.orders,\n      tableTitles: ordersTableColumns,\n      sortParams: ordersSearchParams.filter(el => el.sort),\n      hasFilter: true,\n      hasSearch: true,\n      showFooter: true,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      onTableSortChange: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, getAll, sortParams, state.orders]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    getAll({\n      data: { refresh: true },\n      onLoading: setIsLoading,\n    });\n\n    // eslint-disable-next-line\n  }, []);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { IBase } from '../types/utils.types';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images?.[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    // top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    top: { name: t('Visibility'), getData: d => (d.visible ? 'visible' : 'hidden') },\n    width: '120px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => (d.price?.out ? toPrice(d.price?.out) : '--.--') },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => (d.price?.in ? toPrice(d.price?.in) : '--.--') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', getData: rd => rd.brand?.label },\n    bottom: { name: 'Виробник', getData: rd => rd.brand?.manufacturer },\n    width: '180px',\n    action: 'doubleDataWithAvatar',\n  },\n  // {\n  //   top: { name: 'Опис', path: 'description' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.user?.email ?? '---' },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.user?.email ?? '---' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  datesColumn(),\n];\n\nexport function deletesStatusColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: t('Deleted status'), align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\nexport function datesColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\n\nexport type OfferSortParam = TableSortParam<'sku' | 'label' | 'barCode' | 'price' | 'status'>;\nexport const offersSortParams: OfferSortParam[] = [\n  { dataKey: 'sku', label: 'SKU' },\n  { dataKey: 'label', label: t('Label') },\n  { dataKey: 'barCode', label: t('Bar-code') },\n  { dataKey: 'status', label: t('Status') },\n  { dataKey: 'price', label: t('Price') },\n];\nexport type OfferSearchParam = TableSearchParam<'sku' | 'label' | 'barCode', 'warehouse.label' | 'warehouse.code'>;\nexport const offersSearchParams: OfferSearchParam[] = [\n  { dataKey: 'sku', label: 'SKU' },\n  { dataKey: 'label', label: t('Label') },\n  { dataKey: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { IOrderTempSlot, OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\nconst extraKeys: ('cashback' | 'bonus' | 'discount')[] = ['cashback', 'bonus', 'discount'];\nfunction getTempOrderSlotColumns(): CellTittleProps<OrderSlotEntity>[] {\n  return extraKeys.map(key => {\n    return {\n      top: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.amount) },\n      bottom: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.percentage) },\n      action: 'valueByPath',\n      width: '90px',\n    };\n  });\n}\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    top: { name: t('Offer label'), getData: rd => rd.offer?.label },\n    bottom: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'valueByPath',\n    width: '210px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  ...getTempOrderSlotColumns(),\n  {\n    top: { name: t('Offer sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Offer bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  createdDateColumn,\n];\n\nexport const tempOrderSlotTableColumns: CellTittleProps<IOrderTempSlot>[] =\n  orderSlotsTableColumns as CellTittleProps<IOrderTempSlot>[];\n","import { IBase } from '../../redux/app-redux.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n}\n"],"names":["modalS","useModalProvider","navigate","useNavigate","getAll","useAppServiceProvider","AppModuleName","useCallback","ctx","selected","selectedRow","selectedId","ExtractIdString","icon","onClick","data","refresh","onLoading","onRefresh","separator","name","disabled","window","confirm","concat","open","Modal","Modals","props","title","type","t","ordersFilterOptions","enumToFilterOptions","OrderStatusEnum","Page","styled","FlexBox","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_useOrderTableConfigs","useOrderTableConfigs","tableConfig","isLoading","_useState","useState","filterButtonResults","_slicedToArray","renderLabel","info","_info$option$label","_info$option","_info$option2","_info$option3","_jsxs","justifyContent","fillHeight","fillWidth","overflow","padding","gap","style","cursor","children","_jsx","Text","$size","$weight","$textTransform","option","label","$ellipsisMode","value","AppGridPage","path","TabSelector","height","options","optionProps","fitContentH","flex","TableList","_objectSpread","state","useOrdersSelector","actionsCreator","useOrdersActionsCreatorHook","_useState3","_useState4","setIsLoading","_useState5","_useState6","sortParams","setSortParams","_useState7","_useState8","filterParams","setFilterParams","useMemo","tableData","orders","tableTitles","ordersTableColumns","ordersSearchParams","el","sort","hasFilter","hasSearch","showFooter","checkBoxes","onFilterSubmit","query","then","onTableSortChange","param","sortOrder","dataPath","useEffect","css","takeFullPlace","_templateObject2","_templateObject3","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","formAddImageSetTabs","ImageSetSrcType","required","offersTableColumns","top","getData","rd","getImgPreview","pr","_pr$images","_pr$images$","images","img_preview","undefined","width","action","sku","bottom","barCode","d","approved","visible","align","_d$price","_d$price2","price","out","toPrice","_d$price3","_d$price4","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$brand","brand","_rd$brand2","manufacturer","_rd$editor$user$email","_rd$editor","_rd$editor$user","editor","user","email","_rd$author$user$email","_rd$author","_rd$author$user","author","offersSortParams","dataKey","offersSearchParams","createdDateColumn","status","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slots","length","slotsCount","_rd$reference","reference","internal","_rd$reference2","external","_rd$group","_rd$group$reference","group","_rd$group2","strategy","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","customer","first","second","base","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","filter","search","extraKeys","orderSlotsTableColumns","_rd$offer","offer","_rd$variation","quantity","_toConsumableArray","getBasePriceColumns","map","key","_rd$key","amount","_rd$key2","percentage","_rd$offer2","_rd$variation2","_rd$offer3","_rd$variation3","tempOrderSlotTableColumns"],"sourceRoot":""}