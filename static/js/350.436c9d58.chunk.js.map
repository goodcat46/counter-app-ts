{"version":3,"file":"static/js/350.436c9d58.chunk.js","mappings":"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","sources":["redux/permissions/usePermissonsActionsCreator.ts","components/AppPages/PageHome.tsx","components/AppPages/pagesStyles.ts","components/atoms/ProfileCard/ProfileCard.tsx"],"sourcesContent":["import { TableActionCreator } from '../../components/TableList/tableTypes.types';\nimport { IPermission } from './permissions.types';\nimport { useCallback } from 'react';\nimport { PermissionService } from './usePermissionsService.hook';\nimport { useModalProvider } from '../../components/ModalProvider/ModalProvider';\nimport ModalForm from '../../components/ModalForm';\nimport { useNavigate } from 'react-router-dom';\nimport { CompanyQueryType } from '../global.types';\nimport { createThunkPayload } from '../../utils/fabrics';\nimport { toast } from 'react-toastify';\nimport { AxiosError } from 'axios';\n\nexport type PermissionsActionsCreator = TableActionCreator<IPermission>;\n\nexport const isMyCompany = ({ owner, user }: IPermission) => {\n  return user?._id === owner?._id;\n};\n\nconst usePermissionsActionsCreator = (\n  service: PermissionService,\n  companyType?: CompanyQueryType\n): PermissionsActionsCreator => {\n  const modal = useModalProvider();\n  const navigate = useNavigate();\n\n  return useCallback(\n    ctx => {\n      const selPerm = ctx.selectedRow;\n      return [\n        {\n          name: 'selectPermission',\n          title: 'Перейти',\n          icon: 'openInNew',\n          disabled: !ctx.selectedRow?._id,\n          iconSize: '100%',\n          type: 'onlyIcon',\n          onClick: () => {\n            if (selPerm?._id) {\n              service.getCurrent(\n                createThunkPayload<{ id: string }, IPermission, AxiosError>(\n                  { id: selPerm?._id },\n                  {\n                    onSuccess: data => {\n                      if (!data._id) return console.log('data', data);\n                      console.log('getCurrentPermission Success', data);\n                      toast.success(`Current company: ${data.company?.name}`);\n                      navigate(`/app/${data._id}`);\n                    },\n                    onError: error => {\n                      console.log(error);\n                    },\n                  }\n                )\n              );\n              // navigate(`/app/${ctx.selectedRow?._id}`);\n            }\n          },\n        },\n        {\n          name: 'editPermission',\n          title: 'Редагувати',\n          icon: 'edit',\n          disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n          iconSize: '100%',\n          type: 'onlyIcon',\n          onClick: () => {\n            console.log('selPermission', selPerm);\n\n            modal.handleOpenModal({\n              ModalChildren: ModalForm,\n              modalChildrenProps: {\n                fillHeight: true,\n                title: 'Редагувати компанію',\n              },\n            });\n          },\n        },\n        {\n          name: 'deletePermission',\n          title: 'Видалити',\n          icon: 'delete',\n          iconSize: '100%',\n          disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n          type: 'onlyIcon',\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        {\n          name: 'leavePermission',\n          title: 'Покинути',\n          icon: 'logOut',\n          iconSize: '100%',\n          disabled: ctx.selectedRow && companyType ? !['invited'].includes(companyType) : true,\n          type: 'onlyIcon',\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        { separator: true },\n        {\n          name: 'rejectPermission',\n          title: 'Відхилити',\n          icon: 'clear',\n          iconSize: '100%',\n          type: 'onlyIconFilled',\n          disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        {\n          name: 'acceptPermission',\n          title: 'Прийняти',\n          icon: 'done',\n          iconSize: '100%',\n          type: 'onlyIconFilled',\n          disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        {\n          name: 'createPermission',\n          title: 'Створити',\n          icon: 'plus',\n          iconSize: '100%',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: ModalForm,\n              modalChildrenProps: {\n                fillHeight: true,\n                title: 'Створити нову компанію',\n              },\n            });\n          },\n        },\n      ];\n    },\n    [companyType, modal, navigate, service]\n  );\n};\n\nexport default usePermissionsActionsCreator;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\nimport usePermissionsService from 'redux/permissions/usePermissionsService.hook';\nimport { IPermission } from '../../redux/permissions/permissions.types';\nimport { permissionsSearchParams, permissionsTableColumns } from '../../data';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport usePermissionsActionsCreator from '../../redux/permissions/usePermissonsActionsCreator';\nimport { CompanyQueryType } from '../../redux/global.types';\n\nexport type CompanyTypeItem = { title: string; param: CompanyQueryType };\nconst companyTypes: CompanyTypeItem[] = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n\ntype Props = {\n  path?: string;\n};\nconst PageHome: React.FC<any> = ({ path }: Props) => {\n  const { user } = useAuthSelector();\n  const [companyType, setCompanyType] = useState<CompanyTypeItem>();\n  const setSearchParams = useSearchParams({\n    companyType: companyTypes[0].param,\n  })[1];\n  const permissionService = usePermissionsService();\n  const actionsCreator = usePermissionsActionsCreator(permissionService, companyType?.param);\n\n  const permissionsData = useMemo(() => {\n    return permissionService.state.permissions?.filter(pr => {\n      if (companyType?.param === 'invited') return pr.status === 'active' && pr.user?._id === user._id;\n      if (companyType?.param === 'invites') return pr.status === 'pending' && pr.user?._id === user._id;\n      if (companyType?.param === 'all') return pr;\n      return pr.owner?._id === user._id;\n    });\n  }, [companyType?.param, permissionService.state.permissions, user._id]);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IPermission> => ({\n      tableData: permissionsData,\n      tableTitles: permissionsTableColumns,\n      tableSearchParams: permissionsSearchParams,\n      isFilter: false,\n      isSearch: true,\n      checkBoxes: false,\n      actionsCreator,\n    }),\n    [actionsCreator, permissionsData]\n  );\n  const onSearchParamClick = useCallback(\n    (item: CompanyTypeItem) => {\n      setSearchParams({ companyType: item.param });\n      setCompanyType(item);\n    },\n    [setSearchParams]\n  );\n  const isActiveClassName = useCallback(\n    (param: string) => (companyType?.param === param ? 'active' : ''),\n    [companyType?.param]\n  );\n\n  const renderFilterButtons = useMemo(() => {\n    return companyTypes.map(item => (\n      <StButtonIcon\n        key={item.param}\n        variant=\"def\"\n        onClick={() => onSearchParamClick(item)}\n        className={isActiveClassName(item.param)}\n      >\n        {item.title}\n      </StButtonIcon>\n    ));\n  }, [isActiveClassName, onSearchParamClick]);\n\n  useEffect(() => {\n    setSearchParams({ companyType: companyTypes[0].param });\n    setCompanyType(companyTypes[0]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>\n          <ProfileCard {...user} />\n        </ProfileInfo>\n\n        <FilterButtons>\n          <ButtonsList>{renderFilterButtons}</ButtonsList>\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        <TableList {...tableConfig} />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  //background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace};\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    //height: 1px;\n    //width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default memo(PageHome);\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport { IUser } from 'redux/auth/auth.types';\n\nexport interface ProfileCardProps extends Omit<IUser, '_id'> {\n  // avatarURL?: string;\n  // name?: string;\n  // email?: string;\n  nameFontSize?: string;\n  emailFontSize?: string;\n  avatarPrpps?: React.HTMLAttributes<HTMLDivElement>;\n  nameProps?: React.HTMLAttributes<HTMLDivElement>;\n  emailProps?: React.HTMLAttributes<HTMLDivElement>;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps & React.HTMLAttributes<HTMLDivElement>> = ({\n                                                                                          avatarURL = '',\n                                                                                          name = 'name',\n                                                                                          email = 'email',\n                                                                                          emailFontSize,\n                                                                                          nameFontSize,\n                                                                                          nameProps,\n                                                                                          emailProps,\n                                                                                          children,\n                                                                                          ...props\n                                                                                        }) => {\n  return (\n    <Card {...props}>\n      <Avatar>\n        <img src={avatarURL} alt='userImage' width={100} height={100} />\n      </Avatar>\n\n      <Wrapper>\n        <ProfileName fontSize={nameFontSize} {...nameProps}>\n          {name}\n        </ProfileName>\n\n        <ProfileEmail fontSize={emailFontSize} {...emailProps}>\n          {email}\n        </ProfileEmail>\n\n        {children}\n      </Wrapper>\n    </Card>\n  );\n};\nconst Card = styled.div`\n  display: flex;\n`;\nconst Avatar = styled.div`\n  min-width: 64px;\n  max-width: 64px;\n  height: 64px;\n  overflow: hidden;\n  border-radius: 50%;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px;\n\n  height: 100%;\n`;\nconst ProfileName = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '12px')};\n  font-weight: 600;\n`;\nconst ProfileEmail = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '10px')};\n  line-height: 16px;\n`;\nexport default ProfileCard;\n"],"names":["service","companyType","modal","useModalProvider","navigate","useNavigate","useCallback","ctx","_ctx$selectedRow","_ctx$selectedRow2","_ctx$selectedRow3","_ctx$selectedRow4","_ctx$selectedRow5","selPerm","selectedRow","name","title","icon","disabled","_id","iconSize","type","onClick","getCurrent","createThunkPayload","id","onSuccess","data","_data$company","console","log","toast","concat","company","onError","error","includes","handleOpenModal","ModalChildren","ModalForm","modalChildrenProps","fillHeight","separator","companyTypes","param","PageHome","_ref","path","user","useAuthSelector","_useState","useState","_useState2","_slicedToArray","setCompanyType","setSearchParams","useSearchParams","permissionService","usePermissionsService","actionsCreator","usePermissionsActionsCreator","permissionsData","useMemo","_permissionService$st","state","permissions","filter","pr","_pr$user","_pr$user2","_pr$owner","status","owner","tableConfig","tableData","tableTitles","permissionsTableColumns","tableSearchParams","permissionsSearchParams","isFilter","isSearch","checkBoxes","onSearchParamClick","item","isActiveClassName","renderFilterButtons","map","_jsx","StButtonIcon","variant","className","children","useEffect","_jsxs","Page","Top","ProfileInfo","ProfileCard","_objectSpread","FilterButtons","ButtonsList","Bottom","TableList","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_templateObject2","_ref2","theme","tableBackgroundColor","takeFullPlace","_templateObject3","_ref3","_templateObject4","_templateObject5","_templateObject6","ButtonIcon","_templateObject7","_ref4","trBorderClr","_ref5","globals","timingFnMui","_ref6","accentColor","base","memo","css","Card","Avatar","Wrapper","ProfileName","fontSize","ProfileEmail","_ref$avatarURL","avatarURL","_ref$name","_ref$email","email","emailFontSize","nameFontSize","nameProps","emailProps","props","_objectWithoutProperties","_excluded","src","alt","width","height"],"sourceRoot":""}