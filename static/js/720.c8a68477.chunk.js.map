{"version":3,"file":"static/js/720.c8a68477.chunk.js","mappings":"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","sources":["components/atoms/Inputs/AuthInputLabel.tsx","components/atoms/LinkIcon/NavLinkIcon.tsx","components/Forms/AuthForm.tsx","components/atoms/LinkIcon/LinkIcon.tsx","components/Forms/RecoveryPasswordForm.tsx","components/AppPages/PageAuth.tsx","components/Layout/Header/LogoSvg/LogoSvg.tsx"],"sourcesContent":["import React from 'react';\nimport { iconId } from 'data';\nimport styled from 'styled-components';\nimport SvgIcon from 'components/atoms/SvgIcon/SvgIcon';\nimport { IconIdType } from 'img/sprite/iconId.data';\nimport { InputLabelProps } from './InputLabel';\n\nexport interface AuthInputLabelProps {\n  icon: IconIdType;\n  success?: {\n    message?: string;\n  };\n}\n\nconst AuthInputLabel: React.FC<AuthInputLabelProps & Omit<InputLabelProps, 'success'>> = ({\n  icon,\n  error,\n  success,\n  helperText,\n  children,\n  ...props\n}) => {\n  return (\n    <InputBox>\n      <Wrapper>\n        <SvgIcon size=\"26px\" iconId={icon} />\n        {children}\n\n        <StIcon size=\"26px\" iconId={!!error ? iconId.error : iconId.success} isError={!!error} isSuccess={!!success} />\n      </Wrapper>\n\n      {(error?.message || success?.message || helperText) && (\n        <HelperText isError={!!error} isSuccess={!!success}>\n          {(typeof error?.message === 'string' && error?.message) || success?.message || helperText}\n        </HelperText>\n      )}\n    </InputBox>\n  );\n};\nconst InputBox = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 4px;\n`;\nconst HelperText = styled.span<{ isError?: boolean; isSuccess?: boolean }>`\n  font-size: 10px;\n  line-height: 1.5;\n\n  width: 100%;\n\n  font-weight: 500;\n\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n\n  color: ${({ isError, isSuccess, theme }) =>\n    (isError && theme.globals.colors.error) || (isSuccess && theme.globals.colors.success) || ''};\n  cursor: default;\n`;\nconst StIcon = styled(SvgIcon)<{ isError?: boolean; isSuccess?: boolean }>`\n  fill: ${({ isError, isSuccess, theme }) =>\n    (isError && theme.globals.colors.error) || (isSuccess && theme.globals.colors.success) || 'transparent'};\n`;\nexport default AuthInputLabel;\n","import React from 'react';\nimport sprite from 'img/sprite';\nimport styled, { css, DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components';\nimport { LinkProps, NavLink } from 'react-router-dom';\n\n\ntype TextTransform = 'uppercase' | 'lowercase' | 'capitalize' | 'none';\n\ninterface Props {\n  size?: string;\n  variant: LinkIconVariant;\n  iconId?: string;\n  iconSize?: string;\n  isActive?: boolean;\n  iconStyles?: {};\n  endIconId?: string;\n  endIconSize?: string;\n  endIconStyles?: {};\n  textTransform?: TextTransform;\n  fontWeight?: 400 | 500 | 600 | 700 | 900;\n}\n\nexport type LinkIconProps = Props & LinkProps;\n\nconst NavLinkIcon: React.FC<LinkIconProps> = ({\n                                                children,\n                                                isActive,\n                                                size = '',\n                                                variant = 'def',\n                                                iconId,\n                                                iconSize = '18px',\n                                                iconStyles = {},\n                                                endIconId = '',\n                                                endIconSize = '18px',\n                                                endIconStyles = {},\n                                                textTransform,\n                                                onClick = () => {\n                                                  console.log('LinkIcon click');\n                                                },\n                                                ...props\n                                              }) => {\n  let styles = {\n    width: size,\n    height: size,\n    minWidth: size,\n    miHeight: size,\n  };\n  let iconStyle = {\n    width: iconSize,\n    height: iconSize,\n    minWidth: iconSize,\n    minHeight: iconSize,\n    ...iconStyles,\n  };\n  let endIconStyle = {\n    width: endIconSize,\n    height: endIconSize,\n    minWidth: endIconSize,\n    minHeight: endIconSize,\n    ...endIconStyles,\n  };\n\n  return (\n    <StyledLinkIcon\n      {...{\n        style: styles,\n        variant,\n        onClick,\n        className: 'linkIcon',\n        ...props,\n      }}\n    >\n      {iconId && (\n        <SvgIcon className='icon' style={iconStyle}>\n          <use href={`${sprite}#icon-${String(iconId)}`} />\n        </SvgIcon>\n      )}\n\n      {children}\n\n      {endIconId && (\n        <SvgIcon className='endIcon' style={endIconStyle}>\n          <use href={`${sprite}#icon-${endIconId}`}></use>\n        </SvgIcon>\n      )}\n    </StyledLinkIcon>\n  );\n};\n\nconst StyledLinkIcon = styled(NavLink)<LinkIconProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  text-align: center;\n  font-size: inherit;\n  font-family: inherit;\n  letter-spacing: 0.05em;\n  color: inherit;\n  fill: inherit;\n\n  text-transform: ${({ textTransform }) => textTransform || 'none'};\n  font-size: ${({ fontWeight }) => fontWeight || 400};\n  padding: 0;\n\n  font-size: 12px;\n\n  overflow: hidden;\n  border-style: none;\n  border-radius: 2px;\n  border: 1px solid transparent;\n  background-color: transparent;\n\n  ${({ variant }) => (variant ? getVariant(variant) : getVariant())}\n  &:disabled {\n    pointer-events: none;\n    opacity: 0.7;\n  }\n`;\n\nconst SvgIcon = styled.svg`\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n`;\n\nconst def = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n  /* transition: all var(--timing-function__main); */\n\n  &:hover {\n    background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.hover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.pressed};\n  }\n`;\nconst defNoEffects = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n`;\n// const pointer = css`\n//   background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n//   position: relative;\n//   fill: ${({ theme }) => theme.colorLight};\n\n//   border-radius: 0;\n//   border-width: 0;\n//   transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 0;\n\n//     transform: translateY(-50%);\n\n//     width: 3px;\n//     height: 50%;\n\n//     background-color: transparent;\n//     transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n//   }\n//   ${def}\n//   &:hover {\n//     &::before {\n//       height: 100%;\n//       background-color: ${({ theme }) => theme.accentColor.base};\n//     }\n//   }\n//   &:active {\n//   }\n// `;\nconst pointerLeft = css`\n  background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n\n  &:active {\n  }\n`;\nconst pointerBottom = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n\n  &:active {\n  }\n`;\nconst small = css`\n  padding: 0 22px;\n\n  min-width: 115px;\n  min-height: 28px;\n`;\nconst large = css`\n  padding: 0 22px;\n\n  min-width: 150px;\n  min-height: 36px;\n`;\nconst icon = css`\n  min-width: 26px;\n  height: 26px;\n`;\nconst outlined = css`\n  color: ${({ theme }) => theme.accentColor.base};\n  fill: ${({ theme }) => theme.accentColor.base};\n  border: 1px solid ${({ theme }) => theme.accentColor.base};\n  /* background-color: transparent; */\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.accentColor.hover};\n    color: ${({ theme }) => theme.accentColor.hover};\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n    fill: ${({ theme }) => theme.accentColor.pressed};\n    border: 1px solid ${({ theme }) => theme.accentColor.pressed};\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst outlinedSmall = css`\n  ${small}\n  ${outlined}\n`;\nconst outlinedLarge = css`\n  ${outlined}\n  ${large}\n`;\nconst filled = css`\n  color: ${({ theme }) => theme.colorLight};\n  fill: ${({ theme }) => theme.colorLight};\n  background-color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.colorLight};\n    fill: ${({ theme }) => theme.colorLight};\n    background-color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst filledSmall = css`\n  ${small}\n  ${filled}\n`;\nconst filledLarge = css`\n  ${large}\n  ${filled}\n`;\nconst onlyIconFilled = css`\n  ${filled}\n  ${icon}\n`;\nconst onlyIcon = css`\n  ${def}\n  ${icon}\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst onlyIconNoEffects = css`\n  ${defNoEffects}\n  ${icon}\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst underlinedText = css`\n  text-decoration: underline;\n  cursor: pointer;\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst text = css`\n  ${def}\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst textSmall = css`\n  ${text}\n  ${small}\n`;\nconst textLarge = css`\n  ${text}\n  ${large}\n`;\nconst defOutlined = css`\n  ${def}\n  color: ${({ theme }) => theme.fontColor};\n  fill: ${({ theme }) => theme.fillColor};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.trBorderClr};\n  }\n\n  &:active {\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst defOutlinedSmall = css`\n  ${defOutlined}\n  ${small}\n`;\nconst defOutlinedLarge = css`\n  ${defOutlined}\n  ${large}\n`;\n\nconst variants = {\n  def,\n  defNoEffects,\n  pointerLeft,\n  outlinedLarge,\n  filledLarge,\n  outlinedSmall,\n  filledSmall,\n  underlinedText,\n  textSmall,\n  textLarge,\n  onlyIcon,\n  onlyIconNoEffects,\n  onlyIconFilled,\n  defOutlinedSmall,\n  defOutlinedLarge,\n  pointerBottom,\n};\n\nexport type LinkIconVariant = keyof typeof variants;\n\nfunction getVariant(variant?: LinkIconVariant): FlattenInterpolation<ThemeProps<DefaultTheme>> {\n  return variant ? variants[variant] : variants.def;\n}\n\nexport default NavLinkIcon;\n","import React from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport LogoSvg from 'components/Layout/Header/LogoSvg/LogoSvg';\nimport AuthInputLabel from '../atoms/Inputs/AuthInputLabel';\nimport NavLinkIcon from 'components/atoms/LinkIcon/NavLinkIcon';\nimport { Link } from 'react-router-dom';\nimport useAuthService from '../../redux/auth/useAppAuth.hook';\nimport { useForm } from 'react-hook-form';\nimport InputText from '../atoms/Inputs/InputText';\n\nexport interface Props {\n  helloTitle?: string;\n  title: string;\n  registration?: boolean;\n  login?: boolean;\n}\n\nexport interface IRegistrationFormData {\n  name: string;\n  secondName: string;\n  email: string;\n  password: string;\n  approvePassword: string;\n}\n\nconst initialFormDataLogin: Partial<Pick<IRegistrationFormData, 'email' | 'password'>> = { email: '', password: '' };\n\nconst initialFormDataRegister: IRegistrationFormData = {\n  name: '',\n  secondName: '',\n  email: '',\n  password: '',\n  approvePassword: '',\n};\n\nexport type AuthFormProps = Props & React.HTMLAttributes<HTMLFormElement>;\nconst AuthForm: React.FC<AuthFormProps> = ({ title, registration, login, ...props }) => {\n  const authService = useAuthService();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    watch,\n  } = useForm<Partial<IRegistrationFormData>>({\n    defaultValues: (login && initialFormDataLogin) || (registration && initialFormDataRegister) || {},\n  });\n  const formValues = watch();\n\n  function onFormSubmit(data: Partial<IRegistrationFormData>) {\n    console.log('AuthFormSubmit ===>>>', data, {\n      login: login,\n      registration: registration,\n    });\n    login && authService.loginUser(data);\n    registration && authService.registerUser(data);\n  }\n\n  return (\n    <Form {...props} onSubmit={handleSubmit(onFormSubmit)}>\n      <StLogo />\n\n      <Title>{title}</Title>\n\n      <Links>\n        <StNavLink textTransform=\"uppercase\" variant=\"def\" to={'/auth/login'}>\n          {'Вхід'}\n        </StNavLink>\n\n        <StNavLink textTransform=\"uppercase\" variant=\"def\" to={'/auth/register'}>\n          {'Реєстрація'}\n        </StNavLink>\n      </Links>\n\n      <Inputs>\n        {registration && (\n          <>\n            <AuthInputLabel icon=\"personOutlined\" error={errors.name}>\n              <InputText placeholder=\"І'мя\" value={formValues.name} {...register('name')} />\n            </AuthInputLabel>\n\n            <AuthInputLabel icon=\"personOutlined\" error={errors.secondName}>\n              <InputText placeholder=\"Прізвище\" value={formValues.secondName} {...register('secondName')} />\n            </AuthInputLabel>\n\n            <AuthInputLabel icon=\"email\" error={errors.email}>\n              <InputText placeholder=\"Електронна адреса\" value={formValues.email} {...register('email')} />\n            </AuthInputLabel>\n            <AuthInputLabel icon=\"lock_O\" error={errors.password}>\n              <InputText placeholder=\"Пароль\" type=\"password\" value={formValues.password} {...register('password')} />\n            </AuthInputLabel>\n            <AuthInputLabel icon=\"lock_O\" error={errors.approvePassword}>\n              <InputText placeholder=\"Повторіть пароль\" type=\"password\" {...register('approvePassword')} />\n            </AuthInputLabel>\n          </>\n        )}\n\n        {!registration && (\n          <>\n            <AuthInputLabel icon=\"email\">\n              <InputText placeholder=\"Електронна адреса\" value={formValues.email} {...register('email')} />\n            </AuthInputLabel>\n            <AuthInputLabel icon=\"lock_O\">\n              <InputText placeholder=\"Пароль\" type=\"password\" value={formValues.password} {...register('password')} />\n            </AuthInputLabel>\n          </>\n        )}\n      </Inputs>\n\n      <Buttons>\n        <StButtonIcon type=\"submit\" textTransform=\"uppercase\" variant=\"filledSmall\">\n          {registration ? 'Зареєструватись' : 'Увійти'}\n        </StButtonIcon>\n\n        {!registration && <StLink to={'/auth/sendRecoveryPasswordMail'}>{'Забули пароль?'}</StLink>}\n      </Buttons>\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  min-width: 250px;\n  width: 100%;\n  height: max-content;\n  /* min-height: max-content; */\n  max-width: 480px;\n  max-height: 98vh;\n\n  overflow: auto;\n\n  padding: 20px 16px;\n\n  border-radius: 2px;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n  /* background-color: #1c1c1e; */\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  @media screen and (max-width: 480px) {\n    max-width: 95vw;\n  }\n`;\nconst StLogo = styled(LogoSvg)`\n  min-width: 150px;\n  height: 64px;\n\n  & .logoName {\n    font-size: 18px;\n    @media screen and (max-width: 480px) {\n      display: block;\n    }\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 16px;\n  line-height: 1.4;\n  text-align: center;\n\n  margin-bottom: 20px;\n\n  max-width: 280px;\n`;\n\nconst Links = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  width: 100%;\n  height: 36px;\n\n  margin-bottom: 16px;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 280px;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n\n  width: 100%;\n  max-width: 230px;\n`;\nconst StButtonIcon = styled(ButtonIcon)`\n  font-weight: 600;\n\n  min-width: 165px;\n  width: 100%;\n`;\nconst StLink = styled(Link)`\n  font-size: 11px;\n  line-height: 1.45;\n\n  text-decoration: underline;\n\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\n\nconst StNavLink = styled(NavLinkIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    //height: 1px;\n    //width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default AuthForm;\n","import React from 'react';\nimport sprite from 'img/sprite';\nimport styled, {\n  css,\n  DefaultTheme,\n  FlattenInterpolation,\n  ThemeProps,\n} from 'styled-components';\nimport { Link, LinkProps } from 'react-router-dom';\n\ntype TextTransform = 'uppercase' | 'lowercase' | 'capitalize' | 'none';\n\ninterface Props {\n  size?: string;\n  variant: LinkIconVariant;\n  iconId?: string;\n  iconSize?: string;\n  isActive?: boolean;\n  iconStyles?: {};\n  endIconId?: string;\n  endIconSize?: string;\n  endIconStyles?: {};\n  texttransform?: TextTransform;\n  fontWeight?: 400 | 500 | 600 | 700 | 900;\n}\n\nexport type LinkIconProps = Props & LinkProps;\n\nconst LinkIcon: React.FC<LinkIconProps> = ({\n  children,\n  isActive,\n  size = '',\n  variant = 'def',\n  iconId,\n  iconSize = '18px',\n  iconStyles = {},\n  endIconId = '',\n  endIconSize = '18px',\n  endIconStyles = {},\n  onClick = () => {\n    console.log('LinkIcon click');\n  },\n  ...props\n}) => {\n  let styles = {\n    width: size,\n    height: size,\n    minWidth: size,\n    miHeight: size,\n  };\n  let iconStyle = {\n    width: iconSize,\n    height: iconSize,\n    minWidth: iconSize,\n    minHeight: iconSize,\n    ...iconStyles,\n  };\n  let endIconStyle = {\n    width: endIconSize,\n    height: endIconSize,\n    minWidth: endIconSize,\n    minHeight: endIconSize,\n    ...endIconStyles,\n  };\n\n  return (\n    <StyledLinkIcon\n      {...{\n        style: styles,\n        variant,\n        onClick,\n        className: 'linkIcon',\n        ...props,\n      }}\n    >\n      {iconId && (\n        <SvgIcon className=\"icon\" style={iconStyle}>\n          <use href={`${sprite}#icon-${String(iconId)}`} />\n        </SvgIcon>\n      )}\n\n      {children}\n\n      {endIconId && (\n        <SvgIcon className=\"endIcon\" style={endIconStyle}>\n          <use href={`${sprite}#icon-${endIconId}`}></use>\n        </SvgIcon>\n      )}\n    </StyledLinkIcon>\n  );\n};\n\nconst StyledLinkIcon = styled(Link)<LinkIconProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  text-align: center;\n\n  font-family: inherit;\n  letter-spacing: 0.05em;\n  color: inherit;\n  fill: currentColor;\n\n  text-transform: ${({ texttransform = 'none' }) => texttransform};\n  font-size: ${({ fontWeight }) => fontWeight || 400};\n  padding: 0;\n\n  overflow: hidden;\n\n  border-radius: 2px;\n  border: 1px solid transparent;\n  background-color: transparent;\n\n  ${({ variant }) => (variant ? getVariant(variant) : getVariant())}\n  &:disabled {\n    pointer-events: none;\n    opacity: 0.7;\n  }\n`;\n\nconst SvgIcon = styled.svg`\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n`;\n\nconst def = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n  /* transition: all var(--timing-function__main); */\n\n  &:hover {\n    background-color: ${({ theme }) =>\n      theme.globals.defaultBtnBckgrndColor.hover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) =>\n      theme.globals.defaultBtnBckgrndColor.pressed};\n  }\n`;\nconst defNoEffects = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n`;\n// const pointer = css`\n//   background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n//   position: relative;\n//   fill: ${({ theme }) => theme.colorLight};\n\n//   border-radius: 0;\n//   border-width: 0;\n//   transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 0;\n\n//     transform: translateY(-50%);\n\n//     width: 3px;\n//     height: 50%;\n\n//     background-color: transparent;\n//     transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n//   }\n//   ${def}\n//   &:hover {\n//     &::before {\n//       height: 100%;\n//       background-color: ${({ theme }) => theme.accentColor.base};\n//     }\n//   }\n//   &:active {\n//   }\n// `;\nconst pointerLeft = css`\n  background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n\n  &:active {\n  }\n`;\nconst pointerBottom = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n\n  &:active {\n  }\n`;\nconst small = css`\n  padding: 0 22px;\n\n  min-width: 115px;\n  min-height: 28px;\n`;\nconst large = css`\n  padding: 0 22px;\n\n  min-width: 150px;\n  min-height: 36px;\n`;\nconst icon = css`\n  min-width: 26px;\n  height: 26px;\n`;\nconst outlined = css`\n  color: ${({ theme }) => theme.accentColor.base};\n  fill: ${({ theme }) => theme.accentColor.base};\n  border: 1px solid ${({ theme }) => theme.accentColor.base};\n  /* background-color: transparent; */\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.accentColor.hover};\n    color: ${({ theme }) => theme.accentColor.hover};\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n    fill: ${({ theme }) => theme.accentColor.pressed};\n    border: 1px solid ${({ theme }) => theme.accentColor.pressed};\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst outlinedSmall = css`\n  ${small}\n  ${outlined}\n`;\nconst outlinedLarge = css`\n  ${outlined}\n  ${large}\n`;\nconst filled = css`\n  color: ${({ theme }) => theme.colorLight};\n  fill: ${({ theme }) => theme.colorLight};\n  background-color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.colorLight};\n    fill: ${({ theme }) => theme.colorLight};\n    background-color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst filledSmall = css`\n  ${small}\n  ${filled}\n`;\nconst filledLarge = css`\n  ${large}\n  ${filled}\n`;\nconst onlyIconFilled = css`\n  ${filled}\n  ${icon}\n`;\nconst onlyIcon = css`\n  ${def}\n  ${icon}\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst onlyIconNoEffects = css`\n  ${defNoEffects}\n  ${icon}\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst underlinedText = css`\n  text-decoration: underline;\n  cursor: pointer;\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst text = css`\n  ${def};\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst textSmall = css`\n  ${text};\n  ${small};\n`;\nconst textLarge = css`\n  ${text};\n  ${large};\n`;\nconst defOutlined = css`\n  ${def};\n  color: ${({ theme }) => theme.fontColor};\n  fill: ${({ theme }) => theme.fillColor};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.trBorderClr};\n  }\n\n  &:active {\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst defOutlinedSmall = css`\n  ${defOutlined}\n  ${small}\n`;\nconst defOutlinedLarge = css`\n  ${defOutlined}\n  ${large}\n`;\n\nconst variants = {\n  def,\n  defNoEffects,\n  pointerLeft,\n  outlinedLarge,\n  filledLarge,\n  outlinedSmall,\n  filledSmall,\n  underlinedText,\n  textSmall,\n  textLarge,\n  onlyIcon,\n  onlyIconNoEffects,\n  onlyIconFilled,\n  defOutlinedSmall,\n  defOutlinedLarge,\n  pointerBottom,\n};\n\nexport type LinkIconVariant = keyof typeof variants;\n\nfunction getVariant(\n  variant?: LinkIconVariant\n): FlattenInterpolation<ThemeProps<DefaultTheme>> {\n  return variant ? variants[variant] : variants.def;\n}\n\nexport default LinkIcon;\n","import React, { useEffect } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon';\nimport styled from 'styled-components';\nimport LogoSvg from 'components/Layout/Header/LogoSvg/LogoSvg';\nimport AuthInputLabel from '../atoms/Inputs/AuthInputLabel';\nimport LinkIcon from 'components/atoms/LinkIcon/LinkIcon';\n\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport useAuthService, { IRecoveryPasswordReqData } from '../../redux/auth/useAppAuth.hook';\nimport InputText from '../atoms/Inputs/InputText';\n\nexport interface RecoveryPasswordFormProps {\n  helloTitle?: string;\n  title: string;\n  recovery?: boolean;\n}\n\nconst validationEmail = yup.object().shape({\n  email: yup.string().email().required(),\n});\nconst validationNewPasswords = yup.object().shape({\n  password: yup.string().required(),\n  approvePassword: yup.string().required(),\n});\nconst recoveryPasswordInitialFormData: Pick<IRecoveryPasswordReqData, 'password' | 'approvePassword'> = {\n  password: '',\n  approvePassword: '',\n};\nconst sendRecoveryPasswordEmailFromData: Pick<IRecoveryPasswordReqData, 'email'> = {\n  email: '',\n};\n\nconst RecoveryPasswordForm: React.FC<RecoveryPasswordFormProps & React.HTMLAttributes<HTMLFormElement>> = ({\n  title,\n  recovery,\n  ...props\n}) => {\n  const authService = useAuthService();\n\n  const { register, watch, handleSubmit, formState } = useForm<Partial<IRecoveryPasswordReqData>>({\n    defaultValues: recovery ? recoveryPasswordInitialFormData : sendRecoveryPasswordEmailFromData,\n    resolver: yupResolver(recovery ? validationNewPasswords : validationEmail),\n    reValidateMode: 'onSubmit',\n  });\n  const formValues = watch();\n\n  useEffect(() => {\n    console.log(formValues);\n  }, [formValues, register]);\n  return (\n    <StForm\n      onSubmit={handleSubmit(authService.sendRecoveryEmail, err => {\n        console.log('invalid data', err);\n      })}\n    >\n      <StLogo />\n\n      <Title>{title}</Title>\n\n      <Inputs>\n        {recovery ? (\n          <>\n            <AuthInputLabel icon=\"lock_O\" error={formState?.errors.password}>\n              <InputText placeholder=\"Новий пароль\" type=\"password\" {...register('password')} />\n            </AuthInputLabel>\n            <AuthInputLabel icon=\"lock_O\" error={formState?.errors.approvePassword}>\n              <InputText placeholder=\"Повторіть пароль\" type=\"password\" {...register('approvePassword')} />\n            </AuthInputLabel>\n          </>\n        ) : (\n          <>\n            <AuthInputLabel icon=\"email\" error={formState?.errors?.email || undefined}>\n              <InputText placeholder=\"Електронна пошта\" {...register('email')} />\n            </AuthInputLabel>\n          </>\n        )}\n      </Inputs>\n\n      <Buttons>\n        <StButtonIcon texttransform={'uppercase'} htmlType={'submit'} variant={'filledSmall'} type={'primary'}>\n          {recovery ? 'Прийняти' : 'Відновити'}\n        </StButtonIcon>\n\n        <StLinkIcon texttransform=\"uppercase\" variant=\"outlinedSmall\" to={'/auth/login'}>\n          {'Увійти'}\n        </StLinkIcon>\n      </Buttons>\n    </StForm>\n  );\n};\n\nconst StForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  min-width: 250px;\n  width: 100%;\n  height: max-content;\n  max-width: 480px;\n  max-height: 98vh;\n\n  overflow: auto;\n\n  padding: 20px 16px;\n\n  border-radius: 2px;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  @media screen and (max-width: 480px) {\n    max-width: 95vw;\n  }\n`;\nconst StLogo = styled(LogoSvg)`\n  min-width: 150px;\n  height: 64px;\n\n  & .logoName {\n    font-size: 18px;\n    @media screen and (max-width: 480px) {\n      display: block;\n    }\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 16px;\n  line-height: 1.4;\n  text-align: center;\n\n  margin-bottom: 20px;\n\n  max-width: 280px;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 280px;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\nconst StButtonIcon = styled(ButtonIcon)`\n  min-width: 165px;\n  font-weight: 600;\n\n  text-transform: uppercase;\n`;\nconst StLinkIcon = styled(LinkIcon)`\n  min-width: 165px;\n  font-weight: 600;\n`;\n\nexport default RecoveryPasswordForm;\n","import AuthForm from 'components/Forms/AuthForm';\nimport RecoveryPasswordForm from 'components/Forms/RecoveryPasswordForm';\nimport styled from 'styled-components';\n\nexport interface PageAuthProps {\n  register?: boolean;\n  login?: boolean;\n  recovery?: boolean;\n  sendRecoveryMail?: boolean;\n}\n\nconst PageAuth: React.FC<PageAuthProps> = ({ register, recovery, login, sendRecoveryMail }) => {\n  return (\n    <Page className=\"PageAuth\">\n      {(register || login) && (\n        <AuthForm\n          title={register ? 'Реєстрація нового користувача' : 'Для початку роботи, будь ласка, авторизуйтесь.'}\n          registration={register}\n          login={!register}\n        />\n      )}\n\n      {(recovery || sendRecoveryMail) && (\n        <RecoveryPasswordForm\n          title={recovery ? 'Відновлення паролю' : 'Для відновлення паролю введіть ваш e-mail'}\n          recovery={recovery}\n        />\n      )}\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: ${({ theme }) => theme.backgroundColorMain};\n`;\n\nexport default PageAuth;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LogoSvg: React.FC<any> = props => {\n  const styles = {\n    width: '34px',\n    height: '20px',\n    minWidth: '34px',\n  };\n\n  return (\n    <StyledLink to=\"#\" {...props}>\n      <IconBox style={styles} className=\"iconBox\">\n        <svg className=\"svg\" width=\"34\" height=\"20\" viewBox=\"0 0 34 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M22.7894 20H30.6591L11.1643 0H3.29459L22.7894 20Z\" fill=\"#7476ED\" />\n          <path d=\"M15.2073 1.02323e-06L34 19.2796V0H28.9143V6.08693L22.9811 0L15.2073 1.02323e-06Z\" fill=\"#E56F8C\" />\n          <path d=\"M0 0.669434V19.9998H5.08561V13.9128L11.0188 19.9998H18.8422L0 0.669434Z\" fill=\"#64C2DB\" />\n        </svg>\n      </IconBox>\n\n      <LogoName className=\"logoName\">Logoipsum</LogoName>\n    </StyledLink>\n  );\n};\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: fit-content;\n  height: 28px;\n  min-width: max-content;\n\n  padding: 0 8px;\n`;\nconst IconBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst LogoName = styled.div`\n  text-align: center;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.09em;\n\n  @media screen and (max-width: 480px) {\n    display: none;\n  }\n`;\nexport default LogoSvg;\n"],"names":["InputBox","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","HelperText","_templateObject3","_ref2","isError","isSuccess","theme","globals","colors","error","success","StIcon","SvgIcon","_templateObject4","_ref3","_ref","icon","helperText","children","_objectWithoutProperties","_excluded","_jsxs","_jsx","size","iconId","message","StyledLinkIcon","NavLink","textTransform","fontWeight","_ref4","variant","getVariant","def","css","_ref5","defaultBtnBckgrndColor","_ref6","hover","_ref7","pressed","defNoEffects","_ref8","pointerLeft","_templateObject5","_ref9","_ref10","timingFunctionMain","_ref11","colorLight","_ref12","timingFunctionLong","_ref13","accentColor","base","pointerBottom","_templateObject6","_ref14","_ref15","_ref16","_ref17","_ref18","small","_templateObject7","large","_templateObject8","_templateObject9","outlined","_templateObject10","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","outlinedSmall","_templateObject11","outlinedLarge","_templateObject12","filled","_templateObject13","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","filledSmall","_templateObject14","filledLarge","_templateObject15","onlyIconFilled","_templateObject16","onlyIcon","_templateObject17","_ref35","_ref36","_ref37","onlyIconNoEffects","_templateObject18","_ref38","_ref39","_ref40","underlinedText","_templateObject19","_ref41","_ref42","_ref43","text","_templateObject20","_ref44","_ref45","_ref46","textSmall","_templateObject21","textLarge","_templateObject22","defOutlined","_templateObject23","_ref47","fontColor","_ref48","fillColor","_ref49","borderColor","_ref50","trBorderClr","variants","defOutlinedSmall","_templateObject24","defOutlinedLarge","_templateObject25","_ref$size","isActive","_ref$variant","_ref$iconSize","iconSize","_ref$iconStyles","iconStyles","_ref$endIconId","endIconId","_ref$endIconSize","endIconSize","_ref$endIconStyles","endIconStyles","_ref$onClick","onClick","console","log","props","styles","width","height","minWidth","miHeight","iconStyle","_objectSpread","minHeight","endIconStyle","style","className","href","concat","sprite","String","initialFormDataLogin","email","password","initialFormDataRegister","name","secondName","approvePassword","Form","shadowMain","backgroundColorSecondary","StLogo","LogoSvg","Title","Links","Inputs","Buttons","StButtonIcon","ButtonIcon","StLink","Link","StNavLink","NavLinkIcon","timingFnMui","title","registration","login","authService","useAuthService","_useForm","useForm","defaultValues","register","errors","formState","handleSubmit","formValues","watch","onSubmit","data","loginUser","registerUser","to","_Fragment","AuthInputLabel","InputText","placeholder","value","type","_ref2$texttransform","texttransform","validationEmail","yup","shape","required","validationNewPasswords","recoveryPasswordInitialFormData","sendRecoveryPasswordEmailFromData","StForm","StLinkIcon","LinkIcon","_formState$errors","recovery","resolver","yupResolver","reValidateMode","useEffect","sendRecoveryEmail","err","undefined","htmlType","Page","backgroundColorMain","sendRecoveryMail","AuthForm","RecoveryPasswordForm","StyledLink","IconBox","LogoName","viewBox","fill","xmlns","d"],"sourceRoot":""}