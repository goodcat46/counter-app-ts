{"version":3,"file":"static/js/616.841795ed.chunk.js","mappings":"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","sources":["components/Forms/CompanyForm.tsx","redux/permissions/usePermissonsActionsCreator.ts","components/AppPages/PageHome.tsx","components/AppPages/PageSelectCompany.tsx","components/AppPages/pagesStyles.ts"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { toast } from 'react-toastify';\nimport { ICompany } from '../../redux/companies/companies.types';\nimport ModalForm, { ModalFormProps } from '../ModalForm';\nimport usePermissionsServiceHook from '../../redux/permissions/usePermissionsService.hook';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\n\nexport interface Props {}\n\nexport interface ICreateCompanyFormData\n  extends Omit<ICompany, '_id' | 'createdAt' | 'updatedAt' | 'company_token' | 'configs' | 'owner' | 'permissions'> {}\n\nconst defaultValues: ICreateCompanyFormData = {\n  name: '',\n  fullName: '',\n  email: '',\n  phone: '',\n};\nconst validFormData = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  fullName: yup.string().required(),\n  phone: yup.string().required(),\n});\n\nexport type CompanyFormProps = Props & Omit<ModalFormProps, 'onSubmit'>;\nconst CompanyForm: React.FC<CompanyFormProps> = ({ ...props }) => {\n  const permissionsService = usePermissionsServiceHook();\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n  } = useForm<ICreateCompanyFormData>({\n    defaultValues,\n    reValidateMode: 'onSubmit',\n    resolver: yupResolver(validFormData),\n  });\n\n  function onFormSubmit(data: ICreateCompanyFormData) {\n    if (data) console.log(data);\n\n    permissionsService.createCompany({\n      data,\n      onSuccess(data) {\n        console.log('Registered company', data);\n        toast.success(`Company created: ${data?.name}`);\n      },\n      onError() {\n        toast.error('Error');\n      },\n      onLoading() {},\n    });\n  }\n\n  return (\n    <Form fillHeight {...props} onSubmit={handleSubmit(onFormSubmit)}>\n      <Inputs>\n        <InputLabel label={'Назва'} direction={'vertical'} error={errors.name}>\n          <InputText {...register('name')} />\n        </InputLabel>\n        <InputLabel label={'Повна назва'} direction={'vertical'} error={errors.fullName}>\n          <InputText {...register('fullName')} />\n        </InputLabel>\n        <InputLabel label={'Електронна адреса'} direction={'vertical'} error={errors.email}>\n          <InputText {...register('email')} type={'email'} />\n        </InputLabel>\n        <InputLabel label={'Телефон'} direction={'vertical'} error={errors.phone}>\n          <InputText {...register('phone')} />\n        </InputLabel>\n\n        <InputLabel label={'Тип'} direction={'vertical'} error={errors.type}>\n          <InputText {...register('type')} />\n        </InputLabel>\n        <InputLabel label={'Податковий номер'} direction={'vertical'} error={errors.taxCode}>\n          <InputText {...register('taxCode')} type={'number'} />\n        </InputLabel>\n      </Inputs>\n    </Form>\n  );\n};\n\nconst Form = styled(ModalForm)``;\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 12px;\n  width: 100%;\n\n  padding: 8px 16px;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nexport default CompanyForm;\n","import { TableActionCreator } from '../../components/TableList/tableTypes.types';\nimport { IPermission } from './permissions.types';\nimport { useCallback } from 'react';\nimport { PermissionService } from './usePermissionsService.hook';\nimport { useModalProvider } from '../../components/ModalProvider/ModalProvider';\nimport ModalForm from '../../components/ModalForm';\nimport { useNavigate } from 'react-router-dom';\nimport { CompanyQueryType } from '../global.types';\nimport { toast } from 'react-toastify';\nimport CompanyForm from '../../components/Forms/CompanyForm';\n\nexport type PermissionsActionsCreator = TableActionCreator<IPermission>;\n\nexport const isMyCompany = ({ owner, user }: IPermission) => {\n  return user?._id === owner?._id;\n};\n\nconst usePermissionsActionsCreator = (\n  service: PermissionService,\n  companyType: CompanyQueryType\n): PermissionsActionsCreator => {\n  const modal = useModalProvider();\n  const navigate = useNavigate();\n\n  return useCallback(\n    ctx => {\n      const selPerm = ctx.selectedRow;\n      return [\n        {\n          name: 'selectPermission',\n          title: 'Перейти',\n          icon: 'logIn',\n          disabled: !ctx.selectedRow?._id,\n          iconSize: '100%',\n          type: 'onlyIcon',\n          onClick: () => {\n            if (selPerm?._id) {\n              console.log('selPerm', selPerm);\n              service.logIn({\n                data: { _id: selPerm._id },\n                onSuccess: data => {\n                  if (!data._id) return console.log('data', data);\n                  toast.success(`Current company: ${data.company?.name}`);\n                  navigate(`/app/${data._id}`);\n                },\n                onError: error => {\n                  console.log(error);\n                },\n              });\n            }\n          },\n        },\n        {\n          name: 'editPermission',\n          title: 'Редагувати',\n          icon: 'edit',\n          disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n          iconSize: '100%',\n          type: 'onlyIcon',\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: ModalForm,\n              modalChildrenProps: {\n                fillHeight: true,\n                title: 'Редагувати компанію',\n              },\n            });\n          },\n        },\n        {\n          name: 'deletePermission',\n          title: 'Видалити',\n          icon: 'delete',\n          iconSize: '100%',\n          disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n          type: 'onlyIcon',\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        {\n          name: 'leavePermission',\n          title: 'Покинути',\n          icon: 'logOut',\n          iconSize: '100%',\n          disabled: ctx.selectedRow && companyType ? !['invited'].includes(companyType) : true,\n          type: 'onlyIcon',\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        { separator: true },\n        {\n          name: 'rejectPermission',\n          title: 'Відхилити',\n          icon: 'clear',\n          iconSize: '100%',\n          type: 'onlyIconFilled',\n          disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        {\n          name: 'acceptPermission',\n          title: 'Прийняти',\n          icon: 'done',\n          iconSize: '100%',\n          type: 'onlyIconFilled',\n          disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n          onClick: () => {\n            console.log('selPermission', selPerm);\n          },\n        },\n        {\n          name: 'createPermission',\n          title: 'Створити',\n          icon: 'plus',\n          iconSize: '100%',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: CompanyForm,\n              modalChildrenProps: {\n                fillHeight: true,\n                title: 'Створити нову компанію',\n              },\n            });\n          },\n        },\n      ];\n    },\n    [companyType, modal, navigate, service]\n  );\n};\n\nexport default usePermissionsActionsCreator;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\nimport usePermissionsService, { usePermissionsSelector } from 'redux/permissions/usePermissionsService.hook';\nimport { IPermission } from '../../redux/permissions/permissions.types';\nimport { permissionsSearchParams, permissionsTableColumns } from '../../data';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport usePermissionsActionsCreator from '../../redux/permissions/usePermissonsActionsCreator';\nimport { CompanyQueryType } from '../../redux/global.types';\nimport { PermissionStatus } from 'redux/permissions/permissions.types';\n\nexport type CompanyTypeItem = { title: string; param: CompanyQueryType };\nconst companyTypes: CompanyTypeItem[] = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n\ntype Props = {\n  path?: string;\n};\nconst PageHome: React.FC<any> = ({ path }: Props) => {\n  const { user } = useAuthSelector();\n  const [companyType, setCompanyType] = useState<CompanyTypeItem>();\n  const setSearchParams = useSearchParams({\n    companyType: companyTypes[0].param,\n  })[1];\n  const state = usePermissionsSelector();\n  const permissionsService = usePermissionsService();\n  const actionsCreator = usePermissionsActionsCreator(permissionsService, companyType?.param || 'own');\n\n  const permissionsData = useMemo(() => {\n    return state.permissions?.filter(pr => {\n      if (companyType?.param === 'invited') return pr.status === PermissionStatus.ACCEPTED;\n      if (companyType?.param === 'invites') return pr.status === PermissionStatus.PENDING;\n      if (companyType?.param === 'all') return pr;\n      if (companyType?.param === 'own') return pr.user?._id === pr.owner?._id;\n      return pr;\n    });\n  }, [companyType?.param, state.permissions]);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IPermission> => ({\n      tableData: permissionsData,\n      tableTitles: permissionsTableColumns,\n      tableSearchParams: permissionsSearchParams,\n      isFilter: false,\n      isSearch: true,\n      checkBoxes: false,\n      actionsCreator,\n    }),\n    [actionsCreator, permissionsData]\n  );\n  const onSearchParamClick = useCallback(\n    (item: CompanyTypeItem) => {\n      setSearchParams({ companyType: item.param });\n      setCompanyType(item);\n    },\n    [setSearchParams]\n  );\n  const isActiveClassName = useCallback(\n    (param: string) => (companyType?.param === param ? 'active' : ''),\n    [companyType?.param]\n  );\n\n  const renderFilterButtons = useMemo(() => {\n    return companyTypes.map(item => (\n      <StButtonIcon\n        key={item.param}\n        variant=\"def\"\n        onClick={() => onSearchParamClick(item)}\n        className={isActiveClassName(item.param)}\n      >\n        {item.title}\n      </StButtonIcon>\n    ));\n  }, [isActiveClassName, onSearchParamClick]);\n\n  useEffect(() => {\n    setSearchParams({ companyType: companyTypes[0].param });\n    setCompanyType(companyTypes[0]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useMemo(() => {\n    user._id && permissionsService.getAllByUserId({ data: { userId: user._id } });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user._id]);\n\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>\n          <ProfileCard {...user} />\n        </ProfileInfo>\n\n        <FilterButtons>\n          <ButtonsList>{renderFilterButtons}</ButtonsList>\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        <TableList {...tableConfig} />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  //background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace};\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    //height: 1px;\n    //width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default memo(PageHome);\n","import AppGridPage from './AppGridPage';\nimport PageHome from './PageHome';\nimport { memo } from 'react';\n\ntype Props = {\n  path: string;\n};\n\nconst PageSelectCompany: React.FC<Props> = ({ path = '' }) => {\n  return (\n    <AppGridPage path={path}>\n      <PageHome />\n    </AppGridPage>\n  );\n};\n\nexport default memo(PageSelectCompany);\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["defaultValues","name","fullName","email","phone","validFormData","yup","shape","required","Form","styled","ModalForm","_templateObject","_taggedTemplateLiteral","Inputs","_templateObject2","_ref2","theme","accentColor","base","_ref","props","Object","assign","_objectDestructuringEmpty","permissionsService","usePermissionsServiceHook","_useForm","useForm","reValidateMode","resolver","yupResolver","register","errors","formState","handleSubmit","_jsx","_objectSpread","fillHeight","onSubmit","data","console","log","createCompany","onSuccess","toast","concat","onError","onLoading","children","_jsxs","InputLabel","label","direction","error","InputText","type","taxCode","service","companyType","modal","useModalProvider","navigate","useNavigate","useCallback","ctx","_ctx$selectedRow","_ctx$selectedRow2","_ctx$selectedRow3","_ctx$selectedRow4","_ctx$selectedRow5","selPerm","selectedRow","title","icon","disabled","_id","iconSize","onClick","logIn","_data$company","company","includes","handleOpenModal","ModalChildren","modalChildrenProps","separator","CompanyForm","companyTypes","param","PageHome","path","user","useAuthSelector","_useState","useState","_useState2","_slicedToArray","setCompanyType","setSearchParams","useSearchParams","state","usePermissionsSelector","usePermissionsService","actionsCreator","usePermissionsActionsCreator","permissionsData","useMemo","_state$permissions","permissions","filter","pr","_pr$user","_pr$owner","status","PermissionStatus","owner","tableConfig","tableData","tableTitles","permissionsTableColumns","tableSearchParams","permissionsSearchParams","isFilter","isSearch","checkBoxes","onSearchParamClick","item","isActiveClassName","renderFilterButtons","map","StButtonIcon","variant","className","useEffect","getAllByUserId","userId","Page","Top","ProfileInfo","ProfileCard","FilterButtons","ButtonsList","Bottom","TableList","takeFullGridArea","tableBackgroundColor","takeFullPlace","_templateObject3","_ref3","_templateObject4","_templateObject5","_templateObject6","ButtonIcon","_templateObject7","_ref4","trBorderClr","_ref5","globals","timingFnMui","_ref6","memo","PageSelectCompany","_ref$path","AppGridPage","css"],"sourceRoot":""}