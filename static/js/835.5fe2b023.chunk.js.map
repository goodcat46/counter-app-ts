{"version":3,"file":"static/js/835.5fe2b023.chunk.js","mappings":"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","sources":["components/Forms/offers/categories/OfferCategoriesSelector.tsx","components/Forms/offers/images/AddImageSetModal.tsx","components/Forms/offers/images/FormOfferImagesComponent.tsx","components/Forms/offers/variations/OfferPropertySelector.tsx","components/atoms/ImagePreviewSmall.tsx","components/atoms/PropertiesGroupSelector.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox, { FlexLabel, FlexLi, FlexUl } from '../../../atoms/FlexBox';\nimport { OfferCategoryEntity } from '../../../../types/dir.types';\nimport styled from 'styled-components';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport CheckBox from '../../../TableList/TebleCells/CellComponents/CheckBox';\nimport { Text } from '../../../atoms/Text';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { UUID } from '../../../../types/utils.types';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\n\nexport interface OfferCategoriesSelectorProps {\n  onSelect?: (id: string, option?: OfferCategoryEntity) => void;\n  onChange?: (ids: string) => void;\n  onChangeIds?: (ids: string[]) => void;\n  onChangeMap?: (map: IsSelectedIdsMap) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  selectedIds?: string[];\n  options?: OfferCategoryEntity[];\n  offer?: OfferEntity;\n}\n\nconst getUnicIds = (map: IsSelectedIdsMap) => {\n  const idsArrays = Object.keys(map).filter(key => {\n    return map?.[key]?.length;\n  });\n\n  return idsArrays;\n};\n\ntype IsSelectedIdsMap = Record<UUID, UUID[]>;\nconst OfferCategoriesSelector: React.FC<OfferCategoriesSelectorProps> = ({ onChangeIds, onChange, offer }) => {\n  const treeData = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n\n  const [selectedMap, setSelectedMap] = useState<IsSelectedIdsMap>({});\n\n  const init = useMemo(() => {\n    if (!offer?.categories) {\n      return undefined;\n    }\n\n    const _next: IsSelectedIdsMap = {};\n    offer?.categories?.forEach(category => {\n      const parentId = category.parent?._id;\n      const catId = category?._id;\n\n      if (!catId) return;\n\n      if (parentId) {\n        _next[parentId] = _next[parentId] ? [..._next[parentId], catId] : [catId];\n      }\n      _next[catId] = _next[catId] ? [..._next[catId], catId] : [catId];\n    });\n    Object.entries(_next).forEach(([key, val]) => {\n      if (_next[key]?.length > 1) {\n        _next[key] = Array.from(new Set(val));\n      }\n    });\n\n    return _next;\n  }, [offer?.categories]);\n\n  useEffect(() => {\n    if (init) setSelectedMap(init);\n    // eslint-disable-next-line\n  }, []);\n\n  const toggleSelected = useCallback(\n    async (ev: { checked: boolean; _id: UUID; pathIds: UUID[] }) => {\n      onChange && onChange(ev._id);\n\n      setSelectedMap(prev => {\n        const newMap = ev.checked ? { ...prev, [ev._id]: [ev._id] } : { ...prev, [ev._id]: [] };\n\n        if (!ev.checked) {\n          prev?.[ev._id]?.forEach(removeId => {\n            newMap[removeId] = [];\n          });\n          newMap[ev._id] = [];\n        } else {\n          let ids: string[] = ev.pathIds;\n          ev.pathIds.forEach((registerId, index) => {\n            ids = ids.slice(1, ids.length);\n            if (registerId === ev._id) {\n              newMap[registerId] = [registerId];\n            } else {\n              newMap[registerId] = [...new Set([...(newMap[registerId] ?? []), ...ids])];\n            }\n          });\n        }\n\n        onChangeIds && onChangeIds(getUnicIds(newMap));\n        return newMap;\n      });\n    },\n    [onChange, onChangeIds]\n  );\n\n  const renderCategories = useMemo(() => {\n    const isSelected = (id: UUID) => {\n      return !!selectedMap?.[id]?.length;\n    };\n    return treeData.map(parent => {\n      return (\n        <RootBox key={parent._id}>\n          <RenderCategory item={parent} depth={0} pathIds={[]} isChecked={isSelected} onChange={toggleSelected} />\n        </RootBox>\n      );\n    });\n  }, [selectedMap, toggleSelected, treeData]);\n\n  return <FlexBox minWidth={'max-content'}>{renderCategories}</FlexBox>;\n};\n\nexport default OfferCategoriesSelector;\n\nconst RootBox = styled(FlexBox)`\n  //padding: 8px 0;\n  // &:not(:first-child) {\n  //   border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  // }\n`;\n\nconst CategoriesList = styled(FlexUl)<{ numColumns?: number }>``;\n\nconst CategoryListItem = styled(FlexLi)`\n  &:not(:last-child) {\n  }\n\n  min-width: max-content;\n`;\n\nconst CategoryItem = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst RenderCategory = ({\n  pathIds,\n  item,\n  depth = 0,\n  onChange,\n  isChecked,\n}: {\n  pathIds: UUID[];\n  item: OfferCategoryEntity;\n  depth: number;\n  onChange?: (ev: { checked: boolean; _id: UUID; pathIds: UUID[] }) => void;\n  isChecked?: (id: UUID) => boolean;\n}) => {\n  const [isOpen, setIsOpen] = useState(!!item?.childrenList?.length);\n  const itemId = item?._id ?? '';\n\n  const nextPathIds = [...pathIds, itemId];\n  return (\n    <CategoryListItem key={`cate-value-${itemId}`} padding={depth ? '0 0 0 16px' : ''}>\n      <CategoryItem gap={12} fxDirection={'row'} alignItems={'center'} padding={'8px 0'}>\n        <ButtonIcon\n          variant={'onlyIconNoEffects'}\n          iconSize={'22px'}\n          disabled={!item?.childrenList?.length}\n          icon={isOpen ? 'SmallArrowDown' : 'SmallArrowRight'}\n          onClick={() => {\n            setIsOpen(p => !p);\n          }}\n        />\n\n        <FlexLabel flex={1} fxDirection={'row'} alignItems={'center'} gap={12} padding={'4px 6px'}>\n          <CheckBox\n            size={'22px'}\n            checked={isChecked ? isChecked(itemId) : false}\n            onChange={ev => {\n              onChange && onChange({ pathIds: nextPathIds, _id: itemId, checked: ev.checked });\n            }}\n          />\n\n          <Text $size={14} $weight={500}>\n            {item.label}\n          </Text>\n        </FlexLabel>\n      </CategoryItem>\n\n      {isOpen && (\n        <CategoriesList>\n          {item.childrenList?.map(child => {\n            return (\n              <RenderCategory\n                key={child._id}\n                depth={depth + 1}\n                item={child}\n                onChange={onChange}\n                isChecked={isChecked}\n                pathIds={nextPathIds}\n              />\n            );\n          })}\n        </CategoriesList>\n      )}\n    </CategoryListItem>\n  );\n};\n","import { OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport ModalForm, { ModalFormProps } from '../../../ModalForm';\nimport { ChangeEventHandler, useRef, useState } from 'react';\nimport { FilterOption } from '../../../atoms/TabSelector';\nimport FlexBox from '../../../atoms/FlexBox';\nimport SvgIcon from '../../../atoms/SvgIcon';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport ButtonsGroup from '../../../atoms/ButtonsGroup';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport { ImageSetSrcType } from '../../../../types/offers/offer-images.types';\nimport { formAddImageSetTabs } from 'data';\n\nexport interface FormAddImageSetData extends Partial<Omit<OfferImageSlotEntity, '_id' | 'createdAt' | 'updatedAt'>> {}\n\nexport interface AddImageSetModalProps extends Omit<ModalFormProps<any, any, FormAddImageSetData>, 'onSubmit'> {\n  onSubmit?: (data: Partial<FormAddImageSetData>, setId?: string, setIndex?: number) => void;\n  setId?: string;\n  setIndex?: number;\n  type?: ImageSetSrcType;\n}\n\nconst AddImageSetModal = ({\n  title,\n  fillHeight = true,\n  onSubmit,\n  onClose,\n  defaultState,\n  type,\n  ...props\n}: AddImageSetModalProps) => {\n  const [current, setCurrent] = useState<FilterOption<ImageSetSrcType> | undefined>(formAddImageSetTabs[0]);\n  const [formData, setFormData] = useState<FormAddImageSetData>(defaultState || {});\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleSubmitForm = () => {\n    onSubmit && onSubmit(formData);\n    onClose && onClose();\n  };\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = e => {\n    const { name, value } = e.target;\n\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n  const handleClear = () => {\n    const key = current?.value;\n    key && setFormData(prev => ({ ...prev, [key]: '' }));\n  };\n\n  return (\n    <ModalForm\n      title={title || 'Додати новий сет зображень'}\n      fillHeight={fillHeight}\n      {...props}\n      width={'360px'}\n      onClose={onClose}\n      onSubmit={handleSubmitForm}\n    >\n      <FormContentGrid>\n        <FlexBox fillWidth fillHeight alignItems={'center'} overflow={'hidden'}>\n          {current?.value && formData[current?.value] ? (\n            <Image src={formData[current?.value] as never} />\n          ) : (\n            <AddImageBox disabled>\n              <SvgIcon icon={'plus'} size={'56px'} />\n\n              <input name={'img_preview'} type={'file'} className={'visually-hidden'} disabled />\n            </AddImageBox>\n          )}\n        </FlexBox>\n\n        {current?.value && (\n          <FlexBox fxDirection={'row'} gap={6} alignItems={'flex-end'}>\n            <InputLabel label={current?.label?.replace('img_', 'image ').toUpperCase()} required={current?.required}>\n              <InputText\n                ref={inputRef}\n                name={current?.value}\n                value={formData[current?.value] || ''}\n                onChange={handleInputChange}\n                placeholder={'Впишіть або вставте посилання на зображення'}\n                required={current?.required}\n                autoFocus\n              />\n            </InputLabel>\n\n            <ButtonIcon variant={'onlyIcon'} icon={'close'} size={'28px'} iconSize={'100%'} onClick={handleClear} />\n          </FlexBox>\n        )}\n\n        <FlexBox padding={'8px 0'}>\n          <ButtonsGroup\n            options={formAddImageSetTabs}\n            currentOption={current}\n            // defaultIndex={type ? formAddImageSetTabs.findIndex(el => el.value === type) : 0}\n            onSelect={info => {\n              setCurrent(info.option);\n              // inputRef.current?.focus({ preventScroll: true });\n            }}\n          />\n        </FlexBox>\n      </FormContentGrid>\n    </ModalForm>\n  );\n};\nconst FormContentGrid = styled.div`\n  flex: 1;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr min-content min-content;\n  gap: 6px;\n\n  padding: 8px;\n  overflow: hidden;\n`;\nconst AddImageBox = styled.label<{ disabled?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n  width: 100%;\n  max-height: 100%;\n\n  fill: ${p => p.theme.sideBarBorderColor};\n\n  border-radius: 2px;\n  border: 2px solid ${p => p.theme.sideBarBorderColor};\n\n  transition: ${p => p.theme.globals.timingFnMui};\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n  &:hover {\n    fill: ${p => p.theme.accentColor.base};\n    border-color: ${p => p.theme.accentColor.light};\n  }\n`;\n\nconst Image = styled.img`\n  //min-width: 100px;\n  //max-width: 100px;\n  //\n  //height: 145px;\n\n  max-height: 100%;\n`;\nexport default AddImageSetModal;\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Text } from '../../../atoms/Text';\nimport { useModalService } from '../../../../Providers/ModalProvider/ModalProvider';\nimport AddImageSetModal, { FormAddImageSetData } from './AddImageSetModal';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport { t } from '../../../../lang';\nimport { formAddImageSetTabs } from '../../../../data';\nimport { ImageSetSrcType } from '../../../../types/offers/offer-images.types';\nimport { isNumber } from 'lodash';\n\nexport interface FormOfferImagesComponentProps {\n  onChangeState?: (state: Partial<OfferImageSlotEntity>[]) => void;\n  initialData?: Partial<OfferImageSlotEntity>[];\n  renderHeader?: React.ReactNode;\n  canEditOrder?: boolean;\n  onClose?: () => void;\n  hideLabel?: boolean;\n  contentContainerStyle?: React.CSSProperties;\n  FooterComponent?: React.FC<{ onAddNewImageSetPress: () => void }>;\n  HeaderComponent?: React.FC;\n\n  onlyPreviews?: boolean;\n}\n\nconst FormOfferImagesComponent: React.FC<FormOfferImagesComponentProps> = ({\n  onChangeState,\n  renderHeader,\n  initialData,\n  canEditOrder = true,\n  onClose,\n  FooterComponent,\n  contentContainerStyle,\n  hideLabel,\n  onlyPreviews = true,\n}) => {\n  const modalS = useModalService();\n\n  const [formData, setFormData] = useState<Partial<OfferImageSlotEntity>[]>([]);\n  useEffect(() => {\n    if (!initialData) {\n      return;\n    } else {\n      setFormData(initialData);\n    }\n  }, [initialData]);\n  const handleAddImageSet = (info: FormAddImageSetData) => {\n    if (onChangeState) {\n      const updatedData = [...(initialData ?? []), { ...info, order: formData.length + 1 }];\n      onChangeState(updatedData);\n    } else {\n      setFormData(prev => {\n        return [...prev, { ...info, order: formData.length + 1 }];\n      });\n    }\n  };\n  const handleChangeOrder = useCallback(\n    (currentSetOrder: number, increment: number) => {\n      setFormData(prev => {\n        const newOrder = currentSetOrder + increment;\n\n        return prev.map((set, index) => {\n          if (newOrder > formData.length || newOrder < 1) {\n            return set;\n          }\n          if (set.order === newOrder) {\n            return { ...set, order: currentSetOrder };\n          } else if (set.order === currentSetOrder) {\n            return { ...set, order: newOrder };\n          } else {\n            return set;\n          }\n        });\n      });\n    },\n    [formData.length]\n  );\n\n  const handleAddImageToSet = useCallback(\n    ({ setIndex, type, uri }: { setId?: string; setIndex?: number; uri?: string; type?: ImageSetSrcType }) => {\n      if (onChangeState && initialData) {\n        const updatedData = initialData?.map((set, index) => {\n          if (setIndex === index) {\n            return { ...set, [type as never]: uri };\n          }\n          return set;\n        });\n        onChangeState(updatedData);\n      } else {\n        setFormData(prev => {\n          const updatedData = prev.map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: uri };\n            }\n            return set;\n          });\n          return updatedData;\n        });\n      }\n    },\n    [initialData, onChangeState]\n  );\n  // TODO need refactoring\n  const handleRemoveImageFromSet = useCallback(\n    ({ setId, setIndex, type }: { setId?: string; setIndex?: number; type?: ImageSetSrcType }) => {\n      const confirmed =\n        type !== ImageSetSrcType.img_preview || window.confirm('Буде видалено цілий сет фото.\\nПродовжити?');\n      if (!confirmed) return;\n\n      setFormData(prev => {\n        const updatedData = prev\n          .map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: '' };\n            }\n            return set;\n          })\n          .filter(set => {\n            return set.img_preview;\n          })\n          .map((set, index) => ({ ...set, order: index + 1 }));\n\n        onChangeState && onChangeState(updatedData);\n        return updatedData;\n      });\n    },\n    [onChangeState]\n  );\n\n  const handleAddNewSet = () => {\n    modalS.open({\n      ModalChildren: AddImageSetModal,\n      modalChildrenProps: {\n        onSubmit: data => {\n          handleAddImageSet(data);\n        },\n      },\n    });\n  };\n\n  const renderImageSets = useMemo(() => {\n    let dataForRender = formData;\n    try {\n      dataForRender = [...formData].sort((a, b) => (a?.order ?? 0) - (b?.order ?? 0));\n    } catch (e) {\n      dataForRender = formData;\n    }\n\n    return dataForRender?.map((slot, slotIndex) => {\n      const renderPreviews = (onlyPreviews ? formAddImageSetTabs.slice(0, 1) : formAddImageSetTabs).map(\n        (el, imgIndex) => {\n          return (\n            <ImagePreviewSmall\n              key={`small-prev_${imgIndex}`}\n              src={slot[el?.value as never]}\n              title={el.label ?? ''}\n              onEditPress={() => {\n                modalS.open({\n                  ModalChildren: AddImageSetModal,\n                  modalChildrenProps: {\n                    defaultState: slot,\n                    type: el.value,\n                    onSubmit: data => {\n                      el.value &&\n                        data[el.value] &&\n                        handleAddImageToSet({\n                          setId: slot?._id,\n                          setIndex: slotIndex,\n                          uri: data[el.value],\n                          type: el.value,\n                        });\n                    },\n                  },\n                });\n              }}\n              onDeletePress={() => {\n                handleRemoveImageFromSet({ setId: '', setIndex: slotIndex, type: el.value });\n              }}\n            />\n          );\n        }\n      );\n\n      return (\n        <ImagesSetBox\n          key={`images-set_${slot?._id || slotIndex}`}\n          gap={6}\n          fxDirection={'row'}\n          maxWidth={'100%'}\n          overflow={'hidden'}\n        >\n          {dataForRender?.length > 1 && canEditOrder && !onlyPreviews && (\n            <SlotOrderChanger\n              currentOrder={slot?.order}\n              canMoveUp={(slot?.order ?? 0) > 1}\n              onMoveUpPress={() => {\n                isNumber(slot.order) && handleChangeOrder(slot.order, -1);\n              }}\n              canMoveDown={(slot?.order ?? 0) < formData.length}\n              onMoveDownPress={() => {\n                isNumber(slot.order) && handleChangeOrder(slot.order, +1);\n              }}\n            />\n          )}\n\n          <FlexBox className={'scrollBox'} overflow={'auto'} gap={6} fxDirection={'row'}>\n            {renderPreviews}\n          </FlexBox>\n        </ImagesSetBox>\n      );\n    });\n  }, [canEditOrder, formData, handleAddImageToSet, handleChangeOrder, handleRemoveImageFromSet, modalS, onlyPreviews]);\n\n  useEffect(() => {\n    if (initialData) {\n      setFormData(initialData as Required<OfferImageSlotEntity>[]);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <FlexBox maxWidth={'100%'} overflow={'hidden'} flex={1}>\n      {renderHeader || (\n        <FlexBox\n          padding={'4px 8px'}\n          height={'32px'}\n          fxDirection={'row'}\n          gap={2}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $weight={600} $size={14}>\n            {!hideLabel && t('Images')}\n          </Text>\n\n          <ButtonIcon type={'button'} variant={'textExtraSmall'} onClick={onClose || handleAddNewSet}>\n            {onClose ? t('Close') : t('Add')}\n          </ButtonIcon>\n        </FlexBox>\n      )}\n\n      <FlexBox\n        gap={6}\n        padding={'8px 0'}\n        style={contentContainerStyle}\n        fxDirection={onlyPreviews ? 'row' : 'column'}\n        flexWrap={onlyPreviews ? 'wrap' : 'unset'}\n      >\n        {renderImageSets}\n      </FlexBox>\n\n      {FooterComponent && <FooterComponent onAddNewImageSetPress={handleAddNewSet} />}\n    </FlexBox>\n  );\n};\n\nconst ImagesSetBox = styled(FlexBox)`\n  & .scrollBox {\n    &::-webkit-scrollbar {\n      width: 0;\n      height: 0;\n    }\n  }\n`;\nconst SlotOrderChanger = ({\n  onMoveUpPress,\n  onMoveDownPress,\n  currentOrder,\n  canMoveDown,\n  canMoveUp,\n}: {\n  onMoveUpPress?: () => void;\n  onMoveDownPress?: () => void;\n  currentOrder?: number;\n  canMoveDown?: boolean;\n  canMoveUp?: boolean;\n  inverse?: boolean;\n}) => {\n  return (\n    <FlexBox\n      style={{ minWidth: 'fit-content' }}\n      fillHeight\n      gap={6}\n      justifyContent={'space-between'}\n      overflow={'hidden'}\n    >\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowUp'} disabled={!canMoveUp} onClick={onMoveUpPress} />\n      <Text $align={'center'} $weight={600}>\n        {currentOrder || 0}\n      </Text>\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowDown'} disabled={!canMoveDown} onClick={onMoveDownPress} />\n    </FlexBox>\n  );\n};\n\nexport default FormOfferImagesComponent;\n","import { PropertyEntity, PropertyTypeEnum, PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport { t } from '../../../../lang';\nimport TagButtonsFilter from '../../../atoms/TagButtonsFilter';\nimport SvgIcon from '../../../atoms/SvgIcon';\n\ninterface PropertyItemStyleByCmsTypeProps {\n  numColumns?: number;\n}\n\nconst PropertyItemStylesByCmsKey: Record<PropertyTypeEnum | string, PropertyItemStyleByCmsTypeProps> = {\n  [PropertyTypeEnum.size]: {\n    numColumns: 4,\n  },\n  [PropertyTypeEnum.color]: {\n    numColumns: 2,\n  },\n  [PropertyTypeEnum.style]: {\n    numColumns: 2,\n  },\n  [PropertyTypeEnum.care]: {\n    numColumns: 1,\n  },\n};\nexport interface OfferPropertySelectorProps {\n  item: PropertyEntity;\n  selectedValue?: string;\n  selectedIds?: string[];\n  multiple?: boolean;\n  isOpen?: boolean;\n  childrenList?: PropertyEntity['childrenList'];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n  onChangeIds?: (propId: string, valueIds: string[]) => void;\n}\nexport const OfferPropertySelector = ({\n  item,\n  selectedIds,\n  onSelect,\n  isOpen,\n  multiple,\n  onChangeIds,\n}: OfferPropertySelectorProps) => {\n  const state = useOffersSelector();\n  const [_isOpen, setIsOpen] = useState(isOpen ?? false);\n\n  const childrenList = useMemo(() => {\n    if (item.childrenList?.length) {\n      return item.childrenList;\n    }\n    const _propId = item?._id;\n\n    const _valuesList: PropertyValueEntity[] = [];\n\n    const _valuesIds = state.propertiesKeysMap?.[_propId] ?? [];\n\n    for (const valueId of _valuesIds) {\n      const value = state.propertiesDataMap?.[valueId];\n      if (value) {\n        _valuesList.push(value);\n      }\n    }\n    return _valuesList;\n  }, [item?._id, item.childrenList, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  useEffect(() => {\n    if (childrenList?.length) {\n      setIsOpen(true);\n    }\n  }, [childrenList?.length]);\n\n  const configs = item.cmsConfigs?.type ? PropertyItemStylesByCmsKey?.[item.cmsConfigs?.type] : undefined;\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} fillWidth>\n      <ButtonIcon\n        gap={8}\n        fxDirection={'row'}\n        padding={'6px 0'}\n        justifyContent={'space-between'}\n        alignItems={'center'}\n        onClick={() => {\n          setIsOpen(p => !p);\n        }}\n      >\n        <Text $weight={500} $padding={'0 8px'}>\n          {item.label}\n        </Text>\n\n        <SvgIcon size={'28px'} icon={_isOpen ? 'SmallArrowDown' : 'SmallArrowLeft'} />\n      </ButtonIcon>\n\n      {_isOpen && (\n        <ExpandContainer padding={'8px 0'}>\n          {item.cmsConfigs?.type && (\n            <FlexBox gap={6} padding={'6px'} justifyContent={'center'} alignItems={'center'}>\n              <Text $size={11} $weight={400}>\n                {t('Cms type:')} {`\"${item.cmsConfigs?.type}\"`}\n              </Text>\n            </FlexBox>\n          )}\n\n          <TagButtonsFilter\n            numColumns={configs?.numColumns}\n            name={item._id}\n            multiple={multiple}\n            value={selectedIds}\n            options={childrenList}\n            onSelectValue={info => {\n              onSelect && onSelect(info.name, info.value);\n            }}\n            onChange={values => {\n              onChangeIds && onChangeIds(item._id, values);\n            }}\n          />\n        </ExpandContainer>\n      )}\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n\n  //padding-bottom: 8px;\n\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst ExpandContainer = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\n// const RenderPropertyValue = ({\n//   item,\n//   isSelected,\n//   onSelect,\n// }: {\n//   item: PropertyValueEntity;\n//   isSelected?: boolean;\n//   onSelect: (id: string) => void;\n// }) => {\n//   return (\n//     <ValueTag\n//       variant={isSelected ? 'filledMiddle' : 'outlinedMiddle'}\n//       padding={'6px 8px'}\n//       fontWeight={500}\n//       onClick={() => {\n//         onSelect && onSelect(item._id);\n//       }}\n//     >\n//       {item.label}\n//     </ValueTag>\n//   );\n// };\n\n// const ValueTag = styled(ButtonIcon)`\n//   width: 100%;\n//   max-width: 100%;\n//   min-width: 50px;\n// `;\n\nexport default OfferPropertySelector;\n","import ButtonIcon from './ButtonIcon';\nimport { Text } from './Text';\nimport styled from 'styled-components';\nimport FlexBox from './FlexBox';\nimport * as React from 'react';\nimport SvgIcon from './SvgIcon';\n\nexport interface ImageSmallPreviewProps {\n  src: string;\n  title?: string;\n  type?: string;\n  onDeletePress?: () => void;\n  onEditPress?: () => void;\n  onAddNewPress?: () => void;\n  disabled?: boolean;\n\n  maxWidth?: string;\n  maxHeight?: string;\n}\nconst ImagePreviewSmall = ({\n  title,\n  src,\n  onDeletePress,\n  onEditPress,\n  disabled,\n  maxWidth,\n  maxHeight,\n}: ImageSmallPreviewProps) => {\n  return (\n    <ImageSmallPreviewBox\n      className={`ImagePreview_${title}`}\n      fillWidth\n      overflow={'hidden'}\n      alignItems={'center'}\n      justifyContent={'center'}\n      gap={4}\n      height={'115px'}\n      border={'1px solid lightgrey'}\n      borderRadius={'2px'}\n      style={{ position: 'relative' }}\n      disabled={disabled}\n    >\n      {src ? (\n        <img src={src} alt={title} style={{ width: '100%' }} />\n      ) : (\n        <SvgIcon icon={'gallery'} size={'28px'} fill={'lightgrey'} />\n      )}\n\n      <ImagePreviewBottom fillWidth>\n        {title && (\n          <FlexBox padding={'4px'}>\n            <Text $size={12} $weight={500} color={'#fff'}>\n              {title}\n            </Text>\n          </FlexBox>\n        )}\n\n        <ImagePreviewActions\n          className={'top'}\n          fxDirection={'row'}\n          gap={6}\n          style={{ fill: '#fff' }}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n          fillWidth\n        >\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'edit'}\n            iconSize={'28px'}\n            disabled={!onEditPress}\n            onClick={onEditPress}\n          />\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'delete'}\n            iconSize={'28px'}\n            disabled={!onDeletePress}\n            onClick={onDeletePress}\n          />\n        </ImagePreviewActions>\n      </ImagePreviewBottom>\n    </ImageSmallPreviewBox>\n  );\n};\n\nconst ImageSmallPreviewBox = styled(FlexBox)<{ disabled?: boolean; maxWidth?: string; maxHeight?: string }>`\n  min-width: 112px;\n  //width: 90px;\n\n  aspect-ratio: 1/1.35;\n\n  object-position: center;\n  object-fit: contain;\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n\n  &:hover {\n    & .top {\n      min-height: 36px;\n    }\n  }\n`;\n\nconst ImagePreviewActions = styled(FlexBox)`\n  //position: absolute;\n  //top: 0;\n  //left: 0;\n  //z-index: 5;\n\n  height: 0;\n  min-height: 0;\n  padding: 0 6px;\n  overflow: hidden;\n\n  //background-color: rgba(26, 26, 26, 0.2);\n  //backdrop-filter: blur(3px);\n\n  transition: min-height ${p => p.theme.globals.timingFnMain};\n`;\nconst ImagePreviewBottom = styled(FlexBox)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 5;\n\n  background-color: rgba(26, 26, 26, 0.2);\n  backdrop-filter: blur(3px);\n`;\n\nexport default ImagePreviewSmall;\n","import { OfferTypeEnum } from '../../types/offers/offers.types';\nimport { PropertiesGroupEntity, PropertyBaseEntity } from '../../types/offers/properties.types';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport { CustomSelectHandler } from './Inputs/CustomSelect';\nimport FlexBox from './FlexBox';\nimport InputLabel from './Inputs/InputLabel';\nimport { t } from '../../lang';\nimport ButtonsGroup from './ButtonsGroup';\nimport { offerTypeFilterOptions } from '../../data/modalFilterOptions.data';\nimport { Values } from '../../types/utils.types';\nimport TabSelector from './TabSelector';\nimport { Text } from './Text';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport ButtonIcon from './ButtonIcon';\n\nexport type PropertiesFilterData = {\n  type: Values<typeof OfferTypeEnum>;\n  isSelectable?: boolean;\n};\nexport const PropertiesGroupSelector = ({\n  selected,\n  onSelect,\n  filterValue,\n  hasFilter = false,\n  defaultValue,\n}: {\n  selected?: PropertiesGroupEntity;\n  defaultValue?: PropertiesGroupEntity;\n  onSelect?: (opt: PropertiesGroupEntity) => void;\n  filterValue?: Partial<PropertiesFilterData>;\n  hasFilter?: boolean;\n}) => {\n  // const service = useAppServiceProvider().get(AppModuleName.offers);\n\n  const state = useOffersSelector();\n  const [filter, setFilter] = useState<PropertiesFilterData>({\n    type: OfferTypeEnum.GOODS,\n    isSelectable: true,\n    ...filterValue,\n  });\n  const [currentTemplate, setCurrentTemplate] = useState<PropertiesGroupEntity | undefined>(defaultValue);\n  const loaders = useLoaders<'refreshTree' | 'create' | 'update'>();\n\n  const service = useAppServiceProvider().get(ServiceName.offers);\n\n  const rootList = useMemo(() => {\n    if (state.properties?.length) {\n      return state.properties.filter(item => !item.parent);\n    }\n\n    const _ids = state.propertiesByTypeKeysMap[filter.type];\n    const _roots: PropertyBaseEntity[] = [];\n\n    for (const _id of _ids) {\n      const item = state.propertiesDataMap?.[_id];\n      !item?.parent && item && _roots.push(item);\n    }\n\n    return _roots;\n  }, [filter.type, state.properties, state.propertiesByTypeKeysMap, state.propertiesDataMap]);\n\n  const handleSelect: CustomSelectHandler<PropertiesGroupEntity> = option => {\n    if (onSelect && option) {\n      onSelect(option);\n    } else {\n      setCurrentTemplate(option);\n    }\n  };\n\n  useEffect(() => {\n    if (selected) {\n      setCurrentTemplate(selected);\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    if (rootList?.length && !selected) {\n      const found = rootList.find(item => item._id === currentTemplate?._id);\n      if (onSelect && found) {\n        onSelect(found);\n      } else {\n        setCurrentTemplate(found);\n      }\n    }\n  }, [currentTemplate?._id, onSelect, rootList, selected]);\n\n  return (\n    <FlexBox gap={8}>\n      <FlexBox\n        padding={'4px 8px'}\n        fxDirection={'row'}\n        gap={12}\n        alignItems={'center'}\n        fillWidth\n        justifyContent={'space-between'}\n      >\n        <ButtonIcon\n          variant={'text'}\n          sizeType={'extraSmall'}\n          isLoading={loaders.isLoading.refreshTree}\n          onClick={() => {\n            service.getAllProperties({\n              params: { dataView: 'tree', depth: 3 },\n              onLoading: loaders.onLoading('refreshTree'),\n            });\n          }}\n        >\n          {t('Refresh')}\n        </ButtonIcon>\n\n        <ButtonIcon variant={'text'} sizeType={'extraSmall'}>\n          {t('Add')}\n        </ButtonIcon>\n      </FlexBox>\n\n      {hasFilter && (\n        <InputLabel label={t('Select type')}>\n          <ButtonsGroup\n            options={offerTypeFilterOptions}\n            value={filter.type}\n            onSelect={({ value }) => {\n              setFilter(prev => {\n                return { ...prev, type: value };\n              });\n            }}\n          />\n        </InputLabel>\n      )}\n\n      {defaultValue?._id ? (\n        <FlexBox padding={'8px'} gap={8} fxDirection={'row'} alignItems={'center'} justifyContent={'space-between'}>\n          <Text $align={'center'} $size={15} $weight={500}>\n            {t('Current')}\n          </Text>\n          <Text $align={'center'} $size={15} $weight={600}>\n            {selected?.label}\n          </Text>\n        </FlexBox>\n      ) : (\n        <InputLabel label={t('Select properties group')}>\n          <TabSelector\n            options={rootList}\n            onOptSelect={handleSelect}\n            defaultFilterValue={selected?._id || currentTemplate?._id}\n          />\n        </InputLabel>\n      )}\n    </FlexBox>\n  );\n};\n","import { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { IBase, Values } from '../types/utils.types';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images?.[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    // top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    top: { name: t('Visibility'), getData: d => (d.visible ? 'visible' : 'hidden') },\n    width: '120px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => (d.price?.out ? toPrice(d.price?.out) : '--.--') },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => (d.price?.in ? toPrice(d.price?.in) : '--.--') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', getData: rd => rd.brand?.label },\n    bottom: { name: 'Виробник', getData: rd => rd.brand?.manufacturer },\n    width: '180px',\n    action: 'doubleDataWithAvatar',\n  },\n  // {\n  //   top: { name: 'Опис', path: 'description' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.user?.email ?? '---' },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.user?.email ?? '---' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  datesColumn(),\n];\n\nexport function deletedStatusColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: t('Deleted status'), align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\nexport function datesColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\n\nconst OfferSortPaths = [\n  'label',\n  'barCode',\n  'sku',\n  'approved',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n  'brand.label',\n  'warehouse.label',\n  'warehouse.code',\n  'price.out',\n  'variations.label',\n  'variations.barCode',\n  'variations.sku',\n  'variations.price.out',\n  'variations.deletedAt',\n  'variations.updatedAt',\n  'variations.createdAt',\n] as const;\n\nexport type OfferSortParam = TableSortParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSortParams: OfferSortParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'approved', label: t('Status') },\n  { dataPath: 'price.out', label: t('Price') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n\n  { dataPath: 'brand.label', label: t('Brand label') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n];\n\nexport type OfferSearchParam = TableSearchParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSearchParams: OfferSearchParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'brand.label', label: t('Brand label') },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { IOrderTempSlot, OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\nimport { Values } from '../types/utils.types';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nconst extraKeys: ('cashback' | 'bonus' | 'discount')[] = ['cashback', 'bonus', 'discount'];\nfunction getTempOrderSlotColumns(): CellTittleProps<OrderSlotEntity>[] {\n  return extraKeys.map(key => {\n    return {\n      top: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.amount) },\n      bottom: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.percentage) },\n      action: 'valueByPath',\n      width: '90px',\n    };\n  });\n}\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    top: { name: t('Offer label'), getData: rd => rd.offer?.label },\n    bottom: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'valueByPath',\n    width: '210px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  ...getTempOrderSlotColumns(),\n  {\n    top: { name: t('Offer sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Offer bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  createdDateColumn,\n];\n\nexport const tempOrderSlotTableColumns: CellTittleProps<IOrderTempSlot>[] =\n  orderSlotsTableColumns as CellTittleProps<IOrderTempSlot>[];\n\nconst OrdersAllowedPaths = [\n  'manager.email',\n  'manager.code',\n\n  'managers.email',\n  'managers.code',\n\n  'customer.email',\n  'customer.phone',\n  'customer.name.first',\n  'customer.name.second',\n  'customer.reference',\n\n  'receiver.email',\n  'receiver.phone',\n  'receiver.name.first',\n  'receiver.name.second',\n  'receiver.reference',\n\n  'barCode',\n  'reference.internal',\n  'reference.external',\n\n  'group.reference.internal',\n  'group.reference.external',\n\n  'status',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n\n  'warehouse.label',\n  'warehouse.code',\n\n  // 'variations.label',\n  // 'variations.barCode',\n  // 'variations.sku',\n  // 'variations.price.out',\n  // 'variations.deletedAt',\n  // 'variations.updatedAt',\n  // 'variations.createdAt',\n] as const;\n\nexport type OrdersSortParam = TableSortParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSortParams: OrdersSortParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n\n  { dataPath: 'group.reference.internal', label: t('Reference / Internal') + ` / ${t('Group').toLowerCase()}` },\n  { dataPath: 'group.reference.external', label: t('Reference / External') + ` / ${t('Group').toLowerCase()}` },\n\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'status', label: t('Status') },\n\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n\n  { dataPath: 'customer.email', label: t('Customer email') },\n  { dataPath: 'customer.phone', label: t('Customer phone') },\n  { dataPath: 'customer.name.first', label: t('Customer first name') },\n  { dataPath: 'customer.name.second', label: t('Customer second name') },\n  { dataPath: 'customer.reference', label: t('Customer reference') },\n\n  { dataPath: 'receiver.email', label: t('Customer email') },\n  { dataPath: 'receiver.phone', label: t('Customer phone') },\n  { dataPath: 'receiver.name.first', label: t('Customer first name') },\n  { dataPath: 'receiver.name.second', label: t('Customer second name') },\n  { dataPath: 'receiver.reference', label: t('Customer reference') },\n\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n];\n\nexport type OrdersSearchParam = TableSearchParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSearchParams: OrdersSearchParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n];\n","import { IBase } from '../../redux/app-redux.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n}\n"],"names":["_ref","onChangeIds","onChange","offer","treeData","useDirectorySelector","ApiDirType","directory","_useState","useState","_useState2","_slicedToArray","selectedMap","setSelectedMap","init","useMemo","_offer$categories","categories","_next","forEach","category","_category$parent","parentId","parent","_id","catId","concat","_toConsumableArray","Object","entries","_ref2","_next$key","_ref3","key","val","length","Array","from","Set","useEffect","toggleSelected","useCallback","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ev","wrap","_context","prev","next","map","newMap","checked","_objectSpread","_defineProperty","ids","pathIds","registerId","index","_newMap$registerId","slice","_prev$ev$_id","removeId","keys","filter","_map$key","stop","_x","apply","arguments","renderCategories","isSelected","id","_selectedMap$id","_jsx","RootBox","children","RenderCategory","item","depth","isChecked","FlexBox","minWidth","styled","_templateObject","_taggedTemplateLiteral","p","theme","sideBarBorderColor","CategoriesList","FlexUl","_templateObject2","CategoryListItem","FlexLi","_templateObject3","CategoryItem","_templateObject4","_ref5","_item$childrenList","_item$_id","_item$childrenList2","_item$childrenList3","_ref5$depth","_useState3","childrenList","_useState4","isOpen","setIsOpen","itemId","nextPathIds","_jsxs","padding","gap","fxDirection","alignItems","ButtonIcon","variant","iconSize","disabled","icon","onClick","FlexLabel","flex","CheckBox","size","Text","$size","$weight","label","child","FormContentGrid","AddImageBox","globals","timingFnMui","accentColor","base","light","Image","_current$label","title","_ref$fillHeight","fillHeight","onSubmit","onClose","defaultState","props","type","_objectWithoutProperties","_excluded","formAddImageSetTabs","current","setCurrent","formData","setFormData","inputRef","useRef","ModalForm","width","fillWidth","overflow","value","src","SvgIcon","name","className","InputLabel","replace","toUpperCase","required","InputText","ref","e","_e$target","target","placeholder","autoFocus","ButtonsGroup","options","currentOption","onSelect","info","option","ImagesSetBox","SlotOrderChanger","onMoveUpPress","onMoveDownPress","currentOrder","canMoveDown","canMoveUp","style","justifyContent","$align","onChangeState","renderHeader","initialData","_ref$canEditOrder","canEditOrder","FooterComponent","contentContainerStyle","hideLabel","_ref$onlyPreviews","onlyPreviews","modalS","useModalService","handleChangeOrder","currentSetOrder","increment","newOrder","set","order","handleAddImageToSet","setIndex","uri","updatedData","handleRemoveImageFromSet","setId","ImageSetSrcType","window","confirm","img_preview","handleAddNewSet","open","ModalChildren","AddImageSetModal","modalChildrenProps","data","handleAddImageSet","renderImageSets","_dataForRender","dataForRender","sort","a","b","_a$order","_b$order","slot","slotIndex","_dataForRender2","_slot$order","_slot$order2","renderPreviews","el","imgIndex","_el$label","ImagePreviewSmall","onEditPress","onDeletePress","maxWidth","isNumber","height","t","flexWrap","onAddNewImageSetPress","PropertyItemStylesByCmsKey","_PropertyItemStylesBy","PropertyTypeEnum","numColumns","PropertyBox","ExpandContainer","_item$cmsConfigs","_item$cmsConfigs2","_item$cmsConfigs3","_item$cmsConfigs4","selectedIds","multiple","state","useOffersSelector","_isOpen","_state$propertiesKeys","_state$propertiesKeys2","_step","_propId","_valuesList","_valuesIds","propertiesKeysMap","_iterator","_createForOfIteratorHelper","s","n","done","_state$propertiesData","valueId","propertiesDataMap","push","err","f","configs","cmsConfigs","undefined","$padding","TagButtonsFilter","onSelectValue","values","ImageSmallPreviewBox","ImagePreviewActions","timingFnMain","ImagePreviewBottom","maxHeight","border","borderRadius","position","alt","fill","color","PropertiesGroupSelector","selected","filterValue","_ref$hasFilter","hasFilter","defaultValue","OfferTypeEnum","isSelectable","setFilter","currentTemplate","setCurrentTemplate","loaders","useLoaders","service","useAppServiceProvider","get","ServiceName","rootList","_state$properties","properties","_ids","propertiesByTypeKeysMap","_roots","found","find","sizeType","isLoading","refreshTree","getAllProperties","params","dataView","onLoading","offerTypeFilterOptions","TabSelector","onOptSelect","defaultFilterValue","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","enumToFilterOptions","offersTableColumns","top","getData","rd","getImgPreview","pr","_pr$images","_pr$images$","images","action","sku","bottom","barCode","path","d","approved","visible","align","_d$price","_d$price2","price","out","toPrice","_d$price3","_d$price4","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$brand","brand","_rd$brand2","manufacturer","_rd$editor$user$email","_rd$editor","_rd$editor$user","editor","user","email","_rd$author$user$email","_rd$author","_rd$author$user","author","offersSortParams","dataPath","offersSearchParams","createdDateColumn","ordersTableColumns","OrderStatusEnum","status","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slots","slotsCount","_rd$reference","reference","internal","_rd$reference2","external","_rd$group","_rd$group$reference","group","_rd$group2","strategy","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","customer","first","second","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","extraKeys","orderSlotsTableColumns","_rd$offer","_rd$variation","quantity","getBasePriceColumns","_rd$key","amount","_rd$key2","percentage","_rd$offer2","_rd$variation2","_rd$offer3","_rd$variation3","tempOrderSlotTableColumns","ordersSortParams","toLowerCase","ordersSearchParams"],"sourceRoot":""}