{"version":3,"file":"static/js/986.55825fba.chunk.js","mappings":"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","sources":["hooks/useProductsFilterSelectors.hook.ts","hooks/useProductsActionsCreator.hook.ts","components/AppPages/offersManagement/PageProducts.tsx","components/AppPages/pagesStyles.tsx","components/Forms/FormProduct/FormProductStaticProperties.tsx","components/Forms/FormProduct/components/DimensionsInputs.tsx","components/Forms/FormProduct/components/MeasuremenInputs.tsx","components/Forms/FormProduct/FormCreateProduct.tsx","data/products.data.ts","data/transactions.data.ts"],"sourcesContent":["import { FilterSelectorType } from 'components/Filter/AppFilter';\nimport { IProduct } from '../redux/products/products.types';\n\nconst useStorageFilterSelectors = (): FilterSelectorType<keyof IProduct>[] => {\n  return [\n    // {\n    //   label: 'Рахунок OUT',\n    //   data: dirCounts.directory,\n    //   selectorName: 'countOut',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Суб-рахунок OUT',\n    //   data: dirCounts.directory,\n    //   selectorName: 'subCountOut',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Рахунок IN',\n    //   data: dirCounts.directory,\n    //   selectorName: 'countIn',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Суб-рахунок IN',\n    //   data: dirCounts.directory,\n    //   selectorName: 'subCountIn',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Категорії',\n    //   data: dirCategories.directory,\n    //   selectorName: 'category',\n    //   dirType: ApiDirType.CATEGORIES_TR,\n    // },\n    // {\n    //   label: 'Під-категорії',\n    //   data: dirCategories.directory,\n    //   selectorName: 'subCategory',\n    //   dirType: ApiDirType.CATEGORIES_TR,\n    // },\n  ];\n};\nexport default useStorageFilterSelectors;\n","import { useModalProvider } from '../components/ModalProvider/ModalProvider';\nimport { useCallback } from 'react';\nimport { TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { IProduct, ProductTypeEnum } from '../redux/products/products.types';\nimport FormCreateProduct from '../components/Forms/FormProduct/FormCreateProduct';\nimport { productsFilterOptions } from '../data/modalFilterOptions.data';\nimport { useNavigate } from 'react-router-dom';\nimport { ServiceName, useAppServiceProvider } from './useAppServices.hook';\nimport { ToastService } from '../services';\nimport { createProductFormData } from '../utils/dataTransform';\nimport { createApiCall, ProductsApi } from '../api';\n\nexport type ProductsActionsCreator = TableActionCreator<IProduct>;\n\nconst useProductsActionsCreator = (): ProductsActionsCreator => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const navigate = useNavigate();\n  // const state = useProductsSelector();\n  const modals = useModalProvider();\n\n  return useCallback(\n    ctx => [\n      {\n        name: 'reviewProduct',\n        title: 'Перегляд продукту',\n        icon: 'openInNew',\n        disabled: !ctx.selectedRow?._id,\n        type: 'onlyIcon',\n        onClick: () => {\n          ctx.selectedRow?._id && navigate(ctx.selectedRow?._id);\n        },\n      },\n      {\n        name: 'editProduct',\n        title: 'Змінити',\n        icon: 'edit',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: !ctx?.selectedRow?._id,\n        onClick: async () => {\n          const res = await createApiCall({ data: ctx?.selectedRow?._id }, ProductsApi.getFullInfoById, ProductsApi);\n          if (!res?.data.data) {\n            return;\n          }\n          console.log(res?.data.data);\n          const formData = createProductFormData(res?.data.data);\n\n          const modal = modals.handleOpenModal({\n            ModalChildren: FormCreateProduct,\n            modalChildrenProps: {\n              title: 'Змінити',\n              _id: ctx?.selectedRow?._id,\n              filterOptions: productsFilterOptions,\n              defaultState: formData,\n              onSubmit: (data, o) => {\n                service.updateById({\n                  data,\n                  onSuccess(d) {\n                    o?.closeAfterSave && modal?.onClose();\n                    ToastService.success(`Product updated`);\n                  },\n                  onError: e => {\n                    console.error('Product apdate action', e);\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'copyProduct',\n        title: 'Копіювати',\n        icon: 'copy',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: !ctx?.selectedRow?._id,\n        onClick: async () => {\n          const res = await createApiCall({ data: ctx?.selectedRow?._id }, ProductsApi.getFullInfoById, ProductsApi);\n          if (!res?.data.data) {\n            return;\n          }\n          const formData = createProductFormData(res?.data.data);\n\n          const modal = modals.handleOpenModal({\n            ModalChildren: FormCreateProduct,\n            modalChildrenProps: {\n              title: 'Змінити',\n              filterOptions: productsFilterOptions,\n              defaultState: formData,\n\n              onSubmit: (data, o) => {\n                service.create({\n                  data,\n                  onSuccess(d) {\n                    o?.closeAfterSave && modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'archiveProduct',\n        title: 'Архів',\n        icon: 'archive',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: true,\n      },\n      { separator: true },\n      {\n        name: 'createProduct',\n        title: 'Новий',\n        icon: 'plus',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        onClick: () => {\n          const modal = modals.handleOpenModal({\n            ModalChildren: FormCreateProduct,\n            modalChildrenProps: {\n              title: 'Створити',\n              filterOptions: productsFilterOptions,\n              defaultState: { type: ProductTypeEnum.GOODS },\n              onSubmit: (data, o) => {\n                service.create({\n                  data,\n                  onSuccess(d) {\n                    (o?.closeAfterSave || o?.close) && modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n    ],\n\n    [modals, navigate, service]\n  );\n};\n\nexport default useProductsActionsCreator;\n\n// const currentProduct=useProductsSelector().currentProduct\n\n// const onSubmitCreateWrapper = useCallback(\n//   (onCloseModal: () => void) => {\n//     return (data: ITransactionReqData, options: AfterFormSubmitOptions,) => {\n//       service.create({\n//         data,\n//         onSuccess(d) {\n//           toast.success(`Сторено транзакцію на суму: ${d.amount}`);\n//           options?.close && onCloseModal();\n//         },\n//       });\n//     };\n//   },\n//   [service]\n// );\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { ISortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport { IProduct } from '../../../redux/products/products.types';\nimport useStorageServiceHook from '../../../hooks/useProductsService.hook';\nimport useProductsFilterSelectorsHook from '../../../hooks/useProductsFilterSelectors.hook';\nimport useProductsActionsCreator from '../../../hooks/useProductsActionsCreator.hook';\nimport { BaseAppPageProps } from '../index';\nimport { productsColumns } from '../../../data/products.data';\nimport { transactionsSearchParams } from '../../../data/transactions.data';\n\ninterface Props extends BaseAppPageProps {}\n\nconst PageProducts: React.FC<any> = (props: Props) => {\n  const { getAll } = useStorageServiceHook();\n  const state = useProductsSelector();\n  const filterSelectors = useProductsFilterSelectorsHook();\n  const actionsCreator = useProductsActionsCreator();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IProduct> => ({\n      tableData: state.products,\n      tableTitles: productsColumns,\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: false,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, filterSelectors, getAll, sortParams, state.products]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    if (!sortParams && !filterParams) {\n      if (state.products.length === 0) {\n        getAll({\n          data: { refresh: true },\n          onLoading: setIsLoading,\n        });\n      }\n    }\n  }, [filterParams, getAll, sortParams, state.products.length]);\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TableList {...tableConfig} isLoading={isLoading} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageProducts;\n\nexport const useProductsTableSettings = () => {\n  const service = useStorageServiceHook();\n  const state = useProductsSelector();\n  const { getAll } = service;\n  const filterSelectors = useProductsFilterSelectorsHook();\n  const actionsCreator = useProductsActionsCreator();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IProduct> => ({\n      tableData: state.products,\n      tableTitles: productsColumns,\n      tableSortParams: transactionsSearchParams.filter(el => el.sort),\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: false,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, filterSelectors, getAll, sortParams, state.products]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    if (!sortParams && !filterParams) {\n      if (state.products.length === 0) {\n        getAll({\n          data: { refresh: true },\n          onLoading: setIsLoading,\n        });\n      }\n    }\n  }, [filterParams, getAll, isLoading, sortParams, state.products.length, tableConfig]);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { IPropertyValue, IVariationTemplate } from '../../../redux/products/properties.types';\nimport { IFormDataValueWithUUID } from '../../../redux/global.types';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { Text } from '../../atoms/Text';\n\nexport interface FormProductStaticPropertiesProps {\n  template?: IVariationTemplate;\n  formData?: IFormDataValueWithUUID[];\n  onSelect?: (id: string, option?: IPropertyValue) => void;\n  onChange?: (ids: string[]) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n}\nconst FormProductStaticProperties: React.FC<FormProductStaticPropertiesProps> = ({\n  children,\n  onSelect,\n  onChange,\n  template,\n  defaultData,\n}) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (defaultData) {\n      setSelectedIds(defaultData);\n    }\n  }, [defaultData]);\n\n  const handleSelect = useCallback(\n    (id: string, option?: IPropertyValue) => {\n      setSelectedIds(p => {\n        const newData = p.includes(id) ? p.filter(el => el !== id) : [...p, id];\n        onSelect && onSelect(id);\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const currentTemplateData = useMemo(() => {\n    return template?.childrenList?.filter(props => !props.isSelectable);\n  }, [template?.childrenList]);\n\n  const renderProperties = useMemo(() => {\n    return currentTemplateData?.map(item => {\n      return (\n        <PropertyBox key={`prop-${item?._id}`} gap={8} fillWidth padding={'8px 0'}>\n          <Text $weight={500} $size={12} style={{ marginInline: 8 }}>\n            {item?.label}\n          </Text>\n\n          <FlexBox fillWidth gap={8} fxDirection={'row'} flexWrap={'wrap'}>\n            {item?.childrenList?.map(value => (\n              <ButtonIcon\n                key={`prop-value-${value?._id}`}\n                variant={selectedIds.includes(value?._id) ? 'filledSmall' : 'outlinedSmall'}\n                onClick={() => {\n                  handleSelect(value?._id);\n                }}\n              >\n                {value?.label}\n              </ButtonIcon>\n            ))}\n          </FlexBox>\n        </PropertyBox>\n      );\n    });\n  }, [currentTemplateData, handleSelect, selectedIds]);\n\n  return (\n    <Container fillWidth>\n      <FlexBox padding={'8px 8px 0'}>\n        <Text $size={14} $weight={600}>\n          {'Доступні харктеристики'}\n        </Text>\n      </FlexBox>\n\n      {children && (\n        <FlexBox fillWidth padding={'6px 0'}>\n          {children}\n        </FlexBox>\n      )}\n\n      {renderProperties}\n    </Container>\n  );\n};\nconst Container = styled(FlexBox)`\n  margin: 8px 0 0;\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductStaticProperties;\n","import { IProductDimensions } from '../../../../redux/products/products.types';\nimport { t } from '../../../../lang';\nimport * as React from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport styled from 'styled-components';\nimport { UseFormReturn } from 'react-hook-form/dist/types';\n\nexport interface DimensionsFormData {\n  dimensions?: IProductDimensions;\n}\n\nexport const dimensionsInputsProps: {\n  label?: string;\n  placeholder?: string;\n  name: keyof IProductDimensions;\n}[] = [\n  { name: 'height', label: t('Height'), placeholder: t('Sm') },\n  { name: 'width', label: t('Width'), placeholder: t('Sm') },\n  { name: 'length', label: t('Length'), placeholder: t('Sm') },\n  { name: 'weight', label: t('Weight'), placeholder: t('Kg') },\n];\n\nconst DimensionsInputs = ({ form }: { form: UseFormReturn<DimensionsFormData> }) => {\n  return (\n    <Box fillWidth>\n      {dimensionsInputsProps.map(input => {\n        return (\n          <InputLabel key={input.name} label={input.label}>\n            <InputText\n              placeholder={input.placeholder}\n              min={1}\n              type={'number'}\n              {...form.register(`dimensions.${input.name}`, {\n                valueAsNumber: true,\n                min: 1,\n              })}\n            />\n          </InputLabel>\n        );\n      })}\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 8px;\n\n  @media screen and (min-width: 480px) and (max-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport default DimensionsInputs;\n","import { Path } from 'react-hook-form';\nimport { IProductMeasurement, MeasurementUnit } from '../../../../redux/products/products.types';\nimport { FilterOption } from '../../../ModalForm/ModalFilter';\nimport { enumToFilterOptions } from '../../../../utils/fabrics';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport FlexBox from '../../../atoms/FlexBox';\nimport * as React from 'react';\nimport { UseAppFormReturn } from '../../../../hooks/useAppForm.hook';\nimport { t } from '../../../../lang';\n\nexport interface MeasurementInputsFormData {\n  measurement?: IProductMeasurement;\n}\nconst productsMeasurementUnitOptions = enumToFilterOptions(MeasurementUnit);\n\nconst measurementInputs: {\n  label?: string;\n  placeholder?: string;\n  name: Path<MeasurementInputsFormData>;\n  type?: HTMLInputElement['type'];\n  options?: FilterOption[];\n}[] = [\n  { name: 'measurement.unit', label: t('unit'), placeholder: t('unit'), options: productsMeasurementUnitOptions },\n  { name: 'measurement.min', label: t('min'), placeholder: t('min'), type: 'number' },\n  { name: 'measurement.max', label: t('max'), placeholder: t('max'), type: 'number' },\n  // { name: 'measurement.step', label: t('step'), placeholder: t('step'), type: 'number' },\n];\n\nconst MeasurementInputs = ({ appForm }: { appForm: UseAppFormReturn<MeasurementInputsFormData> }) => {\n  return (\n    <FlexBox fillWidth style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr', columnGap: 8 }}>\n      {measurementInputs.map(input => {\n        return input.options ? (\n          <CustomSelect\n            key={input.name}\n            {...appForm.registerSelect(input?.name, {\n              options: input?.options,\n              label: input?.label,\n              placeholder: input?.label,\n              dropDownIsAbsolute: true,\n              onlyValue: true,\n            })}\n          />\n        ) : (\n          <InputLabel key={input.name} label={input.label} error={appForm?.formState?.errors[input.name as never]}>\n            <InputText\n              placeholder={input.placeholder}\n              min={input?.type === 'number' ? 1 : undefined}\n              type={input?.type}\n              {...appForm.register(input.name, {\n                valueAsNumber: input?.type === 'number',\n                min: input?.type === 'number' ? 1 : undefined,\n              })}\n            />\n          </InputLabel>\n        );\n      })}\n    </FlexBox>\n  );\n};\n\nexport default MeasurementInputs;\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport ModalForm, { ModalFormProps } from '../../ModalForm';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport TextareaPrimary from '../../atoms/Inputs/TextareaPrimary';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport { useAppSelector } from '../../../redux/store.store';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport { useAppForm } from '../../../hooks';\nimport {\n  IProductFormData,\n  IProductReqData,\n  ProductFilterOpt,\n  ProductStatusEnum,\n} from '../../../redux/products/products.types';\nimport { createDataForReq } from '../../../utils/dataTransform';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../components/FormAfterSubmitOptions';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { IVariationTemplate } from '../../../redux/products/properties.types';\nimport FormProductStaticProperties from './FormProductStaticProperties';\nimport FormProductImagesComponent from './FormProductImagesComponent';\nimport FormProductCategories from './FormProductCategories';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport DimensionsInputs from './components/DimensionsInputs';\nimport MeasurementInputs from './components/MeasuremenInputs';\n\nexport interface FormCreateProductProps extends Omit<ModalFormProps<any, any, IProductFormData>, 'onSubmit'> {\n  copy?: boolean;\n  id?: string;\n  edit?: boolean;\n  _id?: string;\n  onSubmit?: AppSubmitHandler<IProductReqData>;\n  filterOptions?: ProductFilterOpt[];\n  defaultState?: IProductFormData;\n  addInputs?: boolean;\n}\n\nconst productsStatusOption = enumToFilterOptions(ProductStatusEnum);\n\nconst FormCreateProduct: React.FC<FormCreateProductProps> = ({\n  edit,\n  _id,\n  onSubmit,\n  copy,\n  defaultState,\n  addInputs,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const {\n    directories: { directories },\n    products: { properties },\n  } = useAppSelector();\n  const form = useAppForm<IProductFormData>({\n    defaultValues: defaultState,\n  });\n  const {\n    formState: { errors },\n    formValues,\n    register,\n    setValue,\n    registerSelect,\n    handleSubmit,\n  } = form;\n\n  const categories = useMemo(() => {\n    return directories[ApiDirType.CATEGORIES_PROD].filter(el => el.type === formValues.type);\n  }, [directories, formValues.type]);\n\n  const currentTemplate = useMemo((): IVariationTemplate | undefined => {\n    return properties.find(t => t._id === formValues?.template?._id);\n  }, [formValues?.template?._id, properties]);\n\n  // TODO eventDate: formatDateForInputValue(defaultState?.eventDate)\n  function onValidSubmit(submitData: IProductFormData) {\n    const productForSubmit = createDataForReq(submitData, { ignorePaths: ['measurement'] });\n\n    onSubmit &&\n      onSubmit(\n        { _id, data: productForSubmit },\n        {\n          ...submitOptions.state,\n        }\n      );\n  }\n\n  return (\n    <ModalForm\n      {...props}\n      onSubmit={handleSubmit(onValidSubmit, data => console.log(data))}\n      onOptSelect={({ value }) => value && setValue('type', value)}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <FlexBox className={'inputs'} flex={'1'} fillWidth maxHeight={'100%'} padding={'0 8px 8px'} overflow={'auto'}>\n        <InputLabel label={t('label')} error={errors.label} required>\n          <InputText placeholder={t('label')} {...register('label')} required autoFocus />\n        </InputLabel>\n\n        <FlexBox fxDirection={'row'} gap={6} fillWidth>\n          <InputLabel label={t('sku')} error={errors.sku}>\n            <InputText placeholder={t('sku')} {...register('sku')} />\n          </InputLabel>\n\n          <InputLabel label={'Штрих-код'} error={errors.barCode}>\n            <InputText placeholder={'Штрих-код'} {...register('barCode')} />\n          </InputLabel>\n        </FlexBox>\n\n        <FormProductCategories\n          options={categories}\n          defaultData={formValues?.categories}\n          onChange={data => {\n            setValue('categories', data);\n          }}\n        />\n\n        <CustomSelect\n          {...registerSelect('brand', {\n            options: directories[ApiDirType.BRANDS],\n            label: t('brand'),\n            placeholder: t('selectBrand'),\n            multipleMode: true,\n          })}\n        />\n\n        <CustomSelect\n          {...registerSelect('approved', {\n            options: productsStatusOption,\n            label: t('status'),\n            placeholder: t('status'),\n          })}\n        />\n\n        <MeasurementInputs appForm={form} />\n\n        <DimensionsInputs form={form} />\n\n        <InputLabel label={t('description')} error={errors.description}>\n          <TextareaPrimary placeholder={t('description')} {...register('description')} />\n        </InputLabel>\n\n        <FormProductStaticProperties\n          template={currentTemplate}\n          defaultData={formValues?.properties}\n          onChange={ids => {\n            setValue('properties', ids);\n          }}\n        >\n          <CustomSelect\n            {...registerSelect('template', {\n              options: properties,\n              dropDownIsAbsolute: true,\n              label: t('variationsTemplate'),\n              placeholder: t('selectVariationsTemplate'),\n            })}\n          />\n        </FormProductStaticProperties>\n\n        <FormProductImagesComponent\n          initialData={formValues?.images}\n          onChangeState={data => {\n            setValue('images', data);\n          }}\n        />\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\n// const GridWrapper = styled.div<{ gridTemplateColumns?: string }>`\n//   display: grid;\n//   grid-template-columns: ${({ gridTemplateColumns }) => gridTemplateColumns || '1fr 120px'};\n//   gap: 12px;\n// `;\n\nexport default FormCreateProduct;\n\n// const optionalSelectItem = yup\n//   .object()\n//   .shape({\n//     _id: yup.string(),\n//     label: yup.string(),\n//   })\n//   .nullable()\n//   .optional();\n// const requiredSelectItem = yup\n//   .object()\n//   .shape({\n//     _id: yup.string(),\n//     label: yup.string(),\n//   })\n//   .required();\n//\n// const getValidation = (type: TransactionType) =>\n//   yup.object().shape({\n//     category: requiredSelectItem,\n//   });\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { IProduct, ProductStatusEnum } from '../redux/products/products.types';\nimport { getStatusesByEnum } from './statuses.data';\n\nexport const productStatusesData = getStatusesByEnum(ProductStatusEnum);\n\nexport const productsColumns: CellTittleProps<IProduct>[] = [\n  {\n    top: { name: t('label'), align: 'start', getData: rd => rd?.label },\n    // bottom: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), align: 'start', getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), align: 'start', path: 'type' },\n    bottom: { name: t('status'), align: 'start', getData: d => d.approved as never },\n    width: '100px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      getData: rd => rd.category?.label,\n    },\n    bottom: {\n      name: t('parentCategory'),\n      align: 'start',\n      getData: rd => rd.category?.parent?.label,\n    },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Бренд', align: 'start', path: 'brand.label' },\n    bottom: { name: 'Виробник', align: 'start', path: 'manufacturer.name' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновив', align: 'start', getData: rd => rd?.editor?.email },\n    bottom: { name: 'Автор', align: 'start', getData: rd => rd?.author?.email },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const productsSearchParams: SelectItem[] = [\n  // {\n  //   label: t('type'),\n  //   dataPath: 'type',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('price'),\n  //   dataPath: 'price',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Оновлено',\n  //   dataPath: 'createdAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Створено',\n  //   dataPath: 'updatedAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countIn'),\n  //   dataPath: 'countIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountIn'),\n  //   dataPath: 'subCountIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countOut'),\n  //   dataPath: 'countOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountOut'),\n  //   dataPath: 'subCountOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('category'),\n  //   dataPath: 'category.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCategory'),\n  //   dataPath: 'subCategory.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  //\n  // {\n  //   label: 'Контрагент',\n  //   dataPath: 'contractor.name',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Документ',\n  //   dataPath: 'document',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('project'),\n  //   dataPath: 'project.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  // {\n  //   label: 'Статус',\n  //   dataPath: 'status',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n];\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { ITransaction } from '../redux/transactions/transactions.types';\nimport { t } from '../lang';\nimport { FilterOpt } from '../components/ModalForm/ModalFilter';\nimport { CategoryTypes } from '../redux/directories/directories.types';\n\nexport type TransactionsFilterOpt = FilterOpt<CategoryTypes>;\nexport type DataPath =\n  | 'countIn.label'\n  | 'subCountIn.label'\n  | 'countOut.label'\n  | 'subCountOut.label'\n  | 'category.label'\n  | 'subCategory.label'\n  | 'owner.name'\n  | 'project.name'\n  | 'project.label'\n  | 'contractor.name'\n  | 'contractor.type'\n  | 'meta.author.name'\n  | 'author.name'\n  | 'author.email'\n  | 'meta.editor.name'\n  | 'editor.name'\n  | 'editor.email'\n  | 'meta.auditor.name'\n  | 'auditor.name'\n  | 'auditor.email'\n  | 'eventDate'\n  | 'type'\n  | 'status'\n  | 'amount'\n  | 'currency'\n  | 'activity.label'\n  | 'comment'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'mark.label'\n  | 'invoice.label'\n  | 'invoice.code'\n  | 'invoice.number'\n  | 'payment.label'\n  | 'payment.code'\n  | 'payment.number'\n  | 'order.code';\nexport const transactionsColumnsNew: CellTittleProps<ITransaction, DataPath>[] = [\n  {\n    top: { name: t('date'), align: 'center', path: 'eventDate' },\n    bottom: { name: t('time'), align: 'center' },\n    width: '90px',\n    action: 'dateSimple',\n  },\n  {\n    top: { name: t('type'), align: 'start', path: 'type' },\n    bottom: { name: t('status'), align: 'start', path: 'status' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('amount'), align: 'end', path: 'amount' },\n    bottom: { name: 'Валюта', align: 'end', path: 'currency' },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('countIn'), align: 'start', path: 'countIn.label' },\n    bottom: {\n      name: t('subCountIn'),\n      align: 'start',\n      path: 'subCountIn.label',\n    },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('countOut'),\n      align: 'start',\n      path: 'countOut.label',\n    },\n    bottom: {\n      name: t('subCountOut'),\n      align: 'start',\n      path: 'subCountOut.label',\n    },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      path: 'category.label',\n    },\n    bottom: {\n      name: t('subCategory'),\n      align: 'start',\n      path: 'subCategory.label',\n    },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Контрагент', align: 'start', path: 'contractor.name' },\n    bottom: { name: 'Тип', align: 'start', path: 'contractor.type' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Діяльність', align: 'start', path: 'activity.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Проект', align: 'start', path: 'project.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Коментар', align: 'start', path: 'comment' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\nexport const transactionsColumns: CellTittleProps<ITransaction, DataPath>[] = [\n  {\n    top: { name: 'Дата', align: 'center', path: 'eventDate' },\n    bottom: { name: 'Час', align: 'center' },\n    width: '90px',\n    action: 'dateSimple',\n  },\n  {\n    top: { name: 'Тип', align: 'start', path: 'type' },\n    bottom: { name: 'Статус', align: 'start', path: 'status' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('amount'), align: 'end', path: 'amount' },\n    bottom: { name: 'Валюта', align: 'end', path: 'currency' },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: {\n      name: t('countOut'),\n      align: 'start',\n      path: 'countOut.label',\n    },\n    bottom: {\n      name: t('subCountOut'),\n      align: 'start',\n      path: 'subCountOut.label',\n    },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('countIn'), align: 'start', path: 'countIn.label' },\n    bottom: {\n      name: t('subCountIn'),\n      align: 'start',\n      path: 'subCountIn.label',\n    },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      path: 'category.label',\n    },\n    bottom: {\n      name: t('subCategory'),\n      align: 'start',\n      path: 'subCategory.label',\n    },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інвойс', align: 'start', path: 'invoice.label' },\n    bottom: { name: 'Номер', align: 'start', path: 'invoice.number' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оплата', align: 'start', path: 'payment.label' },\n    bottom: { name: 'Номер', align: 'start', path: 'payment.number' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: 'Контрагент', align: 'start', path: 'contractor.name' },\n    bottom: { name: 'Тип', align: 'start', path: 'contractor.type' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Діяльність', align: 'start', path: 'activity.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Проект', align: 'start', path: 'project.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Коментар', align: 'start', path: 'comment' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створив', align: 'start', path: 'author.email' },\n    bottom: { name: 'Оновив', align: 'start', path: 'editor.email' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const transactionsSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'amount',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('countIn'),\n    dataPath: 'countIn.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('subCountIn'),\n    dataPath: 'subCountIn.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('countOut'),\n    dataPath: 'countOut.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('subCountOut'),\n    dataPath: 'subCountOut.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('category'),\n    dataPath: 'category.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('subCategory'),\n    dataPath: 'subCategory.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n\n  {\n    label: 'Контрагент',\n    dataPath: 'contractor.name',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n\n  {\n    label: t('project'),\n    dataPath: 'project.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n];\n\nexport const filterOptions: TransactionsFilterOpt[] = [\n  { label: t('INCOME'), value: 'INCOME' },\n  { label: t('TRANSFER'), value: 'TRANSFER' },\n  { label: t('EXPENSE'), value: 'EXPENSE' },\n];\n"],"names":["service","useAppServiceProvider","ServiceName","navigate","useNavigate","modals","useModalProvider","useCallback","ctx","_ctx$selectedRow","_ctx$selectedRow4","_ctx$selectedRow7","name","title","icon","disabled","selectedRow","_id","type","onClick","_ctx$selectedRow2","_ctx$selectedRow3","iconSize","_onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ctx$selectedRow5","_ctx$selectedRow6","res","formData","modal","wrap","_context","prev","next","createApiCall","data","ProductsApi","sent","abrupt","console","log","createProductFormData","handleOpenModal","ModalChildren","FormCreateProduct","modalChildrenProps","filterOptions","productsFilterOptions","defaultState","onSubmit","o","updateById","onSuccess","d","closeAfterSave","onClose","ToastService","onError","e","error","fillHeight","stop","apply","arguments","_onClick2","_callee2","_ctx$selectedRow8","_context2","create","separator","ProductTypeEnum","close","Page","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","props","getAll","useStorageServiceHook","state","useProductsSelector","filterSelectors","useProductsFilterSelectorsHook","actionsCreator","useProductsActionsCreator","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","sortParams","setSortParams","_useState5","_useState6","filterParams","setFilterParams","tableConfig","useMemo","tableData","products","tableTitles","productsColumns","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","refresh","query","onLoading","then","handleTableSort","param","sortOrder","dataPath","useEffect","length","_jsx","AppGridPage","path","children","TableList","_objectSpread","useProductsTableSettings","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","tableSortParams","transactionsSearchParams","el","sort","css","takeFullPlace","_templateObject2","_templateObject3","Container","FlexBox","p","theme","sideBarBorderColor","PropertyBox","_ref","onSelect","onChange","template","defaultData","selectedIds","setSelectedIds","handleSelect","id","option","newData","includes","filter","concat","_toConsumableArray","currentTemplateData","_template$childrenLis","childrenList","isSelectable","renderProperties","map","item","_item$childrenList","_jsxs","gap","fillWidth","padding","Text","$weight","$size","style","marginInline","label","fxDirection","flexWrap","value","ButtonIcon","variant","dimensionsInputsProps","t","placeholder","Box","form","input","InputLabel","InputText","min","register","valueAsNumber","productsMeasurementUnitOptions","enumToFilterOptions","MeasurementUnit","measurementInputs","options","appForm","display","gridTemplateColumns","columnGap","_appForm$formState","CustomSelect","registerSelect","dropDownIsAbsolute","onlyValue","formState","errors","undefined","productsStatusOption","ProductStatusEnum","edit","_formValues$template2","copy","addInputs","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppSelector","useAppSelector","directories","properties","useAppForm","defaultValues","formValues","setValue","handleSubmit","categories","ApiDirType","currentTemplate","find","_formValues$template","ModalForm","submitData","productForSubmit","createDataForReq","ignorePaths","onOptSelect","_ref2","extraFooter","FormAfterSubmitOptions","className","flex","maxHeight","overflow","required","autoFocus","sku","barCode","FormProductCategories","multipleMode","MeasurementInputs","DimensionsInputs","description","TextareaPrimary","FormProductStaticProperties","ids","FormProductImagesComponent","initialData","images","onChangeState","productStatusesData","getStatusesByEnum","top","align","getData","rd","getImgPreview","pr","_pr$images$","img_preview","width","action","bottom","approved","_rd$category","category","_rd$category2","_rd$category2$parent","parent","_rd$editor","editor","email","_rd$author","author","transactionsColumns","search"],"sourceRoot":""}