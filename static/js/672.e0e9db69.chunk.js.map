{"version":3,"file":"static/js/672.e0e9db69.chunk.js","mappings":"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","sources":["components/Overviews/tabs/OrderOverviewInfoTab.tsx","components/Overviews/OrderOverviewXL.tsx","components/AppPages/orders/PageOrderOverviewLeftSide.tsx","components/AppPages/orders/tabs/OrderContentTab.tsx","components/AppPages/orders/tabs/OrderInvoicesTab.tsx","components/AppPages/orders/tabs/OrderPaymentsTab.tsx","components/AppPages/orders/tabs/OrderShipmentsTab.tsx","components/AppPages/orders/PageOrderOverviewTabs.tsx","components/AppPages/orders/PageCurrentOrderProvider.tsx","components/AppPages/orders/PageOrderOverview.tsx"],"sourcesContent":["import FlexBox from '../../atoms/FlexBox';\nimport styled from 'styled-components';\nimport React, { useMemo, useState } from 'react';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { t } from '../../../lang';\nimport { OverviewCellProps } from '../components/overview-types';\nimport TabSelector from '../../atoms/TabSelector';\nimport { _enumToTabs } from '../../../utils';\nimport { OverviewCells } from '../components/Cells';\n\nexport interface OrderOverviewInfoTabProps {}\n\nenum OrderOverviewInfoTabsEnum {\n  General = 'General',\n  Customer = 'Customer',\n  Invoicing = 'Invoicing',\n  Delivery = 'Delivery',\n  Additional = 'Additional',\n}\n\nconst tabs = _enumToTabs(OrderOverviewInfoTabsEnum);\n\nconst OrderOverviewInfoTab: React.FC<OrderOverviewInfoTabProps> = _p => {\n  const overlayS = useOverlayService();\n  const currentOrder = useOrdersSelector().currentOrder;\n  const [currentTab, setCurrentTab] = useState<OrderOverviewInfoTabsEnum>(OrderOverviewInfoTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      orderOverviewCells\n        .filter(cell => cell.tab === currentTab)\n        .map(({ CellComponent, ...cell }) => {\n          if (CellComponent) {\n            return <CellComponent key={cell.title} setOverlayContent={overlayS.open} cell={cell} data={currentOrder} />;\n          }\n          return <OverviewCells.Text key={cell.title} overlayHandler={overlayS.open} cell={cell} data={currentOrder} />;\n        }),\n    [currentTab, overlayS.open, currentOrder]\n  );\n  return (\n    <Box fillWidth flex={1} overflow={'auto'}>\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        filterOptions={tabs}\n        onOptSelect={option => {\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      {renderCells}\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)``;\nexport default OrderOverviewInfoTab;\n\nconst orderOverviewCells: OverviewCellProps<OrderEntity>[] = [\n  {\n    title: t('Manager'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.manager?.user?.email,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Reference'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Group reference'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.group?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Group strategy'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.group?.strategy,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Totals'),\n    CellComponent: OverviewCells.OrderTotals,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Status'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.status,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    CellComponent: OverviewCells.OrderCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Customer,\n  },\n  {\n    title: t('Invoicing'),\n    CellComponent: OverviewCells.OrderInvoicing,\n    tab: OrderOverviewInfoTabsEnum.Invoicing,\n  },\n  { title: t('Delivery'), CellComponent: OverviewCells.OrderDelivery, tab: OrderOverviewInfoTabsEnum.Delivery },\n  {\n    title: t('Receiver'),\n    CellComponent: OverviewCells.OrderCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Delivery,\n  },\n  { title: t('Additional'), tab: OrderOverviewInfoTabsEnum.Additional },\n];\n","import { OrderEntity } from '../../types/orders/orders.types';\nimport FlexBox from '../atoms/FlexBox';\nimport { ModalHeader } from '../atoms';\nimport React, { useMemo, useState } from 'react';\nimport { useOrdersSelector } from '../../redux/selectors.store';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { t } from '../../lang';\nimport { useAppParams } from '../../hooks';\nimport { enumToFilterOptions } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport OrderOverviewInfoTab from './tabs/OrderOverviewInfoTab';\n\nexport interface OrderOverviewXLProps {\n  order?: OrderEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  isRefresh?: boolean;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\nexport enum OrderOverviewTabs {\n  info = 'Info',\n  chat = 'Chat',\n  statuses = 'Statuses',\n  comments = 'Comments',\n  tasks = 'tasks',\n}\n\nconst tabs = enumToFilterOptions(OrderOverviewTabs);\n\nconst OrderOverviewXL: React.FC<OrderOverviewXLProps> = p => {\n  const [currentTab, setCurrentTab] = useState<number>(0);\n  // const orderS = useAppServiceProvider()[ServiceName.orders];\n  const orderId = useAppParams()?.orderId;\n  const currentOrder = useOrdersSelector().currentOrder;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const renderTab = useMemo(() => {\n    if (tabs[currentTab].value === OrderOverviewTabs.info) {\n      return <OrderOverviewInfoTab />;\n    }\n    if (tabs[currentTab].value === OrderOverviewTabs.chat) {\n      return <OrderOverviewInfoTab />;\n    }\n    if (tabs[currentTab].value === OrderOverviewTabs.statuses) {\n      return <OrderOverviewInfoTab />;\n    }\n\n    return;\n  }, [currentTab]);\n\n  return (\n    <Container flex={1} fillWidth padding={'0 8px'}>\n      <ModalHeader\n        title={t('Order overview')}\n        onBackPress={() => {\n          if (location?.pathname) {\n            const newPath = location?.pathname?.replace(`/${currentOrder?._id || orderId}`, '');\n\n            newPath && navigate(newPath);\n          }\n        }}\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <TabSelector\n          filterOptions={tabs}\n          optionProps={{ fitContentH: true }}\n          onOptSelect={(_o, _v, i) => setCurrentTab(i)}\n        />\n\n        {renderTab}\n      </Content>\n\n      <Footer fxDirection={'row'} alignItems={'center'} justifyContent={'space-between'} padding={'8px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            isLoading={p?.isRefresh}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nexport default OrderOverviewXL;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { MouseEventHandler, useCallback, useMemo, useState } from 'react';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport OrderOverviewXL from '../../Overviews/OrderOverviewXL';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\n\nexport interface PageOrderOverviewLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\nconst PageOrderOverviewLeftSide: React.FC<PageOrderOverviewLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const { currentOrder } = useOrdersSelector();\n  const overlayService = useOverlayService();\n  const setLoading = useState(false)[1];\n  const { orders: ordersServ } = useAppServiceProvider();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlayService.remove(id);\n        }\n      },\n    [overlayService]\n  );\n\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlayService.getOverlayStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              overlayService.remove(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlayService]);\n\n  return (\n    <LeftSide>\n      <OrderOverviewXL\n        order={currentOrder}\n        onEdit={\n          currentOrder\n            ? () => {\n                // const formData = createProductFormData(currentOrder);\n                //\n                // console.log('PageOrderOverviewLeftSide', formData);\n                //\n                // const m = modalS.handleOpenModal({\n                //   Modal: Modals.FormCreateProduct,\n                //   props: {\n                //     edit: true,\n                //     _id: currentOrder?._id,\n                //     defaultState: formData,\n                //     onSubmit: (d, o) => {\n                //       productsS\n                //         .updateById({\n                //           data: { ...d, refreshCurrent: true },\n                //           onSuccess: () => {\n                //             o?.closeAfterSave && m?.onClose();\n                //             ToastService.success(`Updated product`);\n                //           },\n                //         })\n                //         .finally();\n                //     },\n                //   },\n                // });\n              }\n            : undefined\n        }\n        onRefresh={() => {\n          currentOrder?._id &&\n            ordersServ.getById({\n              data: { _id: currentOrder?._id, options: { refreshCurrent: true } },\n              onLoading: setLoading,\n            });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n        {renderOverlayStack}\n      </Backdrop>\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  left: ${p => (p.isActive ? 0 : '100%')};\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  animation: 'OverlayFromRight';\n`;\n\nexport default PageOrderOverviewLeftSide;\n","import FlexBox from '../../../atoms/FlexBox';\nimport TabSelector from '../../../atoms/TabSelector';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useOrdersSelector } from '../../../../redux/selectors.store';\nimport { useEffect, useMemo, useState } from 'react';\nimport { orderSlotsTableColumns } from '../../../../data/orders.data';\nimport { productsFilterOptions } from '../../../../data/modalFilterOptions.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../../redux/reduxTypes.types';\nimport { getIdRef } from '../../../../utils';\nimport { IOrderSlot } from '../../../../types/orders/orders.types';\n\nexport interface OrderContentTabProps {}\n\nconst OrderContentTab: React.FC<OrderContentTabProps> = p => {\n  const service = useAppServiceProvider()[AppModuleName.orders];\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentTab, setCurrentTab] = useState<number>(0);\n\n  const { currentOrder } = useOrdersSelector();\n\n  const tableData = useMemo(() => {\n    return currentOrder?.slots?.filter(el => el.product?.type === productsFilterOptions[currentTab]?.value);\n  }, [currentOrder?.slots, currentTab]);\n\n  const tableConfigs = useMemo((): ITableListProps<IOrderSlot> => {\n    return {\n      actionsCreator: ctx => {\n        return [\n          {\n            icon: 'refresh',\n            name: 'refresh',\n            onClick: () => {\n              if (currentOrder?._id) {\n                service.getSlots({ data: { params: { order: getIdRef(currentOrder) } }, onLoading: setIsLoading });\n              }\n            },\n          },\n        ];\n      },\n    };\n  }, [currentOrder, service]);\n\n  useEffect(() => {\n    if (currentOrder?._id) {\n      service.getSlots({ data: { params: { order: getIdRef(currentOrder) } } });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <FlexBox fillWidth overflow={'hidden'} flex={1}>\n      <FlexBox fillWidth>\n        <TabSelector\n          filterOptions={productsFilterOptions}\n          currentIndex={currentTab}\n          onOptSelect={(_o, _v, i) => {\n            setCurrentTab(i);\n          }}\n        />\n      </FlexBox>\n\n      <TableList\n        isSearch={false}\n        isFilter={false}\n        {...tableConfigs}\n        tableData={tableData}\n        isLoading={isLoading}\n        tableTitles={orderSlotsTableColumns}\n      />\n    </FlexBox>\n  );\n};\n\nexport default OrderContentTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { invoicesTableColumns } from '../../../../data/invoicing.data';\nimport { useOrdersSelector } from '../../../../redux/selectors.store';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IInvoice } from '../../../../types/invoices.types';\nimport { OrderTabProps } from './orderTabs.types';\nimport { AppModuleName } from '../../../../redux/reduxTypes.types';\n\nexport interface OrderInvoicesTabProps extends OrderTabProps {}\n\nconst OrderInvoicesTab: React.FC<OrderInvoicesTabProps> = ({ order }) => {\n  const state = useOrdersSelector();\n  const currentOrder = order ?? state?.currentOrder;\n  const service = useAppServiceProvider().get(AppModuleName.orders);\n\n  // const modalService = useModalService();\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const tableConfigs = useMemo((): ITableListProps<IInvoice> => {\n    return {\n      actionsCreator: ctx => {\n        return [\n          {\n            name: 'refresh',\n            icon: 'refresh',\n            onClick: () => {\n              if (currentOrder?._id) {\n                service.getInvoicesByOrderId({ data: { params: { order: getIdRef(currentOrder) } } });\n              }\n            },\n          },\n        ];\n      },\n    };\n  }, [currentOrder, service]);\n\n  useEffect(() => {\n    if (currentOrder?._id) {\n      service.getInvoicesByOrderId({ data: { params: { order: getIdRef(currentOrder) } }, onLoading: setIsLoading });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfigs}\n      isSearch={false}\n      isFilter={false}\n      isLoading={isLoading}\n      tableData={currentOrder?.invoices}\n      tableTitles={invoicesTableColumns}\n    />\n  );\n};\n\nexport default OrderInvoicesTab;\n","import TableList from '../../../TableList/TableList';\n\nexport interface OrderPaymentsTabProps {}\n\nconst OrderPaymentsTab: React.FC<OrderPaymentsTabProps> = () => {\n  return <TableList isSearch={false} isFilter={false} />;\n};\n\nexport default OrderPaymentsTab;\n","import TableList from '../../../TableList/TableList';\nimport { OrderTabProps } from './orderTabs.types';\n\nexport interface OrderShipmentsTabProps extends OrderTabProps {}\n\nconst OrderShipmentsTab: React.FC<OrderShipmentsTabProps> = () => {\n  return <TableList isSearch={false} isFilter={false} />;\n};\n\nexport default OrderShipmentsTab;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useAppParams } from '../../../hooks';\nimport OrderContentTab from './tabs/OrderContentTab';\nimport OrderInvoicesTab from './tabs/OrderInvoicesTab';\nimport OrderPaymentsTab from './tabs/OrderPaymentsTab';\nimport OrderShipmentsTab from './tabs/OrderShipmentsTab';\n\nexport interface PageOrderOverviewTabsProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\nenum OrderTabNameEnum {\n  Content = 'Content',\n  Invoices = 'Invoices',\n  Payments = 'Payments',\n  Shipments = 'Shipments',\n}\nconst toggleOptions = enumToFilterOptions(OrderTabNameEnum);\nconst PageOrderOverviewTabs = ({ toggleVisibility, isVisible }: PageOrderOverviewTabsProps) => {\n  const orderId = useAppParams()?.orderId;\n\n  const { currentOrder } = useOrdersSelector();\n  // const service = useAppServiceProvider()[ServiceName.orders];\n  const [current, setCurrent] = useState<OrderTabNameEnum>(OrderTabNameEnum.Content);\n\n  const renderTab = useMemo(() => {\n    if (current === OrderTabNameEnum.Content) {\n      return <OrderContentTab />;\n    }\n    if (current === OrderTabNameEnum.Invoices) {\n      return <OrderInvoicesTab />;\n    }\n    if (current === OrderTabNameEnum.Payments) {\n      return <OrderPaymentsTab />;\n    }\n    if (current === OrderTabNameEnum.Shipments) {\n      return <OrderShipmentsTab />;\n    }\n  }, [current]);\n\n  const filterHandler: FilterSelectHandler<OrderTabNameEnum> = (_, value, index) => {\n    setCurrent(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      <Top fillWidth gap={4} isVisible={isVisible} fxDirection={'row'} justifyContent={'space-between'}>\n        <ButtonIcon\n          variant={'textExtraSmall'}\n          icon={'SmallArrowLeft'}\n          style={{ padding: 6 }}\n          onClick={toggleVisibility}\n        >\n          {'Back'}\n        </ButtonIcon>\n\n        <FlexBox padding={'0 8px'}>\n          <Text $weight={600} $size={14}>\n            {currentOrder?.code}\n          </Text>\n\n          <Text $size={10}>{orderId}</Text>\n        </FlexBox>\n      </Top>\n\n      <FlexBox>\n        <TabSelector filterOptions={toggleOptions} defaultValue={current} onOptSelect={filterHandler} preventFilter />\n      </FlexBox>\n\n      {renderTab}\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst Top = styled(FlexBox)<{ isVisible?: boolean }>`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default PageOrderOverviewTabs;\n","import React, { createContext, useCallback, useContext, useMemo } from 'react';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { OrderEntity } from '../../../types/orders/orders.types';\n\nexport interface PageCurrentOrderProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageCurrentOrderProviderValue {\n  currentOrder?: OrderEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const usePageCurrentOrder = () => useContext(PageCurrentOrderCTX) as PageCurrentOrderProviderValue;\n\nconst PageCurrentOrderProvider: React.FC<PageCurrentOrderProviderProps> = ({ children }) => {\n  const { currentOrder } = useOrdersSelector();\n  // const service = useAppServiceProvider()[ServiceName.orders];\n\n  const clearCurrent = useCallback(() => {\n    // service.clearCurrent({});\n    console.log('clear current order');\n  }, []);\n\n  const CTX = useMemo(\n    (): PageCurrentOrderProviderValue => ({\n      currentOrder,\n      clearCurrent,\n    }),\n    [currentOrder, clearCurrent]\n  );\n\n  return <PageCurrentOrderCTX.Provider value={CTX}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default PageCurrentOrderProvider;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport { AppGridPage } from '../pages';\nimport { useAppParams } from '../../../hooks';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\nimport PageOrderOverviewLeftSide from './PageOrderOverviewLeftSide';\nimport PageOrderOverviewTabs from './PageOrderOverviewTabs';\nimport { BaseAppPageProps } from '../index';\nimport PageCurrentOrderProvider from './PageCurrentOrderProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../redux/reduxTypes.types';\n\ninterface Props extends BaseAppPageProps {}\n\n// const loader = ToastService.createLoader('Loading order info');\n\nconst PageOrderOverview: React.FC<Props> = ({ path }) => {\n  const service = useAppServiceProvider()[AppModuleName.orders];\n\n  const [isTabsSideVisible, setIsTabsSideVisible] = useState<boolean>(false);\n  const { orderId } = useAppParams();\n\n  const toggleRightSide = useCallback(() => {\n    setIsTabsSideVisible(p => !p);\n  }, []);\n\n  useEffect(() => {\n    if (orderId) {\n      service.getById({\n        data: { _id: orderId, options: { refreshCurrent: true } },\n      });\n    }\n  }, [orderId, service]);\n\n  return (\n    <AppGridPage path={path}>\n      <PageCurrentOrderProvider>\n        <OverlayStackProvider>\n          <Page>\n            <PageOrderOverviewLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n            <PageOrderOverviewTabs toggleVisibility={toggleRightSide} isVisible={isTabsSideVisible} />\n          </Page>\n        </OverlayStackProvider>\n      </PageCurrentOrderProvider>\n    </AppGridPage>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\nexport default PageOrderOverview;\n"],"names":["OrderOverviewInfoTabsEnum","tabs","_enumToTabs","Box","styled","FlexBox","_templateObject","_taggedTemplateLiteral","_p","overlayS","useOverlayService","currentOrder","useOrdersSelector","_useState","useState","General","_useState2","_slicedToArray","currentTab","setCurrentTab","renderCells","useMemo","orderOverviewCells","filter","cell","tab","map","_ref","CellComponent","_objectWithoutProperties","_excluded","_jsx","setOverlayContent","open","data","title","OverviewCells","overlayHandler","_jsxs","fillWidth","flex","overflow","children","TabSelector","optionProps","fitContentH","filterOptions","onOptSelect","option","value","t","getValue","_data$manager","_data$manager$user","manager","user","email","_data$reference","reference","internal","_data$group","_data$group$reference","group","_data$group2","strategy","status","Customer","Invoicing","Delivery","Additional","OrderOverviewTabs","enumToFilterOptions","Container","p","theme","sideBarBackgroundColor","Content","_templateObject2","sideBarBorderColor","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","globals","colors","error","OpenBtn","_templateObject5","_useAppParams","orderId","useAppParams","navigate","useNavigate","location","useLocation","renderTab","info","chat","statuses","OrderOverviewInfoTab","padding","ModalHeader","onBackPress","pathname","_location$pathname","newPath","replace","concat","_id","_o","_v","i","fxDirection","alignItems","justifyContent","size","variant","iconSize","icon","disabled","onEdit","onClick","onDelete","gap","margin","isLoading","isRefresh","onRefresh","onOpenRightSide","LeftSide","modalBorderColor","Backdrop","isActive","backdropColor","timingFunctionMain","OverlayBox","toggleRightSideVisibility","overlayService","setLoading","ordersServ","useAppServiceProvider","orders","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","getOverlayStack","_ref2","index","RenderComponent","props","className","style","zIndex","fillHeight","_objectSpread","onClose","overlayId","OrderOverviewXL","order","undefined","getById","options","refreshCurrent","onLoading","length","service","AppModuleName","setIsLoading","_useState3","_useState4","tableData","_currentOrder$slots","slots","el","_el$product","_productsFilterOption","product","type","productsFilterOptions","tableConfigs","actionsCreator","ctx","name","getSlots","params","getIdRef","useEffect","currentIndex","TableList","isSearch","isFilter","tableTitles","orderSlotsTableColumns","state","get","getInvoicesByOrderId","invoices","invoicesTableColumns","OrderTabNameEnum","toggleOptions","RightSide","backgroundColorLight","isVisible","Top","toggleVisibility","current","setCurrent","OrderContentTab","Invoices","OrderInvoicesTab","Payments","OrderPaymentsTab","Shipments","OrderShipmentsTab","Text","$weight","$size","code","defaultValue","_","preventFilter","PageCurrentOrderCTX","createContext","clearCurrent","console","log","CTX","Provider","Page","takeFullGridArea","path","isTabsSideVisible","setIsTabsSideVisible","toggleRightSide","AppGridPage","PageCurrentOrderProvider","OverlayStackProvider","PageOrderOverviewLeftSide","PageOrderOverviewTabs"],"sourceRoot":""}