{"version":3,"file":"static/js/12.c82e584b.chunk.js","mappings":"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","sources":["components/AppPages/PageHome.tsx","components/AppPages/pagesStyles.ts"],"sourcesContent":["import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n// import ProfileCard from 'components/molecules/ProfileCard/ProfileCard';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { memo, useCallback, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\nimport usePermissionsService from 'redux/permissions/usePermissionsService.hook';\nimport { IPermission } from '../../redux/permissions/permissions.types';\nimport { permissionsSearchParams, permissionsTableColumns } from '../../data';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport AppGridPage from './AppGridPage';\n\nconst companyTypes = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n\ntype Props = {\n  path: string;\n};\nconst PageHome: React.FC<any> = ({ path }: Props) => {\n  const { user } = useAuthSelector();\n  const { permissions } = usePermissionsService();\n  const [searchParams, setSearchParams] = useSearchParams({\n    companyType: companyTypes[0].param,\n  });\n\n  useEffect(() => {\n    setSearchParams({ companyType: companyTypes[0].param });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IPermission> => ({\n      tableData: permissions,\n      tableTitles: permissionsTableColumns,\n      tableSearchParams: permissionsSearchParams,\n      isFilter: false,\n      isSearch: true,\n      checkBoxes: false,\n    }),\n    [permissions]\n  );\n  const onSearchParamClick = useCallback(\n    (param: string) => {\n      setSearchParams({ companyType: param });\n    },\n    [setSearchParams]\n  );\n  const isActiveClassName = useCallback(\n    (param: string) => (searchParams.get('companyType') === param ? 'active' : ''),\n    [searchParams]\n  );\n\n  const renderFilterButtons = useMemo(() => {\n    return companyTypes.map(item => (\n      <StButtonIcon\n        key={item.param}\n        variant=\"def\"\n        onClick={() => onSearchParamClick(item.param)}\n        className={isActiveClassName(item.param)}\n      >\n        {item.title}\n      </StButtonIcon>\n    ));\n  }, [isActiveClassName, onSearchParamClick]);\n\n  return (\n    <AppGridPage path={path}>\n      <Page>\n        <Top>\n          <ProfileInfo>\n            <ProfileCard {...user} />\n          </ProfileInfo>\n\n          <FilterButtons>\n            <ButtonsList>{renderFilterButtons}</ButtonsList>\n          </FilterButtons>\n        </Top>\n\n        <Bottom>\n          <TableList {...tableConfig} />\n        </Bottom>\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  //background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace};\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    //height: 1px;\n    //width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default memo(PageHome);\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["companyTypes","title","param","PageHome","_ref","path","user","useAuthSelector","permissions","usePermissionsService","_useSearchParams","useSearchParams","companyType","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","useEffect","tableConfig","useMemo","tableData","tableTitles","permissionsTableColumns","tableSearchParams","permissionsSearchParams","isFilter","isSearch","checkBoxes","onSearchParamClick","useCallback","isActiveClassName","get","renderFilterButtons","map","item","_jsx","StButtonIcon","variant","onClick","className","children","AppGridPage","_jsxs","Page","Top","ProfileInfo","ProfileCard","_objectSpread","FilterButtons","ButtonsList","Bottom","TableList","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_templateObject2","_ref2","theme","tableBackgroundColor","takeFullPlace","_templateObject3","_ref3","_templateObject4","_templateObject5","_templateObject6","ButtonIcon","_templateObject7","_ref4","trBorderClr","_ref5","globals","timingFnMui","_ref6","accentColor","base","memo","css"],"sourceRoot":""}