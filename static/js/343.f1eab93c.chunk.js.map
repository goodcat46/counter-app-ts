{"version":3,"file":"static/js/343.f1eab93c.chunk.js","mappings":"4QA0FMA,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gBACnBC,EAAAA,IAEJ,UA1EoE,SAAHC,GAAkB,IAADC,EAAAC,EAAXC,EAAIH,EAAJG,KAC/DC,EAAuB,QAAjBH,GAAGI,EAAAA,EAAAA,aAAc,IAAAJ,OAAA,EAAdA,EAAgBK,YACzBC,GAAiBC,EAAAA,EAAAA,GAAmCJ,GAErCK,GACjBC,EAAAA,EAAAA,MADFC,gBAAmBF,QAEfG,EAA8B,QAA1BV,GAAGW,EAAAA,EAAAA,aAAuB,IAAAX,OAAA,EAAvBA,EAAyBY,QACtCC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAoCL,EAAAA,EAAAA,YAAuBM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwCT,EAAAA,EAAAA,YAAgCU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjEE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAI,mDACZD,QAAQC,IAAIR,GACZO,QAAQC,IAAIJ,EACd,GAAG,CAACA,EAAcJ,IAElB,IAAMS,GAAcC,EAAAA,EAAAA,UAClB,iBAAwC,CACtCC,UAAe,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,OACjBC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,YAAY,EACZhC,eAAAA,EACAiC,eAAgB,SAAAb,GACdC,EAAgBD,EAClB,EACAc,gBAAiB,SAACC,EAAOC,GACvBnB,EAAc,CAAEoB,SAAUF,EAAME,SAAUD,UAAAA,GAC5C,EACD,GACD,CAACpC,EAAoB,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,SAyBzB,OAvBAN,EAAAA,EAAAA,YAAU,WACRjB,GAAQkB,QAAQC,IAAInB,EACtB,GAAG,CAACA,KAYJiB,EAAAA,EAAAA,YAAU,WACJzB,GACFK,EAAQ,CACNoC,KAAM,CAAEjC,KAAM,CAAEkC,IAAK1C,IACrB2C,UAAW3B,GAGjB,GAAG,CAAChB,EAAQK,KAGVuC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAAC9C,KAAMA,EAAK+C,UACtBF,EAAAA,EAAAA,KAACrD,EAAI,CAAAuD,UACHF,EAAAA,EAAAA,KAACG,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJpB,GAAW,IACfb,UAAWA,EACXZ,eAAgBA,EAChB8B,UAAU,EACVgB,YAAaC,EAAAA,SAKvB,C,6GCvFavD,GAAmBwD,EAAAA,EAAAA,IAAG1D,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAItB0D,GAAgBD,EAAAA,EAAAA,IAAGE,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,4CAIVyD,EAAAA,EAAAA,IAAGG,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,uC","sources":["components/AppPages/PagePriceListOverview.tsx","components/AppPages/pagesStyles.tsx"],"sourcesContent":["import { useAppParams } from '../../hooks';\nimport { AppGridPage } from './index';\nimport styled from 'styled-components';\nimport { takeFullGridArea } from './pagesStyles';\nimport { PagePathType } from '../../data/pages.data';\nimport { usePriceListOverviewActionsCreator } from '../../hooks/usePriceListOverviewActionsCreator.hook';\nimport { useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { useEffect, useMemo, useState } from 'react';\nimport { IPriceListItem } from '../../redux/priceManagement/priceManagement.types';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport { ISortParams } from '../../api';\nimport { FilterReturnDataType } from '../Filter/AppFilter';\nimport TableList from '../TableList/TableList';\nimport { priceListContentColumns } from '../../data';\nimport { usePriceListsSelector } from '../../redux/selectors.store';\n\nexport interface PagePriceListOverviewProps {\n  path: PagePathType;\n}\nconst PagePriceListOverview: React.FC<PagePriceListOverviewProps> = ({ path }) => {\n  const listId = useAppParams()?.priceListId;\n  const actionsCreator = usePriceListOverviewActionsCreator(listId);\n  const {\n    priceManagement: { getById },\n  } = useAppServiceProvider();\n  const list = usePriceListsSelector()?.current;\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  useEffect(() => {\n    console.log('PagePriceListOverview ==============>>>>>>>>>>>');\n    console.log(sortParams);\n    console.log(filterParams);\n  }, [filterParams, sortParams]);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IPriceListItem> => ({\n      tableData: list?.prices,\n      isFilter: false,\n      isSearch: true,\n      footer: false,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n      },\n    }),\n    [actionsCreator, list?.prices]\n  );\n  useEffect(() => {\n    list && console.log(list);\n  }, [list]);\n  // const onValidSubmit = (data: IPriceList) => {\n  //   onSubmit &&\n  //     data.prices &&\n  //     onSubmit(data.prices, {\n  //       clearAfterSave: true,\n  //       closeAfterSave: true,\n  //       onLoading: l => {},\n  //       onSuccess: d => {},\n  //     });\n  // };\n\n  useEffect(() => {\n    if (listId) {\n      getById({\n        data: { list: { _id: listId } },\n        onLoading: setIsLoading,\n      });\n    }\n  }, [listId, getById]);\n\n  return (\n    <AppGridPage path={path}>\n      <Page>\n        <TableList\n          {...tableConfig}\n          isLoading={isLoading}\n          actionsCreator={actionsCreator}\n          isSearch={false}\n          tableTitles={priceListContentColumns}\n        />\n      </Page>\n    </AppGridPage>\n  );\n};\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\nexport default PagePriceListOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["Page","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_ref","_useAppParams","_usePriceListsSelecto","path","listId","useAppParams","priceListId","actionsCreator","usePriceListOverviewActionsCreator","getById","useAppServiceProvider","priceManagement","list","usePriceListsSelector","current","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","sortParams","setSortParams","_useState5","_useState6","filterParams","setFilterParams","useEffect","console","log","tableConfig","useMemo","tableData","prices","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","handleTableSort","param","sortOrder","dataPath","data","_id","onLoading","_jsx","AppGridPage","children","TableList","_objectSpread","tableTitles","priceListContentColumns","css","takeFullPlace","_templateObject2","_templateObject3"],"sourceRoot":""}