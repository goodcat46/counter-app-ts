{"version":3,"file":"static/js/431.a1c8583e.chunk.js","mappings":"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","sources":["components/Layout/NavMenu/index.tsx","components/Layout/UserMenu/UserInfo.tsx","components/Layout/UserMenu/UserMenu.tsx","components/SideBarLeft/Actions/ActionToggleSideBar.tsx","components/Layout/Header/Header.tsx","components/atoms/index.tsx","components/SideBarLeft/SideBarOptions.tsx","components/SideBarLeft/Actions/ChangeTheme.tsx","components/SideBarLeft/Actions/ActionAppExit.tsx","components/SideBarLeft/SideBar.tsx","components/Layout/Layout.tsx","components/AppPages/AppGridPage.tsx","components/Layout/Header/LogoSvg/LogoSvg.tsx","components/atoms/ProfileCard/ProfileCard.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { NavLink, useLocation, useParams } from 'react-router-dom';\nimport { iconId } from 'data';\nimport { IPage } from 'redux/page/pageSlice';\nimport styled from 'styled-components';\nimport { useAppPages } from '../../../data/pages.data';\nimport SvgIcon from 'components/atoms/SvgIcon/SvgIcon';\nimport Text from '../../atoms/Text';\n\nconst NavMenu: React.FC = () => {\n  const pages = useAppPages();\n  const { companyId } = useParams();\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [activePage, setActivePage] = useState<IPage>(pages[0]);\n  const location = useLocation();\n\n  const handleOpenNavMenu = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  function handleSetActivePage(page: IPage) {\n    setActivePage(page);\n  }\n\n  const onNavLinkClick = useCallback(\n    (page: IPage) => {\n      handleSetActivePage(page);\n\n      handleOpenNavMenu();\n    },\n    [handleOpenNavMenu]\n  );\n\n  const renderLinks = useMemo(\n    () =>\n      pages.map(item => {\n        return (\n          <StyledNavLink\n            key={item?.path}\n            to={companyId ? `/${companyId}/${item?.path}` : `/${item.path}`}\n            onClick={() => {\n              onNavLinkClick(item);\n            }}\n          >\n            <SvgIcon iconId={item.iconId} size=\"18px\" style={{ display: 'none' }} />\n\n            <Text>{item?.title || '---'}</Text>\n          </StyledNavLink>\n        );\n      }),\n    [companyId, onNavLinkClick, pages]\n  );\n\n  useEffect(() => {\n    const currentPathName = location.pathname.replace('/', '');\n\n    const currentPageData = pages.find(page => page.path === currentPathName);\n\n    setActivePage(currentPageData || pages[0]);\n  }, [location.pathname, pages]);\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      const { target } = ev;\n      if (target instanceof HTMLElement && !target?.closest('[data-nav-menu]')) setIsOpen(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsOpen(false);\n    }\n\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, []);\n\n  return (\n    <StyledNavMenu data-nav-menu>\n      <MenuButton\n        variant=\"def\"\n        endIconSize=\"24px\"\n        endIconId={iconId.SmallArrowDown}\n        isOpen={isOpen}\n        onClick={handleOpenNavMenu}\n      >\n        {activePage?.title}\n      </MenuButton>\n\n      <NavMenuContainer isOpen={isOpen}>\n        <NavList>{renderLinks}</NavList>\n      </NavMenuContainer>\n    </StyledNavMenu>\n  );\n};\n\ninterface MenuState {\n  isOpen: boolean;\n}\n\nconst StyledNavMenu = styled.div`\n  position: relative;\n\n  min-width: 150px;\n  max-width: 100%;\n  height: 100%;\n\n  font-size: 12px;\n  font-weight: 600;\n  @media screen and (min-width: 768px) {\n    min-width: 200px;\n  }\n`;\nconst MenuButton = styled(ButtonIcon)<{ isOpen: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 28px;\n  height: 100%;\n\n  padding: 0 8px 0 16px;\n  border-radius: 0;\n\n  font-size: 12px;\n  font-weight: 600;\n\n  background-color: transparent;\n  border: 0;\n\n  & .endIcon {\n    transform: ${({ isOpen }) => `rotate(${isOpen ? '180' : '0'}deg)`};\n  }\n`;\nconst NavMenuContainer = styled.div<MenuState>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  position: absolute;\n  top: 100%;\n  left: 0;\n\n  overflow: hidden;\n  min-width: 100%;\n  max-width: calc(100% + 30px);\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n  max-height: ${({ isOpen }) => (isOpen ? '80vh' : '0')};\n  box-shadow: ${({ isOpen, theme }) => (isOpen ? theme.globals.shadowMain : '')};\n  transition: max-height ${({ theme }) => theme.globals.timingFnMain},\n    box-shadow ${({ theme }) => theme.globals.timingFnMain};\n`;\n\nconst NavList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-content: start;\n\n  min-width: 100%;\n  max-height: 100%;\n\n  padding: 8px 0;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  position: relative;\n\n  width: 100%;\n  min-height: 34px;\n  font-size: 14px;\n  height: min-content;\n\n  padding: 4px 16px;\n\n  border-radius: 0;\n  border-style: none;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    width: 3px;\n    height: 0;\n\n    background-color: transparent;\n\n    transform: translateY(-50%);\n    transition: all ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  &:hover {\n    background-color: rgba(254, 254, 254, 0.25);\n\n    &::before {\n      height: 100%;\n      background-color: var(--darkOrange);\n    }\n  }\n\n  &.active {\n    background-color: rgba(254, 254, 254, 0.05);\n    /* color: var(--darkOrange); */\n    /* fill: var(--darkOrange); */\n\n    &::before {\n      height: 80%;\n      background-color: ${({ theme: { accentColor } }) => accentColor.base};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    min-height: 24px;\n    font-size: 12px;\n    height: min-content;\n  }\n`;\n\nexport default NavMenu;\n","import { useAuthSelector } from 'redux/selectors.store';\nimport styled, { css } from 'styled-components';\nimport { reactLogo } from 'img';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\n\nexport interface IUserInfoProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst UserInfo: React.FC<IUserInfoProps> = ({ isOpen, onClose }) => {\n  const { user } = useAuthSelector();\n\n  function onBackdropClick(ev: React.MouseEvent) {\n    const { target, currentTarget } = ev;\n    target === currentTarget && onClose();\n  }\n\n  return (\n    <Backdrop isOpen={isOpen} transitionDelay={isOpen ? '' : '250ms'} onClick={onBackdropClick}>\n      <MainList>\n        <MainListItem isOpen={isOpen} transitionDelay={isOpen ? '' : '150ms'}>\n          <ProfileCard {...user} nameFontSize='16px' emailFontSize='16px' />\n        </MainListItem>{' '}\n        <MainListItem isOpen={isOpen} transitionDelay={isOpen ? '150ms' : ''}>\n          <ProfileCard\n            {...{ avatarURL: reactLogo, name: '\"Roga & Copyta\" Ltd', email: 'roga&copyta@mail.com' }}\n            nameFontSize='16px'\n            emailFontSize='16px'\n          />\n        </MainListItem>\n      </MainList>\n\n      {/* <MainList isOpen={isOpen} transitionDelay={isOpen ? '150ms' : ''}>\n        <MainListItem></MainListItem>\n      </MainList> */}\n    </Backdrop>\n  );\n};\nconst Backdrop = styled.div<{ isOpen: boolean; transitionDelay?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1051;\n  transform-origin: right;\n\n  overflow: hidden;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  transition-delay: ${({ transitionDelay }) => (transitionDelay ? transitionDelay : '')};\n\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.backdropColor};\n\n  ${({ isOpen }) =>\n  isOpen\n    ? css`\n          opacity: 1;\n          visibility: visible;\n          pointer-events: all;\n        `\n    : css`\n          opacity: 0;\n          visibility: hidden;\n          pointer-events: none;\n        `}\n`;\n\nconst MainList = styled.ul<{ isOpen?: boolean; transitionDelay?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n\n  min-width: 250px;\n  width: 100vw;\n  max-width: 100vw;\n\n  padding: 6px;\n\n  overflow: hidden;\n\n  transition: all ${({ theme }) => theme.globals?.timingFunctionMain};\n  /* transition-delay: ${({ transitionDelay }) => (transitionDelay ? transitionDelay : '')}; */\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  /* ${({ isOpen }) =>\n  isOpen\n    ? css`\n          overflow: auto;\n          transform: translateX(0);\n          pointer-events: all;\n        `\n    : css`\n          transform: translateX(100%);\n          pointer-events: none;\n        `} */\n`;\nconst MainListItem = styled.li<{ isOpen: boolean; transitionDelay?: string }>`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  overflow: hidden;\n  padding: 16px;\n  max-width: 480px;\n  width: 100%;\n\n  border-radius: 4px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  box-shadow: var(--header-shadow);\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  transition: all ${({ theme }) => theme.globals?.timingFunctionMain};\n  transition-delay: ${({ transitionDelay }) => (transitionDelay ? transitionDelay : '')};\n\n  ${({ isOpen }) =>\n  isOpen\n    ? css`\n          overflow: auto;\n          transform: translateX(0);\n          pointer-events: all;\n        `\n    : css`\n          transform: translateX(100%);\n          pointer-events: none;\n        `}\n`;\n// const UserAvatarBox = styled.div`\n//   border-radius: 50%;\n//   height: 50px;\n//   min-width: 50px;\n//   width: 50px;\n//   overflow: hidden;\n// `;\n// const UserInfoList = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: flex-start;\n//   gap: 8px;\n\n//   padding: 12px;\n// `;\n// const UserInfoListItem = styled.li<{ flexDierction?: 'row' | 'column' }>`\n//   display: flex;\n//   align-items: center;\n//   flex-direction: column;\n//   gap: 6px;\n//   width: 100%;\n\n//   @media screen and (min-width: 480px) {\n//     flex-direction: ${({ flexDierction }) => flexDierction || 'column'};\n//   }\n// `;\n// const Wrapper = styled.div`\n//   align-self: flex-start;\n\n//   display: flex;\n//   flex-direction: column;\n\n//   justify-content: space-between;\n//   height: 100%;\n// `;\n// const Name = styled.span`\n//   font-size: 12px;\n//   font-weight: 700;\n//   padding: 4px 8px;\n// `;\n// const Email = styled.span`\n//   padding: 4px 8px;\n//   font-size: 10px;\n\n//   & a {\n//     transition: ${({ theme }) => theme.globals?.timingFnMui};\n//     text-decoration: underline;\n//     &:hover {\n//       color: ${({ theme }) => theme.accentColor.base};\n//     }\n//   }\n// `;\n\nexport default UserInfo;\n","import { useEffect, useState } from 'react';\nimport { iconId } from 'data';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport UserInfo from './UserInfo';\n\nimport styled from 'styled-components';\n\nconst UserMenu = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function handleMenuState(newState?: boolean) {\n    setIsOpen(newState || !isOpen);\n  }\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      const { target } = ev;\n      if (target instanceof HTMLElement && !target?.closest('[data-user-menu]')) setIsOpen(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsOpen(false);\n    }\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, []);\n\n  return (\n    <MenuContainer data-user-menu>\n      <ButtonIcon\n        iconId={iconId.personOutlined}\n        size=\"30px\"\n        iconSize=\"80%\"\n        variant=\"def\"\n        onClick={() => handleMenuState()}\n      />\n\n      <UserInfo isOpen={isOpen} onClose={() => handleMenuState()} />\n    </MenuContainer>\n  );\n};\n\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport default UserMenu;\n","import React from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport { useSideBar } from '../SideBarProvider';\nimport styled from 'styled-components';\n\nconst ActionToggleSideBar: React.FC = () => {\n  const { isOpen, onTogglerClick } = useSideBar();\n\n  return (\n    <StButton\n      iconId={isOpen ? iconId.burgerOpen : iconId.burger}\n      iconSize=\"28px\"\n      variant=\"defNoEffects\"\n      onClick={onTogglerClick}\n    />\n  );\n};\nconst StButton = styled(ButtonIcon)`\n  max-height: 100%;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default ActionToggleSideBar;\n","import React from 'react';\nimport NavMenu from '../NavMenu';\nimport LogoSvg from './LogoSvg/LogoSvg';\n\nimport UserMenu from '../UserMenu/UserMenu';\nimport styled from 'styled-components';\nimport ActionToggleSideBar from 'components/SideBarLeft/Actions/ActionToggleSideBar';\n\ninterface IHeaderComponent {\n  Component: React.FC | null;\n  props?: any;\n}\n\nconst HeaderLeftSideItems: IHeaderComponent[] = [\n  { Component: ActionToggleSideBar },\n  { Component: LogoSvg },\n  { Component: NavMenu },\n];\nconst HeaderRightSideItems: IHeaderComponent[] = [{ Component: UserMenu }];\n\nconst Header: React.FC<any> = () => {\n  return (\n    <StyledHeader>\n      <LeftSide>\n        {HeaderLeftSideItems.map(({ Component, props }, idx) => (\n          <StyledBox key={idx} borderRight>\n            {Component && <Component {...props} />}\n          </StyledBox>\n        ))}\n      </LeftSide>\n\n      <RightSide>\n        {HeaderRightSideItems.map(({ Component, props }, idx) => (\n          <StyledBox key={idx} borderLeft>\n            {Component && <Component {...props} />}\n          </StyledBox>\n        ))}\n      </RightSide>\n    </StyledHeader>\n  );\n};\n\nconst StyledHeader = styled.header`\n  grid-column: 1/3;\n  grid-row: 1/2;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 600;\n\n  height: 100%;\n  width: 100%;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n  color: ${({ theme }) => theme.fontColorHeader};\n\n  background-color: ${({ theme }) => theme.headerBackgroundColor};\n  border-bottom: 1px solid ${({ theme }) => theme.headerBorderColor};\n`;\nconst LeftSide = styled.div`\n  display: grid;\n  grid-template-columns: 40px min-content min-content;\n  align-items: center;\n\n  height: 100%;\n`;\n\nconst StyledBox = styled.div<{ borderRight?: boolean; borderLeft?: boolean }>`\n  display: flex;\n  align-items: center;\n\n  height: 100%;\n\n  border-right: ${({ theme, borderRight = false }) => (borderRight ? `1px solid ${theme.headerBorderColor}` : 'none')};\n  border-left: ${({ theme, borderLeft = false }) => (borderLeft ? `1px solid ${theme.headerBorderColor}` : 'none')};\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport default Header;\n","export const DefaultContent: React.FC<{ content?: string }> = ({ content } = {}) => {\n  return <div>{`Default content: ${content}`}</div>;\n};\nexport const ErrorContent: React.FC<{ error?: string }> = ({ error } = {}) => {\n  return <div>{`Error: ${error}`}</div>;\n};\n","import React, { useEffect } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { ErrorContent } from 'components/atoms';\nimport { useModalProvider } from 'components/ModalProvider/ModalProvider';\nimport { iconId } from 'data';\nimport { useSideBar } from './SideBarProvider';\nimport styled, { css } from 'styled-components';\n\nconst SideBarOptions: React.FC = () => {\n  const { RightSideContent, onClose, isOpen } = useSideBar();\n  const modal = useModalProvider();\n\n  function handleCloseMenu() {\n    onClose && onClose();\n  }\n\n  function onBackdropClick(ev: React.MouseEvent<HTMLDivElement>) {\n    const { target, currentTarget } = ev;\n    if (target === currentTarget) handleCloseMenu();\n  }\n\n  useEffect(() => {\n    if (modal.isOpen) return;\n    if (!RightSideContent) return;\n\n    function onMenuClose(ev: KeyboardEvent | MouseEvent) {\n      if (modal.isOpen) return;\n\n      const { target } = ev;\n      if (target instanceof HTMLElement && !target?.closest('[data-sidebar]')) onClose && onClose();\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') onClose && onClose();\n    }\n\n    const rootEl = document.getElementById('root');\n\n    rootEl?.addEventListener('click', onMenuClose);\n    rootEl?.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      rootEl?.removeEventListener('click', onMenuClose);\n      rootEl?.removeEventListener('keydown', onMenuClose);\n    };\n  }, [onClose, modal.isOpen, RightSideContent]);\n\n  return (\n    <Backdrop\n      className='backdrop'\n      isOpen={!!(isOpen && RightSideContent?.RenderComponent)}\n      maxWidth={RightSideContent?.maxWidth}\n      onClick={onBackdropClick}\n    >\n      <Container\n        isOpen={!!(isOpen && RightSideContent?.RenderComponent)}\n        maxWidth={RightSideContent?.maxWidth}\n      >\n        <Header>\n          <Title>{RightSideContent?.title}</Title>\n\n          <ButtonIcon iconSize='18px' size='22px' iconId={iconId.close} variant='defNoEffects'\n                      onClick={handleCloseMenu} />\n        </Header>\n\n        <ContentScroll>\n          {typeof RightSideContent?.RenderComponent === 'function' ? (\n            <RightSideContent.RenderComponent {...{ options: RightSideContent.options }} />\n          ) : (\n            <ErrorContent />\n          )}\n        </ContentScroll>\n      </Container>\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled.div<{ isOpen: boolean; maxWidth?: string }>`\n  position: absolute;\n  top: 0;\n  left: 100%;\n\n  max-height: 100%;\n  height: 100%;\n  overflow: hidden;\n  /* min-width: calc(100vw - 40px); */\n  background-color: ${({ theme }) => theme.backdropColor};\n\n  transition: visibility ${({ theme }) => theme.globals.timingFunctionMain},\n  opacity ${({ theme }) => theme.globals.timingFunctionMain}, width ${({ theme }) => theme.globals.timingFnNull};\n  transition-delay: ${({ isOpen }) => (isOpen ? '' : '250ms')};\n\n  ${({ isOpen }) =>\n          isOpen\n                  ? css`\n                    width: calc(100vw - 40px);\n                    opacity: 1;\n                    visibility: visible;\n                    pointer-events: all;\n                  `\n                  : css`\n                    width: 0;\n                    opacity: 0;\n                    visibility: hidden;\n                    pointer-events: none;\n                  `}\n`;\nconst Container = styled.div<{ isOpen: boolean; maxWidth?: string }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  height: 100%;\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : '250px')};\n  overflow: hidden;\n\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n  border-right: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n\n  transform: ${({ isOpen }) => `translate(${isOpen ? '0' : '-100%'})`};\n  transition: transform ${({ theme }) => theme.globals.timingFunctionMain},\n  max-width ${({ theme }) => theme.globals.timingFunctionMain};\n`;\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  /* position: sticky;\n  top: 0;\n  left: 0; */\n\n  padding: 0 8px;\n\n\n  height: 32px;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.sideBarBackgroundColor};\n  cursor: default;\n`;\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nconst ContentScroll = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n\n  /* padding: 4px; */\n  background-color: ${({ theme }) => theme.sideBarButtonBackgroundColorActive};\n  border-top: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n`;\n\nexport default SideBarOptions;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport useAppSettings from 'redux/appSettings/useAppSettings.hook';\nimport { iconId } from 'data';\n\nconst ToggleThemeMode = () => {\n  const { isDarkMode, toggleAppMode } = useAppSettings();\n\n  return (\n    <ButtonIcon\n\n      variant='defNoEffects'\n      iconSize='20px'\n      size='100%'\n      iconId={isDarkMode ? iconId.darkMode : iconId.lightMode}\n      onClick={toggleAppMode}\n    />\n  );\n};\n\n\nexport default ToggleThemeMode;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport useAppSettings from 'redux/appSettings/useAppSettings.hook';\n\nimport { iconId } from 'data';\n\nconst ActionAppExit: React.FC = () => {\n  const appSettings = useAppSettings();\n\n  function handleExitApp() {\n    const result = window.confirm('Бажаєте вийти?');\n\n    if (result) {\n      appSettings.reset();\n    }\n  }\n\n  return (\n    <ButtonIcon\n      variant=\"def\"\n      iconId={iconId.logOut}\n      iconSize=\"20px\"\n      style={{ width: '100%', height: '32px' }}\n      onClick={handleExitApp}\n    />\n  );\n};\nexport default ActionAppExit;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport SideBarOptions from './SideBarOptions';\nimport ToggleThemeMode from './Actions/ChangeTheme';\nimport ActionAppExit from './Actions/ActionAppExit';\nimport { useSideBar } from './SideBarProvider';\nimport styled, { css } from 'styled-components';\n\nconst SideBar: React.FC<any & React.HTMLAttributes<HTMLDivElement>> = props => {\n  const { isOpen, onTogglerClick, handleOptionsState, sideBarButtons, sideBarButtonsBottom, RightSideContent } =\n    useSideBar();\n\n  return (\n    <StyledSideBar isOpen={!!isOpen} className=\"SideBar\" {...props} data-sidebar>\n      <MenuToggler isOpen={!!isOpen} onClick={onTogglerClick} />\n\n      <SideBarContainer className=\"SideBarContainer\">\n        <Content isOpen={!!isOpen} className=\"Content\">\n          <Top>\n            <ToggleThemeMode />\n          </Top>\n\n          <Middle className=\"Middle\">\n            {/* <MiddleToggler variant=\"def\" iconId=\"actionsH\" iconSize=\"24px\" onClick={() => handleMiddleOpen()} /> */}\n\n            <MiddleButtons className=\"MiddleButtons\">\n              {sideBarButtons &&\n                sideBarButtons.map(item => (\n                  <StyledButtonIcon\n                    key={item?.iconId}\n                    iconId={item?.iconId}\n                    title={item?.title}\n                    iconSize=\"20px\"\n                    variant=\"pointerLeft\"\n                    isActive={item?.title === RightSideContent?.title}\n                    onClick={() => handleOptionsState && handleOptionsState(item)}\n                  />\n                ))}\n            </MiddleButtons>\n          </Middle>\n\n          <Bottom>\n            {sideBarButtonsBottom &&\n              sideBarButtonsBottom.map(item => (\n                <StyledButtonIcon\n                  key={item?.iconId}\n                  iconId={item?.iconId}\n                  title={item?.title}\n                  iconSize=\"20px\"\n                  variant=\"pointerLeft\"\n                  isActive={item?.title === RightSideContent?.title}\n                  onClick={() => handleOptionsState && handleOptionsState(item)}\n                />\n              ))}\n            <ActionAppExit />\n          </Bottom>\n        </Content>\n\n        <SideBarOptions />\n      </SideBarContainer>\n    </StyledSideBar>\n  );\n};\n\ninterface SideBarState {\n  isOpen: boolean;\n  options?: any[] | null;\n}\n\nconst sideBarCompWidth = '36px';\nconst sideBarCompWidthMobile = '50px';\n\nconst StyledSideBar = styled.div<SideBarState>`\n  display: grid;\n  grid-template-columns: ${({ isOpen }) => (isOpen ? 'min-content' : '4px')} 1fr;\n\n  width: fit-content;\n  /* max-width: 40px; */\n  height: 100%;\n\n  position: relative;\n  z-index: 500;\n\n  fill: ${({ theme }) => theme.fillColorHeader};\n  color: ${({ theme }) => theme.fontColorHeader};\n  background-color: ${({ theme }) => theme.sideBarBackgroundColor};\n\n  /* max-width: 54px; */\n  /* @media screen and (min-width: 480px) { */\n  max-width: 40px;\n  /* } */\n`;\nconst SideBarContainer = styled.div`\n  display: grid;\n  grid-template-columns: min-content max-content;\n\n  height: 100%;\n  width: 100%;\n\n  max-height: 100%;\n  /* overflow: hidden; */\n`;\nconst Content = styled.div<SideBarState>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 32px 1fr min-content;\n\n  position: relative;\n\n  max-width: 0;\n  height: 100%;\n  max-height: 100%;\n  min-width: ${({ isOpen }) => (isOpen ? sideBarCompWidth : '0')};\n\n  overflow: hidden;\n\n  border-right: ${({ theme, isOpen }) => (isOpen ? `1px solid ${theme.sideBarBorderColor}` : '0 solid transparent')};\n  background-color: ${({ theme }) => theme.sideBarBackgroundColor};\n  transition: min-width ${({ theme }) => theme.globals.timingFunctionLong};\n`;\n\nconst Top = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  /* height: 100%; */\n  /* width: ${sideBarCompWidthMobile};\n  @media screen and (min-width: 480px) { */\n  width: ${sideBarCompWidth};\n  /* } */\n`;\n\nconst Middle = styled.div`\n  height: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  border-top: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n  border-bottom: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n\n  ::-webkit-scrollbar {\n    width: 2px;\n    height: 2px;\n  }\n\n  /* width: ${sideBarCompWidthMobile};\n  @media screen and (min-width: 480px) { */\n  width: ${sideBarCompWidth};\n  /* } */\n`;\nconst MiddleButtons = styled.div<{ isMiddleOpen?: boolean }>`\n  /* max-height: 0; */\n  overflow: hidden;\n\n  position: relative;\n\n  /* @media screen and (max-height: 480px) {\n    position: absolute;\n    top: 0;\n    left: 50%;\n\n    overflow: auto;\n    max-height: 100%;\n  } */\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding-bottom: 12px;\n\n  /* width: ${sideBarCompWidthMobile};\n  @media screen and (min-width: 480px) { */\n  width: ${sideBarCompWidth};\n  /* } */\n`;\n\nconst MenuToggler = styled.button<SideBarState>`\n  width: 4px;\n  height: 100%;\n  padding: 0;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 100;\n\n  border-style: none;\n\n  background-color: ${({ isOpen, theme }) => (isOpen ? theme.sideBarBorderColor : theme.sideBarTogglerBackgroundColor)};\n  border-right: ${({ theme, isOpen }) => (!isOpen ? `1px solid ${theme.sideBarBorderColor}` : `1px solid transparent`)};\n  //transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n`;\n\nconst isActiveCss = css`\n  color: ${({ theme }) => theme.accentColor.base};\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n\n  &::before {\n    height: 80%;\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n`;\nconst StyledButtonIcon = styled(ButtonIcon)<{ isActive: boolean }>`\n  width: 100%;\n  height: 32px;\n\n  border-radius: 0;\n  border: 0;\n\n  ${({ isActive }) => (isActive ? isActiveCss : null)}\n`;\n\nexport default SideBar;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport Header from './Header/Header';\n// import SideBar from './SideBarLeft/SideBar';\nimport { baseURL } from 'api';\n// import { useDispatch } from 'react-redux';\n// import { toast } from 'react-toastify';\nimport styled from 'styled-components';\nimport SideBar from 'components/SideBarLeft/SideBar';\n\ninterface ILayoutCTX {}\n\nexport const LayoutCTX = createContext({});\nexport const useLayout = () => useContext(LayoutCTX) as ILayoutCTX;\n\nconst Layout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const CTX = {};\n\n  useEffect(() => {\n    if (window.location.hostname !== 'localhost') return;\n\n    if (window.location.hostname === 'localhost') {\n      baseURL.setLocalhost();\n    }\n  }, []);\n  return (\n    <LayoutCTX.Provider value={CTX}>\n      <StyledLayout className=\"Layout\">\n        <Header />\n\n        <StSideBar />\n\n        <LayoutChildren className=\"LayoutChildren\">{children}</LayoutChildren>\n      </StyledLayout>\n    </LayoutCTX.Provider>\n  );\n};\n\nconst StyledLayout = styled.div`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n\n  overflow: hidden;\n\n  position: relative;\n\n  grid-template-rows: 40px calc(100% - 40px);\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 30px calc(100% - 30px);\n  }\n`;\n\nconst LayoutChildren = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n\n  grid-column: 2/3;\n  grid-row: 2/3;\n\n  position: relative;\n`;\n\nconst StSideBar = styled(SideBar)`\n  grid-column: 1/2;\n  grid-row: 2/3;\n`;\n\nexport default Layout;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionSetIndexPage } from 'redux/page/pageActions';\n\nimport styled from 'styled-components';\nimport Layout from '../Layout/Layout';\n\nconst AppGridPage: React.FC<{ path: string; children?: React.ReactNode }> = ({ path, children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (path) {\n      dispatch(actionSetIndexPage(path));\n    }\n  }, [dispatch, path]);\n\n  return (\n    <Layout>\n      <GridPage>{children}</GridPage>;\n    </Layout>\n  );\n};\n\nconst GridPage = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(12, 1fr);\n\n  height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n\n  // overflow: auto;\n  @media screen and (max-width: 768px) {\n  }\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n  }\n`;\n\nexport default AppGridPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LogoSvg: React.FC<any> = props => {\n  const styles = {\n    width: '34px',\n    height: '20px',\n    minWidth: '34px',\n  };\n\n  return (\n    <StyledLink to=\"#\" {...props}>\n      <IconBox style={styles} className=\"iconBox\">\n        <svg className=\"svg\" width=\"34\" height=\"20\" viewBox=\"0 0 34 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M22.7894 20H30.6591L11.1643 0H3.29459L22.7894 20Z\" fill=\"#7476ED\" />\n          <path d=\"M15.2073 1.02323e-06L34 19.2796V0H28.9143V6.08693L22.9811 0L15.2073 1.02323e-06Z\" fill=\"#E56F8C\" />\n          <path d=\"M0 0.669434V19.9998H5.08561V13.9128L11.0188 19.9998H18.8422L0 0.669434Z\" fill=\"#64C2DB\" />\n        </svg>\n      </IconBox>\n\n      <LogoName className=\"logoName\">Logoipsum</LogoName>\n    </StyledLink>\n  );\n};\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: fit-content;\n  height: 28px;\n  min-width: max-content;\n\n  padding: 0 8px;\n`;\nconst IconBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst LogoName = styled.div`\n  text-align: center;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.09em;\n\n  @media screen and (max-width: 480px) {\n    display: none;\n  }\n`;\nexport default LogoSvg;\n","import styled from 'styled-components';\nimport { IUser } from 'redux/auth/auth.types';\n\nexport interface ProfileCardProps extends Omit<IUser, '_id'> {\n  // avatarURL?: string;\n  // name?: string;\n  // email?: string;\n  nameFontSize?: string;\n  emailFontSize?: string;\n  avatarPrpps?: React.HTMLAttributes<HTMLDivElement>;\n  nameProps?: React.HTMLAttributes<HTMLDivElement>;\n  emailProps?: React.HTMLAttributes<HTMLDivElement>;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps & React.HTMLAttributes<HTMLDivElement>> = ({\n                                                                                          avatarURL = '',\n                                                                                          name = 'name',\n                                                                                          email = 'email',\n                                                                                          emailFontSize,\n                                                                                          nameFontSize,\n                                                                                          nameProps,\n                                                                                          emailProps,\n                                                                                          children,\n                                                                                          ...props\n                                                                                        }) => {\n  return (\n    <Card {...props}>\n      <Avatar>\n        <img src={avatarURL} alt='userImage' width={100} height={100} />\n      </Avatar>\n\n      <Wrapper>\n        <ProfileName fontSize={nameFontSize} {...nameProps}>\n          {name}\n        </ProfileName>\n\n        <ProfileEmail fontSize={emailFontSize} {...emailProps}>\n          {email}\n        </ProfileEmail>\n\n        {children}\n      </Wrapper>\n    </Card>\n  );\n};\nconst Card = styled.div`\n  display: flex;\n`;\nconst Avatar = styled.div`\n  min-width: 64px;\n  max-width: 64px;\n  height: 64px;\n  overflow: hidden;\n  border-radius: 50%;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px;\n\n  height: 100%;\n`;\nconst ProfileName = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '12px')};\n  font-weight: 600;\n`;\nconst ProfileEmail = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '10px')};\n  line-height: 16px;\n`;\nexport default ProfileCard;\n"],"names":["StyledNavMenu","styled","_templateObject","_taggedTemplateLiteral","MenuButton","ButtonIcon","_templateObject2","_ref","isOpen","concat","NavMenuContainer","_templateObject3","_ref2","theme","backgroundColorSecondary","_ref3","_ref4","globals","shadowMain","_ref5","timingFnMain","_ref6","NavList","_templateObject4","StyledNavLink","NavLink","_templateObject5","_ref7","timingFunctionLong","_ref8","accentColor","base","pages","useAppPages","companyId","useParams","_useState","useState","_useState2","_slicedToArray","setIsOpen","_useState3","_useState4","activePage","setActivePage","location","useLocation","handleOpenNavMenu","useCallback","onNavLinkClick","page","handleSetActivePage","renderLinks","useMemo","map","item","_jsxs","to","path","onClick","children","_jsx","SvgIcon","iconId","size","style","display","Text","title","useEffect","currentPathName","pathname","replace","currentPageData","find","onMenuClose","ev","target","HTMLElement","closest","KeyboardEvent","code","document","addEventListener","removeEventListener","variant","endIconSize","endIconId","Backdrop","timingFunctionMain","transitionDelay","backdropColor","css","MainList","_theme$globals","_templateObject6","MainListItem","_templateObject7","_ref9","borderColor","_ref10","_ref11","_theme$globals2","_ref12","_ref13","_templateObject8","_templateObject9","onClose","user","useAuthSelector","currentTarget","ProfileCard","_objectSpread","nameFontSize","emailFontSize","avatarURL","reactLogo","name","email","MenuContainer","handleMenuState","newState","iconSize","UserInfo","StButton","HeaderLeftSideItems","Component","_useSideBar","useSideBar","onTogglerClick","LogoSvg","NavMenu","HeaderRightSideItems","UserMenu","StyledHeader","fontColorHeader","headerBackgroundColor","headerBorderColor","LeftSide","StyledBox","_ref7$borderRight","borderRight","_ref8$borderLeft","borderLeft","RightSide","idx","props","ErrorContent","error","arguments","length","undefined","timingFnNull","Container","maxWidth","backgroundColorLight","sideBarBorderColor","Header","sideBarBackgroundColor","Title","ContentScroll","_ref14","sideBarButtonBackgroundColorActive","_ref15","RightSideContent","modal","useModalProvider","handleCloseMenu","rootEl","getElementById","className","RenderComponent","options","_useAppSettings","useAppSettings","isDarkMode","toggleAppMode","appSettings","width","height","window","confirm","reset","sideBarCompWidth","sideBarCompWidthMobile","StyledSideBar","fillColorHeader","SideBarContainer","Content","Top","Middle","MiddleButtons","Bottom","MenuToggler","sideBarTogglerBackgroundColor","isActiveCss","_ref16","StyledButtonIcon","_templateObject10","_ref17","isActive","handleOptionsState","sideBarButtons","sideBarButtonsBottom","ToggleThemeMode","ActionAppExit","SideBarOptions","LayoutCTX","createContext","StyledLayout","LayoutChildren","StSideBar","SideBar","hostname","baseURL","Provider","value","GridPage","dispatch","useDispatch","actionSetIndexPage","Layout","StyledLink","Link","IconBox","LogoName","minWidth","viewBox","fill","xmlns","d","Card","Avatar","Wrapper","ProfileName","fontSize","ProfileEmail","_ref$avatarURL","_ref$name","_ref$email","nameProps","emailProps","_objectWithoutProperties","_excluded","src","alt"],"sourceRoot":""}