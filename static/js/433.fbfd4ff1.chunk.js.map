{"version":3,"file":"static/js/433.fbfd4ff1.chunk.js","mappings":"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","sources":["hooks/usePermissonsActionsCreator.ts","components/AppPages/PageHome.tsx","components/AppPages/pagesStyles.tsx"],"sourcesContent":["import { ITableAction, ITableListContext, TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { PermissionEntity } from '../types/permissions.types';\nimport { PermissionService } from './usePermissionsService.hook';\nimport { IModalProviderContext, useModalService } from '../components/ModalProvider/ModalProvider';\nimport { useNavigate } from 'react-router-dom';\nimport { CompanyQueryType } from '../redux/global.types';\nimport { toast } from 'react-toastify';\nimport { NavigateFunction } from 'react-router/dist/lib/hooks';\nimport { Modals } from '../components/Modals/Modals';\nimport { useAppServiceProvider } from './useAppServices.hook';\nimport { AppModuleName } from '../redux/reduxTypes.types';\nimport { TableActionsBuilder } from '../utils/tables';\nimport { t } from '../lang';\nimport { useAuthSelector } from '../redux/selectors.store';\n\nexport type PermissionsActionsCreator = TableActionCreator<PermissionEntity>;\n\nexport type PermissionsActionsType =\n  | 'enterCompany'\n  | 'editCompany'\n  | 'deleteCompany'\n  | 'leaveCompany'\n  | 'rejectPermission'\n  | 'acceptPermission'\n  | 'createCompany'\n  | 'createPermission'\n  | 'deletePermission'\n  | 'editPermission';\nexport const isMyCompany = ({ owner, user }: PermissionEntity) => {\n  return user?._id === owner?._id;\n};\n\nexport interface PermissionsTablesActionProps {\n  ctx: ITableListContext<PermissionEntity>;\n  navigate: NavigateFunction;\n  service: PermissionService;\n  companyType: CompanyQueryType;\n  modalService: IModalProviderContext;\n}\n\nexport type IPermissionsTableAction = ITableAction<PermissionsActionsType>;\nexport type PermissionsActionCreator = (options: PermissionsTablesActionProps) => IPermissionsTableAction;\nconst createEnterCompanyAction = ({\n  ctx,\n  navigate,\n  service,\n}: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'enterCompany',\n  title: 'Перейти',\n  icon: 'logIn',\n  disabled: !ctx.selectedRow?._id,\n  iconSize: '100%',\n  type: 'onlyIcon',\n  onClick: () => {\n    console.log(ctx.selectedRow);\n\n    if (ctx.selectedRow?._id) {\n      service.logIn({\n        data: { _id: ctx.selectedRow?._id },\n        onSuccess: data => {\n          if (!data._id) return console.log('data', data);\n          toast.success(`Current company: ${data.company?.name}`);\n          navigate(`/app/${data._id}`);\n        },\n        onError: error => {\n          console.log(error);\n        },\n      });\n    }\n  },\n});\nconst createEditCompanyAction = ({\n  ctx,\n  navigate,\n  service,\n  companyType,\n  modalService,\n}: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'editCompany',\n  title: 'Редагувати',\n  icon: 'edit',\n  disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n  iconSize: '100%',\n  type: 'onlyIcon',\n  onClick: () => {\n    modalService.openModal({\n      Modal: Modals.FormCreateCompany,\n      modalChildrenProps: {\n        fillHeight: true,\n        title: 'Редагувати компанію',\n      },\n    });\n  },\n});\nconst createDeleteCompanyAction = ({ companyType, ctx }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'deleteCompany',\n  title: 'Видалити',\n  icon: 'delete',\n  iconSize: '100%',\n  disabled: ctx.selectedRow?._id && companyType ? ['own'].includes(companyType) : false,\n  type: 'onlyIcon',\n  onClick: () => {\n    console.log('selPermission', ctx.selectedRow?._id);\n  },\n});\n\nconst createLogOutCompanyAction = ({ companyType, ctx }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'leaveCompany',\n  title: 'Покинути',\n  icon: 'logOut',\n  iconSize: '100%',\n  disabled: ctx.selectedRow?._id && companyType ? !['invited'].includes(companyType) : true,\n  type: 'onlyIcon',\n  onClick: () => {\n    console.log('leaveCompany', ctx.selectedRow?._id);\n  },\n});\nconst createRejectPermission = ({ ctx, companyType }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'rejectPermission',\n  title: 'Відхилити',\n  icon: 'clear',\n  iconSize: '100%',\n  type: 'onlyIconFilled',\n  disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n  onClick: () => {\n    console.log('rejectPermission', ctx.selectedRow);\n  },\n});\nconst createAcceptPermissionAction = ({ ctx, companyType }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'acceptPermission',\n  title: 'Прийняти',\n  icon: 'done',\n  iconSize: '100%',\n  type: 'onlyIconFilled',\n  disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n  onClick: () => {\n    console.log('acceptPermission', ctx.selectedRow);\n  },\n});\nconst createAddNewCompanyAction = ({ modalService }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'createCompany',\n  title: 'Створити компанію',\n  icon: 'plus',\n  iconSize: '100%',\n  type: 'onlyIconFilled',\n  onClick: () => {\n    modalService.openModal({\n      Modal: Modals.FormCreateCompany,\n      props: {\n        fillHeight: true,\n        title: 'Створити компанію',\n      },\n    });\n  },\n});\nconst builder = new TableActionsBuilder<\n  PermissionService,\n  PermissionEntity,\n  { query: { type: CompanyQueryType }; userId?: string }\n>();\nbuilder.add('refresh', ({ ctx, service, extra }) => {\n  return {\n    name: 'refresh',\n    title: t('Refresh'),\n    icon: 'refresh',\n    iconSize: '100%',\n    type: 'onlyIcon',\n    disabled: !extra?.userId,\n    onClick: () => {\n      if (extra?.userId) {\n        service.getAllByUserId({\n          onLoading: ctx.onRefresh,\n          data: { userId: extra?.userId, query: extra?.query },\n        });\n      }\n    },\n  };\n});\n\nconst usePermissionsActionsCreator = (companyType: CompanyQueryType): PermissionsActionsCreator => {\n  const service = useAppServiceProvider()[AppModuleName.permissions];\n  const modalService = useModalService();\n  const userId = useAuthSelector()?.user?._id;\n\n  const navigate = useNavigate();\n\n  return (ctx): ITableAction<PermissionsActionsType>[] => {\n    // const builder = new TableActionsBuilder({\n    //   service,\n    //   modalService,\n    // })\n    //   .add('d', () => {\n    //     return { separator: true };\n    //   })\n    //   .add('a', () => {\n    //     return { separator: true };\n    //   })\n    //   .add('g', () => {\n    //     return { separator: true };\n    //   })\n    //   .add('f', () => {\n    //     return { separator: true };\n    //   });\n    // console.log({ builder });\n\n    const controls = {\n      ctx,\n      navigate,\n      service,\n      modalService,\n      companyType,\n    };\n    const build = builder.activate({\n      navigate,\n      service,\n      modalService,\n      extra: {\n        userId,\n        query: { type: companyType },\n      },\n    });\n    return [\n      createEnterCompanyAction(controls),\n      createLogOutCompanyAction(controls),\n      { separator: true },\n      ...build(ctx),\n      { separator: true },\n      createEditCompanyAction(controls),\n      createDeleteCompanyAction(controls),\n      { separator: true },\n      createRejectPermission(controls),\n      createAcceptPermissionAction(controls),\n      createAddNewCompanyAction(controls),\n    ];\n  };\n};\n\nexport default usePermissionsActionsCreator;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport { usePermissionsSelector } from 'hooks/usePermissionsService.hook';\nimport { PermissionEntity } from '../../types/permissions.types';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport usePermissionsActionsCreator from '../../hooks/usePermissonsActionsCreator';\nimport { CompanyQueryType } from '../../redux/global.types';\nimport { PermissionStatus } from 'types/permissions.types';\nimport { permissionsTableColumns } from '../../data/permissions.data';\nimport { permissionsSearchParams } from '../../data/companies.data';\nimport { useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../redux/reduxTypes.types';\nimport { BaseAppPageProps } from './index';\n\nexport type CompanyTypeItem = { title: string; param: CompanyQueryType };\n\nconst companyTypes: CompanyTypeItem[] = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n\ninterface Props extends Partial<BaseAppPageProps> {}\nconst PageHome: React.FC<Props> = ({ path }) => {\n  const { user } = useAuthSelector();\n  const [companyType, setCompanyType] = useState<CompanyTypeItem>();\n  const setSearchParams = useSearchParams({\n    companyType: companyTypes[0].param,\n  })[1];\n  const state = usePermissionsSelector();\n  const permissionsService = useAppServiceProvider()[AppModuleName.permissions];\n  const actionsCreator = usePermissionsActionsCreator(companyType?.param || 'own');\n  const [loading, setLoading] = useState(false);\n  const permissionsData = useMemo(() => {\n    return state.permissions?.filter(pr => {\n      if (companyType?.param === 'invited') return pr.status === PermissionStatus.ACCEPTED;\n      if (companyType?.param === 'invites') return pr.status === PermissionStatus.PENDING;\n      if (companyType?.param === 'all') return pr;\n      if (companyType?.param === 'own') return pr.user?._id === pr.owner?._id;\n      return pr;\n    });\n  }, [companyType?.param, state.permissions]);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<PermissionEntity> => ({\n      tableData: permissionsData,\n      tableTitles: permissionsTableColumns,\n      tableSearchParams: permissionsSearchParams,\n      isFilter: false,\n      isSearch: true,\n      checkBoxes: false,\n      actionsCreator,\n    }),\n    [actionsCreator, permissionsData]\n  );\n  const onSearchParamClick = useCallback(\n    (item: CompanyTypeItem) => {\n      setSearchParams({ companyType: item.param });\n      setCompanyType(item);\n    },\n    [setSearchParams]\n  );\n  const isActiveClassName = useCallback(\n    (param: string) => (companyType?.param === param ? 'active' : ''),\n    [companyType?.param]\n  );\n\n  const renderFilterButtons = useMemo(() => {\n    return companyTypes.map(item => (\n      <StButtonIcon\n        key={item.param}\n        variant=\"def\"\n        onClick={() => onSearchParamClick(item)}\n        className={isActiveClassName(item.param)}\n      >\n        {item.title}\n      </StButtonIcon>\n    ));\n  }, [isActiveClassName, onSearchParamClick]);\n\n  useEffect(() => {\n    setSearchParams({ companyType: companyTypes[0].param });\n    setCompanyType(companyTypes[0]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    user._id && permissionsService.getAllByUserId({ data: { userId: user._id }, onLoading: setLoading });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user._id]);\n\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>{/*<ProfileCard {...user} />*/}</ProfileInfo>\n\n        <FilterButtons>\n          <ButtonsList>{renderFilterButtons}</ButtonsList>\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        <TableList {...tableConfig} isLoading={loading} />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  //background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace};\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 2px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      height: 3px;\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      height: 3px;\n\n      width: 100%;\n    }\n  }\n`;\n\nexport default memo(PageHome);\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["createEnterCompanyAction","_ref2","_ctx$selectedRow","ctx","navigate","service","name","title","icon","disabled","selectedRow","_id","iconSize","type","onClick","_ctx$selectedRow2","_ctx$selectedRow3","console","log","logIn","data","onSuccess","_data$company","toast","concat","company","onError","error","createEditCompanyAction","_ref3","_ctx$selectedRow4","companyType","modalService","includes","openModal","Modal","Modals","modalChildrenProps","fillHeight","createDeleteCompanyAction","_ref4","_ctx$selectedRow5","_ctx$selectedRow6","createLogOutCompanyAction","_ref5","_ctx$selectedRow7","_ctx$selectedRow8","createRejectPermission","_ref6","_ctx$selectedRow9","createAcceptPermissionAction","_ref7","_ctx$selectedRow10","createAddNewCompanyAction","_ref8","props","builder","TableActionsBuilder","add","_ref9","extra","t","userId","getAllByUserId","onLoading","onRefresh","query","_useAuthSelector","_useAuthSelector$user","useAppServiceProvider","AppModuleName","useModalService","useAuthSelector","user","useNavigate","controls","build","activate","separator","_toConsumableArray","companyTypes","param","PageHome","_ref","path","_useState","useState","_useState2","_slicedToArray","setCompanyType","setSearchParams","useSearchParams","state","usePermissionsSelector","permissionsService","actionsCreator","usePermissionsActionsCreator","_useState3","_useState4","loading","setLoading","permissionsData","useMemo","_state$permissions","permissions","filter","pr","_pr$user","_pr$owner","status","PermissionStatus","owner","tableConfig","tableData","tableTitles","permissionsTableColumns","tableSearchParams","permissionsSearchParams","isFilter","isSearch","checkBoxes","onSearchParamClick","useCallback","item","isActiveClassName","renderFilterButtons","map","_jsx","StButtonIcon","variant","className","children","useEffect","_jsxs","Page","Top","ProfileInfo","FilterButtons","ButtonsList","Bottom","TableList","_objectSpread","isLoading","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_templateObject2","theme","tableBackgroundColor","takeFullPlace","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ButtonIcon","_templateObject7","trBorderClr","globals","timingFnMui","accentColor","base","memo","css"],"sourceRoot":""}