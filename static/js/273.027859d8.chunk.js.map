{"version":3,"file":"static/js/273.027859d8.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/Overviews/order/compnents/OrderOverviewCustomerInfo.tsx","components/Overviews/order/tabs/OrderOverviewInfoTab.tsx","components/Overviews/order/compnents/OrderOverviewTotals.tsx","components/Overviews/order/compnents/OrderOverviewInvoicing.tsx","components/Overviews/order/compnents/OrderOverviewDelivery.tsx","components/Overviews/order/OrderOverviewXL.tsx","components/AppPages/orders/PageOrderOverviewLeftSide.tsx","Providers/CurrentOrderProvider.tsx","components/AppPages/orders/tabs/OrderContentTab.tsx","components/AppPages/orders/tabs/OrderInvoicesTab.tsx","components/AppPages/orders/tabs/OrderPaymentsTab.tsx","components/AppPages/orders/tabs/OrderDeliveriesTab.tsx","components/AppPages/orders/PageOrderOverviewTabs.tsx","components/AppPages/orders/PageOrderOverview.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Overviews/components/OverviewTextCell.tsx","components/atoms/index.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import { CreatedOverlay, useOverlayService } from './OverlayStackProvider';\nimport React, { createContext, MouseEventHandler, useCallback, useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport interface OverlayLocalValue extends CreatedOverlay {}\nexport const OverlayLocalCTX = createContext<OverlayLocalValue>({});\nexport const useOverlay = () => useContext(OverlayLocalCTX);\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <OverlayLocalCTX.Provider\n            value={{\n              onClose: () => {\n                overlaySrv.remove(id);\n              },\n              compId: id,\n              index: index,\n            }}\n          >\n            <RenderComponent\n              key={`overlay-${id}`}\n              {...props}\n              onClose={() => {\n                overlaySrv.remove(id);\n              }}\n              compId={id}\n              index={index}\n            />\n          </OverlayLocalCTX.Provider>\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 200;\n\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  background-color: ${p => p.theme.backdropColorDark};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  height: 100%;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  create: OverlayCreator;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport type OverlayCreator = <Props = any>(\n  Component: React.FC<OverlayRenderComponentProps<Props>>,\n  props?: OverlayRenderComponentProps<Props>\n) => CreatedOverlay;\n\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n    create: (Component, props) => createOverlayComponent({ RenderComponent: Component, props }),\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { t } from '../../../../lang';\nimport { useMemo } from 'react';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\n\nexport const OrderOverviewCustomerInfo: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const customer = data?.customer;\n\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      {\n        label: t('First name'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Second name'),\n        value: customer?.name?.second,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Middle name'),\n        value: customer?.name?.middle,\n        visible: customer?.businessType !== 'company',\n      },\n\n      {\n        label: t('Base label'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'person',\n      },\n      { label: t('Print'), value: customer?.name?.second, visible: customer?.businessType !== 'person' },\n\n      { label: t('Email'), value: customer?.email, visible: true },\n      { label: t('Phone'), value: customer?.phone, visible: true },\n\n      { label: t('Business type'), value: customer?.businessType, visible: true },\n      { label: t('Sex type'), value: customer?.sexType, visible: true },\n\n      { label: t('Engagement type'), value: customer?.engagementSource, visible: true },\n\n      { label: t('Age'), value: customer?.age, visible: true },\n\n      { label: t('Tags'), value: null, visible: true },\n    ];\n\n    return cells.map(cell => {\n      return (\n        cell.visible && (\n          <FlexBox\n            key={cell.label}\n            fxDirection={'row'}\n            padding={'6px'}\n            gap={8}\n            alignItems={'center'}\n            justifyContent={'space-between'}\n          >\n            <Text $size={11}>{cell?.label}</Text>\n            <Text $size={13} $weight={500}>\n              {cell?.value ?? t('undefined')}\n            </Text>\n          </FlexBox>\n        )\n      );\n    });\n  }, [data?.customer]);\n\n  return (\n    <CellStyledComp.Cell>\n      {cell?.title && <OverviewCellHeader title={cell?.title} />}\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import FlexBox from '../../../atoms/FlexBox';\nimport styled from 'styled-components';\nimport React, { useMemo, useState } from 'react';\nimport { useOverlayService } from '../../../../Providers/Overlay/OverlayStackProvider';\nimport { useOrdersSelector } from '../../../../redux/selectors.store';\nimport TabSelector from '../../../atoms/TabSelector';\nimport { OverviewTextCell } from 'components/Overviews/components/OverviewTextCell';\nimport { OverviewCellProps } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { t } from '../../../../lang';\nimport { _enumToTabs } from '../../../../utils';\nimport { OrderOverviewTotals } from '../compnents/OrderOverviewTotals';\nimport { PartialRecord } from '../../../../types/utils.types';\nimport { OrderOverviewCustomerInfo } from '../compnents/OrderOverviewCustomerInfo';\nimport { OrderOverviewInvoicing } from '../compnents/OrderOverviewInvoicing';\nimport { OrderOverviewDelivery } from '../compnents/OrderOverviewDelivery';\n\nexport interface OrderOverviewInfoTabProps {}\n\nenum OrderOverviewInfoTabsEnum {\n  General = 'General',\n  Customer = 'Customer',\n  Invoicing = 'Invoicing',\n  Delivery = 'Delivery',\n  Additional = 'Additional',\n}\n\nconst orderOverviewInfoTabs = _enumToTabs(OrderOverviewInfoTabsEnum);\n\nconst OrderOverviewInfoTab: React.FC<OrderOverviewInfoTabProps> = _p => {\n  const overlayS = useOverlayService();\n  const currentOrder = useOrdersSelector().currentOrder;\n  const [currentTab, setCurrentTab] = useState<OrderOverviewInfoTabsEnum>(OrderOverviewInfoTabsEnum.General);\n  const cellsMap = getOrderOverviewCellsMap();\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlayS.open} cell={cell} data={currentOrder} />;\n            }\n            return <OverviewTextCell key={cell.title} overlayHandler={overlayS.open} cell={cell} data={currentOrder} />;\n          }),\n    [cellsMap, currentTab, overlayS.open, currentOrder]\n  );\n\n  return (\n    <Box fillWidth flex={1} overflow={'auto'}>\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        options={orderOverviewInfoTabs}\n        onOptSelect={option => {\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      {renderCells}\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)``;\nexport default OrderOverviewInfoTab;\n\nconst orderOverviewCells: OverviewCellProps<OrderEntity>[] = [\n  {\n    title: t('Manager'),\n    getValue: data => data?.manager?.user?.email,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Reference'),\n    getValue: data => data?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Group reference'),\n    getValue: data => data?.group?.reference?.internal,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    title: t('Group strategy'),\n    getValue: data => data?.group?.strategy,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Totals'),\n    CellComponent: OrderOverviewTotals,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n\n  {\n    title: t('Status'),\n    getValue: data => data?.status,\n    tab: OrderOverviewInfoTabsEnum.General,\n  },\n  {\n    CellComponent: OrderOverviewCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Customer,\n  },\n  {\n    title: t('Receiver'),\n    CellComponent: OrderOverviewCustomerInfo,\n    tab: OrderOverviewInfoTabsEnum.Delivery,\n  },\n  {\n    title: t('Invoicing'),\n    CellComponent: OrderOverviewInvoicing,\n    tab: OrderOverviewInfoTabsEnum.Invoicing,\n  },\n  { title: t('Delivery'), CellComponent: OrderOverviewDelivery, tab: OrderOverviewInfoTabsEnum.Delivery },\n  { title: t('Additional'), tab: OrderOverviewInfoTabsEnum.Additional },\n];\n\nfunction getOrderOverviewCellsMap(): PartialRecord<\n  OrderOverviewInfoTabsEnum | string,\n  OverviewCellProps<OrderEntity, OrderOverviewInfoTabsEnum>[]\n> {\n  const orderOverviewCellsMap: PartialRecord<\n    OrderOverviewInfoTabsEnum | string,\n    OverviewCellProps<OrderEntity, OrderOverviewInfoTabsEnum>[]\n  > = {};\n  orderOverviewCells.forEach(item => {\n    const tab = item.tab;\n\n    if (tab) {\n      if (orderOverviewCellsMap[tab]) {\n        orderOverviewCellsMap[tab]?.push(item);\n      } else {\n        orderOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return orderOverviewCellsMap;\n}\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { t } from '../../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { numberWithSpaces } from '../../../../utils';\nimport { Text } from '../../../atoms/Text';\n\nexport const OrderOverviewTotals: RenderOverviewCellComponent<OrderEntity> = ({ data, cell }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Amount'), value: numberWithSpaces(data?.total?.amount) },\n      { label: t('Items count'), value: data?.total?.items },\n    ];\n    return cells.map(cell => (\n      <FlexBox fxDirection={'row'} padding={'6px'} justifyContent={'space-between'} fillWidth gap={8}>\n        <Text $size={11}>{cell.label}</Text>\n        <CellStyledComp.CellText $weight={600}>{cell?.value}</CellStyledComp.CellText>\n      </FlexBox>\n    ));\n  }, [data?.total?.amount, data?.total?.items]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={cell.title} />\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\n\nexport const OrderOverviewInvoicing: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OrderEntity } from '../../../../types/orders/orders.types';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { t } from '../../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\n\nexport const OrderOverviewDelivery: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { OrderEntity } from '../../../types/orders/orders.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { ModalHeader } from '../../atoms';\nimport React, { useMemo, useState } from 'react';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport { t } from '../../../lang';\nimport { useAppParams } from '../../../hooks';\nimport { enumToFilterOptions } from '../../../utils';\nimport TabSelector from '../../atoms/TabSelector';\nimport OrderOverviewInfoTab from './tabs/OrderOverviewInfoTab';\n\nexport interface OrderOverviewXLProps {\n  order?: OrderEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  isRefresh?: boolean;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\nexport enum OrderOverviewTabs {\n  info = 'Info',\n  chat = 'Chat',\n  statuses = 'Statuses',\n  comments = 'Comments',\n  tasks = 'tasks',\n}\n\nconst tabs = enumToFilterOptions(OrderOverviewTabs);\n\nconst OrderOverviewXL: React.FC<OrderOverviewXLProps> = p => {\n  const [currentTab, setCurrentTab] = useState<number>(0);\n  // const orderS = useAppServiceProvider()[ServiceName.orders];\n  const orderId = useAppParams()?.orderId;\n  const currentOrder = useOrdersSelector().currentOrder;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const renderTab = useMemo(() => {\n    if (tabs[currentTab].value === OrderOverviewTabs.info) {\n      return <OrderOverviewInfoTab />;\n    }\n\n    return null;\n  }, [currentTab]);\n\n  return (\n    <Container flex={1} fillWidth padding={'0 8px'}>\n      <ModalHeader\n        title={t('Order overview')}\n        onBackPress={() => {\n          if (location?.pathname) {\n            const newPath = location?.pathname?.replace(`/${currentOrder?._id || orderId}`, '');\n\n            newPath && navigate(newPath);\n          }\n        }}\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <TabSelector options={tabs} optionProps={{ fitContentH: true }} onOptSelect={(_o, _v, i) => setCurrentTab(i)} />\n\n        {renderTab}\n      </Content>\n\n      <Footer fxDirection={'row'} alignItems={'center'} justifyContent={'space-between'} padding={'8px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            isLoading={p?.isRefresh}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nexport default OrderOverviewXL;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useState } from 'react';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OrderOverviewXL from 'components/Overviews/order/OrderOverviewXL';\n\nexport interface PageOrderOverviewLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\nconst PageOrderOverviewLeftSide: React.FC<PageOrderOverviewLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const { currentOrder } = useOrdersSelector();\n  const setLoading = useState(false)[1];\n  const { orders: ordersServ } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OrderOverviewXL\n        order={currentOrder}\n        onRefresh={() => {\n          currentOrder?._id &&\n            ordersServ.getById({\n              data: { _id: currentOrder?._id, options: { refreshCurrent: true } },\n              onLoading: setLoading,\n            });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default PageOrderOverviewLeftSide;\n","import React, { createContext, useContext, useEffect, useMemo } from 'react';\nimport { useOrdersSelector } from '../redux/selectors.store';\nimport { OrderEntity } from '../types/orders/orders.types';\nimport { ServiceName, useAppServiceProvider } from '../hooks/useAppServices.hook';\nimport { useAppParams } from '../hooks';\nimport { useAppDispatch } from '../redux/store.store';\nimport {\n  getAllDeliveriesByOrderThunk,\n  getAllInvoicesByOrderThunk,\n  getAllPaymentsByOrderThunk,\n  getOrderSlotsThunk,\n} from '../redux/orders/orders.thunks';\nimport { __ServiceDispatcherAsync } from '../redux/app-redux.types';\n\nexport interface PageCurrentOrderProviderProps {\n  children?: React.ReactNode;\n}\n\nexport type OrderProviderValue = Partial<OrderEntity> & {\n  _origin?: OrderEntity;\n  getSlots: __ServiceDispatcherAsync<typeof getOrderSlotsThunk>;\n  getPayments: __ServiceDispatcherAsync<typeof getAllPaymentsByOrderThunk>;\n  getInvoices: __ServiceDispatcherAsync<typeof getAllInvoicesByOrderThunk>;\n  getDeliveries: __ServiceDispatcherAsync<typeof getAllDeliveriesByOrderThunk>;\n};\n\nexport const CurrentOrderCTX = createContext({});\n\nexport const useCurrentOrder = () => useContext(CurrentOrderCTX) as OrderProviderValue;\n\nconst CurrentOrderProvider: React.FC<PageCurrentOrderProviderProps> = ({ children }) => {\n  const { currentOrder } = useOrdersSelector();\n  const params = useAppParams();\n  const dispatch = useAppDispatch();\n  const service = useAppServiceProvider()[ServiceName.orders];\n\n  const CTX = useMemo((): OrderProviderValue => {\n    const orderId = currentOrder?._id;\n\n    return {\n      ...currentOrder,\n      _origin: currentOrder,\n      getSlots: async args => {\n        return !orderId ? undefined : dispatch(getOrderSlotsThunk({ ...args, data: { params: { orderId } } }));\n      },\n      getPayments: async args => {\n        return !orderId ? undefined : dispatch(getAllPaymentsByOrderThunk({ ...args, data: { params: { orderId } } }));\n      },\n      getInvoices: async args => {\n        return !orderId ? undefined : dispatch(getAllInvoicesByOrderThunk({ ...args, data: { params: { orderId } } }));\n      },\n      getDeliveries: async args => {\n        return !orderId\n          ? undefined\n          : dispatch(getAllDeliveriesByOrderThunk({ ...args, data: { params: { orderId } } }));\n      },\n    };\n  }, [currentOrder, dispatch]);\n\n  useEffect(() => {\n    if (!currentOrder) {\n      params.orderId && service.getById({ data: { _id: params.orderId } });\n    }\n  }, [currentOrder, params.orderId, service]);\n\n  return <CurrentOrderCTX.Provider value={CTX ?? {}}>{children}</CurrentOrderCTX.Provider>;\n};\nexport default CurrentOrderProvider;\n","import FlexBox from '../../../atoms/FlexBox';\nimport TabSelector from '../../../atoms/TabSelector';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useEffect, useMemo, useState } from 'react';\nimport { orderSlotsTableColumns } from '../../../../data';\nimport { offerTypeFilterOptions } from '../../../../data/modalFilterOptions.data';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\nimport { OfferTypeEnum } from '../../../../types/offers/offers.types';\nimport { useCurrentOrder } from '../../../../Providers/CurrentOrderProvider';\nimport { OrderSlotEntity } from '../../../../types/orders/order-slot.types';\n\nexport interface OrderContentTabProps {}\n\nexport const OrderContentTab: React.FC<OrderContentTabProps> = p => {\n  // const service = useAppServiceProvider()[AppModuleName.orders];\n  const [currentTab, setCurrentTab] = useState<OfferTypeEnum | undefined>();\n  const loaders = useLoaders<'update' | 'create' | 'refresh'>();\n  const Order = useCurrentOrder();\n\n  // const { currentOrder } = useOrdersSelector();\n\n  const tableData = useMemo(() => {\n    // const grouped=groupBy(currentOrder?.slots)\n\n    if (currentTab) {\n      return Order?.slots?.filter(el => el.offer?.type === currentTab);\n    } else return Order?.slots;\n  }, [Order?.slots, currentTab]);\n\n  const tableConfigs = useMemo((): ITableListProps<OrderSlotEntity> => {\n    return {\n      actionsCreator: _ctx => {\n        return [\n          {\n            icon: 'refresh',\n            name: 'refresh',\n            disabled: !Order._id,\n            onClick: () => {\n              Order.getSlots({ onLoading: loaders.onLoading('refresh') });\n            },\n          },\n        ];\n      },\n    };\n  }, [Order, loaders]);\n\n  useEffect(() => {\n    if (!Order?.slots?.length) {\n      Order.getSlots({ onLoading: loaders.onLoading('refresh') });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <FlexBox fillWidth overflow={'hidden'} flex={1}>\n      <FlexBox fillWidth>\n        <TabSelector\n          options={offerTypeFilterOptions}\n          defaultValue={currentTab}\n          preventDefault\n          onResetPress={() => {\n            setCurrentTab(undefined);\n          }}\n          onOptSelect={(_o, value) => {\n            setCurrentTab(value);\n          }}\n        />\n      </FlexBox>\n\n      <TableList\n        hasSearch={false}\n        hasFilter={false}\n        {...tableConfigs}\n        tableData={tableData}\n        isLoading={loaders.isLoading.refresh}\n        tableTitles={orderSlotsTableColumns}\n      />\n    </FlexBox>\n  );\n};\n\nexport default OrderContentTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { invoicesTableColumns } from '../../../../data/invoicing.data';\nimport { useEffect, useMemo } from 'react';\nimport { IInvoice } from '../../../../types/invoices.types';\nimport { OrderTabProps } from './orderTabs.types';\nimport { useCurrentOrder } from '../../../../Providers/CurrentOrderProvider';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\n\nexport interface OrderInvoicesTabProps extends OrderTabProps {}\n\nconst OrderInvoicesTab: React.FC<OrderInvoicesTabProps> = _p => {\n  // const state = useOrdersSelector();\n  // const service = useAppServiceProvider().get(AppModuleName.orders);\n\n  const Order = useCurrentOrder();\n\n  // const modalService = useModalService();\n  const loaders = useLoaders<'refresh'>();\n\n  const tableConfigs = useMemo((): ITableListProps<IInvoice> => {\n    return {\n      actionsCreator: ctx => {\n        return [\n          {\n            name: 'refresh',\n            icon: 'refresh',\n            disabled: !Order._id,\n            onClick: () => {\n              Order.getInvoices({});\n            },\n          },\n        ];\n      },\n    };\n  }, [Order]);\n\n  useEffect(() => {\n    if (Order?._id) {\n      Order.getInvoices({ onLoading: loaders.onLoading('refresh') });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfigs}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders.isLoading.refresh}\n      tableData={Order?.invoices}\n      tableTitles={invoicesTableColumns}\n    />\n  );\n};\n\nexport default OrderInvoicesTab;\n","import TableList from '../../../TableList/TableList';\n\nexport interface OrderPaymentsTabProps {}\n\nconst OrderPaymentsTab: React.FC<OrderPaymentsTabProps> = () => {\n  return <TableList hasSearch={false} hasFilter={false} />;\n};\n\nexport default OrderPaymentsTab;\n","import TableList from '../../../TableList/TableList';\nimport { OrderTabProps } from './orderTabs.types';\nimport { useEffect } from 'react';\nimport { useCurrentOrder } from '../../../../Providers/CurrentOrderProvider';\n\nexport interface OrderDeliveriesTabProps extends OrderTabProps {}\n\nconst OrderDeliveriesTab: React.FC<OrderDeliveriesTabProps> = ({ order }) => {\n  const Order = useCurrentOrder();\n\n  useEffect(() => {\n    if (!Order?.deliveries?.length) {\n      Order?.getDeliveries({});\n    }\n  }, [Order]);\n\n  return (\n    <TableList\n      hasSearch={false}\n      hasFilter={false}\n      actionsCreator={() => {\n        return [{ title: 'Refresh', icon: 'refresh', onClick: () => Order.getDeliveries({}) }];\n      }}\n    />\n  );\n};\n\nexport default OrderDeliveriesTab;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport OrderContentTab from './tabs/OrderContentTab';\nimport OrderInvoicesTab from './tabs/OrderInvoicesTab';\nimport OrderPaymentsTab from './tabs/OrderPaymentsTab';\nimport OrderDeliveriesTab from './tabs/OrderDeliveriesTab';\nimport { DrawerHeader } from '../../Overlays';\nimport { t } from '../../../lang';\n\nexport interface PageOrderOverviewTabsProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\nenum OrderTabNameEnum {\n  Content = 'Content',\n  Invoices = 'Invoices',\n  Payments = 'Payments',\n  Deliveries = 'Deliveries',\n  // Shipments = 'Shipments',\n}\nconst toggleOptions = enumToFilterOptions(OrderTabNameEnum);\nconst PageOrderOverviewTabs = ({ toggleVisibility, isVisible }: PageOrderOverviewTabsProps) => {\n  // const orderId = useAppParams()?.orderId;\n\n  const { currentOrder } = useOrdersSelector();\n  // const service = useAppServiceProvider()[ServiceName.orders];\n  const [current, setCurrent] = useState<OrderTabNameEnum>(OrderTabNameEnum.Content);\n\n  const renderTab = useMemo(() => {\n    if (current === OrderTabNameEnum.Content) {\n      return <OrderContentTab />;\n    }\n    if (current === OrderTabNameEnum.Invoices) {\n      return <OrderInvoicesTab />;\n    }\n    if (current === OrderTabNameEnum.Payments) {\n      return <OrderPaymentsTab />;\n    }\n    if (current === OrderTabNameEnum.Deliveries) {\n      return <OrderDeliveriesTab />;\n    }\n  }, [current]);\n\n  const filterHandler: FilterSelectHandler<OrderTabNameEnum> = (_, value, index) => {\n    value && setCurrent(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      {isVisible && (\n        <DrawerHeader title={currentOrder?.reference?.internal ?? t('undefined')} onBackPress={toggleVisibility} />\n      )}\n\n      <FlexBox>\n        <TabSelector options={toggleOptions} defaultValue={current} onOptSelect={filterHandler} preventDefault />\n      </FlexBox>\n\n      <FlexBox overflow={'hidden'} flex={1}>\n        {renderTab}\n      </FlexBox>\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: ${p => (p.isVisible ? '0 12px 26px rgba(0, 0, 0, 0.25)' : '')};\n  }\n`;\n\nexport default PageOrderOverviewTabs;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport { AppGridPage } from '../pages';\nimport { useAppParams } from '../../../hooks';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\nimport PageOrderOverviewLeftSide from './PageOrderOverviewLeftSide';\nimport PageOrderOverviewTabs from './PageOrderOverviewTabs';\nimport { BaseAppPageProps } from '../index';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../redux/reduxTypes.types';\nimport CurrentOrderProvider from '../../../Providers/CurrentOrderProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nconst PageOrderOverview: React.FC<Props> = ({ path }) => {\n  const service = useAppServiceProvider()[AppModuleName.orders];\n\n  const [isTabsSideVisible, setIsTabsSideVisible] = useState<boolean>(false);\n  const { orderId } = useAppParams();\n\n  const toggleRightSide = () => {\n    setIsTabsSideVisible(p => !p);\n  };\n\n  useEffect(() => {\n    if (orderId) {\n      service.getById({\n        data: { _id: orderId, options: { refreshCurrent: true } },\n      });\n    }\n  }, [orderId, service]);\n\n  return (\n    <AppGridPage path={path}>\n      <CurrentOrderProvider>\n        <OverlayStackProvider>\n          <Page>\n            <PageOrderOverviewLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n            <PageOrderOverviewTabs toggleVisibility={toggleRightSide} isVisible={isTabsSideVisible} />\n          </Page>\n        </OverlayStackProvider>\n      </CurrentOrderProvider>\n    </AppGridPage>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\nexport default PageOrderOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 8px;\n\n  font-weight: 500;\n  font-size: 13px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'max-content'}\n      alignItems={'center'}\n      minHeight={'36px'}\n      padding={'4px 0'}\n    >\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={13} $padding={'6px 8px'}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'column'}\n        gap={8}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 32 }}\n      >\n        {!value || ['string', 'number'].includes(typeof value) ? (\n          <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n            {value || t('undefined')}\n          </CellStyledComp.CellText>\n        ) : (\n          value\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import ButtonIcon from './ButtonIcon';\nimport FlexBox from './FlexBox';\nimport { Text } from './Text';\nimport styled from 'styled-components';\nimport { t } from '../../lang';\nimport { isUndefined } from 'lodash';\n\nexport const DefaultContent: React.FC<{ content?: string }> = ({ content } = {}) => {\n  return <div>{`Default content: ${content}`}</div>;\n};\nexport const ErrorContent: React.FC<{ error?: string }> = ({ error } = {}) => {\n  return <div>{`Error: ${error}`}</div>;\n};\n\nexport const ModalHeader = ({\n  onClose,\n  onBackPress,\n  title,\n  showSubmitButton,\n  canSubmit,\n  renderTitle,\n  ...props\n}: {\n  canSubmit?: boolean;\n  onBackPress?: () => void;\n  onClose?: () => void;\n  title?: string;\n  showSubmitButton?: boolean;\n  renderTitle?: React.ReactNode;\n}) => {\n  return (\n    <Header padding={'4px 0'} {...props} gap={8}>\n      <FlexBox fillWidth fxDirection={'row'} justifyContent={'space-between'} alignItems={'stretch'} height={'32px'}>\n        {onBackPress && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            icon={'SmallArrowLeft'}\n            iconSize={'22px'}\n            padding={'0'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            onClick={onBackPress || onClose}\n          >\n            {t('Back')}\n          </ButtonIcon>\n        )}\n\n        {renderTitle || (\n          <FlexBox justifyContent={'center'} overflow={'hidden'}>\n            <Text\n              $weight={600}\n              $size={14}\n              style={{ textTransform: 'uppercase', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n            >\n              {title}\n            </Text>\n          </FlexBox>\n        )}\n\n        {showSubmitButton && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            gap={'6px'}\n            type={showSubmitButton ? 'submit' : 'button'}\n            padding={'0 6px'}\n            endIcon={'done'}\n            endIconSize={'22px'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            disabled={!canSubmit}\n          >\n            {'Ok'}\n          </ButtonIcon>\n        )}\n\n        {onClose && (\n          <ButtonIcon\n            variant={'onlyIconNoEffects'}\n            icon={'close'}\n            iconSize={'95%'}\n            size={'24px'}\n            padding={'0'}\n            onClick={onClose}\n          ></ButtonIcon>\n        )}\n      </FlexBox>\n    </Header>\n  );\n};\n\nconst Header = styled(FlexBox)`\n  height: 32px;\n`;\n\nexport const DrawerFooter = ({\n  submitButtonText = 'Прийняти',\n  loading,\n  extraFooter,\n  canSubmit,\n  onCreatePress,\n  resetButtonShown,\n  onAcceptPress,\n  canAccept,\n}: {\n  onAcceptPress?: () => void;\n  canSubmit?: boolean;\n  canAccept?: boolean;\n  resetButtonShown?: boolean;\n  extraFooter?: React.ReactNode;\n  loading?: boolean;\n  onCreatePress?: () => void;\n  submitButtonText?: string;\n}) => {\n  return (\n    <Footer fillWidth>\n      {extraFooter}\n\n      <FlexBox padding={'8px 8px'} fxDirection={'row'} gap={8} alignItems={'center'}>\n        {resetButtonShown && (\n          <ButtonIcon variant={'onlyIcon'} icon={'clear'} size={'36px'} iconSize={'80%'} type={'reset'} />\n        )}\n\n        {onCreatePress && (\n          <ButtonIcon variant={'onlyIcon'} icon={'plus'} size={'36px'} iconSize={'80%'} onClick={onCreatePress} />\n        )}\n\n        <ButtonIcon\n          variant={'filledMiddle'}\n          flex={1}\n          type={isUndefined(canSubmit) ? 'button' : 'submit'}\n          style={{ padding: '0 12px' }}\n          textTransform={'uppercase'}\n          fontWeight={600}\n          endIcon={'SmallArrowRight'}\n          endIconSize={'24px'}\n          disabled={isUndefined(canSubmit) ? !canAccept : !canSubmit}\n          isLoading={loading}\n          onClick={onAcceptPress}\n        >\n          {submitButtonText}\n        </ButtonIcon>\n      </FlexBox>\n    </Footer>\n  );\n};\n\nconst Footer = styled(FlexBox)``;\n\nexport const OverlayForm = ({\n  children,\n  ...props\n}: { children?: React.ReactNode } & React.HTMLAttributes<HTMLFormElement>) => {\n  return <Form {...props}>{children}</Form>;\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n","import { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { IBase, Values } from '../types/utils.types';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images?.[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    // top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    top: { name: t('Visibility'), getData: d => (d.visible ? 'visible' : 'hidden') },\n    width: '120px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => (d.price?.out ? toPrice(d.price?.out) : '--.--') },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => (d.price?.in ? toPrice(d.price?.in) : '--.--') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', getData: rd => rd.brand?.label },\n    bottom: { name: 'Виробник', getData: rd => rd.brand?.manufacturer },\n    width: '180px',\n    action: 'doubleDataWithAvatar',\n  },\n  // {\n  //   top: { name: 'Опис', path: 'description' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.user?.email ?? '---' },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.user?.email ?? '---' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  datesColumn(),\n];\n\nexport function deletedStatusColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: t('Deleted status'), align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\nexport function datesColumn<Data extends IBase = any>(): CellTittleProps<Data> {\n  return {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  };\n}\n\nconst OfferSortPaths = [\n  'label',\n  'barCode',\n  'sku',\n  'approved',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n  'brand.label',\n  'warehouse.label',\n  'warehouse.code',\n  'price.out',\n  'variations.label',\n  'variations.barCode',\n  'variations.sku',\n  'variations.price.out',\n  'variations.deletedAt',\n  'variations.updatedAt',\n  'variations.createdAt',\n] as const;\n\nexport type OfferSortParam = TableSortParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSortParams: OfferSortParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'approved', label: t('Status') },\n  { dataPath: 'price.out', label: t('Price') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n\n  { dataPath: 'brand.label', label: t('Brand label') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n];\n\nexport type OfferSearchParam = TableSearchParam<Values<typeof OfferSortPaths> | string>;\nexport const offersSearchParams: OfferSearchParam[] = [\n  { dataPath: 'sku', label: 'SKU' },\n  { dataPath: 'label', label: t('Label') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'brand.label', label: t('Brand label') },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { IOrderTempSlot, OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { TableSearchParam, TableSortParam } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\nimport { Values } from '../types/utils.types';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nconst extraKeys: ('cashback' | 'bonus' | 'discount')[] = ['cashback', 'bonus', 'discount'];\nfunction getTempOrderSlotColumns(): CellTittleProps<OrderSlotEntity>[] {\n  return extraKeys.map(key => {\n    return {\n      top: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.amount) },\n      bottom: { name: t(key), align: 'end', getData: rd => toPrice(rd?.[key]?.percentage) },\n      action: 'valueByPath',\n      width: '90px',\n    };\n  });\n}\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    top: { name: t('Offer label'), getData: rd => rd.offer?.label },\n    bottom: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'valueByPath',\n    width: '210px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  ...getTempOrderSlotColumns(),\n  {\n    top: { name: t('Offer sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Offer bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  createdDateColumn,\n];\n\nexport const tempOrderSlotTableColumns: CellTittleProps<IOrderTempSlot>[] =\n  orderSlotsTableColumns as CellTittleProps<IOrderTempSlot>[];\n\nconst OrdersAllowedPaths = [\n  'manager.email',\n  'manager.code',\n\n  'managers.email',\n  'managers.code',\n\n  'customer.email',\n  'customer.phone',\n  'customer.name.first',\n  'customer.name.second',\n  'customer.reference',\n\n  'receiver.email',\n  'receiver.phone',\n  'receiver.name.first',\n  'receiver.name.second',\n  'receiver.reference',\n\n  'barCode',\n  'reference.internal',\n  'reference.external',\n\n  'group.reference.internal',\n  'group.reference.external',\n\n  'status',\n  'deletedAt',\n  'updatedAt',\n  'createdAt',\n\n  'warehouse.label',\n  'warehouse.code',\n\n  // 'variations.label',\n  // 'variations.barCode',\n  // 'variations.sku',\n  // 'variations.price.out',\n  // 'variations.deletedAt',\n  // 'variations.updatedAt',\n  // 'variations.createdAt',\n] as const;\n\nexport type OrdersSortParam = TableSortParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSortParams: OrdersSortParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n\n  { dataPath: 'group.reference.internal', label: t('Reference / Internal') + ` / ${t('Group').toLowerCase()}` },\n  { dataPath: 'group.reference.external', label: t('Reference / External') + ` / ${t('Group').toLowerCase()}` },\n\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'status', label: t('Status') },\n\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n\n  { dataPath: 'customer.email', label: t('Customer email') },\n  { dataPath: 'customer.phone', label: t('Customer phone') },\n  { dataPath: 'customer.name.first', label: t('Customer first name') },\n  { dataPath: 'customer.name.second', label: t('Customer second name') },\n  { dataPath: 'customer.reference', label: t('Customer reference') },\n\n  { dataPath: 'receiver.email', label: t('Customer email') },\n  { dataPath: 'receiver.phone', label: t('Customer phone') },\n  { dataPath: 'receiver.name.first', label: t('Customer first name') },\n  { dataPath: 'receiver.name.second', label: t('Customer second name') },\n  { dataPath: 'receiver.reference', label: t('Customer reference') },\n\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n\n  { dataPath: 'createdAt', label: t('Created at') },\n  { dataPath: 'updatedAt', label: t('Updated at') },\n  { dataPath: 'deletedAt', label: t('Deleted at') },\n];\n\nexport type OrdersSearchParam = TableSearchParam<Values<typeof OrdersAllowedPaths>>;\nexport const ordersSearchParams: OrdersSearchParam[] = [\n  { dataPath: 'reference.internal', label: t('Reference / Internal') },\n  { dataPath: 'reference.external', label: t('Reference / External') },\n  { dataPath: 'barCode', label: t('Bar-code') },\n  { dataPath: 'warehouse.code', label: t('Warehouse code') },\n  { dataPath: 'warehouse.label', label: t('Warehouse label') },\n  { dataPath: 'manager.email', label: t('Manager email') },\n  { dataPath: 'manager.code', label: t('Manager code') },\n  { dataPath: 'managers.email', label: t('Any managers email') },\n  { dataPath: 'managers.code', label: t('Any managers code') },\n];\n","import { IBase } from '../../redux/app-redux.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n}\n"],"names":["OverlayLocalCTX","createContext","OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","Provider","value","onClose","compId","_objectSpread","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColorDark","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","open","create","Component","OrderOverviewCustomerInfo","cell","data","renderCells","_customer$name","_customer$name2","_customer$name3","_customer$name4","_customer$name5","customer","label","t","first","visible","businessType","second","middle","email","phone","sexType","engagementSource","age","_cell$value","_jsxs","fxDirection","padding","gap","justifyContent","Text","$size","$weight","CellStyledComp","title","OverviewCellHeader","OrderOverviewInfoTabsEnum","orderOverviewInfoTabs","_enumToTabs","Box","_p","overlayS","currentOrder","useOrdersSelector","General","currentTab","setCurrentTab","cellsMap","orderOverviewCellsMap","orderOverviewCells","forEach","item","_orderOverviewCellsMa","tab","push","getOrderOverviewCellsMap","_cellsMap$currentTab","CellComponent","_objectWithoutProperties","_excluded","overlayHandler","OverviewTextCell","flex","TabSelector","optionProps","fitContentH","options","onOptSelect","option","getValue","_data$manager","_data$manager$user","manager","user","_data$reference","reference","internal","_data$group","_data$group$reference","group","_data$group2","strategy","_data$total3","_data$total4","_data$total","_data$total2","numberWithSpaces","total","amount","items","status","Customer","Delivery","_data$deliveries2","_data$deliveries","deliveries","Invoicing","Additional","OrderOverviewTabs","tabs","enumToFilterOptions","Container","sideBarBackgroundColor","Content","sideBarBorderColor","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","_useAppParams","orderId","useAppParams","navigate","useNavigate","location","useLocation","renderTab","info","OrderOverviewInfoTab","ModalHeader","onBackPress","pathname","_location$pathname","newPath","replace","_id","_o","_v","i","size","variant","iconSize","icon","disabled","onEdit","onDelete","margin","isLoading","isRefresh","onRefresh","onOpenRightSide","LeftSide","modalBorderColor","toggleRightSideVisibility","setLoading","ordersServ","useAppServiceProvider","orders","OrderOverviewXL","order","getById","refreshCurrent","onLoading","CurrentOrderCTX","useCurrentOrder","dispatch","useAppDispatch","service","ServiceName","CTX","_origin","getSlots","_getSlots","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","wrap","_context","next","abrupt","getOrderSlotsThunk","undefined","stop","_x","apply","arguments","getPayments","_getPayments","_callee2","_context2","getAllPaymentsByOrderThunk","_x2","getInvoices","_getInvoices","_callee3","_context3","getAllInvoicesByOrderThunk","_x3","getDeliveries","_getDeliveries","_callee4","_context4","getAllDeliveriesByOrderThunk","_x4","useEffect","loaders","useLoaders","Order","tableData","_Order$slots","slots","_el$offer","offer","type","tableConfigs","actionsCreator","_ctx","_Order$slots2","offerTypeFilterOptions","defaultValue","preventDefault","onResetPress","TableList","hasSearch","hasFilter","refresh","tableTitles","orderSlotsTableColumns","ctx","invoices","invoicesTableColumns","_Order$deliveries","OrderTabNameEnum","toggleOptions","RightSide","backgroundColorLight","isVisible","_currentOrder$referen","_currentOrder$referen2","toggleVisibility","current","setCurrent","OrderContentTab","Invoices","OrderInvoicesTab","Payments","OrderPaymentsTab","Deliveries","OrderDeliveriesTab","DrawerHeader","Page","takeFullGridArea","path","AppModuleName","isTabsSideVisible","setIsTabsSideVisible","toggleRightSide","AppGridPage","CurrentOrderProvider","OverlayStackProvider","PageOrderOverviewLeftSide","PageOrderOverviewTabs","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","_templateObject6","CategoryItem","_templateObject7","fontColorSidebar","field","backgroundColor","_ref$title","_ref$openOverlayButto","openOverlayButtonTitle","onOpenOverlayPress","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","height","minHeight","marginRight","$padding","ErrorContent","_ref3","showSubmitButton","canSubmit","renderTitle","Header","minWidth","textTransform","textOverflow","whiteSpace","endIcon","endIconSize","DrawerFooter","_ref4","_ref4$submitButtonTex","submitButtonText","loading","extraFooter","onCreatePress","resetButtonShown","isUndefined","fontWeight","modalBackgroundColor","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","formAddImageSetTabs","ImageSetSrcType","required","offersTableColumns","top","getData","rd","getImgPreview","pr","_pr$images","_pr$images$","images","img_preview","width","action","sku","bottom","barCode","d","approved","align","_d$price","_d$price2","price","out","toPrice","_d$price3","_d$price4","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$brand","brand","_rd$brand2","manufacturer","_rd$editor$user$email","_rd$editor","_rd$editor$user","editor","_rd$author$user$email","_rd$author","_rd$author$user","author","offersSortParams","dataPath","offersSearchParams","createdDateColumn","ordersTableColumns","OrderStatusEnum","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slotsCount","_rd$reference","_rd$reference2","external","_rd$group","_rd$group$reference","_rd$group2","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","extraKeys","_rd$offer","_rd$variation","quantity","getBasePriceColumns","key","_rd$key","_rd$key2","percentage","_rd$offer2","_rd$variation2","_rd$offer3","_rd$variation3","tempOrderSlotTableColumns","ordersSortParams","toLowerCase","ordersSearchParams"],"sourceRoot":""}