{"version":3,"file":"static/js/652.a69ef4e2.chunk.js","mappings":"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","sources":["components/AppPages/pagesStyles.tsx","components/AppPages/refundsManagement/PageRefunds.tsx","data/orders.data.ts"],"sourcesContent":["import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useRefundsSelector } from '../../../redux/selectors.store';\nimport { ISortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport { ordersTableColumns } from '../../../data/orders.data';\nimport { IRefund } from '../../../redux/refunds/refunds.types';\nimport useOrdersServiceHook from '../../../hooks/useOrdersService.hook';\nimport { BaseAppPageProps } from '../index';\n\ninterface Props extends BaseAppPageProps {}\n\nexport const useOrderTableConfigs = () => {\n  const service = useOrdersServiceHook();\n  const state = useRefundsSelector();\n  const { getAll } = service;\n  // const actionsCreator = useOrdersActionsCreatorHook();\n  // const filterSelectors = useProductsFilterSelectorsHook();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IRefund> => ({\n      tableData: state.refunds,\n      tableTitles: ordersTableColumns as never,\n      // tableSortParams: ordersSearchParams.filter(el => el.sort),\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      checkBoxes: true,\n      // actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [filterParams, getAll, sortParams, state.refunds]\n  );\n\n  // useEffect(() => {\n  //   if (sortParams || filterParams) {\n  //     return;\n  //   }\n  //\n  //   if (!sortParams && !filterParams) {\n  //     if (state.orders.length === 0) {\n  //       getAll({\n  //         data: { refresh: true },\n  //         onLoading: setIsLoading,\n  //       });\n  //     }\n  //   }\n  // }, [filterParams, getAll, isLoading, sortParams, state.orders.length, tableConfig]);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\nconst PageRefunds: React.FC<any> = (props: Props) => {\n  const { tableConfig, isLoading } = useOrderTableConfigs();\n\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TableList {...tableConfig} isLoading={isLoading} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageRefunds;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { IOrder, IOrderSlot, OrderStatusEnum } from '../types/orders/orders.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/ModalForm/ModalFilter';\nimport { getStatusesByEnum } from './statuses.data';\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\nexport type DataPath =\n  | 'owner.label'\n  | 'owner.name'\n  | 'author.name'\n  | 'author.email'\n  | 'editor.name'\n  | 'editor.email'\n  | 'auditor.name'\n  | 'auditor.email'\n  | 'contractor.name'\n  | 'contractor.type'\n  | 'eventDate'\n  | 'type'\n  | 'status'\n  | 'amount'\n  | 'currency'\n  | 'comment'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'mark.label'\n  | 'invoice.label'\n  | 'invoice.code'\n  | 'invoice.number'\n  | 'payment.label'\n  | 'payment.code'\n  | 'payment.number'\n  | 'order.code'\n  | 'total'\n  | 'manager.name'\n  | 'manager.code'\n  | 'manager.email'\n  | 'customer.name'\n  | 'customer.phone'\n  | 'receiver.name'\n  | 'receiver.phone'\n  | 'invoices'\n  | 'payments'\n  | 'transporters';\nexport const ordersTableColumns: CellTittleProps<IOrder, DataPath>[] = [\n  {\n    top: { name: t('date'), align: 'center', path: 'eventDate' },\n    bottom: { name: t('time'), align: 'center' },\n    width: '90px',\n    action: 'dateSimple',\n  },\n  {\n    top: { name: t('status'), path: 'status' },\n    bottom: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('Priority') },\n    // bottom: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('Total amount'), align: 'end', path: 'total' },\n    bottom: { name: t('Total q-ty'), align: 'end' },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Group') },\n    bottom: { name: t('Number'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Замовник', path: 'customer.name' },\n    bottom: { name: 'Телефон', path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Отримувач', path: 'receiver.name' },\n    bottom: { name: 'Телефон', path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Shipments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\n\nexport const orderSlotTableColumns: CellTittleProps<IOrderSlot>[] = [\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n];\n"],"names":["takeFullGridArea","css","_templateObject","_taggedTemplateLiteral","takeFullPlace","_templateObject2","_templateObject3","useOrderTableConfigs","service","useOrdersServiceHook","state","useRefundsSelector","getAll","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","sortParams","setSortParams","_useState5","_useState6","filterParams","setFilterParams","tableConfig","useMemo","tableData","refunds","tableTitles","ordersTableColumns","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","data","refresh","query","onLoading","then","handleTableSort","param","sortOrder","dataPath","Page","styled","props","_useOrderTableConfigs","_jsx","AppGridPage","path","children","TableList","_objectSpread","getStatusesByEnum","OrderStatusEnum","t","top","name","align","bottom","width","action","ordersSearchParams","label","filter","search","sort","orderSlotTableColumns"],"sourceRoot":""}