{"version":3,"file":"static/js/465.4ae1354e.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/Forms/offers/variations/OfferVariationPropertySelector.tsx","components/Overlays/OverlayBase.tsx","components/atoms/PropertiesGroupSelect.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/offers/tabs/SalesTab.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Forms/offers/FormProductCategories.tsx","components/Overlays/FormSelectCategoriesOverlay.tsx","components/Overviews/offer/components/OfferOverviewCategoriesCell.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormProductDefaultsOverlay.tsx","components/Overlays/FormProductImagesOverlay.tsx","components/Overviews/offer/OfferOverviewXL.tsx","components/Overviews/offer/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/offer/components/OfferOverviewDefaultsCell.tsx","components/Overviews/offer/components/OfferOverviewImagesCell.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Overviews/components/OverviewTextCell.tsx","data/warehauses.data.ts"],"sourcesContent":["import { useOverlayService } from './OverlayStackProvider';\nimport React, { MouseEventHandler, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              overlaySrv.remove(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const offersSrv = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      offersSrv\n        .getOne({\n          data: {\n            params: {\n              _id: offerId,\n              getVariations: false,\n              getPrices: false,\n            },\n          },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .catch();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    offersSrv.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      offersSrv.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import { PropertyEntity, PropertyTypeEnum, PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\n\nconst PropertyItemStylesByCmsKey: Record<string, { numColumns?: number }> = {\n  [PropertyTypeEnum.size]: {\n    numColumns: 4,\n  },\n  [PropertyTypeEnum.color]: {\n    numColumns: 2,\n  },\n};\nexport interface OfferVariationPropertySelectorProps {\n  item: PropertyEntity;\n  selectedValue?: string;\n  selectedIds?: string[];\n  childrenList?: PropertyEntity['childrenList'];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n}\nexport const OfferVariationPropertySelector = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: OfferVariationPropertySelectorProps) => {\n  const state = useProductsSelector();\n\n  const renderChildren = useMemo(() => {\n    const _propId = item?._id;\n\n    const _valuesList: PropertyValueEntity[] = [];\n\n    const _valuesIds = state.propertiesKeysMap?.[_propId] ?? [];\n\n    for (const valueId of _valuesIds) {\n      const value = state.propertiesDataMap?.[valueId];\n      if (value) {\n        _valuesList.push(value);\n      }\n    }\n\n    return _valuesList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, onSelect, selectedIds, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox fillWidth padding={'8px 0'} gap={6} cmsKey={item.cmsConfigs?.key}>\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ cmsKey?: MaybeNull<string> }>`\n  width: 100%;\n  display: grid;\n\n  grid-template-columns: repeat(${p => (p.cmsKey ? PropertyItemStylesByCmsKey[p.cmsKey]?.numColumns ?? 2 : 2)}, 1fr);\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: PropertyValueEntity;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  return (\n    <ValueTag\n      variant={isSelected ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nexport default OfferVariationPropertySelector;\n","import styled from 'styled-components';\nimport React, { memo } from 'react';\nimport { OverlayHeader } from './index';\n\nexport interface DrawerBaseProps extends Omit<React.FormHTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onReset'> {\n  footer?: boolean;\n  onClosePress?: () => void;\n  onBackPress?: () => void;\n  isLoading?: boolean;\n  extraFooter?: React.ReactNode;\n  extraHeader?: React.ReactNode;\n  fillWidth?: boolean;\n  fillHeight?: boolean;\n  fitContentV?: boolean;\n  fitContentH?: boolean;\n  height?: string;\n  width?: string;\n  canSubmit?: boolean;\n  okButton?: boolean;\n}\n\nconst DrawerBase: React.FC<DrawerBaseProps> = ({\n  title,\n  footer = false,\n  children,\n  extraFooter,\n  extraHeader,\n  isLoading = false,\n  onClosePress,\n  onBackPress,\n  okButton,\n  canSubmit,\n  ...props\n}) => {\n  return (\n    <DrawerContainer className=\"modal_base\" {...props}>\n      <OverlayHeader\n        onBackPress={onBackPress}\n        onClosePress={onClosePress}\n        title={title}\n        canSubmit={canSubmit}\n        okButton={okButton}\n      >\n        {extraHeader}\n      </OverlayHeader>\n\n      <Content className=\"main\">{children}</Content>\n    </DrawerContainer>\n  );\n};\n\nconst DrawerContainer = styled.div<\n  Pick<DrawerBaseProps, 'fillHeight' | 'fillWidth' | 'fitContentH' | 'fitContentV' | 'width' | 'height'>\n>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr max-content;\n\n  position: relative;\n  padding: 0 8px;\n\n  min-height: 200px;\n  max-height: 90vh;\n\n  color: ${p => p.theme.fontColorSidebar};\n  width: ${({ width = '480px', fillWidth, fitContentH }) =>\n    (fillWidth && '100vw') || (fitContentH && 'max-content') || width};\n  height: ${({ height = '', fillHeight, fitContentV }) =>\n    (fillHeight && '90vh') || (fitContentV && 'max-content') || height};\n\n  min-width: 250px;\n  max-width: 100%;\n\n  //overflow: hidden;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  border-radius: 2px;\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: ${p => (p.fillWidth ? '98vw' : '450px')};\n  }\n`;\n\nconst Content = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  overflow: auto;\n  position: relative;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\n\nexport default memo(DrawerBase);\n","import { OfferTypeEnum } from '../../types/offers/offers.types';\nimport { ProperiesGroupEntity, PropertyBaseEntity } from '../../types/offers/properties.types';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport * as React from 'react';\nimport { useEffect, useMemo, useState } from 'react';\nimport CustomSelect, { CustomSelectHandler } from './Inputs/CustomSelect/CustomSelect';\nimport FlexBox from './FlexBox';\nimport InputLabel from './Inputs/InputLabel';\nimport { t } from '../../lang';\nimport ButtonsGroup from './ButtonsGroup';\nimport { productsFilterOptions } from '../../data/modalFilterOptions.data';\n\nexport const PropertiesGroupSelect = ({\n  selected,\n  onSelect,\n  filterValue = OfferTypeEnum.GOODS,\n  hasFilter = false,\n}: {\n  selected?: ProperiesGroupEntity;\n  onSelect?: (opt: ProperiesGroupEntity) => void;\n  filterValue?: OfferTypeEnum;\n  hasFilter?: boolean;\n}) => {\n  // const service = useAppServiceProvider().get(AppModuleName.offers);\n\n  const state = useProductsSelector();\n  const [filter, setFilter] = useState<OfferTypeEnum>(filterValue);\n  const [currentTemplate, setCurrentTemplate] = useState<ProperiesGroupEntity | undefined>();\n  // const loaders = useLoaders<'getList' | 'create' | 'update'>();\n\n  const rootList = useMemo(() => {\n    const _rootIds = state.propertiesByTypeKeysMap[filter];\n    const _items: PropertyBaseEntity[] = [];\n\n    for (const _id of _rootIds) {\n      const item = state.propertiesDataMap?.[_id];\n      item && _items.push(item);\n    }\n\n    return _items;\n  }, [filter, state.propertiesByTypeKeysMap, state.propertiesDataMap]);\n\n  const handleSelect: CustomSelectHandler<ProperiesGroupEntity> = option => {\n    if (onSelect && option) {\n      onSelect(option);\n    } else {\n      setCurrentTemplate(option);\n    }\n  };\n\n  useEffect(() => {\n    if (selected) {\n      setCurrentTemplate(selected);\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    if (rootList?.length && !currentTemplate) {\n      if (onSelect && rootList[0]) {\n        onSelect(rootList[0]);\n      } else {\n        setCurrentTemplate(rootList[0]);\n      }\n    }\n  }, [currentTemplate, onSelect, rootList]);\n  // useEffect(() => {\n  //   if ()\n  // }, []);\n\n  return (\n    <FlexBox margin={'8px 0'} gap={8}>\n      {hasFilter && (\n        <InputLabel label={t('Select type')}>\n          <ButtonsGroup\n            options={productsFilterOptions}\n            value={filter}\n            onSelect={({ value }) => {\n              setFilter(value);\n            }}\n          />\n        </InputLabel>\n      )}\n\n      <CustomSelect\n        label={t('Select properties group')}\n        selectedOption={currentTemplate}\n        onSelect={handleSelect}\n        options={rootList}\n        placeholder={t('Select properties group')}\n      />\n    </FlexBox>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox, { FlexForm } from '../atoms/FlexBox';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { ObjectEntries, toVariationFormData, toVariationReqData } from '../../utils';\nimport { IVariationFormData, VariationEntity } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../Forms/components/FormAfterSubmitOptions';\nimport { OverlayFooter } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer, useCurrentVariation } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport LangButtonsGroup from '../atoms/LangButtonsGroup';\nimport { UUID } from '../../types/utils.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { ProperiesGroupEntity, PropertyEntity, PropertyValueEntity } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport DrawerBase from './OverlayBase';\nimport { PropertiesGroupSelect } from '../atoms/PropertiesGroupSelect';\nimport { AccordionFormArea } from '../Forms/FormArea/AccordionForm';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  updateId?: UUID;\n\n  create?: boolean;\n\n  defaultState?: Partial<VariationEntity>;\n}\nconst _schema = yup.object().shape({\n  label: yup.string().required().min(5).max(128),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  onSubmit,\n  updateId,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const state = useProductsSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useLoaders<'create' | 'update' | 'refresh'>();\n  const { variation } = useCurrentVariation({ id: updateId });\n  const currentOffer = useCurrentOffer({ id: variation?.offer?._id || offerId || offer?._id });\n\n  const submitOptions = useAfterSubmitOptions();\n\n  const [currentTemplate, setCurrentTemplate] = useState<ProperiesGroupEntity>();\n\n  const formMethods = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      variation\n        ? { ...variation, offer: currentOffer, template: currentTemplate }\n        : { offer: currentOffer, template: currentTemplate },\n      currentOffer\n    ),\n    resolver: yupResolver(_schema as never),\n    reValidateMode: 'onSubmit',\n  });\n\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  const [selectedPropsMap, setSelectedPropsMap] = useState<Record<string, PropertyValueEntity>>(() => {\n    const init: Record<string, PropertyValueEntity> = {};\n    for (const [propId, valueId] of ObjectEntries(formValues.propertiesMap ?? {})) {\n      const value = state.propertiesDataMap?.[valueId];\n      if (value) {\n        init[propId] = value;\n      }\n    }\n    return init;\n  });\n\n  const propertiesList = useMemo(() => {\n    const _rootId = currentTemplate?._id;\n    const _propertiesList: PropertyEntity[] = [];\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId ?? 'def'] ?? [];\n\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const { label: compiledLabel } = useMemo(() => {\n    // const _sortedIds = Object.keys(selectedPropsMap ?? {}).sort((prev, next) => prev.localeCompare(next));\n\n    const _sorted = Object.entries(selectedPropsMap).sort((prev, next) => {\n      return prev[0].localeCompare(next[0]);\n    });\n    const _labels: string[] = currentOffer?.label ? [currentOffer?.label] : [];\n\n    for (const entry of _sorted) {\n      const value = entry[1];\n      value?.label && _labels.push(value?.label);\n    }\n    const _base = !_sorted?.length\n      ? variation?.label ?? `${currentOffer?.label}. {{VARIATION_LABEL}}`\n      : _labels.join('. ');\n\n    return { label: _base };\n  }, [currentOffer?.label, selectedPropsMap, variation?.label]);\n\n  useEffect(() => {\n    setValue('label', compiledLabel);\n  }, [compiledLabel, setValue, variation]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (updateId) {\n        service.updateVariationById({\n          data: toVariationReqData(data, updateId),\n          onSuccess: data => {\n            console.log('updateVariationById onSuccess', data);\n\n            onClose && onClose();\n          },\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('update'),\n        });\n      } else {\n        service.createVariation({\n          data: toVariationReqData(data),\n          onSuccess: data => {\n            submitOptions.state.close && onClose && onClose();\n            submitOptions.state.clear && reset();\n          },\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('create'),\n        });\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [loaders, onClose, reset, service, submitOptions.state.clear, submitOptions.state.close, updateId]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string) => {\n      setValue(`propertiesMap.${parentId}`, id);\n      const value = state.propertiesDataMap?.[id];\n      if (value) {\n        setSelectedPropsMap(p => ({ ...p, [parentId]: value }));\n      }\n    },\n    [setValue, state.propertiesDataMap]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setSelectedPropsMap({});\n  }, [setValue]);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  return (\n    <DrawerBase fillHeight onBackPress={onClose} okButton={false} title={title}>\n      <FormContainer\n        onSubmit={handleSubmit(onValid, errors => {\n          console.error('[SUBMIT ERROR]', errors);\n        })}\n        onReset={handleClearMap}\n        {...props}\n      >\n        <Content flex={1} fillWidth overflow={'auto'} gap={12}>\n          <AccordionFormArea label={'Offer'} expandable={false} hideFooter>\n            <InputLabel label={t('Offer label')} error={errors?.offer?._id} required disabled>\n              <InputText value={currentOffer?.label ?? undefined} placeholder={t('label')} required disabled />\n            </InputLabel>\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <InputLabel label={t('sku')} disabled>\n                <InputText value={currentOffer?.sku ?? undefined} placeholder={t('sku')} disabled />\n              </InputLabel>\n\n              <InputLabel label={t('barCode')} disabled>\n                <InputText value={currentOffer?.barCode ?? undefined} placeholder={t('barCode')} disabled />\n              </InputLabel>\n            </FlexBox>\n          </AccordionFormArea>\n\n          <AccordionFormArea label={'Main info'} expandable={false} hideFooter>\n            <InputLabel label={t('label')} error={errors.label}>\n              <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n            </InputLabel>\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <InputLabel label={t('sku')} error={errors.sku}>\n                <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n              </InputLabel>\n\n              <InputLabel label={t('barCode')} error={errors.barCode}>\n                <InputText {...register('barCode')} placeholder={t('barCode')} />\n              </InputLabel>\n            </FlexBox>\n\n            {/*<DimensionsInputs form={formMethods} />*/}\n          </AccordionFormArea>\n\n          <AccordionFormArea label={t('Properties')} expandable={false} hideFooter>\n            <PropertiesGroupSelect\n              onSelect={opt => {\n                setValue('template', opt);\n                setCurrentTemplate(opt);\n              }}\n              selected={currentTemplate}\n            />\n\n            <TemplateBox padding={'0 8px'} margin={'8px 0'}>\n              {renderPropertiesList}\n            </TemplateBox>\n          </AccordionFormArea>\n\n          {variation && (\n            <AccordionFormArea label={t('Cms information')} expandable={false} hideFooter>\n              <CmsConfigs padding={'8px 0'} fillWidth>\n                <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n                  <Text $size={13} $weight={500}>\n                    {t('Cms configs')}\n                  </Text>\n                </CmsConfigsHeader>\n\n                <Inputs>\n                  <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n                    <LangButtonsGroup disabled />\n                  </InputLabel>\n\n                  <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n                    <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n                  </InputLabel>\n                </Inputs>\n              </CmsConfigs>\n            </AccordionFormArea>\n          )}\n        </Content>\n\n        <OverlayFooter\n          loading={loaders.isLoading?.create}\n          resetButtonShown\n          submitButtonText={loaders.isLoading?.create ? 'Loading...' : updateId ? 'Підтвердити' : 'Додати'}\n          canSubmit={canSubmit}\n          extraFooter={\n            <ExtraFooterBox>\n              <FormAfterSubmitOptions {...submitOptions} />\n            </ExtraFooterBox>\n          }\n        />\n      </FormContainer>\n    </DrawerBase>\n  );\n};\n\nconst FormContainer = styled(FlexForm)`\n  flex: 1;\n  max-height: 100%;\n  height: 100vh;\n\n  width: 100%;\n  //padding: 0 12px;\n\n  overflow: hidden;\n\n  //max-width: 380px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst Inputs = styled(FlexBox)`\n  padding: 0 4px;\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { getIdRef } from '../../../../utils';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\nimport { PropertyEntity } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\nimport { IVariationTableData } from '../../../../types/offers/variations.types';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const page = usePageCurrentOffer();\n  const modalS = useModalProvider();\n  const currentOffer = page.currentOffer;\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, offerId: currentOffer._id },\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, PropertyEntity> = {};\n    for (const variation of currentOffer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [currentOffer?.variations]);\n\n  const tableConfig = useMemo((): ITableListProps<IVariationTableData> => {\n    return {\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: {\n                      updateId: currentId,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: { offer: page.currentOffer },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [loadData, modalS, onSelect, page.currentOffer, withActions]);\n\n  useEffect(() => {\n    if (currentOffer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n      tableData={currentOffer?.variations}\n      tableTitles={variationsTableTitles}\n      transformData={transformVariationTableData as never}\n    />\n  );\n};\nexport default VariationsTab;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { PriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { OnlyUUID } from 'redux/global.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport ModalCreatePrice from '../../../Modals/ModalCreatePrice';\nimport { pricesColumnsForProductReview } from '../../../../data/priceManagement.data';\nimport { IBase } from '../../../../types/utils.types';\nimport { useAppDispatch } from '../../../../redux/store.store';\nimport { getPriceThunk } from '../../../../redux/priceManagement/priceManagement.thunks';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n  const [selectedRow, setSelectedRoe] = useState<IBase>();\n  const loaders = useLoadersProvider<'prices' | 'price' | 'discounts' | 'discount'>();\n  const dispatch = useAppDispatch();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  // const updateDefaults = ({}: { price?: OnlyUUID }) => {};\n\n  const tableConfig = useMemo((): ITableListProps<PriceEntity> => {\n    return {\n      onRowClick: data => {\n        setSelectedRoe(data?.rowData);\n\n        if (onSelect) {\n          onSelect({ _id: data?._id || data?.rowData?._id || '' });\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id || selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  dispatch(\n                    getPriceThunk({\n                      data: { params: { _id: currentId } },\n                      onLoading: loaders.onLoading('price', undefined, { content: 'Refreshing price info...' }),\n                      onSuccess: () => {},\n                    })\n                  );\n\n                  modalS.open({\n                    ModalChildren: ModalCreatePrice,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                      updateId: currentId,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: ModalCreatePrice,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [withActions, onSelect, selectedRow?._id, loadData, dispatch, loaders, modalS, currentOffer]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n      tableData={currentOffer?.prices}\n      tableTitles={pricesColumnsForProductReview}\n    />\n  );\n};\n\nexport default PricesTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferOverviewAddsTabProps } from './types';\nimport { Text } from '../../../atoms/Text';\n\ninterface OfferSalesTabProps extends OfferOverviewAddsTabProps {}\nexport const SalesTab = (props: OfferSalesTabProps) => {\n  return (\n    <FlexBox padding={'16px'}>\n      <Text $size={16} $weight={600}>\n        In work\n      </Text>\n    </FlexBox>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\nimport { SalesTab } from './tabs/SalesTab';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { OfferOverlayLoaderKey } from '../../Overlays/FormProductDefaultsOverlay';\nimport { LoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\n\nenum RightSideOptionEnum {\n  Prices = 'Prices',\n  Variations = 'Variations',\n  Warehousing = 'Warehousing',\n  Sales = 'Sales',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(TabsList[0].value);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n      [RightSideOptionEnum.Sales]: <SalesTab withActions />,\n    };\n    return tabs?.[currentTab] ?? null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <LoadersProvider value={loaders}>\n      <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n        {isVisible && (\n          <ModalHeader\n            onBackPress={toggleVisibility}\n            renderTitle={\n              <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n                <Text $weight={600} $size={14}>\n                  {page?.currentOffer?.label}\n                </Text>\n\n                <Text $size={14}>{page?.currentOffer?.sku}</Text>\n              </FlexBox>\n            }\n          />\n        )}\n\n        <TabBox overflow={'hidden'} fillWidth flex={1}>\n          <TabSelector filterOptions={TabsList} onOptSelect={filterHandler} preventDefault />\n\n          {renderTab}\n        </TabBox>\n      </RightSide>\n    </LoadersProvider>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport translate from '../../../lang';\nimport { IDirItemBase, IProductCategoryDirItem } from '../../../types/dir.types';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport styled from 'styled-components';\n\nexport interface FormProductCategoriesProps {\n  onSelect?: (id: string, option?: IProductCategoryDirItem) => void;\n  onChange?: (ids: string[]) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  options?: IProductCategoryDirItem[];\n}\n\nconst FormProductCategories: React.FC<FormProductCategoriesProps> = ({ options, onSelect, onChange, defaultData }) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const handleSelect = useCallback(\n    (option?: IProductCategoryDirItem) => {\n      setSelectedIds(prev => {\n        const newData = option\n          ? prev.includes(option?._id)\n            ? prev.filter(el => el !== option?._id)\n            : [...prev, option._id]\n          : prev;\n        onSelect && option?._id && onSelect(option?._id);\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n  const handleRemove = useCallback(\n    (id: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.filter(el => el !== id);\n\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange]\n  );\n\n  const renderTreeData = useMemo(() => {\n    return options?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_0_${item._id}`}\n          item={item}\n          index={index}\n          selectedIds={selectedIds}\n          onRemove={handleRemove}\n        />\n      );\n    });\n  }, [handleRemove, options, selectedIds]);\n\n  useEffect(() => {\n    if (defaultData) {\n      setSelectedIds(defaultData);\n    }\n  }, [defaultData]);\n\n  return (\n    <FlexBox fillWidth gap={6}>\n      <CustomSelect\n        treeMode\n        dropDownIsAbsolute\n        defaultValue={defaultData}\n        {...{\n          label: translate('categories'),\n          placeholder: translate('categories'),\n          required: true,\n          options,\n        }}\n        onSelect={handleSelect}\n      />\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} gap={8}>\n        {renderTreeData}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n\nconst ListItem: React.FC<{\n  item: IDirItemBase;\n  lvl?: number;\n  index?: number;\n  onRemove?: (id: string) => void;\n  selectedIds: string[];\n}> = ({\n  item,\n  index = 0,\n  lvl = 0,\n  selectedIds,\n  onRemove = () => {\n    console.log('onRemove not passed', lvl);\n  },\n}) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          onRemove={onRemove}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, onRemove, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <TagItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n          <ButtonIcon\n            variant={'onlyIcon'}\n            endIcon={'close'}\n            size={'24px'}\n            endIconSize={'80%'}\n            onClick={() => onRemove && onRemove(item._id)}\n          />\n        </TagItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n\nconst TagItem = styled(FlexBox)`\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.accentColor.base};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\nexport default FormProductCategories;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector, useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../utils/data-transform';\nimport FormProductCategories from '../Forms/offers/FormProductCategories';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\n\nexport interface FormSelectCategoriesOverlayProps extends OverlayHandlerReturn {}\n\nconst FormProductCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const { currentOffer } = useProductsSelector();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [state, setState] = useState<string[]>([]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentOffer &&\n      service.updateById({\n        data: { ...getIdRef(currentOffer), data: { categories: state }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  const canSubmit = useMemo(() => {\n    const initialString = currentOffer?.categories?.map(c => c._id)?.toString();\n    const currentString = state.toString();\n\n    return initialString !== currentString;\n  }, [currentOffer?.categories, state]);\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setState(currentOffer?.categories.map(c => c._id));\n    }\n  }, [currentOffer?.categories]);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader title={'Категорії'} onBackPress={onClose} canSubmit={canSubmit} okButton />\n\n      <Content padding={'0 0 8px 0'} flex={1}>\n        <FormProductCategories onChange={setState} options={directory} defaultData={state} />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductCategoriesOverlay;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport FormProductCategoriesOverlay from '../../../Overlays/FormSelectCategoriesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { IProductCategoryDirItem } from '../../../../types/dir.types';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: IProductCategoryDirItem;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport CustomSelect from '../atoms/Inputs/CustomSelect/CustomSelect';\nimport { t } from '../../lang';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface FormSelectPropertiesProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  update?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentOffer = offer;\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const templates = usePropertiesSelector();\n  const [currentId, setCurrentId] = useState<string>(templates[0]?._id);\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const canSubmit = useMemo(() => {\n    return currentOffer?.properties?.map(p => p._id).join(',') !== selectedIds.join(',');\n  }, [currentOffer?.properties, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = update ?? currentOffer?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentOffer?._id, onClose, onSubmit, selectedIds, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentId?: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n        onChange && onChange(newData);\n        onSelect && onSelect(id);\n\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (currentOffer?.properties) {\n      setSelectedIds(currentOffer?.properties.map(p => p._id));\n    }\n  }, [currentOffer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        title={(title || templateData?.label) ?? ''}\n        okButton\n      />\n\n      <CustomSelect\n        label={t('Available templates')}\n        options={templates}\n        selectedValue={currentId}\n        onSelect={option => {\n          setCurrentId(option?._id);\n        }}\n      />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>`\n  //display: grid;\n  //grid-template-columns: repeat(auto-fill, 25%);\n  //\n  //@media screen and (max-width: 480px) {\n  //  grid-template-columns: repeat(auto-fill, 50%);\n  //}\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  //width: 100%;\n  //min-width: unset;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { PropertyEntity } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: PropertyEntity;\n  selectedItems?: string[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedItems }) => {\n  const renderValues = useMemo(() => {\n    return item.childrenList\n      ?.filter(el => selectedItems?.includes(el._id))\n      ?.map((value, index) => {\n        return (\n          <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n            {value.label}\n          </CellStyledComp.CategoryItem>\n        );\n      });\n  }, [item.childrenList, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/global.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IWarehouse } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList isSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nexport interface FormProductDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum FormProductDefaultsTabs {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\nexport type OfferOverlayLoaderKey =\n  | keyof typeof FormProductDefaultsTabs\n  | `${keyof typeof FormProductDefaultsTabs}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    currentOffer?._id &&\n      productsS.setDefaults({\n        data: { _id: currentOffer?._id, defaults: toReqData(fData) as never, updateCurrent: true },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n\n  const renderTab = useMemo(() => {\n    const tabsMap: Record<FormProductDefaultsTabs, React.ReactNode> = {\n      [FormProductDefaultsTabs.warehouse]: (\n        <WarehousesTab withActions onSelect={handleSelect} selected={formValues?.warehouse} />\n      ),\n      [FormProductDefaultsTabs.price]: <PricesTab withActions onSelect={handleSelect} selected={formValues?.price} />,\n      [FormProductDefaultsTabs.variation]: (\n        <VariationsTab withActions onSelect={handleSelect} selected={formValues?.variation} />\n      ),\n      [FormProductDefaultsTabs.inventory]: (\n        <WarehousingTab withActions onSelect={handleSelect} selected={formValues?.inventory} />\n      ),\n      [FormProductDefaultsTabs.supplier]: (\n        <CounterpartyTab\n          withActions\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      ),\n    };\n\n    return tabsMap[tabs[currentTabIdx]?.value] ?? null;\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    formValues?.warehouse,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentOffer?.defaults;\n\n    const tabIs: Record<FormProductDefaultsTabs | string, boolean> = {\n      [tabs?.[currentTabIdx]?.value ?? '']: true,\n    };\n\n    if (tabIs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabIs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabIs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabIs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabIs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentOffer?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} onCreatePress={() => {}} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FormOfferImagesComponent from '../Forms/offers/components/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils/data-transform';\nimport { OverlayFooter, OverlayHeader } from './index';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: OfferEntity;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(currentProduct?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={\n          <OverlayHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />\n        }\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import { OfferEntity } from '../../../types/offers/offers.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../../lang';\nimport { usePageCurrentOffer } from '../../AppPages/offers/PageOfferProvider';\nimport { OverlayHeader } from '../../Overlays';\nimport TabSelector from '../../atoms/TabSelector';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../../hooks';\nimport { OverviewTextCell } from '../components/OverviewTextCell';\nimport { enumToFilterOptions, toAppDateFormat } from '../../../utils';\nimport { OverviewCellProps } from '../components/overview-types';\nimport { IMeasurement, PartialRecord } from '../../../types/utils.types';\nimport { isString } from 'lodash';\nimport { OfferOverviewCategoriesCell } from './components/OfferOverviewCategoriesCell';\nimport { OfferOverviewStaticProperties } from './components/OfferOverviewStaticPropertiesCell';\nimport { OfferOverviewDefaultsCell } from './components/OfferOverviewDefaultsCell';\nimport { OfferOverviewImagesCell } from './components/OfferOverviewImagesCell';\n\nexport enum OfferOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nexport const ProductOverviewTabsList = enumToFilterOptions(OfferOverviewTabsEnum);\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n  const cellsMap = getOfferOverviewCellsMap();\n\n  const [currentTab, setCurrentTab] = useState<OfferOverviewTabsEnum>(OfferOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n            }\n            return <OverviewTextCell key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n          }),\n    [cellsMap, currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        filterOptions={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nconst offerOverviewCells: OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: OfferOverviewCategoriesCell,\n    gridArea: 'categories',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Brand'),\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Properties'),\n    CellComponent: OfferOverviewStaticProperties,\n    gridArea: 'properties',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OfferOverviewDefaultsCell,\n    gridArea: 'defaults',\n    tab: OfferOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.user?.email} / ${\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : ''\n          }`\n        : null,\n    gridArea: 'created',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.user?.email} / ${\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : ''\n          }`\n        : null,\n    gridArea: 'updated',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OfferOverviewImagesCell,\n    gridArea: 'images',\n    tab: OfferOverviewTabsEnum.Images,\n  },\n];\n\nfunction getOfferOverviewCellsMap(): PartialRecord<\n  OfferOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n> {\n  const offerOverviewCellsMap: PartialRecord<\n    OfferOverviewTabsEnum | string,\n    OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n  > = {};\n  offerOverviewCells.forEach(item => {\n    const tab = item.tab;\n    if (tab) {\n      if (offerOverviewCellsMap[tab]) {\n        offerOverviewCellsMap[tab]?.push(item);\n      } else {\n        offerOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return offerOverviewCellsMap;\n}\nexport default OfferOverviewXL;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport React, { useMemo, useState } from 'react';\nimport FormSelectPropertiesOverlay from '../../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { OverviewPropertyComponent } from '../../components/OverviewPropertyComponent';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const templates = useProductsSelector().properties;\n  // ! setCurrentId\n  const [currentId] = useState<string>(templates[0]?._id);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const availableProperties = useMemo(() => {\n    return template?.childrenList?.filter(prop => !prop.isSelectable);\n  }, [template?.childrenList]);\n\n  const selectedItems = useMemo(() => {\n    return data?.properties?.map(p => p._id);\n  }, [data?.properties]);\n\n  const renderProperties = useMemo(() => {\n    return availableProperties?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, selectedItems, data }}\n        />\n      );\n    });\n  }, [availableProperties, overlayHandler, selectedItems, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {renderProperties && renderProperties?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n\n        {/*{renderPropertiesFromVariations}*/}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport FormProductDefaultsOverlay from '../../../Overlays/FormProductDefaultsOverlay';\n\nimport { PriceEntity } from '../../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { toPrice } from '../../../../utils/numbers';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: PriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../../Overlays/FormProductImagesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} disabled />\n          ))}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/offer/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { offers: offersSrv } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              _id: page?.currentOffer?._id,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          offersSrv.getOne({\n            data: { params: { _id: page.currentOffer?._id, getPrices: false, getVariations: false } },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({ offer: { content: t('Loading product info') } });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px;\n\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox fxDirection={'row'} justifyContent={'space-between'} height={'max-content'} alignItems={'center'}>\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { IWarehouse, WarehouseItemEntity } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email'), path: 'email' },\n    bottom: { name: t('phone'), path: 'phone' },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","_objectSpread","onClose","overlayId","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColor","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","createContext","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","compId","value","open","Provider","PageCurrentOfferCTX","usePageCurrentOffer","offersSrv","useAppServiceProvider","ServiceName","loaders","useOfferOverviewLoaders","useAppParams","offerId","currentOffer","useCurrentOffer","useEffect","_loaders$isLoading","isLoading","offer","getOne","data","_id","getVariations","getPrices","onLoading","catch","clearCurrent","undefined","PropertyItemStylesByCmsKey","_PropertyItemStylesBy","_defineProperty","PropertyTypeEnum","numColumns","PropertyBox","sideBarBorderColor","PropertyValuesBox","_PropertyItemStylesBy2","_PropertyItemStylesBy3","cmsKey","RenderPropertyValue","_ref2","item","isSelected","onSelect","ValueTag","variant","padding","fontWeight","label","ButtonIcon","_templateObject3","_item$cmsConfigs","_ref$selectedIds","selectedIds","state","useProductsSelector","renderChildren","_state$propertiesKeys","_state$propertiesKeys2","_step","_propId","_valuesList","_valuesIds","propertiesKeysMap","_iterator","_createForOfIteratorHelper","s","n","done","_state$propertiesData","valueId","propertiesDataMap","push","err","e","f","_jsxs","gap","Text","flex","paddingLeft","$weight","cmsConfigs","key","DrawerBase","title","footer","extraHeader","extraFooter","onClosePress","onBackPress","okButton","canSubmit","_objectWithoutProperties","_excluded","DrawerContainer","OverlayHeader","Content","fontColorSidebar","_ref2$width","width","fitContentH","_ref3","_ref3$height","height","fitContentV","_ref4","shadowMain","_ref5","fillColor","_ref6","fontColor","_ref7","modalBackgroundColor","_ref8","modalBorderColor","_ref9","_ref10","_ref11","memo","PropertiesGroupSelect","selected","_ref$filterValue","filterValue","OfferTypeEnum","_ref$hasFilter","hasFilter","setFilter","_useState3","_useState4","currentTemplate","setCurrentTemplate","rootList","_rootIds","propertiesByTypeKeysMap","_items","margin","InputLabel","t","ButtonsGroup","options","productsFilterOptions","CustomSelect","selectedOption","option","placeholder","_schema","yup","shape","required","min","max","sku","barCode","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","price","out","FormContainer","FlexForm","tableBackgroundColor","TemplateBox","Inputs","_templateObject4","ExtraFooterBox","_templateObject5","CmsConfigs","_templateObject6","CmsConfigsHeader","_templateObject7","_variation$offer","_errors$offer","_currentOffer$label","_currentOffer$sku","_currentOffer$barCode","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs2$l","_loaders$isLoading2","updateId","onSubmit","create","service","useLoaders","variation","useCurrentVariation","submitOptions","useAfterSubmitOptions","formMethods","useAppForm","defaultValues","toVariationFormData","template","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","reset","_formValues$propertie","init","ObjectEntries","_step$value","propId","selectedPropsMap","setSelectedPropsMap","propertiesList","_step2","_rootId","_propertiesList","_propertiesIds","_iterator2","_state$propertiesData2","prop","isSelectable","childrenIds","Object","values","compiledLabel","_variation$label","_step3","_sorted","entries","sort","next","localeCompare","_labels","_iterator3","join","onValid","updateVariationById","toVariationReqData","onSuccess","console","log","onError","ToastService","createVariation","close","clear","handleSelect","parentId","_state$propertiesData3","handleClearMap","renderPropertiesList","OfferVariationPropertySelector","error","onReset","AccordionFormArea","expandable","hideFooter","disabled","InputText","fxDirection","opt","justifyContent","$size","LangButtonsGroup","OverlayFooter","loading","resetButtonShown","submitButtonText","FormAfterSubmitOptions","_ref$withActions","withActions","useLoadersProvider","page","modalS","useModalProvider","productsS","loadData","refresh","update","getAllVariationsByProductId","refreshCurrent","updateCurrent","variationsTableTitles","_currentOffer$variati","variations","propsList","properties","_prop$parent","parent","createTableTitlesFromProperties","tableConfig","onRowClick","rowData","getIdRef","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","icon","type","separator","window","confirm","ModalChildren","CreateVariationOverlay","modalChildrenProps","TableList","isSearch","isFilter","tableData","tableTitles","transformData","transformVariationTableData","setSelectedRoe","dispatch","useAppDispatch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","abrupt","getAllPrices","stop","_x","apply","arguments","_data$rowData","getPriceThunk","content","ModalCreatePrice","prices","pricesColumnsForProductReview","currentProduct","setLoading","product","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","SalesTab","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","_page$currentOffer","_page$currentOffer2","toggleVisibility","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","tabs","Variations","VariationsTab","Warehousing","WarehousingTab","Prices","PricesTab","Sales","LoadersProvider","ModalHeader","renderTitle","TabSelector","filterOptions","onOptSelect","preventDefault","ListItem","_item$parent","_item$parent2","_ref2$lvl","lvl","_ref2$onRemove","onRemove","_item$childrenList","childrenList","_Fragment","TagItem","endIcon","size","endIconSize","accentColor","base","onChange","defaultData","setSelectedIds","newData","handleRemove","renderTreeData","treeMode","dropDownIsAbsolute","defaultValue","translate","flexWrap","directory","useDirectorySelector","ApiDirType","setState","_currentOffer$categor","_currentOffer$categor2","categories","c","toString","OverlayForm","updateById","meta","FormProductCategories","NotActiveTreeDataItem","CellStyledComp","PropertyValuesList","light","_templates$","defaultState","templates","usePropertiesSelector","setCurrentId","_useState5","_useState6","templateData","_currentOffer$propert","event","_meta","debug","renderTemplate","_templateData$childre","_prop$childrenList","selectedValue","OverviewPropertyComponent","selectedItems","renderValues","_item$childrenList$fi","maxWidth","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","FormProductDefaultsTabs","Form","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","_tabsMap","_tabsMap$tabs$current","_tabs$currentTabIdx","warehouse","WarehousesTab","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx$v","_tabs$currentTabIdx2","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","tabIs","fData","setDefaults","toReqData","currentIndex","onChangeIndex","hasLoading","onCreatePress","sideBarBackgroundColor","images","useTheme","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","OfferOverviewTabsEnum","ProductOverviewTabsList","Container","Footer","DeleteBtn","colors","OpenBtn","offerOverviewCells","getValue","gridArea","tab","General","approved","CellComponent","cell","overlayHandler","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","minHeight","OverviewCellHeader","openOverlayButtonTitle","onOpenOverlayPress","FormProductCategoriesOverlay","_data$brand","brand","measurement","JSON","parse","unit","step","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","availableProperties","_template$childrenLis","_data$properties","renderProperties","FormSelectPropertiesOverlay","Properties","renderVariationTags","_variation$properties","_item$value","$align","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","commission","percentage","markup","createPriceOverviewTagsData","FormProductDefaultsOverlay","color","fontColorHeader","code","info","Defaults","_product$author","_product$author$user","author","user","email","createdAt","isString","toAppDateFormat","Date","_product$editor","_product$editor$user","editor","updatedAt","renderImageSets","_data$images","set","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","Images","_p$product","router","useAppRouter","cellsMap","offerOverviewCellsMap","forEach","_offerOverviewCellsMa","getOfferOverviewCellsMap","renderCells","_cellsMap$currentTab","_excluded2","OverviewTextCell","goBack","optionProps","replace","hash","iconSize","onEdit","visible","onHide","onDelete","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","offers","OfferOverviewXL","openModal","Modal","Modals","_page$currentOffer3","Page","takeFullGridArea","path","isRightSideVisible","setIsRightSideVisible","toggleRightSide","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","css","takeFullPlace","HeaderButton","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","CategoryItem","field","backgroundColor","_ref$title","_ref$openOverlayButto","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","marginRight","top","getData","rd","bottom","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}