{"version":3,"file":"static/js/433.c4986db6.chunk.js","mappings":"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","sources":["hooks/usePermissonsActionsCreator.ts","components/AppPages/PageHome.tsx","components/AppPages/pagesStyles.tsx","components/atoms/ProfileCard/ProfileCard.tsx"],"sourcesContent":["import { ITableAction, ITableListContext, TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { IPermission } from '../redux/permissions/permissions.types';\nimport { PermissionService } from './usePermissionsService.hook';\nimport { IModalProviderContext, useModalProvider } from '../components/ModalProvider/ModalProvider';\nimport { useNavigate } from 'react-router-dom';\nimport { CompanyQueryType } from '../redux/global.types';\nimport { toast } from 'react-toastify';\nimport { NavigateFunction } from 'react-router/dist/lib/hooks';\nimport { Modals } from '../components/ModalProvider/Modals';\n\nexport type PermissionsActionsCreator = TableActionCreator<IPermission>;\n\nexport type PermissionsActionsType =\n  | 'enterCompany'\n  | 'editCompany'\n  | 'deleteCompany'\n  | 'leaveCompany'\n  | 'rejectPermission'\n  | 'acceptPermission'\n  | 'createCompany'\n  | 'createPermission'\n  | 'deletePermission'\n  | 'editPermission';\nexport const isMyCompany = ({ owner, user }: IPermission) => {\n  return user?._id === owner?._id;\n};\nexport interface PermissionsTablesActionProps {\n  ctx: ITableListContext<IPermission>;\n  navigate: NavigateFunction;\n  service: PermissionService;\n  companyType: CompanyQueryType;\n  modalService: IModalProviderContext;\n}\nexport type IPermissionsTableAction = ITableAction<PermissionsActionsType>;\nexport type PermissionsActionCreator = (options: PermissionsTablesActionProps) => IPermissionsTableAction;\nconst createEnterCompanyAction = ({\n  ctx,\n  navigate,\n  service,\n}: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'enterCompany',\n  title: 'Перейти',\n  icon: 'logIn',\n  disabled: !ctx.selectedRow?._id,\n  iconSize: '100%',\n  type: 'onlyIcon',\n  onClick: () => {\n    if (ctx.selectedRow?._id) {\n      service.logIn({\n        data: { _id: ctx.selectedRow?._id },\n        onSuccess: data => {\n          if (!data._id) return console.log('data', data);\n          toast.success(`Current company: ${data.company?.name}`);\n          navigate(`/app/${data._id}`);\n        },\n        onError: error => {\n          console.log(error);\n        },\n      });\n    }\n  },\n});\nconst createEditCompanyAction = ({\n  ctx,\n  navigate,\n  service,\n  companyType,\n  modalService,\n}: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'editCompany',\n  title: 'Редагувати',\n  icon: 'edit',\n  disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n  iconSize: '100%',\n  type: 'onlyIcon',\n  onClick: () => {\n    modalService.handleOpenModal({\n      Modal: Modals.FormCreateCompany,\n      modalChildrenProps: {\n        fillHeight: true,\n        title: 'Редагувати компанію',\n      },\n    });\n  },\n});\nconst createDeleteCompanyAction = ({ companyType, ctx }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'deleteCompany',\n  title: 'Видалити',\n  icon: 'delete',\n  iconSize: '100%',\n  disabled: ctx.selectedRow?._id && companyType ? ['own'].includes(companyType) : false,\n  type: 'onlyIcon',\n  onClick: () => {\n    console.log('selPermission', ctx.selectedRow?._id);\n  },\n});\nconst createLogOutCompanyAction = ({ companyType, ctx }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'leaveCompany',\n  title: 'Покинути',\n  icon: 'logOut',\n  iconSize: '100%',\n  disabled: ctx.selectedRow?._id && companyType ? !['invited'].includes(companyType) : true,\n  type: 'onlyIcon',\n  onClick: () => {\n    console.log('leaveCompany', ctx.selectedRow?._id);\n  },\n});\nconst createRejectPermission = ({ ctx, companyType }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'rejectPermission',\n  title: 'Відхилити',\n  icon: 'clear',\n  iconSize: '100%',\n  type: 'onlyIconFilled',\n  disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n  onClick: () => {\n    console.log('rejectPermission', ctx.selectedRow);\n  },\n});\nconst createAcceptPermissionAction = ({ ctx, companyType }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'acceptPermission',\n  title: 'Прийняти',\n  icon: 'done',\n  iconSize: '100%',\n  type: 'onlyIconFilled',\n  disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n  onClick: () => {\n    console.log('acceptPermission', ctx.selectedRow);\n  },\n});\nconst createAddNewCompanyAction = ({ modalService }: PermissionsTablesActionProps): IPermissionsTableAction => ({\n  name: 'createCompany',\n  title: 'Створити компанію',\n  icon: 'plus',\n  iconSize: '100%',\n  type: 'onlyIconFilled',\n  onClick: () => {\n    modalService.handleOpenModal({\n      Modal: Modals.FormCreateCompany,\n      props: {\n        fillHeight: true,\n        title: 'Створити компанію',\n      },\n    });\n  },\n});\nconst usePermissionsActionsCreator = (\n  service: PermissionService,\n  companyType: CompanyQueryType\n): PermissionsActionsCreator => {\n  const modal = useModalProvider();\n  const navigate = useNavigate();\n\n  return (ctx): ITableAction<PermissionsActionsType>[] => {\n    const actionParams = {\n      ctx,\n      navigate,\n      service,\n      modalService: modal,\n      companyType,\n    };\n\n    return [\n      createEnterCompanyAction(actionParams),\n      createEditCompanyAction(actionParams),\n      createDeleteCompanyAction(actionParams),\n      createLogOutCompanyAction(actionParams),\n      { separator: true },\n      createRejectPermission(actionParams),\n      createAcceptPermissionAction(actionParams),\n      createAddNewCompanyAction(actionParams),\n    ];\n  };\n};\n\nexport default usePermissionsActionsCreator;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\nimport usePermissionsService, { usePermissionsSelector } from 'hooks/usePermissionsService.hook';\nimport { IPermission } from '../../redux/permissions/permissions.types';\nimport { permissionsSearchParams, permissionsTableColumns } from '../../data';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport usePermissionsActionsCreator from '../../hooks/usePermissonsActionsCreator';\nimport { CompanyQueryType } from '../../redux/global.types';\nimport { PermissionStatus } from 'redux/permissions/permissions.types';\n\nexport type CompanyTypeItem = { title: string; param: CompanyQueryType };\n\nconst companyTypes: CompanyTypeItem[] = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n\ntype Props = {\n  path?: string;\n};\nconst PageHome: React.FC<any> = ({ path }: Props) => {\n  const { user } = useAuthSelector();\n  const [companyType, setCompanyType] = useState<CompanyTypeItem>();\n  const setSearchParams = useSearchParams({\n    companyType: companyTypes[0].param,\n  })[1];\n  const state = usePermissionsSelector();\n  const permissionsService = usePermissionsService();\n  const actionsCreator = usePermissionsActionsCreator(permissionsService, companyType?.param || 'own');\n\n  const permissionsData = useMemo(() => {\n    return state.permissions?.filter(pr => {\n      if (companyType?.param === 'invited') return pr.status === PermissionStatus.ACCEPTED;\n      if (companyType?.param === 'invites') return pr.status === PermissionStatus.PENDING;\n      if (companyType?.param === 'all') return pr;\n      if (companyType?.param === 'own') return pr.user?._id === pr.owner?._id;\n      return pr;\n    });\n  }, [companyType?.param, state.permissions]);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IPermission> => ({\n      tableData: permissionsData,\n      tableTitles: permissionsTableColumns,\n      tableSearchParams: permissionsSearchParams,\n      isFilter: false,\n      isSearch: true,\n      checkBoxes: false,\n      actionsCreator,\n    }),\n    [actionsCreator, permissionsData]\n  );\n  const onSearchParamClick = useCallback(\n    (item: CompanyTypeItem) => {\n      setSearchParams({ companyType: item.param });\n      setCompanyType(item);\n    },\n    [setSearchParams]\n  );\n  const isActiveClassName = useCallback(\n    (param: string) => (companyType?.param === param ? 'active' : ''),\n    [companyType?.param]\n  );\n\n  const renderFilterButtons = useMemo(() => {\n    return companyTypes.map(item => (\n      <StButtonIcon\n        key={item.param}\n        variant=\"def\"\n        onClick={() => onSearchParamClick(item)}\n        className={isActiveClassName(item.param)}\n      >\n        {item.title}\n      </StButtonIcon>\n    ));\n  }, [isActiveClassName, onSearchParamClick]);\n\n  useEffect(() => {\n    setSearchParams({ companyType: companyTypes[0].param });\n    setCompanyType(companyTypes[0]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    user._id && permissionsService.getAllByUserId({ data: { userId: user._id } });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user._id]);\n\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>\n          <ProfileCard {...user} />\n        </ProfileInfo>\n\n        <FilterButtons>\n          <ButtonsList>{renderFilterButtons}</ButtonsList>\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        <TableList {...tableConfig} />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  //background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace};\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    //height: 1px;\n    //width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default memo(PageHome);\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport { IUser } from 'redux/auth/auth.types';\n\nexport interface ProfileCardProps extends Omit<IUser, '_id'> {\n  // avatarURL?: string;\n  // name?: string;\n  // email?: string;\n  nameFontSize?: string;\n  emailFontSize?: string;\n  avatarPrpps?: React.HTMLAttributes<HTMLDivElement>;\n  nameProps?: React.HTMLAttributes<HTMLDivElement>;\n  emailProps?: React.HTMLAttributes<HTMLDivElement>;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps & React.HTMLAttributes<HTMLDivElement>> = ({\n                                                                                          avatarURL = '',\n                                                                                          name = 'name',\n                                                                                          email = 'email',\n                                                                                          emailFontSize,\n                                                                                          nameFontSize,\n                                                                                          nameProps,\n                                                                                          emailProps,\n                                                                                          children,\n                                                                                          ...props\n                                                                                        }) => {\n  return (\n    <Card {...props}>\n      <Avatar>\n        <img src={avatarURL} alt='userImage' width={100} height={100} />\n      </Avatar>\n\n      <Wrapper>\n        <ProfileName fontSize={nameFontSize} {...nameProps}>\n          {name}\n        </ProfileName>\n\n        <ProfileEmail fontSize={emailFontSize} {...emailProps}>\n          {email}\n        </ProfileEmail>\n\n        {children}\n      </Wrapper>\n    </Card>\n  );\n};\nconst Card = styled.div`\n  display: flex;\n`;\nconst Avatar = styled.div`\n  min-width: 64px;\n  max-width: 64px;\n  height: 64px;\n  overflow: hidden;\n  border-radius: 50%;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px;\n\n  height: 100%;\n`;\nconst ProfileName = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '12px')};\n  font-weight: 600;\n`;\nconst ProfileEmail = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '10px')};\n  line-height: 16px;\n`;\nexport default ProfileCard;\n"],"names":["createEnterCompanyAction","_ref2","_ctx$selectedRow","ctx","navigate","service","name","title","icon","disabled","selectedRow","_id","iconSize","type","onClick","_ctx$selectedRow2","_ctx$selectedRow3","logIn","data","onSuccess","_data$company","console","log","toast","concat","company","onError","error","createEditCompanyAction","_ref3","_ctx$selectedRow4","companyType","modalService","includes","handleOpenModal","Modal","Modals","modalChildrenProps","fillHeight","createDeleteCompanyAction","_ref4","_ctx$selectedRow5","_ctx$selectedRow6","createLogOutCompanyAction","_ref5","_ctx$selectedRow7","_ctx$selectedRow8","createRejectPermission","_ref6","_ctx$selectedRow9","createAcceptPermissionAction","_ref7","_ctx$selectedRow10","createAddNewCompanyAction","_ref8","props","modal","useModalProvider","useNavigate","actionParams","separator","companyTypes","param","PageHome","_ref","path","user","useAuthSelector","_useState","useState","_useState2","_slicedToArray","setCompanyType","setSearchParams","useSearchParams","state","usePermissionsSelector","permissionsService","usePermissionsService","actionsCreator","usePermissionsActionsCreator","permissionsData","useMemo","_state$permissions","permissions","filter","pr","_pr$user","_pr$owner","status","PermissionStatus","owner","tableConfig","tableData","tableTitles","permissionsTableColumns","tableSearchParams","permissionsSearchParams","isFilter","isSearch","checkBoxes","onSearchParamClick","useCallback","item","isActiveClassName","renderFilterButtons","map","_jsx","StButtonIcon","variant","className","children","useEffect","getAllByUserId","userId","_jsxs","Page","Top","ProfileInfo","ProfileCard","_objectSpread","FilterButtons","ButtonsList","Bottom","TableList","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_templateObject2","theme","tableBackgroundColor","takeFullPlace","_templateObject3","_templateObject4","_templateObject5","_templateObject6","ButtonIcon","_templateObject7","trBorderClr","globals","timingFnMui","accentColor","base","memo","css","Card","Avatar","Wrapper","ProfileName","fontSize","ProfileEmail","_ref$avatarURL","avatarURL","_ref$name","_ref$email","email","emailFontSize","nameFontSize","nameProps","emailProps","_objectWithoutProperties","_excluded","src","alt","width","height"],"sourceRoot":""}