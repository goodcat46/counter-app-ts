{"version":3,"file":"static/js/375.29fcd1cb.chunk.js","mappings":"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","sources":["hooks/useOrdersActionsCreator.hook.ts","components/AppPages/orders/PageOrders.tsx","components/AppPages/pagesStyles.tsx","data/orders.data.ts"],"sourcesContent":["import { useModalProvider } from '../components/ModalProvider/ModalProvider';\nimport { useCallback } from 'react';\nimport { ITableListContext, TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { IOrder } from '../redux/orders/orders.types';\nimport { Modals } from '../components/Modals';\nimport { useNavigate } from 'react-router-dom';\nimport { ExtractIdString } from '../utils/dataTransform';\nimport { t } from '../lang';\n\nexport type OrdersActionsCreator = TableActionCreator<IOrder>;\nconst useOrdersActionsCreatorHook = (): OrdersActionsCreator => {\n  const modalS = useModalProvider();\n  const navigate = useNavigate();\n  // const { orders } = useAppServiceProvider();\n\n  return useCallback(\n    (ctx: ITableListContext<IOrder>) => {\n      const selected = ctx?.selectedRow;\n      const selectedId = selected ? ExtractIdString(selected) : '';\n\n      return [\n        {\n          name: 'openOrderOverview',\n          icon: 'openInNew',\n          disabled: !selectedId,\n          onClick: () => {\n            selectedId && navigate(selectedId);\n            // modalS.open({\n            //   Modal: Modals.OrderOverview,\n            //   props: {\n            //     order: ctx.tableData?.find(el => el._id === selectedId),\n            //   },\n            // });\n          },\n        },\n        {\n          name: 'archiveOrder',\n          icon: 'archive',\n          disabled: !selectedId,\n          onClick: () => {\n            if (selectedId) window.confirm(`Архівувати замовення: ${selectedId}`);\n          },\n        },\n        {\n          name: 'editOrder',\n          icon: 'edit',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: 'Edit order',\n              },\n            });\n          },\n        },\n        {\n          name: 'copyOrder',\n          icon: 'copy',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: `Copy order: ${selectedId}`,\n              },\n            });\n          },\n        },\n        { separator: true },\n        {\n          name: 'createOrder',\n          icon: 'AddToList',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrdersGroup,\n              props: {\n                title: t(`Create orders group`),\n              },\n            });\n          },\n        },\n        {\n          name: 'createOrder',\n          icon: 'plus',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: t(`Create order`),\n              },\n            });\n          },\n        },\n      ];\n    },\n    [modalS, navigate]\n  );\n};\nexport default useOrdersActionsCreatorHook;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { ISortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport { mockOrdersData, ordersSearchParams, ordersTableColumns } from '../../../data/orders.data';\nimport useOrdersServiceHook from '../../../hooks/useOrdersService.hook';\nimport { IOrder, OrderStatusEnum } from '../../../redux/orders/orders.types';\nimport useOrdersActionsCreatorHook from '../../../hooks/useOrdersActionsCreator.hook';\nimport { BaseAppPageProps } from '../index';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport ModalFilter from '../../ModalForm/ModalFilter';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\ninterface Props extends BaseAppPageProps {}\n\nconst ordersFilterOptions = enumToFilterOptions(OrderStatusEnum);\n\n// const useDynamicFilterOptionsByEnum = <T extends Record<string, any> = any>(\n//   enumObj: T,\n//   builder: (\n//     option: FilterOption<T[keyof T]>,\n//     index: number,\n//     arr: FilterOption<T[keyof T]>[]\n//   ) => Partial<DynamicFilterOption<T[keyof T]>>\n// ) => {\n//   const options = useMemo(() => {\n//     return enumToFilterOptions(enumObj).map((value, index, array) => ({ ...value, ...builder(value, index, array) }));\n//   }, [builder, enumObj]);\n//\n//   return options;\n// };\n\nconst PageOrders: React.FC<any> = (props: Props) => {\n  const { tableConfig, isLoading } = useOrderTableConfigs();\n  const [filterButtonResults] = useState<Record<OrderStatusEnum | string, number | string>>({});\n\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <ModalFilter\n          style={{ height: 44 }}\n          filterOptions={ordersFilterOptions}\n          renderLabel={info => {\n            return (\n              <FlexBox\n                justifyContent={'space-between'}\n                fillHeight\n                fillWidth\n                overflow={'hidden'}\n                padding={'2px 4px'}\n                gap={6}\n                style={{ cursor: 'inherit' }}\n              >\n                <Text $size={12} $weight={600} $textTransform={'none'}>\n                  {info?.option?.label ?? null}\n                </Text>\n\n                <Text $size={10} $weight={500} $ellipsisMode>\n                  {info?.option?.value ? filterButtonResults[info?.option?.value] : 0}\n                </Text>\n              </FlexBox>\n            );\n          }}\n        />\n\n        <FlexBox fillWidth flex={1}>\n          <TableList {...tableConfig} tableData={mockOrdersData} isLoading={isLoading} />\n        </FlexBox>\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled(FlexBox)`\n  ${takeFullGridArea}\n`;\n\nexport default PageOrders;\n\nexport const useOrderTableConfigs = () => {\n  const service = useOrdersServiceHook();\n  const state = useOrdersSelector();\n  const { getAll } = service;\n  const actionsCreator = useOrdersActionsCreatorHook();\n  // const filterSelectors = useProductsFilterSelectorsHook();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IOrder> => ({\n      tableData: state.orders,\n      tableTitles: ordersTableColumns,\n      tableSortParams: ordersSearchParams.filter(el => el.sort),\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, getAll, sortParams, state.orders]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    if (!sortParams && !filterParams) {\n      if (state.orders.length === 0) {\n        getAll({\n          data: { refresh: true },\n          onLoading: setIsLoading,\n        });\n      }\n    }\n  }, [filterParams, getAll, isLoading, sortParams, state.orders.length, tableConfig]);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { IOrder, IOrderSlot, OrderStatusEnum } from '../redux/orders/orders.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/ModalForm/ModalFilter';\nimport { getStatusesByEnum } from './statuses.data';\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\nexport type DataPath =\n  | 'owner.label'\n  | 'owner.name'\n  | 'author.name'\n  | 'author.email'\n  | 'editor.name'\n  | 'editor.email'\n  | 'auditor.name'\n  | 'auditor.email'\n  | 'contractor.name'\n  | 'contractor.type'\n  | 'eventDate'\n  | 'type'\n  | 'status'\n  | 'amount'\n  | 'currency'\n  | 'comment'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'mark.label'\n  | 'invoice.label'\n  | 'invoice.code'\n  | 'invoice.number'\n  | 'payment.label'\n  | 'payment.code'\n  | 'payment.number'\n  | 'order.code'\n  | 'total'\n  | 'manager.name'\n  | 'manager.code'\n  | 'manager.email'\n  | 'customer.name'\n  | 'customer.phone'\n  | 'receiver.name'\n  | 'receiver.phone'\n  | 'invoices'\n  | 'payments'\n  | 'transporters';\nexport const ordersTableColumns: CellTittleProps<IOrder, DataPath>[] = [\n  {\n    top: { name: t('date'), align: 'center', path: 'eventDate' },\n    bottom: { name: t('time'), align: 'center' },\n    width: '90px',\n    action: 'dateSimple',\n  },\n  {\n    top: { name: t('status'), path: 'status' },\n    bottom: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('Priority') },\n    // bottom: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('Total amount'), align: 'end', path: 'total' },\n    bottom: { name: t('Total q-ty'), align: 'end' },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Group') },\n    bottom: { name: t('Number'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Замовник', path: 'customer.name' },\n    bottom: { name: 'Телефон', path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Отримувач', path: 'receiver.name' },\n    bottom: { name: 'Телефон', path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Shipments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\n\nexport const orderSlotTableColumns: CellTittleProps<IOrderSlot>[] = [\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n];\n\nexport const mockOrdersData: IOrder[] = [{ _id: '51651651', owner: { _id: '4515135135131' } as any }];\n"],"names":["modalS","useModalProvider","navigate","useNavigate","useCallback","ctx","selected","selectedRow","selectedId","ExtractIdString","name","icon","disabled","onClick","window","confirm","concat","open","Modal","Modals","props","title","separator","type","t","ordersFilterOptions","enumToFilterOptions","OrderStatusEnum","Page","styled","FlexBox","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_useOrderTableConfigs","useOrderTableConfigs","tableConfig","isLoading","_useState","useState","filterButtonResults","_slicedToArray","_jsx","AppGridPage","path","children","_jsxs","ModalFilter","style","height","filterOptions","renderLabel","info","_info$option$label","_info$option","_info$option2","_info$option3","justifyContent","fillHeight","fillWidth","overflow","padding","gap","cursor","Text","$size","$weight","$textTransform","option","label","$ellipsisMode","value","flex","TableList","_objectSpread","tableData","mockOrdersData","service","useOrdersServiceHook","state","useOrdersSelector","getAll","actionsCreator","useOrdersActionsCreatorHook","_useState3","_useState4","setIsLoading","_useState5","_useState6","sortParams","setSortParams","_useState7","_useState8","filterParams","setFilterParams","useMemo","orders","tableTitles","ordersTableColumns","tableSortParams","ordersSearchParams","el","sort","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","data","refresh","query","onLoading","then","handleTableSort","param","sortOrder","dataPath","useEffect","length","css","takeFullPlace","_templateObject2","_templateObject3","getStatusesByEnum","top","align","bottom","width","action","filter","search","orderSlotTableColumns","_id","owner"],"sourceRoot":""}