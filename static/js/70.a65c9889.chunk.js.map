{"version":3,"file":"static/js/70.a65c9889.chunk.js","mappings":"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","sources":["redux/permissions/usePermissionsService.hook.ts","components/AppPages/PageHome.tsx","components/AppPages/pagesStyles.ts"],"sourcesContent":["import { RootState, useAppDispatch } from '../store.store';\nimport { useSelector } from 'react-redux';\nimport {\n  createPermissionThunk,\n  deletePermissionByIdThunk,\n  editPermissionThunk,\n  getAllPermissionsByCompanyIdThunk,\n  getAllPermissionsByUserIdThunk,\n  getCurrentPermissionThunk,\n} from './permissions.thunk';\nimport { IPermission } from './permissions.types';\n\nexport const usePermissionsSelector = () => useSelector((state: RootState) => state.permissions);\nconst usePermissionsService = () => {\n  const dispatch = useAppDispatch();\n  const state = usePermissionsSelector();\n\n  function getAllByCompanyId(companyId: string) {\n    dispatch(getAllPermissionsByCompanyIdThunk({ submitData: { companyId } }));\n  }\n\n  function getAllByUserId(userId: string) {\n    dispatch(getAllPermissionsByUserIdThunk({ submitData: { userId } }));\n  }\n\n  function deleteById(permissionId: string, permission: Partial<IPermission>) {\n    dispatch(deletePermissionByIdThunk({ submitData: { id: permissionId } }));\n  }\n\n  function edit(permissionId: string, permission: { company: string; user: string; role: string; }) {\n    dispatch(editPermissionThunk({ submitData: { id: permissionId, data: permission } }));\n  }\n\n  function create(permissionId: string, permission: { company: string; user: string; role: string; }) {\n    dispatch(createPermissionThunk({ submitData: { id: permissionId, data: permission } }));\n  }\n\n  function getCurrentPermission(permissionId: string) {\n    dispatch(getCurrentPermissionThunk({ submitData: { permissionId } }));\n  }\n\n\n  return {\n    dispatch,\n    ...state,\n    getAllByCompanyId,\n    getAllByUserId,\n    getCurrentPermission,\n    deleteById,\n    edit,\n    create,\n  };\n};\n\nexport type PermissionService = ReturnType<typeof usePermissionsService>\nexport default usePermissionsService as typeof usePermissionsService;","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n// import ProfileCard from 'components/molecules/ProfileCard/ProfileCard';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { memo, useCallback, useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\nimport usePermissionsService from 'redux/permissions/usePermissionsService.hook';\nimport { IPermission } from '../../redux/permissions/permissions.types';\nimport { permissionsSearchParams, permissionsTableColumns } from '../../data';\nimport { ITableListProps } from '../TableList/tableTypes.types';\n\nconst companyTypes = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n\nconst PageHome: React.FC<any> = () => {\n  const { user } = useAuthSelector();\n  const { permissions } = usePermissionsService();\n  const [searchParams, setSearchParams] = useSearchParams({\n    companyType: companyTypes[0].param,\n  });\n\n  useEffect(() => {\n    setSearchParams({ companyType: companyTypes[0].param });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IPermission> => ({\n      tableData: permissions,\n      tableTitles: permissionsTableColumns,\n      tableSearchParams: permissionsSearchParams,\n      isFilter: false,\n      isSearch: true,\n      checkBoxes: false,\n    }),\n    [permissions]\n  );\n  const onSearchParamClick = useCallback(\n    (param: string) => {\n      setSearchParams({ companyType: param });\n    },\n    [setSearchParams]\n  );\n  const isActiveClassName = useCallback(\n    (param: string) => (searchParams.get('companyType') === param ? 'active' : ''),\n    [searchParams]\n  );\n\n  const renderFilterButtons = useMemo(() => {\n    return companyTypes.map(item => (\n      <StButtonIcon\n        key={item.param}\n        variant=\"def\"\n        onClick={() => onSearchParamClick(item.param)}\n        className={isActiveClassName(item.param)}\n      >\n        {item.title}\n      </StButtonIcon>\n    ));\n  }, [isActiveClassName, onSearchParamClick]);\n\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>\n          <ProfileCard {...user} />\n        </ProfileInfo>\n\n        <FilterButtons>\n          <ButtonsList>{renderFilterButtons}</ButtonsList>\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        <TableList {...tableConfig} />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  //background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace};\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    //height: 1px;\n    //width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default memo(PageHome);\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["dispatch","useAppDispatch","state","useSelector","permissions","_objectSpread","getAllByCompanyId","companyId","getAllPermissionsByCompanyIdThunk","submitData","getAllByUserId","userId","getAllPermissionsByUserIdThunk","getCurrentPermission","permissionId","getCurrentPermissionThunk","deleteById","permission","deletePermissionByIdThunk","id","edit","editPermissionThunk","data","create","createPermissionThunk","companyTypes","title","param","PageHome","user","useAuthSelector","usePermissionsService","_useSearchParams","useSearchParams","companyType","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","useEffect","tableConfig","useMemo","tableData","tableTitles","permissionsTableColumns","tableSearchParams","permissionsSearchParams","isFilter","isSearch","checkBoxes","onSearchParamClick","useCallback","isActiveClassName","get","renderFilterButtons","map","item","_jsx","StButtonIcon","variant","onClick","className","children","_jsxs","Page","Top","ProfileInfo","ProfileCard","FilterButtons","ButtonsList","Bottom","TableList","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_templateObject2","_ref","theme","tableBackgroundColor","takeFullPlace","_templateObject3","_ref2","_templateObject4","_templateObject5","_templateObject6","ButtonIcon","_templateObject7","_ref3","trBorderClr","_ref4","globals","timingFnMui","_ref5","accentColor","base","memo","css"],"sourceRoot":""}