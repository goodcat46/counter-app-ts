{"version":3,"file":"static/js/6.de036748.chunk.js","mappings":"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","sources":["redux/transactions/useTrFilterSelectors.hook.ts","components/AppPages/PageTransactions.tsx","redux/transactions/useTrTableActions.hook.ts","components/AppPages/pagesStyles.ts"],"sourcesContent":["import { FilterSelectorType } from 'components/Filter/AppFilter';\nimport SelectsTreeList from 'components/Filter/SelectorContent/SelectsTreeList';\nimport { useCategoriesSelector } from 'redux//selectors.store';\nimport { useCountsSelector } from 'redux/selectors.store';\n\nconst useTrFilterSelectors = (): FilterSelectorType[] => {\n  const transationTypes = [\n    { _id: 'ds6d5vf6sd5f1v6sd', name: 'INCOME', label: 'ДОХІД' },\n    { _id: 'ds6d5vf6sd6f1v61d', name: 'TRANSFER', label: 'ПЕРЕКАЗ' },\n    { _id: 'ds6d5vf6dd6f1v68d', name: 'EXPENSE', label: 'ВИТРАТИ' },\n  ];\n\n  return [\n    {\n      label: 'Тип',\n      data: transationTypes,\n      selectorName: 'type',\n      ListComp: SelectsTreeList,\n    },\n    {\n      label: 'Рахунки',\n      data: useCountsSelector().counts,\n      selectorName: 'counts',\n      ListComp: SelectsTreeList,\n    },\n    {\n      label: 'Категорії',\n      data: useCategoriesSelector().categories,\n      selectorName: 'categories',\n      ListComp: SelectsTreeList,\n    },\n  ];\n};\nexport default useTrFilterSelectors;\n","import TableList, { ITableListProps } from 'components/TableList/TableList';\nimport { takeFullGridArea } from './pagesStyles';\nimport {\n  transactionsColumns,\n  transactionsMockData,\n  transactionsSearchParams,\n} from 'data';\nimport styled from 'styled-components';\nimport useTransactionsService from 'redux/transactions/useTransactionsService.hook';\nimport { useMemo } from 'react';\nimport useTrFilterSelectors from 'redux/transactions/useTrFilterSelectors.hook';\nimport { useTrActions } from 'redux/transactions/useTrTableActions.hook';\nimport { ITransaction } from '../../redux/transactions/transactions.types';\n\nconst PageTransactions = () => {\n  const transactionsService = useTransactionsService();\n  const filterSelectors = useTrFilterSelectors();\n  const tableActions = useTrActions(transactionsService);\n  // const [selectedTr, setSelectedTr] = useState<any>(null);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<ITransaction> => ({\n      tableData: transactionsMockData || transactionsService.state.transactions,\n      tableTitles: transactionsColumns,\n      tableActions,\n      tableSearchParams: transactionsSearchParams.filter(el => el.search),\n      tableSortParams: transactionsSearchParams.filter(el => el.sort),\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      filterDefaultValues: { categories: [''] },\n      onFilterSubmit: data => {\n        console.log(data);\n      },\n      onRowClick: data => {\n        console.log(data);\n      },\n    }),\n    [filterSelectors, tableActions, transactionsService.state.transactions]\n  );\n\n  return (\n    <Page>\n      <TableList {...tableConfig} />\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageTransactions;\n","import { useModalProvider } from '../../components/ModalProvider/ModalProvider';\nimport { TransactionsService } from './useTransactionsService.hook';\nimport { useMemo } from 'react';\nimport { iconId } from '../../img/sprite';\nimport TransactionForm from '../../components/Forms/TransactionForm';\nimport { filterOptions } from '../../data/transactions.data';\n\nexport const useTrActions = (transactionService: TransactionsService) => {\n  const modal = useModalProvider();\n  const { editById, create, deleteById } = transactionService;\n\n  return useMemo(\n    () => ({\n      top: [\n        {\n          name: 'editTr',\n          title: 'Редагування транзакції',\n          iconId: iconId.edit,\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: TransactionForm,\n              modalChildrenProps: {\n                title: 'Редагування транзакції',\n                filterOptions,\n                onSubmitEdit: editById,\n              },\n            });\n          },\n          disableCheck: () => false,\n        },\n        {\n          name: 'copyTr',\n          title: 'Копіювання транзакції',\n          iconId: iconId.copy,\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: TransactionForm,\n              modalChildrenProps: {\n                title: 'Копіювання транзакції',\n                filterOptions,\n                onSubmit: create,\n              },\n            });\n          },\n          disableCheck: () => false,\n        },\n        {\n          name: 'deleteTr',\n          title: 'Видалення транзакції',\n          iconId: iconId.delete,\n          iconSize: '90%',\n          onClick: (id: string) => {\n            deleteById(id);\n          },\n          disableCheck: () => true,\n        },\n      ],\n      bottom: [\n        {\n          name: 'createIncomeTr',\n          title: 'Дохід',\n          iconId: iconId.INCOME,\n          iconSize: '90%',\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: TransactionForm,\n              modalChildrenProps: {\n                title: 'Дохід',\n                filterOptions,\n                defaultState: { type: 'INCOME' },\n                onSubmit: create,\n              },\n            });\n          },\n          disableCheck: () => false,\n        },\n        {\n          name: 'createTransferTr',\n          title: 'Переказ між рахунками',\n          iconId: iconId.TRANSFER,\n          iconSize: '90%',\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: TransactionForm,\n              modalChildrenProps: {\n                title: 'Переказ між рахунками',\n                filterOptions,\n                defaultState: { type: 'TRANSFER' },\n                onSubmit: create,\n              },\n            });\n          },\n          disableCheck: () => false,\n        },\n        {\n          name: 'createExpenseTr',\n          title: 'Витрата',\n          iconId: iconId.EXPENSE,\n          iconSize: '90%',\n          onClick: () => {\n            modal.handleOpenModal({\n              ModalChildren: TransactionForm,\n              modalChildrenProps: {\n                title: 'Витрата',\n                filterOptions,\n                defaultState: { type: 'EXPENSE' },\n                onSubmit: create,\n              },\n            });\n          },\n          disableCheck: () => false,\n        },\n      ],\n    }),\n    [create, deleteById, editById, modal]\n  );\n};","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["label","data","_id","name","selectorName","ListComp","SelectsTreeList","useCountsSelector","counts","useCategoriesSelector","categories","Page","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","transactionsService","useTransactionsService","filterSelectors","useTrFilterSelectors","tableActions","transactionService","modal","useModalProvider","editById","create","deleteById","useMemo","top","title","iconId","onClick","handleOpenModal","ModalChildren","TransactionForm","modalChildrenProps","filterOptions","onSubmitEdit","disableCheck","onSubmit","iconSize","id","bottom","defaultState","type","useTrActions","tableConfig","tableData","transactionsMockData","state","transactions","tableTitles","transactionsColumns","tableSearchParams","transactionsSearchParams","el","search","tableSortParams","sort","isFilter","isSearch","footer","filterDefaultValues","onFilterSubmit","console","log","onRowClick","_jsx","children","TableList","_objectSpread","css","takeFullPlace","_templateObject2","_templateObject3"],"sourceRoot":""}