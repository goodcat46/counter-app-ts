{"version":3,"file":"static/js/806.f1824151.chunk.js","mappings":"gTAeMA,EAAaC,EAAAA,KAAaC,MAAM,CAAC,GAoDjCC,EAASC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wHAUzB,UAzDqE,SAAHC,GAASA,EAAHC,IAASD,EAAJE,KAAsC,IAAhCC,EAAIH,EAAJG,KAAMC,EAAQJ,EAARI,SAAaC,GAAKC,EAAAA,EAAAA,GAAAN,EAAAO,GACzGC,GAOIC,EAAAA,EAAAA,IAA8B,CAChCC,eAAaC,EAAAA,EAAAA,GAAA,GACRR,GAELS,UAAUC,EAAAA,EAAAA,GAAYpB,GACtBqB,eAAgB,aAXHC,EAAMP,EAAnBQ,UAAaD,OACbE,EAAQT,EAARS,SACAC,EAAYV,EAAZU,aACAC,EAAcX,EAAdW,eACAC,EAAcZ,EAAdY,eACAC,EAAuBb,EAAvBa,wBAeF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAASZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRP,SARJ,SAA0BoB,GACxB,GAAIA,EACF,OAAON,GAAa,SAAAf,GAAI,OAAIqB,EAAUrB,EAAM,CAAEiB,eAAAA,EAAgBD,eAAAA,GAAiB,GAEnF,CAIcM,CAAiBrB,IACvBC,GAAK,IACTqB,aACEJ,EAAAA,EAAAA,KAACK,EAAAA,EAAsB,CACrBR,eAAgBA,EAChBC,eAAgBA,EAChBQ,aAAcP,IAEjBQ,UAEDC,EAAAA,EAAAA,MAAClC,EAAM,CAAAiC,SAAA,EACLP,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,MAAM,iCAAQC,MAAOlB,EAAOiB,MAAMH,UAC5CP,EAAAA,EAAAA,KAACY,EAAAA,IAASvB,EAAAA,EAAAA,GAAA,CAACwB,YAAY,6EAAoBlB,EAAS,cAEtDK,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,MAAM,mDAAWC,MAAOlB,EAAOqB,YAAYP,UACrDP,EAAAA,EAAAA,KAACe,EAAAA,GAAe1B,EAAAA,EAAAA,GAAA,CAACwB,YAAY,+FAAuBlB,EAAS,mBAClD,SAKrB,C","sources":["components/Forms/FormCreateActivity.tsx"],"sourcesContent":["import ModalForm from 'components/ModalForm';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { IActivity, IActivityFormData } from 'redux/companyActivities/activities.types';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport TextareaPrimary from '../atoms/Inputs/TextareaPrimary';\nimport { DirectoriesFormProps } from '../Directories/dir.types';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport FormAfterSubmitOptions from './components/FormAfterSubmitOptions';\nimport { useAppForm } from '../../hooks';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\n\nconst validation = yup.object().shape({});\n\nexport interface FormCreateCompanyActivityProps\n  extends DirectoriesFormProps<ApiDirType.ACTIVITIES, IActivity, IActivityFormData> {}\n\nconst FormCreateActivity: React.FC<FormCreateCompanyActivityProps> = ({ _id, edit, data, onSubmit, ...props }) => {\n  const {\n    formState: { errors },\n    register,\n    handleSubmit,\n    closeAfterSave,\n    clearAfterSave,\n    toggleAfterSubmitOption,\n  } = useAppForm<IActivityFormData>({\n    defaultValues: {\n      ...data,\n    },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n\n  function formEventWrapper(evHandler?: AppSubmitHandler<IActivityFormData>) {\n    if (evHandler) {\n      return handleSubmit(data => evHandler(data, { clearAfterSave, closeAfterSave }));\n    }\n  }\n\n  return (\n    <ModalForm\n      onSubmit={formEventWrapper(onSubmit)}\n      {...props}\n      extraFooter={\n        <FormAfterSubmitOptions\n          closeAfterSave={closeAfterSave}\n          clearAfterSave={clearAfterSave}\n          toggleOption={toggleAfterSubmitOption}\n        />\n      }\n    >\n      <Inputs>\n        <InputLabel label=\"Назва\" error={errors.label}>\n          <InputText placeholder=\"Введіть назву\" {...register('label')} />\n        </InputLabel>\n        <InputLabel label=\"Коментар\" error={errors.description}>\n          <TextareaPrimary placeholder=\"Введіть коментар\" {...register('description')} />\n        </InputLabel>\n        ;\n      </Inputs>\n    </ModalForm>\n  );\n};\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  padding: 16px;\n\n  background-color: inherit;\n`;\n\nexport default FormCreateActivity;\n"],"names":["validation","yup","shape","Inputs","styled","_templateObject","_taggedTemplateLiteral","_ref","_id","edit","data","onSubmit","props","_objectWithoutProperties","_excluded","_useAppForm","useAppForm","defaultValues","_objectSpread","resolver","yupResolver","reValidateMode","errors","formState","register","handleSubmit","closeAfterSave","clearAfterSave","toggleAfterSubmitOption","_jsx","ModalForm","evHandler","formEventWrapper","extraFooter","FormAfterSubmitOptions","toggleOption","children","_jsxs","InputLabel","label","error","InputText","placeholder","description","TextareaPrimary"],"sourceRoot":""}