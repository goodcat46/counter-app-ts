{"version":3,"file":"static/js/132.d4af788b.chunk.js","mappings":"kQAqDA,UAlCsD,SAAHA,GAA8C,IAAxCC,EAAYD,EAAZC,aAAcC,EAAQF,EAARE,SAAaC,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GACjFC,GAAQC,EAAAA,EAAAA,MAAyBC,YACvCC,GAMIC,EAAAA,EAAAA,IAA+B,CAAEC,cAAeV,IALlDW,EAAcH,EAAdG,eACAC,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,aACAC,EAAcN,EAAdM,eAAcC,EAAAP,EACdQ,UAAaC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAMvB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACH,QAASA,GAAahB,GAAK,IAAED,SAAUY,GAJ9B,SAACS,GACrBrB,GAAYA,EAASqB,EAAG,CAAER,eAAAA,GAC5B,IAEgFS,UAC5EC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,WAAS,EAACC,QAAS,OAAOJ,SAAA,EACjCJ,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,MAAO,iCAASC,MAAOb,EAAOc,MAAOC,UAAQ,EAAAT,UACvDJ,EAAAA,EAAAA,KAACc,EAAAA,IAASZ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJT,EAAS,QAAS,CAAEoB,UAAU,KAAO,IACzCE,KAAM,QACNC,YAAa,4JACbH,UAAQ,EACRI,WAAS,QAIbjB,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAACC,MAAO,2BAAQC,MAAOb,EAAOoB,KAAKd,UAC5CJ,EAAAA,EAAAA,KAACmB,EAAAA,GAAYjB,EAAAA,EAAAA,GAAA,GAAKV,EAAe,OAAQ,CAAE4B,QAASlC,EAAO8B,YAAa,uKAKlF,C","sources":["components/Forms/FormInviteUser.tsx"],"sourcesContent":["import ModalForm, { ModalFormProps } from '../ModalForm';\nimport FlexBox from '../atoms/FlexBox';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport { useAppForm } from '../../hooks';\nimport { ICustomRole } from '../../redux/customRoles/customRoles.types';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { useCustomRolesSelector } from '../../redux/selectors.store';\nimport CustomSelect from '../atoms/Inputs/CustomSelect/CustomSelect';\nimport InputText from '../atoms/Inputs/InputText';\nimport { IPermission } from '../../redux/permissions/permissions.types';\n\nexport interface FormInviteUserProps extends Omit<ModalFormProps<any, any, IPermission>, 'onSubmit'> {\n  onSubmit?: AppSubmitHandler<FormInviteUserData, { onSuccess?: (d: IPermission) => void }>;\n}\n\nexport interface FormInviteUserData {\n  email: string;\n  role?: ICustomRole;\n}\nconst FormInviteUser: React.FC<FormInviteUserProps> = ({ defaultState, onSubmit, ...props }) => {\n  const roles = useCustomRolesSelector().customRoles;\n  const {\n    registerSelect,\n    register,\n    handleSubmit,\n    closeAfterSave,\n    formState: { errors, isValid },\n  } = useAppForm<FormInviteUserData>({ defaultValues: defaultState });\n\n  const onValidSubmit = (d: FormInviteUserData) => {\n    onSubmit && onSubmit(d, { closeAfterSave });\n  };\n  return (\n    <ModalForm isValid={isValid} {...props} onSubmit={handleSubmit(onValidSubmit)}>\n      <FlexBox fillWidth padding={'16px'}>\n        <InputLabel label={'Емейл'} error={errors.email} required>\n          <InputText\n            {...register('email', { required: true })}\n            type={'email'}\n            placeholder={'Впишіть емейл для запрошення'}\n            required\n            autoFocus\n          />\n        </InputLabel>\n\n        <InputLabel label={'Роль'} error={errors.role}>\n          <CustomSelect {...registerSelect('role', { options: roles, placeholder: 'Оберіть роль для користувача' })} />\n        </InputLabel>\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\nexport default FormInviteUser;\n"],"names":["_ref","defaultState","onSubmit","props","_objectWithoutProperties","_excluded","roles","useCustomRolesSelector","customRoles","_useAppForm","useAppForm","defaultValues","registerSelect","register","handleSubmit","closeAfterSave","_useAppForm$formState","formState","errors","isValid","_jsx","ModalForm","_objectSpread","d","children","_jsxs","FlexBox","fillWidth","padding","InputLabel","label","error","email","required","InputText","type","placeholder","autoFocus","role","CustomSelect","options"],"sourceRoot":""}