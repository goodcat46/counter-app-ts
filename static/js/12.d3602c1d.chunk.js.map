{"version":3,"file":"static/js/12.d3602c1d.chunk.js","mappings":"wQAWMA,EAAe,CACnB,CAAEC,MAAO,qBAAOC,MAAO,OACvB,CAAED,MAAO,uCAAUC,MAAO,WAC1B,CAAED,MAAO,+DAAcC,MAAO,WAC9B,CAAED,MAAO,qBAAOC,MAAO,QAiEnBC,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAKnBC,EAAAA,IAEEC,EAAMJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wKASA,SAAAI,GAAQ,OAAAA,EAALC,MAAkBC,oBAAoB,GAE3DC,EAAAA,IAEEC,EAASV,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0IAQrBO,EAAAA,IAGEG,EAAcZ,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,mIAUxBY,EAAgBd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,mHAQ1Bc,EAAchB,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,yeAsBxBgB,GAAelB,EAAAA,EAAAA,IAAOmB,EAAAA,EAAPnB,CAAkBoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,0yBAoBf,SAAAmB,GAAQ,OAAAA,EAALd,MAAkBe,WAAW,IAalC,SAAAC,GAAQ,OAAAA,EAALhB,MAAkBiB,QAAQC,WAAW,IAEtC,SAAAC,GAAQ,OAAAA,EAALnB,MAAkBoB,YAAYC,IAAI,IAiB7D,UAjL2B,WACzB,IAAQC,GAASC,EAAAA,EAAAA,MAATD,KACRE,GAAuCC,EAAAA,EAAAA,IAAgB,CAAEC,YAAarC,EAAa,GAAGE,QAAQoC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAvFK,EAAWF,EAAA,GAAEG,EAAeH,EAAA,GAanC,OALAI,EAAAA,EAAAA,YAAU,WACRD,EAAgB,CAAEJ,YAAarC,EAAa,GAAGE,OAEjD,GAAG,KAGDyC,EAAAA,EAAAA,MAACxC,EAAI,CAAAyC,SAAA,EACHD,EAAAA,EAAAA,MAACnC,EAAG,CAAAoC,SAAA,EACFC,EAAAA,EAAAA,KAAC7B,EAAW,CAAA4B,UACVC,EAAAA,EAAAA,KAACC,EAAAA,GAAWC,EAAAA,EAAAA,GAAA,GAAKd,OAGnBY,EAAAA,EAAAA,KAAC3B,EAAa,CAAA0B,UACZC,EAAAA,EAAAA,KAACzB,EAAW,CAAAwB,SACT5C,EAAagD,KAAI,SAAAC,GAAI,OACpBJ,EAAAA,EAAAA,KAACvB,EAAY,CAEX4B,QAAQ,MACRC,QAAS,kBAzBKjD,EAyBoB+C,EAAK/C,WAxBnDuC,EAAgB,CAAEJ,YAAanC,IADjC,IAA4BA,CAyB+B,EAC7CkD,WAvBIlD,EAuBgB+C,EAAK/C,MAtB9BsC,EAAYa,IAAI,iBAAmBnD,EAAQ,SAAW,IAsBjB0C,SAE/BK,EAAKhD,OALDgD,EAAK/C,OApBxB,IAAkBA,CA0BS,YAMvB2C,EAAAA,EAAAA,KAAC/B,EAAM,CAAA8B,UAGLC,EAAAA,EAAAA,KAACS,EAAAA,GAAS,CAENC,QAAQ,EACRC,QAAQ,EACRC,YAAY,EACZC,YAAaC,EAAAA,SAMzB,C","sources":["components/AppPages/PageHome.tsx"],"sourcesContent":["import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n// import ProfileCard from 'components/molecules/ProfileCard/ProfileCard';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { companiesTableColumns } from 'data';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport ProfileCard from 'components/molecules/ProfileCard/ProfileCard';\n\nconst companyTypes = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n// const companies = [\n//   { _id: '', name: 'Рога і копита' },\n//   { _id: '', name: 'Казінакі макі' },\n// ];\n// const permissions = [\n//   { _id: '1', status: 'accepted', company: companies[0], user: '', role: { _id: '', name: 'manager' } },\n//   { _id: '2', status: 'pending', company: companies[1], user: '', role: { _id: '', name: 'counter' } },\n// ];\n\nconst PageHome: React.FC = () => {\n  const { user } = useAuthSelector();\n  const [serchParams, setSearchParaps] = useSearchParams({ companyType: companyTypes[0].param });\n  function onSearchParamClick(param: string) {\n    setSearchParaps({ companyType: param });\n  }\n  function isActive(param: string) {\n    return serchParams.get('companyType') === param ? 'active' : '';\n  }\n\n  useEffect(() => {\n    setSearchParaps({ companyType: companyTypes[0].param });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>\n          <ProfileCard {...user} />\n        </ProfileInfo>\n\n        <FilterButtons>\n          <ButtonsList>\n            {companyTypes.map(item => (\n              <StButtonIcon\n                key={item.param}\n                variant=\"def\"\n                onClick={() => onSearchParamClick(item.param)}\n                className={isActive(item.param)}\n              >\n                {item.title}\n              </StButtonIcon>\n            ))}\n          </ButtonsList>\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        {/* <Outlet /> */}\n\n        <TableList\n          {...{\n            filter: false,\n            search: true,\n            checkboxes: false,\n            tableTitles: companiesTableColumns,\n          }}\n        />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace}\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 0px;\n    height: 0px;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n\n  /* max-width: 300px; */\n\n  /* max-width: 550px; */\n  /* @media screen and (max-height: 480px) and (min-width: 480px) {\n    grid-template-columns: repeat(4, 1fr);\n    grid-auto-rows: 32px;\n    max-width: 100%;\n  }\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n    grid-auto-rows: 44px;\n    max-width: 550px;\n  } */\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 1px;\n    width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n  &:hover,\n  &:focus {\n    outline-style: none;\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default PageHome;\n"],"names":["companyTypes","title","param","Page","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","Top","_templateObject2","_ref","theme","tableBackgroundColor","takeFullPlace","Bottom","_templateObject3","ProfileInfo","_templateObject4","FilterButtons","_templateObject5","ButtonsList","_templateObject6","StButtonIcon","ButtonIcon","_templateObject7","_ref2","trBorderClr","_ref3","globals","timingFnMui","_ref4","accentColor","base","user","useAuthSelector","_useSearchParams","useSearchParams","companyType","_useSearchParams2","_slicedToArray","serchParams","setSearchParaps","useEffect","_jsxs","children","_jsx","ProfileCard","_objectSpread","map","item","variant","onClick","className","get","TableList","filter","search","checkboxes","tableTitles","companiesTableColumns"],"sourceRoot":""}