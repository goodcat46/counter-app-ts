{"version":3,"file":"static/js/375.86981b7e.chunk.js","mappings":"oYAkHA,EAtGoC,WAClC,IAAMA,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAAwBC,EAAAA,EAAAA,QAAnCF,OAGR,OAAOG,EAAAA,EAAAA,cACL,SAACC,GACC,IAAMC,EAAc,OAAHD,QAAG,IAAHA,OAAG,EAAHA,EAAKE,YAChBC,EAAaF,GAAWG,EAAAA,EAAAA,IAAgBH,GAAY,GAE1D,MAAO,CACL,CACEI,KAAM,UACNC,QAAS,WACPV,EAAO,CACLW,KAAM,CAAEC,SAAS,GACjBC,UAAWT,EAAIU,WAEnB,GAEF,CAAEC,WAAW,GACb,CACEC,KAAM,oBACNP,KAAM,YACNQ,UAAWV,EACXG,QAAS,WACPH,GAAcT,EAASS,EAOzB,GAEF,CACES,KAAM,eACNP,KAAM,UACNQ,UAAWV,EACXG,QAAS,WACHH,GAAYW,OAAOC,QAAQ,wHAADC,OAA0Bb,GAC1D,GAEF,CACES,KAAM,YACNP,KAAM,OACNQ,UAAWV,EACXG,QAAS,WACPd,EAAOyB,KAAK,CACVC,MAAOC,EAAAA,EAAAA,gBACPC,MAAO,CACLC,MAAO,eAGb,GAEF,CACET,KAAM,YACNP,KAAM,OACNQ,UAAWV,EACXG,QAAS,WACPd,EAAOyB,KAAK,CACVC,MAAOC,EAAAA,EAAAA,gBACPC,MAAO,CACLC,MAAM,eAADL,OAAiBb,KAG5B,GAEF,CAAEQ,WAAW,GACb,CACEC,KAAM,cACNP,KAAM,YACNiB,KAAM,iBACNhB,QAAS,WACPd,EAAOyB,KAAK,CACVC,MAAOC,EAAAA,EAAAA,sBACPC,MAAO,CACLC,OAAOE,EAAAA,EAAAA,GAAE,yBAGf,GAEF,CACEX,KAAM,cACNP,KAAM,OACNiB,KAAM,iBACNhB,QAAS,WACPd,EAAOyB,KAAK,CACVC,MAAOC,EAAAA,EAAAA,gBACPC,MAAO,CACLC,OAAOE,EAAAA,EAAAA,GAAE,kBAGf,GAGN,GACA,CAAC3B,EAAQJ,EAAQE,GAErB,E,kDC3FM8B,GAAsBC,EAAAA,EAAAA,IAAoBC,EAAAA,GAyD1CC,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gBACxBC,EAAAA,IAGJ,EA5CkC,SAACZ,GACjC,IAAAa,EAAmCC,IAA3BC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UACrBC,GAA8BC,EAAAA,EAAAA,UAA4D,CAAC,GAApFC,GAAsFC,EAAAA,EAAAA,GAAAH,EAAA,GAAnE,GACpBI,GAAc1C,EAAAA,EAAAA,cAClB,SAAC2C,GAAwF,IAADC,EAAAC,EAAAC,EAAAC,EACtF,OACEC,EAAAA,EAAAA,MAAClB,EAAAA,GAAO,CACNmB,eAAgB,gBAChBC,YAAU,EACVC,WAAS,EACTC,SAAU,SACVC,QAAS,UACTC,IAAK,EACLC,MAAO,CAAEC,OAAQ,WAAYC,SAAA,EAE7BC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAO,GAAIC,QAAS,IAAKC,eAAgB,OAAOL,SAChC,QADgCb,EAC/C,OAAJD,QAAI,IAAJA,GAAY,QAARE,EAAJF,EAAMoB,cAAM,IAAAlB,OAAR,EAAJA,EAAcmB,aAAK,IAAApB,EAAAA,EAAI,QAG1Bc,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,MAAO,GAAIK,eAAa,EAAAR,SACvB,OAAJd,QAAI,IAAJA,GAAY,QAARG,EAAJH,EAAMoB,cAAM,IAAAjB,GAAZA,EAAcoB,MAAQ1B,EAAwB,OAAJG,QAAI,IAAJA,GAAY,QAARI,EAAJJ,EAAMoB,cAAM,IAAAhB,OAAR,EAAJA,EAAcmB,OAAS,MAI1E,GACA,CAAC1B,IAEH,OACEkB,EAAAA,EAAAA,KAACS,EAAAA,QAAW,CAACC,KAAM/C,EAAM+C,KAAKX,UAC5BT,EAAAA,EAAAA,MAACpB,EAAI,CAAA6B,SAAA,EACHC,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CAACd,MAAO,CAAEe,OAAQ,IAAMC,cAAe9C,EAAqBiB,YAAaA,KAErFgB,EAAAA,EAAAA,KAAC5B,EAAAA,GAAO,CAACqB,WAAS,EAACqB,KAAM,EAAEf,UACzBC,EAAAA,EAAAA,KAACe,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKtC,GAAW,IAAEC,UAAWA,WAKjD,EAQaF,EAAuB,WAClC,IAAQtC,GAAWC,EAAAA,EAAAA,MAAwBC,EAAAA,EAAAA,QAAnCF,OACF8E,GAAQC,EAAAA,EAAAA,MACRC,EAAiBC,IAEvBC,GAAkCxC,EAAAA,EAAAA,WAAS,GAAMyC,GAAAvC,EAAAA,EAAAA,GAAAsC,EAAA,GAA1C1C,EAAS2C,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAAoC3C,EAAAA,EAAAA,YAAuB4C,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAApDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAAwC/C,EAAAA,EAAAA,YAAgCgD,GAAA9C,EAAAA,EAAAA,GAAA6C,EAAA,GAAjEE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BnD,GAAcsD,EAAAA,EAAAA,UAClB,iBAAgC,CAC9BC,UAAWhB,EAAMiB,OACjBC,YAAaC,EAAAA,GACbC,gBAAiBC,EAAAA,GAAAA,QAA0B,SAAAC,GAAE,OAAIA,EAAGC,IAAI,IACxDC,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,YAAY,EACZzB,eAAAA,EACA0B,eAAgB,SAAAf,GACdC,EAAgBD,GAChB3F,EAAO,CAAEW,KAAM,CAAEC,SAAS,EAAM+F,MAAO,CAAEhB,aAAAA,EAAcJ,WAAAA,IAAgB1E,UAAWuE,IAAgBwB,MACpG,EACAC,gBAAiB,SAACC,EAAOC,GACvBvB,EAAc,CAAEwB,SAAUF,EAAME,SAAUD,UAAAA,IAC1C/G,EAAO,CACLW,KAAM,CAAEC,SAAS,EAAM+F,MAAO,CAAEpB,WAAY,CAAEyB,SAAUF,EAAME,SAAUD,UAAAA,GAAapB,aAAAA,IACrF9E,UAAWuE,IACVwB,MACL,EACD,GACD,CAAC5B,EAAgBW,EAAc3F,EAAQuF,EAAYT,EAAMiB,SAgB3D,OAbAkB,EAAAA,EAAAA,YAAU,WACJ1B,GAAcI,GAIlB3F,EAAO,CACLW,KAAM,CAAEC,SAAS,GACjBC,UAAWuE,GAIf,GAAG,IAEI,CACL7C,YAAAA,EACAC,UAAAA,EACA+C,WAAAA,EACAI,aAAAA,EAEJ,C,6GCxIavD,GAAmB8E,EAAAA,EAAAA,IAAGhF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAItBgF,GAAgBD,EAAAA,EAAAA,IAAGE,IAAAA,GAAAjF,EAAAA,EAAAA,GAAA,4CAIV+E,EAAAA,EAAAA,IAAGG,IAAAA,GAAAlF,EAAAA,EAAAA,GAAA,uC,gIC+DZ8D,IAlEoBqB,E,QAAAA,IAAkBxF,EAAAA,GAE9BA,EAAAA,EAAAA,KAA4BH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,KAC9BA,EAAAA,EAAAA,QAA+BH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,QAG3CA,EAAAA,EAAAA,oBACAH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,oBAKFA,EAAAA,EAAAA,mBACAH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,mBAGUA,EAAAA,EAAAA,QAA+BH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,QACjCA,EAAAA,EAAAA,WAAkCH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,WAGhDA,EAAAA,EAAAA,qBACAH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,qBAGUA,EAAAA,EAAAA,UAAiCH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,UACnCA,EAAAA,EAAAA,SAAgCH,EAAAA,EAAAA,GAAEG,EAAAA,EAAAA,SAyCc,CACrE,CACEyF,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,QAAS6F,MAAO,SAAUjD,KAAM,aAC/CkD,OAAQ,CAAEzG,MAAMW,EAAAA,EAAAA,GAAE,QAAS6F,MAAO,UAClCE,MAAO,OACPC,OAAQ,cAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,UAAW4C,KAAM,UAChCkD,OAAQ,CAAEzG,MAAMW,EAAAA,EAAAA,GAAE,QAAS4C,KAAM,QACjCmD,MAAO,QACPC,OAAQ,UAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,aAEf+F,MAAO,QACPC,OAAQ,UAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,gBAAiB6F,MAAO,MAAOjD,KAAM,SACpDkD,OAAQ,CAAEzG,MAAMW,EAAAA,EAAAA,GAAE,cAAe6F,MAAO,OACxCE,MAAO,QACPC,OAAQ,oBAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,UACf8F,OAAQ,CAAEzG,MAAMW,EAAAA,EAAAA,GAAE,UAAW4C,KAAM,iBACnCmD,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CAAEvG,KAAM,mDAAYuD,KAAM,iBAC/BkD,OAAQ,CAAEzG,KAAM,6CAAWuD,KAAM,kBACjCmD,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CAAEvG,KAAM,yDAAauD,KAAM,iBAChCkD,OAAQ,CAAEzG,KAAM,6CAAWuD,KAAM,kBACjCmD,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CACHvG,MAAMW,EAAAA,EAAAA,GAAE,aAIV+F,MAAO,QACPC,OAAQ,QAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,aACf+F,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,cACf+F,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,WAAY4C,KAAM,WACjCmD,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,YACf+F,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,WAAY4C,KAAM,gBACjCkD,OAAQ,CAAEzG,MAAMW,EAAAA,EAAAA,GAAE,SAAU4C,KAAM,iBAClCmD,MAAO,QACPC,OAAQ,eAEV,CACEJ,IAAK,CAAEvG,MAAMW,EAAAA,EAAAA,GAAE,WAAY6F,MAAO,SAAUjD,KAAM,aAClDkD,OAAQ,CAAEzG,MAAMW,EAAAA,EAAAA,GAAE,WAAY6F,MAAO,SAAUjD,KAAM,aACrDmD,MAAO,QACPC,OAAQ,aAICxB,EAAmC,CAC9C,CACEhC,MAAO,2BACP6C,SAAU,YACVY,QAAQ,EACRC,QAAQ,EACRxB,MAAM,GAER,CAAElC,MAAO,iCAAS6C,SAAU,aAAcY,QAAQ,EAAOC,QAAQ,EAAMxB,MAAM,GAC7E,CACElC,MAAO,uCACP6C,SAAU,SACVY,QAAQ,EACRC,QAAQ,EACRxB,MAAM,GAER,CACElC,OAAOxC,EAAAA,EAAAA,GAAE,QACTqF,SAAU,OACVY,QAAQ,EACRC,QAAQ,EACRxB,MAAM,GAER,CACElC,OAAOxC,EAAAA,EAAAA,GAAE,UACTqF,SAAU,QACVY,QAAQ,EACRC,QAAQ,EACRxB,MAAM,GAER,CACElC,MAAO,mDACP6C,SAAU,YACVY,QAAQ,EACRC,QAAQ,EACRxB,MAAM,GAER,CACElC,MAAO,mDACP6C,SAAU,YACVY,QAAQ,EACRC,QAAQ,EACRxB,MAAM,IAIGyB,EAAuD,CAClE,CAAEP,IAAK,CAAEvG,KAAM,IAAMyG,OAAQ,CAAEzG,KAAM,IAAM2G,OAAQ,cAAeD,MAAO,SACzE,CAAEH,IAAK,CAAEvG,KAAM,IAAMyG,OAAQ,CAAEzG,KAAM,IAAM2G,OAAQ,cAAeD,MAAO,SACzE,CAAEH,IAAK,CAAEvG,KAAM,IAAMyG,OAAQ,CAAEzG,KAAM,IAAM2G,OAAQ,cAAeD,MAAO,SACzE,CAAEH,IAAK,CAAEvG,KAAM,IAAMyG,OAAQ,CAAEzG,KAAM,IAAM2G,OAAQ,cAAeD,MAAO,SACzE,CAAEH,IAAK,CAAEvG,KAAM,IAAMyG,OAAQ,CAAEzG,KAAM,IAAM2G,OAAQ,cAAeD,MAAO,SACzE,CAAEH,IAAK,CAAEvG,KAAM,IAAMyG,OAAQ,CAAEzG,KAAM,IAAM2G,OAAQ,cAAeD,MAAO,SACzE,CAAEH,IAAK,CAAEvG,KAAM,IAAMyG,OAAQ,CAAEzG,KAAM,IAAM2G,OAAQ,cAAeD,MAAO,S","sources":["hooks/useOrdersActionsCreator.hook.ts","components/AppPages/orders/PageOrders.tsx","components/AppPages/pagesStyles.tsx","data/orders.data.ts"],"sourcesContent":["import { useModalProvider } from '../components/ModalProvider/ModalProvider';\nimport { useCallback } from 'react';\nimport { ITableListContext, TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { IOrder } from '../redux/orders/orders.types';\nimport { Modals } from '../components/Modals';\nimport { useNavigate } from 'react-router-dom';\nimport { ExtractIdString } from '../utils/data-transform';\nimport { t } from '../lang';\nimport { useAppServiceProvider } from './useAppServices.hook';\nimport { AppModuleName } from '../redux/reduxTypes.types';\n\nexport type OrdersActionsCreator = TableActionCreator<IOrder>;\nconst useOrdersActionsCreatorHook = (): OrdersActionsCreator => {\n  const modalS = useModalProvider();\n  const navigate = useNavigate();\n  const { getAll } = useAppServiceProvider()[AppModuleName.orders];\n  // const { orders } = useAppServiceProvider();\n\n  return useCallback(\n    (ctx: ITableListContext<IOrder>) => {\n      const selected = ctx?.selectedRow;\n      const selectedId = selected ? ExtractIdString(selected) : '';\n\n      return [\n        {\n          icon: 'refresh',\n          onClick: () => {\n            getAll({\n              data: { refresh: true },\n              onLoading: ctx.onRefresh,\n            });\n          },\n        },\n        { separator: true },\n        {\n          name: 'openOrderOverview',\n          icon: 'openInNew',\n          disabled: !selectedId,\n          onClick: () => {\n            selectedId && navigate(selectedId);\n            // modalS.open({\n            //   Modal: Modals.OrderOverview,\n            //   props: {\n            //     order: ctx.tableData?.find(el => el._id === selectedId),\n            //   },\n            // });\n          },\n        },\n        {\n          name: 'archiveOrder',\n          icon: 'archive',\n          disabled: !selectedId,\n          onClick: () => {\n            if (selectedId) window.confirm(`Архівувати замовення: ${selectedId}`);\n          },\n        },\n        {\n          name: 'editOrder',\n          icon: 'edit',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: 'Edit order',\n              },\n            });\n          },\n        },\n        {\n          name: 'copyOrder',\n          icon: 'copy',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: `Copy order: ${selectedId}`,\n              },\n            });\n          },\n        },\n        { separator: true },\n        {\n          name: 'createOrder',\n          icon: 'AddToList',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrdersGroup,\n              props: {\n                title: t(`Create orders group`),\n              },\n            });\n          },\n        },\n        {\n          name: 'createOrder',\n          icon: 'plus',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: t(`Create order`),\n              },\n            });\n          },\n        },\n      ];\n    },\n    [getAll, modalS, navigate]\n  );\n};\nexport default useOrdersActionsCreatorHook;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { ISortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport { ordersSearchParams, ordersTableColumns } from '../../../data/orders.data';\nimport { IOrder, OrderStatusEnum } from '../../../redux/orders/orders.types';\nimport useOrdersActionsCreatorHook from '../../../hooks/useOrdersActionsCreator.hook';\nimport { BaseAppPageProps } from '../index';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport ModalFilter, { FilterOption } from '../../ModalForm/ModalFilter';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../redux/reduxTypes.types';\n\ninterface Props extends BaseAppPageProps {}\n\nconst ordersFilterOptions = enumToFilterOptions(OrderStatusEnum);\n\n// const useDynamicFilterOptionsByEnum = <T extends Record<string, any> = any>(\n//   enumObj: T,\n//   builder: (\n//     option: FilterOption<T[keyof T]>,\n//     index: number,\n//     arr: FilterOption<T[keyof T]>[]\n//   ) => Partial<DynamicFilterOption<T[keyof T]>>\n// ) => {\n//   const options = useMemo(() => {\n//     return enumToFilterOptions(enumObj).map((value, index, array) => ({ ...value, ...builder(value, index, array) }));\n//   }, [builder, enumObj]);\n//\n//   return options;\n// };\n\nconst PageOrders: React.FC<any> = (props: Props) => {\n  const { tableConfig, isLoading } = useOrderTableConfigs();\n  const [filterButtonResults] = useState<Record<OrderStatusEnum | string, number | string>>({});\n  const renderLabel = useCallback(\n    (info: { option?: FilterOption<OrderStatusEnum>; index: number; isActive: boolean }) => {\n      return (\n        <FlexBox\n          justifyContent={'space-between'}\n          fillHeight\n          fillWidth\n          overflow={'hidden'}\n          padding={'2px 4px'}\n          gap={6}\n          style={{ cursor: 'inherit' }}\n        >\n          <Text $size={11} $weight={500} $textTransform={'none'}>\n            {info?.option?.label ?? null}\n          </Text>\n\n          <Text $size={10} $ellipsisMode>\n            {info?.option?.value ? filterButtonResults[info?.option?.value] : 0}\n          </Text>\n        </FlexBox>\n      );\n    },\n    [filterButtonResults]\n  );\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <ModalFilter style={{ height: 44 }} filterOptions={ordersFilterOptions} renderLabel={renderLabel} />\n\n        <FlexBox fillWidth flex={1}>\n          <TableList {...tableConfig} isLoading={isLoading} />\n        </FlexBox>\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled(FlexBox)`\n  ${takeFullGridArea}\n`;\n\nexport default PageOrders;\n\nexport const useOrderTableConfigs = () => {\n  const { getAll } = useAppServiceProvider()[AppModuleName.orders];\n  const state = useOrdersSelector();\n  const actionsCreator = useOrdersActionsCreatorHook();\n  // const filterSelectors = useProductsFilterSelectorsHook();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IOrder> => ({\n      tableData: state.orders,\n      tableTitles: ordersTableColumns,\n      tableSortParams: ordersSearchParams.filter(el => el.sort),\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, getAll, sortParams, state.orders]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    getAll({\n      data: { refresh: true },\n      onLoading: setIsLoading,\n    });\n\n    // eslint-disable-next-line\n  }, []);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { IOrder, IOrderSlot, OrderStatusEnum } from '../redux/orders/orders.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/ModalForm/ModalFilter';\nimport { getStatusesByEnum } from './statuses.data';\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\nexport type DataPath =\n  | 'owner.label'\n  | 'owner.name'\n  | 'author.name'\n  | 'author.email'\n  | 'editor.name'\n  | 'editor.email'\n  | 'auditor.name'\n  | 'auditor.email'\n  | 'contractor.name'\n  | 'contractor.type'\n  | 'eventDate'\n  | 'type'\n  | 'status'\n  | 'amount'\n  | 'currency'\n  | 'comment'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'mark.label'\n  | 'invoice.label'\n  | 'invoice.code'\n  | 'invoice.number'\n  | 'payment.label'\n  | 'payment.code'\n  | 'payment.number'\n  | 'order.code'\n  | 'total'\n  | 'manager.name'\n  | 'manager.code'\n  | 'manager.email'\n  | 'customer.name'\n  | 'customer.phone'\n  | 'receiver.name'\n  | 'receiver.phone'\n  | 'invoices'\n  | 'payments'\n  | 'transporters';\nexport const ordersTableColumns: CellTittleProps<IOrder, DataPath>[] = [\n  {\n    top: { name: t('date'), align: 'center', path: 'eventDate' },\n    bottom: { name: t('time'), align: 'center' },\n    width: '90px',\n    action: 'dateSimple',\n  },\n  {\n    top: { name: t('status'), path: 'status' },\n    bottom: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('Priority') },\n    // bottom: { name: t('type'), path: 'type' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('Total amount'), align: 'end', path: 'total' },\n    bottom: { name: t('Total q-ty'), align: 'end' },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Group') },\n    bottom: { name: t('Number'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Замовник', path: 'customer.name' },\n    bottom: { name: 'Телефон', path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Отримувач', path: 'receiver.name' },\n    bottom: { name: 'Телефон', path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Shipments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\n\nexport const orderSlotTableColumns: CellTittleProps<IOrderSlot>[] = [\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n  { top: { name: '' }, bottom: { name: '' }, action: 'valueByPath', width: '125px' },\n];\n"],"names":["modalS","useModalProvider","navigate","useNavigate","getAll","useAppServiceProvider","AppModuleName","useCallback","ctx","selected","selectedRow","selectedId","ExtractIdString","icon","onClick","data","refresh","onLoading","onRefresh","separator","name","disabled","window","confirm","concat","open","Modal","Modals","props","title","type","t","ordersFilterOptions","enumToFilterOptions","OrderStatusEnum","Page","styled","FlexBox","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_useOrderTableConfigs","useOrderTableConfigs","tableConfig","isLoading","_useState","useState","filterButtonResults","_slicedToArray","renderLabel","info","_info$option$label","_info$option","_info$option2","_info$option3","_jsxs","justifyContent","fillHeight","fillWidth","overflow","padding","gap","style","cursor","children","_jsx","Text","$size","$weight","$textTransform","option","label","$ellipsisMode","value","AppGridPage","path","ModalFilter","height","filterOptions","flex","TableList","_objectSpread","state","useOrdersSelector","actionsCreator","useOrdersActionsCreatorHook","_useState3","_useState4","setIsLoading","_useState5","_useState6","sortParams","setSortParams","_useState7","_useState8","filterParams","setFilterParams","useMemo","tableData","orders","tableTitles","ordersTableColumns","tableSortParams","ordersSearchParams","el","sort","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","query","then","handleTableSort","param","sortOrder","dataPath","useEffect","css","takeFullPlace","_templateObject2","_templateObject3","getStatusesByEnum","top","align","bottom","width","action","filter","search","orderSlotTableColumns"],"sourceRoot":""}