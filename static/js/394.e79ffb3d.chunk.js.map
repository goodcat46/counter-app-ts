{"version":3,"file":"static/js/394.e79ffb3d.chunk.js","mappings":"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","sources":["components/AppPages/PageProductOverview/PageProductOverviewRightSide.tsx","components/Overviews/ProductOverviewXL.tsx","components/AppPages/PageProductOverview/PageProductOverviewLeftSide.tsx","components/AppPages/PageProductOverview/PageProductOverview.tsx"],"sourcesContent":["import { usePageCurrentProduct } from './PageCurrentProductProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport ModalFilter, { FilterSelectHandler } from '../../ModalForm/ModalFilter';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\n\n// const openLoader = (current: RightSideOptionEnum) =>\n//   ToastService.createLoader('Loading data...').open({\n//     afterClose: [`${current} data loaded`, { type: 'success' }],\n//   });\nenum RightSideOptionEnum {\n  Variations = 'Variations',\n  Prices = 'Prices',\n  Warehousing = 'Warehousing',\n}\nconst toggleOptions = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface PageProductOverviewRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n// interface ITableDataByType {\n//   [RightSideOptionEnum.Variations]: IVariation;\n//   [RightSideOptionEnum.Prices]: IPriceListItem;\n// }\nconst PageProductOverviewRightSide: React.FC<PageProductOverviewRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentProduct();\n  const [current, setCurrent] = useState<RightSideOptionEnum>(RightSideOptionEnum.Variations);\n\n  const renderTab = useMemo(() => {\n    if (current === RightSideOptionEnum.Variations) {\n      return <VariationsTab withActions />;\n    }\n\n    if (current === RightSideOptionEnum.Prices) {\n      return <PricesTab withActions />;\n    }\n    if (current === RightSideOptionEnum.Warehousing) {\n      return <WarehousingTab withActions />;\n    }\n  }, [current]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrent(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      {isVisible && (\n        <ModalHeader\n          onBackPress={toggleVisibility}\n          renderTitle={\n            <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n              <Text $weight={600} $size={14}>\n                {page?.currentProduct?.label}\n              </Text>\n\n              <Text $size={14}>{page?.currentProduct?.sku}</Text>\n            </FlexBox>\n          }\n        />\n      )}\n\n      <TabBox overflow={'hidden'} fillWidth flex={1}>\n        <ModalFilter filterOptions={toggleOptions} defaultValue={current} onOptSelect={filterHandler} preventFilter />\n\n        {renderTab}\n      </TabBox>\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default PageProductOverviewRightSide;\n","import { IProduct, IProductMeasurement } from '../../redux/products/products.types';\nimport FlexBox from '../atoms/FlexBox';\nimport React, { useMemo } from 'react';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../lang';\nimport { usePageCurrentProduct } from '../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport * as Cells from './components/Cells';\nimport { OverviewCellProps } from './components/Cells';\nimport { OverlayHeader } from '../Forms/FormProduct/components';\nimport { formatDate } from '../../utils/dateTime.utils';\nimport { checks } from '../../utils';\nimport { useAppParams } from '../../hooks';\n\nexport interface ProductOverviewXLProps {\n  product?: IProduct;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst ProductOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const product = useProductsSelector().currentProduct;\n  const page = usePageCurrentProduct();\n  const productId = useAppParams()?.productId;\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const renderCells = useMemo(\n    () =>\n      productOverviewCells.map(({ CellComponent, ...cell }) => {\n        if (CellComponent) {\n          return (\n            <CellComponent\n              key={cell.title}\n              setOverlayContent={page.createOverlayComponent}\n              cell={cell}\n              data={product}\n            />\n          );\n        }\n        return (\n          <Cells.OverviewTextCell\n            key={cell.title}\n            setOverlayContent={page.createOverlayComponent}\n            cell={cell}\n            data={product}\n          />\n        );\n      }),\n    [page.createOverlayComponent, product]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader\n        title={t('Product overview')}\n        onClose={() => {\n          if (location?.pathname) {\n            const newPath = location?.pathname?.replace(`/${product?._id || productId}`, '');\n\n            newPath && navigate(newPath);\n          }\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport default ProductOverviewXL;\n\nconst productOverviewCells: OverviewCellProps<IProduct>[] = [\n  {\n    title: t('Label'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product => product?.label,\n    gridArea: 'label',\n  },\n  {\n    title: t('status'),\n    CellComponent: Cells.ProductStatusChangerCell,\n    getValue: product => product?.approved as string | null | undefined,\n    gridArea: 'approved',\n  },\n  {\n    title: t('Type'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product => product?.type,\n    gridArea: 'type',\n  },\n  {\n    title: t('SKU'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product => product?.sku,\n    gridArea: 'sku',\n  },\n  {\n    title: t('Bar-code'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product => product?.barCode,\n    gridArea: 'barCode',\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: Cells.CategoriesCell,\n    gridArea: 'categories',\n  },\n\n  {\n    title: t('Brand'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product => product?.brand?.label,\n    gridArea: 'brand',\n  },\n  {\n    title: t('Measurement'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product => {\n      try {\n        const data: IProductMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    gridArea: 'measurement',\n  },\n  {\n    title: t('Description'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product => product?.description,\n    gridArea: 'description',\n  },\n  // * PROPERTIES\n  {\n    title: t('Variations template'),\n    CellComponent: Cells.VariationsTemplateCell,\n    gridArea: 'template',\n  },\n  { title: t('Properties'), CellComponent: Cells.StaticProperties, gridArea: 'properties' },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: Cells.ProductDefaultsCell,\n    gridArea: 'defaults',\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.email} / ${\n            product?.createdAt && checks.isStr(product?.createdAt) ? formatDate(Date.parse(product?.createdAt)) : ''\n          }`\n        : null,\n    gridArea: 'created',\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    CellComponent: Cells.OverviewTextCell,\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.email} / ${\n            product?.updatedAt && checks.isStr(product?.updatedAt) ? formatDate(Date.parse(product?.updatedAt)) : ''\n          }`\n        : null,\n    gridArea: 'updated',\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: Cells.ImagesCell,\n    gridArea: 'images',\n  },\n];\n","import { usePageCurrentProduct } from './PageCurrentProductProvider';\nimport ProductOverviewXL from '../../Overviews/ProductOverviewXL';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { MouseEventHandler, useCallback, useMemo, useState } from 'react';\nimport { Modals } from '../../Modals';\nimport { ToastService } from '../../../services';\nimport { createProductFormData } from '../../../utils/dataTransform';\n\nexport interface PageProductOverviewLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\nconst PageProductOverviewLeftSide: React.FC<PageProductOverviewLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentProduct();\n  const modalS = useModalProvider();\n  const [loading, setLoading] = useState(false);\n  const { products: productsS } = useAppServiceProvider();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          page.removeStackItem(id);\n        }\n      },\n    [page]\n  );\n\n  const renderOverlayStack = useMemo(() => {\n    const stack = page.getOverlayStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              page.removeStackItem(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, page]);\n\n  return (\n    <>\n      <LeftSide>\n        <ProductOverviewXL\n          product={page?.currentProduct}\n          onEdit={\n            page.currentProduct\n              ? () => {\n                  if (!page.currentProduct) {\n                    return;\n                  }\n                  const formData = createProductFormData(page?.currentProduct);\n\n                  console.log('PageProductOverviewLeftSide', formData);\n\n                  const m = modalS.handleOpenModal({\n                    Modal: Modals.FormCreateProduct,\n                    props: {\n                      edit: true,\n                      _id: page?.currentProduct?._id,\n                      defaultState: formData,\n                      onSubmit: (d, o) => {\n                        productsS\n                          .updateById({\n                            data: { ...d, refreshCurrent: true },\n                            onSuccess: () => {\n                              o?.closeAfterSave && m?.onClose();\n                              ToastService.success(`Updated product`);\n                            },\n                          })\n                          .finally();\n                      },\n                    },\n                  });\n                }\n              : undefined\n          }\n          onRefresh={\n            loading\n              ? undefined\n              : () => {\n                  const handler = ToastService.createLoader('Refreshing...').open();\n                  page.currentProduct?._id &&\n                    productsS\n                      .getProductFullInfo({\n                        data: { _id: page.currentProduct?._id },\n                        onSuccess: () => {\n                          handler.close();\n                          ToastService.success(`Data refreshed`);\n                        },\n                        onLoading: setLoading,\n                      })\n                      .finally(handler.close);\n                }\n          }\n          onOpenRightSide={toggleRightSideVisibility}\n        />\n\n        <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n          {renderOverlayStack}\n        </Backdrop>\n      </LeftSide>\n    </>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  left: ${p => (p.isActive ? 0 : '100%')};\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  animation: 'OverlayFromRight';\n`;\n\nexport default PageProductOverviewLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport { useCallback, useEffect, useState } from 'react';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport PageCurrentProductProvider from './PageCurrentProductProvider';\nimport PageProductOverviewRightSide from './PageProductOverviewRightSide';\nimport PageProductOverviewLeftSide from './PageProductOverviewLeftSide';\nimport { useAppParams } from '../../../hooks';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { ToastService } from '../../../services';\nimport { BaseAppPageProps } from '../index';\n\ninterface Props extends BaseAppPageProps {}\n\nconst loader = ToastService.createLoader('Loading product info');\n\nconst PageProductOverview: React.FC<Props> = ({ path }) => {\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const { productId } = useAppParams();\n  const [loading, setLoading] = useState(false);\n\n  const { currentProduct } = useProductsSelector();\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  useEffect(() => {\n    if (loading) return;\n    if (productId && productId !== currentProduct?._id) {\n      const close = loader.open().close;\n      console.log('==========>>>>>>>>>>>>');\n      console.log('PageProductOverview get full info');\n      productsS\n        .getProductFullInfo({\n          data: { _id: productId },\n          onLoading: setLoading,\n        })\n        .finally(close);\n    }\n    // eslint-disable-next-line\n  }, [productId]);\n\n  useEffect(() => {\n    return () => {\n      productsS.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <AppGridPage path={path}>\n      <PageCurrentProductProvider>\n        <Page>\n          <PageProductOverviewLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n          <PageProductOverviewRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n        </Page>\n      </PageCurrentProductProvider>\n    </AppGridPage>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageProductOverview;\n"],"names":["RightSideOptionEnum","toggleOptions","enumToFilterOptions","RightSide","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","globals","timingFunctionMain","backgroundColorLight","isVisible","TabBox","_templateObject2","modalBorderColor","_ref","_page$currentProduct","_page$currentProduct2","toggleVisibility","page","usePageCurrentProduct","_useState","useState","Variations","_useState2","_slicedToArray","current","setCurrent","renderTab","useMemo","_jsx","VariationsTab","withActions","Prices","PricesTab","Warehousing","WarehousingTab","_jsxs","overflow","fillHeight","children","ModalHeader","onBackPress","renderTitle","padding","fxDirection","alignItems","justifyContent","gap","Text","$weight","$size","currentProduct","label","sku","fillWidth","flex","ModalFilter","filterOptions","defaultValue","onOptSelect","_","value","index","preventFilter","Container","sideBarBackgroundColor","Content","sideBarBorderColor","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","_useAppParams","_p$product","className","_objectWithoutProperties","_excluded","product","useProductsSelector","productId","useAppParams","navigate","useNavigate","location","useLocation","renderCells","productOverviewCells","map","_ref2","CellComponent","cell","_excluded2","setOverlayContent","createOverlayComponent","data","title","Cells","OverlayHeader","t","onClose","pathname","_location$pathname","newPath","replace","concat","_id","size","variant","iconSize","icon","disabled","onEdit","onClick","visible","onHide","onDelete","margin","onRefresh","onOpenRightSide","getValue","gridArea","approved","type","barCode","_product$brand","brand","measurement","JSON","parse","unit","min","max","step","join","e","description","_product$author","author","email","createdAt","checks","formatDate","Date","_product$editor","editor","updatedAt","LeftSide","Backdrop","isActive","backdropColor","OverlayBox","toggleRightSideVisibility","modalS","useModalProvider","loading","setLoading","productsS","useAppServiceProvider","products","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","removeStackItem","renderOverlayStack","getOverlayStack","RenderComponent","props","style","zIndex","_objectSpread","overlayId","_Fragment","ProductOverviewXL","formData","createProductFormData","console","log","m","handleOpenModal","Modal","Modals","edit","defaultState","onSubmit","d","o","updateById","refreshCurrent","onSuccess","closeAfterSave","ToastService","finally","undefined","_page$currentProduct3","handler","open","getProductFullInfo","close","onLoading","length","loader","Page","takeFullGridArea","path","isRightSideVisible","setIsRightSideVisible","ServiceName","_useState3","_useState4","toggleRightSide","useEffect","clearCurrent","AppGridPage","PageCurrentProductProvider","PageProductOverviewLeftSide","PageProductOverviewRightSide"],"sourceRoot":""}