{"version":3,"file":"static/js/915.447c51e8.chunk.js","mappings":"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","sources":["components/atoms/Inputs/MyTreeSelect.tsx","components/AppPages/PageNotFound.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TreeSelect } from 'antd';\n\nconst { SHOW_PARENT } = TreeSelect;\nconst treeDataMock = [\n  {\n    value: 'parent 1',\n    title: 'parent 1',\n    children: [\n      {\n        value: 'parent 1-0',\n        title: 'parent 1-0',\n        children: [\n          {\n            value: 'leaf1',\n            title: 'my leaf',\n          },\n          {\n            value: 'leaf2',\n            title: 'your leaf',\n          },\n        ],\n      },\n      {\n        value: 'parent 1-1',\n        title: 'parent 1-1',\n        children: [\n          {\n            value: 'sss',\n            title: <b style={{ color: '#08c' }}>sss</b>,\n          },\n        ],\n      },\n    ],\n  },\n];\n\ninterface MyTreeDataSelectItem {\n  value: string;\n  title: string | Element | JSX.Element;\n  children?: MyTreeDataSelectItem[];\n}\n\ninterface MyTreeSelectProps {\n  onSelect?: (newValue: string, node?: React.ReactNode, changeEventExtra?: any) => void;\n  treeData: MyTreeDataSelectItem[];\n}\n\nconst MyTreeSelect: React.FC<MyTreeSelectProps> = ({ onSelect, treeData }) => {\n  const [value, setValue] = useState<string>();\n\n  const onChange = (newValue: string, node: React.ReactNode, changeEventExtra: any) => {\n    setValue(newValue);\n    onSelect && onSelect(newValue, node, changeEventExtra);\n\n    console.log('node', node);\n    console.log('changeEventExtra', changeEventExtra);\n  };\n\n  const tProps = {\n    treeData: treeData.length === 0 ? (treeDataMock as MyTreeDataSelectItem[]) : treeData,\n    value,\n    onChange: onChange,\n    treeCheckable: true,\n    showCheckedStrategy: SHOW_PARENT,\n    placeholder: 'Please select',\n    style: {\n      width: '100%',\n    },\n  };\n\n  return (\n    <TreeSelect\n      showSearch\n      dropdownStyle={{ maxHeight: 300, overflow: 'auto', zIndex: 2000 }}\n      allowClear\n      multiple\n      treeDefaultExpandAll\n      {...tProps}\n    />\n  );\n};\n\nexport default MyTreeSelect;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport MyTreeSelect from '../atoms/Inputs/MyTreeSelect';\nimport * as React from 'react';\nimport CustomSelect from '../atoms/Inputs/CustomSelect';\nimport FlexBox from '../atoms/FlexBox';\n\nexport type ErrorNameType = 'notFoundPage' | 'notFound';\n\nexport interface IErrorPageProps {\n  errName?: ErrorNameType;\n}\n\nexport interface IErrorPage {\n  status?: number;\n  title?: string;\n  error?: string;\n  path?: string;\n}\n\nexport type IErrors = {\n  [errName in ErrorNameType]?: IErrorPage;\n};\nexport const errors: IErrors = {\n  notFoundPage: {\n    status: 404,\n    title: 'Щось пішло не так!',\n    error: 'Сторінку, яку ви шукаєте, було видалено або переміщено.',\n    path: '#',\n  },\n  notFound: {\n    status: 404,\n    title: 'Помилка сервера!',\n    error: 'Інформацію не знайдено.',\n    path: '#',\n  },\n};\nconst PageNotFound: React.FC<IErrorPageProps> = ({ errName = 'notFoundPage' }) => {\n  return (\n    <Page className={'PageNotFound'}>\n      <ErrorNotification>\n        <ErrorCode>{errors[errName]?.status}</ErrorCode>\n\n        <Title>{errors[errName]?.title}</Title>\n\n        <Text>{errors[errName]?.error}</Text>\n\n        <ButtonIcon variant=\"outlinedSmall\">outlinedSmall</ButtonIcon>\n        <ButtonIcon variant=\"outlinedLarge\">outlinedLarge</ButtonIcon>\n        <ButtonIcon variant=\"filledSmall\">filledSmall</ButtonIcon>\n        <ButtonIcon variant=\"filledLarge\">filledLarge</ButtonIcon>\n\n        <MyTreeSelect treeData={[]} />\n        <MyTreeSelect treeData={[]} />\n        <FlexBox fillWidth gap={8}>\n          <CustomSelect label={'Рахунок'} placeholder={'Оберіть рахунок'} />\n\n          <CustomSelect label={'Суб-рахунок'} placeholder={'Оберіть суб-рахунок'} />\n\n          <CustomSelect label={'Категорія'} placeholder={'Оберіть категорію'} />\n        </FlexBox>\n\n        <ButtonIcon variant=\"onlyIcon\" iconId=\"search\"></ButtonIcon>\n        <ButtonIcon variant=\"onlyIconFilled\" iconId=\"filterOn\"></ButtonIcon>\n        <ButtonIcon variant=\"textSmall\">textSmall</ButtonIcon>\n        <ButtonIcon variant=\"textLarge\">textLarge</ButtonIcon>\n        <ButtonIcon variant=\"underlinedText\">underlinedText</ButtonIcon>\n\n        <ButtonIcon variant=\"defOutlinedSmall\">defOutlinedSmall</ButtonIcon>\n        <ButtonIcon variant=\"defOutlinedLarge\">defOutlinedLarge</ButtonIcon>\n      </ErrorNotification>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  text-align: center;\n\n  font-size: 18px;\n  line-height: 1.2;\n  letter-spacing: 0.07em;\n\n  height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n\n  overflow: auto;\n`;\n\nconst ErrorNotification = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n\n  max-width: 480px;\n  width: 100%;\n  padding: 16px;\n\n  gap: 4px;\n\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n`;\nconst ErrorCode = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-size: 80px;\n  font-weight: 700;\n  color: ${({ theme }) => theme.fontColor};\n`;\nconst Title = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n\n  margin-bottom: 8px;\n`;\nconst Text = styled.div`\n  font-size: 16px;\n\n  margin-bottom: 20px;\n`;\n\nexport default PageNotFound;\n"],"names":["SHOW_PARENT","TreeSelect","treeDataMock","value","title","children","_jsx","style","color","_ref","onSelect","treeData","_useState","useState","_useState2","_slicedToArray","setValue","tProps","length","onChange","newValue","node","changeEventExtra","console","log","treeCheckable","showCheckedStrategy","placeholder","width","_objectSpread","showSearch","dropdownStyle","maxHeight","overflow","zIndex","allowClear","multiple","treeDefaultExpandAll","errors","notFoundPage","status","error","path","notFound","Page","styled","_templateObject","_taggedTemplateLiteral","ErrorNotification","_templateObject2","_ref2","theme","trBorderClr","ErrorCode","_templateObject3","_ref3","fontColor","Title","_templateObject4","Text","_templateObject5","_errors$errName","_errors$errName2","_errors$errName3","_ref$errName","errName","className","_jsxs","ButtonIcon","variant","MyTreeSelect","FlexBox","fillWidth","gap","CustomSelect","label","iconId"],"sourceRoot":""}