{"version":3,"file":"static/js/910.370efb01.chunk.js","mappings":"qRAqEA,UAvD8E,SAAHA,GAAsB,IAAbC,EAAKC,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAJ,GAAAA,IACjFK,GAASC,EAAAA,EAAAA,MACfC,GAA8CC,EAAAA,EAAAA,YAAgCC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvEI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GAiB1C,OACEI,EAAAA,EAAAA,MAACC,EAAAA,GAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRC,YAAU,EACVC,WAAS,EACTC,MAAO,6BACHjB,GAAK,IACTkB,aACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,WAAYX,EAAkB,iBAAmB,iBAAkBY,QArBlE,WACtBlB,EAAOmB,QAAkC,SAAAC,GAAC,MAAK,CAC7CC,MAAOC,EAAAA,EAAAA,mBACP1B,MAAO,CACL2B,SAAU,SAAAC,GACRjB,EAAmBiB,GAEnBJ,EAAEK,SACJ,EACAC,SAAUpB,GAEb,GACH,IAUKqB,SAAA,EAEDZ,EAAAA,EAAAA,KAACa,EAAAA,GAAO,CAAChB,WAAS,EAAAe,SAAErB,IAAmBS,EAAAA,EAAAA,KAACc,EAAAA,EAAyB,CAACL,QAASlB,EAAiBwB,UAAQ,OAEpGtB,EAAAA,EAAAA,MAACoB,EAAAA,GAAO,CAACG,QAAS,MAAMJ,SAAA,EACtBZ,EAAAA,EAAAA,KAACa,EAAAA,GAAO,CAACI,MAAO,CAAEC,UAAW,KAAMN,SAChCrB,IACCS,EAAAA,EAAAA,KAACmB,EAAAA,GAAS,CACRC,YAAaC,EAAAA,GACbC,UAAW/B,EAAgBgC,OAC3BC,UAAU,MAKfjC,IACCS,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,CACXC,OAAOC,EAAAA,EAAAA,GAAU,aACjBC,YAAa,8FACbpB,SAAU,WAAO,EACjBqB,cAAe,WAAO,UAMlC,C,uBCnEe,SAAS7C,EAA0B8C,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,sBAAwBD,EAC/D,C","sources":["components/Forms/FormCreateProductInventory.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["import ModalForm, { ModalFormProps } from '../ModalForm';\nimport FlexBox from '../atoms/FlexBox';\nimport FormCreateInner from './components/FormCreateInner';\nimport { useModalProvider } from '../ModalProvider/ModalProvider';\nimport { Modals } from '../ModalProvider/Modals';\nimport { useState } from 'react';\nimport { IProduct } from '../../redux/products/products.types';\nimport ProductCardSimpleOverview from '../Overviews/ProductCardSimpleOverview';\nimport CustomSelect from '../atoms/Inputs/CustomSelect/CustomSelect';\nimport translate from '../../lang';\nimport TableList from '../TableList/TableList';\nimport { pricesColumnsForProductReview } from '../../data/priceManagement.data';\n\nexport interface FormCreateProductInventoryProps extends Omit<ModalFormProps, 'onSubmit'> {}\nconst FormCreateProductInventory: React.FC<FormCreateProductInventoryProps> = ({ ...props }) => {\n  const modalS = useModalProvider();\n  const [selectedProduct, setSelectedProduct] = useState<IProduct | undefined>();\n  // const [selectedPrice, setSelectedPrice] = useState<IPriceListItem | undefined>();\n\n  const onProductSelect = () => {\n    modalS.create<Modals.SelectProductModal>(m => ({\n      Modal: Modals.SelectProductModal,\n      props: {\n        onSelect: product => {\n          setSelectedProduct(product);\n\n          m.onClose();\n        },\n        selected: selectedProduct,\n      },\n    }));\n  };\n\n  return (\n    <ModalForm\n      fillHeight\n      fillWidth\n      title={'Add new product inventory'}\n      {...props}\n      extraFooter={\n        <FormCreateInner buttonText={selectedProduct ? 'Change product' : 'Select product'} onClick={onProductSelect} />\n      }\n    >\n      <FlexBox fillWidth>{selectedProduct && <ProductCardSimpleOverview product={selectedProduct} disabled />}</FlexBox>\n\n      <FlexBox padding={'8px'}>\n        <FlexBox style={{ minHeight: 250 }}>\n          {selectedProduct && (\n            <TableList\n              tableTitles={pricesColumnsForProductReview}\n              tableData={selectedProduct.prices}\n              isSearch={false}\n            />\n          )}\n        </FlexBox>\n\n        {selectedProduct && (\n          <CustomSelect\n            label={translate('variation')}\n            placeholder={'Оберіть варіацію'}\n            onSelect={() => {}}\n            onCreatePress={() => {}}\n          />\n        )}\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\nexport default FormCreateProductInventory;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["_ref","props","Object","assign","_objectDestructuringEmpty","modalS","useModalProvider","_useState","useState","_useState2","_slicedToArray","selectedProduct","setSelectedProduct","_jsxs","ModalForm","_objectSpread","fillHeight","fillWidth","title","extraFooter","_jsx","FormCreateInner","buttonText","onClick","create","m","Modal","Modals","onSelect","product","onClose","selected","children","FlexBox","ProductCardSimpleOverview","disabled","padding","style","minHeight","TableList","tableTitles","pricesColumnsForProductReview","tableData","prices","isSearch","CustomSelect","label","translate","placeholder","onCreatePress","obj","TypeError"],"sourceRoot":""}