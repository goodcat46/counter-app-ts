{"version":3,"file":"static/js/101.614399dd.chunk.js","mappings":"gMAkBMA,EAAWC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kWAkB3B,UA9B4E,SAAHC,GAA4B,IAAtBC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAC7EC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACJJ,GACFE,GAASG,EAAAA,EAAAA,IAAmBL,GAEhC,GAAG,CAACE,EAAUF,KAEPM,EAAAA,EAAAA,KAACX,EAAQ,CAAAM,SAAEA,GACpB,C,kKCcA,EA3B6B,WAC3B,IAAAM,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAMF,EAANE,OAAQC,EAAUH,EAAVG,WAQhB,MAAO,CACL,CACEC,MAAO,qBACPC,KATqB,CACvB,CAAEC,IAAK,oBAAqBC,KAAM,SAAUH,MAAO,kCACnD,CAAEE,IAAK,oBAAqBC,KAAM,WAAYH,MAAO,8CACrD,CAAEE,IAAK,oBAAqBC,KAAM,UAAWH,MAAO,+CAOlDI,aAAc,QAEhB,CACEJ,MAAO,6CACPC,KAAMH,EAAOA,OACbM,aAAc,UAEhB,CACEJ,MAAO,yDACPC,KAAMF,EAAWA,WACjBK,aAAc,cAGpB,E,iDCuBMC,EAAOpB,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gBACnBmB,EAAAA,IAGJ,EAzCwC,SAAHlB,GAAyB,IAAnBC,EAAID,EAAJC,KACnCkB,GAAsBC,EAAAA,EAAAA,KACtBC,EAAkBC,IAClBC,ECToB,SAACC,GAC3B,IAAMC,GAAQC,EAAAA,EAAAA,MAEd,OAAOC,EAAAA,EAAAA,cACL,SAAAC,GAAG,MAAI,CACL,CACEb,KAAM,SACNc,MAAO,kIACPC,KAAM,OACNC,UAAU,EACVC,cAAe,kBAAM,CAAK,EAC1BC,KAAM,WACNC,QAAS,WACPT,EAAMU,gBAAgB,CACpBC,cAAeC,EAAAA,EACfC,mBAAoB,CAClBT,MAAO,kIACPU,cAAAA,EAAAA,GACAC,aAAchB,EAAQiB,SACtBC,YAAY,IAGlB,GAEF,CACE3B,KAAM,SACNc,MAAO,4HACPC,KAAM,OACNG,KAAM,WACNF,UAAU,EACVC,cAAe,kBAAM,CAAK,EAC1BE,QAAS,WACPT,EAAMU,gBAAgB,CACpBC,cAAeC,EAAAA,EACfC,mBAAoB,CAClBT,MAAO,4HACPU,cAAAA,EAAAA,GACAI,SAAUnB,EAAQoB,OAClBF,YAAY,IAGlB,GAEF,CACE3B,KAAM,WACNc,MAAO,sHACPC,KAAM,SACNe,SAAU,MACVZ,KAAM,WACNF,UAAU,EACVC,cAAe,kBAAM,CAAI,EACzBE,QAAS,WACPV,EAAQsB,WAAW,KACrB,GAEF,CAAEC,WAAW,GACb,CACEhC,KAAM,iBACNc,MAAO,iCACPC,KAAM,SACNe,SAAU,MACVZ,KAAM,iBACNF,UAAU,EACVC,cAAe,kBAAM,CAAI,EACzBE,QAAS,WACPT,EAAMU,gBAAgB,CACpBC,cAAeC,EAAAA,EACfC,mBAAoB,CAClBT,MAAO,4EACPU,cAAAA,EAAAA,GACAS,cAAe,EACfC,aAAc,CAAEhB,KAAM,UACtBU,SAAUnB,EAAQoB,OAClBF,YAAY,IAGlB,GAEF,CACE3B,KAAM,mBACNc,MAAO,uHACPC,KAAM,WACNe,SAAU,MACVZ,KAAM,iBACNF,UAAU,EACVC,cAAe,kBAAM,CAAI,EACzBE,QAAS,WACPT,EAAMU,gBAAgB,CACpBC,cAAeC,EAAAA,EACfC,mBAAoB,CAClBT,MAAO,4EACPU,cAAAA,EAAAA,GACAS,cAAe,EACfC,aAAc,CAAEhB,KAAM,YACtBU,SAAUnB,EAAQoB,OAClBF,YAAY,IAGlB,GAEF,CACE3B,KAAM,kBACNc,MAAO,6CACPC,KAAM,UACNe,SAAU,MACVZ,KAAM,iBACNF,UAAU,EACVC,cAAe,kBAAM,CAAI,EACzBE,QAAS,WACPT,EAAMU,gBAAgB,CACpBC,cAAeC,EAAAA,EACfC,mBAAoB,CAClBT,MAAO,4EACPU,cAAAA,EAAAA,GACAS,cAAe,EACfC,aAAc,CAAEhB,KAAM,WACtBU,SAAUnB,EAAQoB,OAClBF,YAAY,IAGlB,GAEH,GAED,CAACjB,EAAOD,GAEZ,CDrHyB0B,CAAoB/B,GAGrCgC,GAAcC,EAAAA,EAAAA,UAClB,iBAAsC,CACpCC,UAAWC,EAAAA,IAAwBnC,EAAoBoC,MAAMC,aAC7DC,YAAaC,EAAAA,GACbC,kBAAmBC,EAAAA,GAAAA,QAAgC,SAAAC,GAAE,OAAIA,EAAGC,MAAM,IAClEC,gBAAiBH,EAAAA,GAAAA,QAAgC,SAAAC,GAAE,OAAIA,EAAGG,IAAI,IAC9D3C,gBAAAA,EACA4C,UAAU,EACVC,UAAU,EACVC,QAAQ,EACRC,YAAY,EACZ7C,eAAAA,EACA8C,eAAgB,SAAAxD,GACd,EAEFyD,WAAY,SAAAzD,GACV,EAEH,GACD,CAACU,EAAgBF,EAAiBF,EAAoBoC,MAAMC,eAG9D,OACEjD,EAAAA,EAAAA,KAACgE,EAAAA,QAAW,CAACtE,KAAMA,EAAKC,UACtBK,EAAAA,EAAAA,KAACU,EAAI,CAAAf,UACHK,EAAAA,EAAAA,KAACiE,EAAAA,IAASC,EAAAA,EAAAA,GAAA,GAAKtB,OAIvB,C,6GEhDajC,GAAmBwD,EAAAA,EAAAA,IAAG5E,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAItB4E,GAAgBD,EAAAA,EAAAA,IAAGE,IAAAA,GAAA7E,EAAAA,EAAAA,GAAA,4CAIV2E,EAAAA,EAAAA,IAAGG,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,uC","sources":["components/AppPages/AppGridPage.tsx","redux/transactions/useTrFilterSelectors.hook.ts","components/AppPages/PageTransactions.tsx","redux/transactions/useTrActionsCreator.hook.ts","components/AppPages/pagesStyles.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionSetIndexPage } from 'redux/page/pageActions';\n\nimport styled from 'styled-components';\n\nconst AppGridPage: React.FC<{ path: string; children?: React.ReactNode }> = ({ path, children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (path) {\n      dispatch(actionSetIndexPage(path));\n    }\n  }, [dispatch, path]);\n\n  return <GridPage>{children}</GridPage>;\n};\n\nconst GridPage = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(12, 1fr);\n\n  height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n\n  // overflow: auto;\n  @media screen and (max-width: 768px) {\n  }\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n  }\n`;\n\nexport default AppGridPage;\n","import { FilterSelectorType } from 'components/Filter/AppFilter';\nimport { RootState, useAppSelector } from '../store.store';\n\nconst useTrFilterSelectors = (): FilterSelectorType[] => {\n  const { counts, categories }: RootState = useAppSelector();\n\n  const transactionTypes = [\n    { _id: 'ds6d5vf6sd5f1v6sd', name: 'INCOME', label: 'ДОХІД' },\n    { _id: 'ds6d5vf6sd6f1v61d', name: 'TRANSFER', label: 'ПЕРЕКАЗ' },\n    { _id: 'ds6d5vf6dd6f1v68d', name: 'EXPENSE', label: 'ВИТРАТИ' },\n  ];\n\n  return [\n    {\n      label: 'Тип',\n      data: transactionTypes,\n      selectorName: 'type',\n    },\n    {\n      label: 'Рахунки',\n      data: counts.counts,\n      selectorName: 'counts',\n    },\n    {\n      label: 'Категорії',\n      data: categories.categories,\n      selectorName: 'categories',\n    },\n  ];\n};\nexport default useTrFilterSelectors;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from './pagesStyles';\nimport { transactionsColumns, transactionsMockData, transactionsSearchParams } from 'data';\nimport styled from 'styled-components';\nimport useTransactionsService from 'redux/transactions/useTransactionsService.hook';\nimport { useMemo } from 'react';\nimport useTrFilterSelectors from 'redux/transactions/useTrFilterSelectors.hook';\nimport { ITransaction } from '../../redux/transactions/transactions.types';\nimport { useTrActionsCreator } from '../../redux/transactions/useTrActionsCreator.hook';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport AppGridPage from './AppGridPage';\n\ntype Props = {\n  path: string;\n};\nconst PageTransactions: React.FC<any> = ({ path }: Props) => {\n  const transactionsService = useTransactionsService();\n  const filterSelectors = useTrFilterSelectors();\n  const actionsCreator = useTrActionsCreator(transactionsService);\n  // const [selectedTr, setSelectedTr] = useState<any>(null);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<ITransaction> => ({\n      tableData: transactionsMockData || transactionsService.state.transactions,\n      tableTitles: transactionsColumns,\n      tableSearchParams: transactionsSearchParams.filter(el => el.search),\n      tableSortParams: transactionsSearchParams.filter(el => el.sort),\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: data => {\n        // console.log(data);\n      },\n      onRowClick: data => {\n        // console.log(data);\n      },\n    }),\n    [actionsCreator, filterSelectors, transactionsService.state.transactions]\n  );\n\n  return (\n    <AppGridPage path={path}>\n      <Page>\n        <TableList {...tableConfig} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageTransactions;\n","import { useModalProvider } from '../../components/ModalProvider/ModalProvider';\nimport { TransactionsService } from './useTransactionsService.hook';\nimport { useCallback } from 'react';\nimport TransactionForm from '../../components/Forms/TransactionForm';\nimport { filterOptions } from '../../data/transactions.data';\nimport { TableActionCreator } from '../../components/TableList/tableTypes.types';\nimport { ITransaction } from './transactions.types';\n\nexport type TrActionsCreator = TableActionCreator<ITransaction>;\nconst useTrActionsCreator = (service: TransactionsService): TrActionsCreator => {\n  const modal = useModalProvider();\n\n  return useCallback(\n    ctx => [\n      {\n        name: 'editTr',\n        title: 'Редагування транзакції',\n        icon: 'edit',\n        disabled: false,\n        disabledCheck: () => false,\n        type: 'onlyIcon',\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Редагування транзакції',\n              filterOptions,\n              onSubmitEdit: service.editById,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'copyTr',\n        title: 'Копіювання транзакції',\n        icon: 'copy',\n        type: 'onlyIcon',\n        disabled: false,\n        disabledCheck: () => false,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Копіювання транзакції',\n              filterOptions,\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'deleteTr',\n        title: 'Видалення транзакції',\n        icon: 'delete',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: true,\n        disabledCheck: () => true,\n        onClick: () => {\n          service.deleteById('id');\n        },\n      },\n      { separator: true },\n      {\n        name: 'createIncomeTr',\n        title: 'Дохід',\n        icon: 'INCOME',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        disabledCheck: () => true,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 0,\n              defaultState: { type: 'INCOME' },\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'createTransferTr',\n        title: 'Переказ між рахунками',\n        icon: 'TRANSFER',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        disabledCheck: () => true,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 1,\n              defaultState: { type: 'TRANSFER' },\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'createExpenseTr',\n        title: 'Витрата',\n        icon: 'EXPENSE',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        disabledCheck: () => true,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 2,\n              defaultState: { type: 'EXPENSE' },\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n    ],\n\n    [modal, service]\n  );\n};\n\nexport type useTrActionsCreatorHookType = typeof useTrActionsCreator;\n// export type UseTrActionsCreatorHookType=type\n\nexport { useTrActionsCreator };\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["GridPage","styled","_templateObject","_taggedTemplateLiteral","_ref","path","children","dispatch","useDispatch","useEffect","actionSetIndexPage","_jsx","_useAppSelector","useAppSelector","counts","categories","label","data","_id","name","selectorName","Page","takeFullGridArea","transactionsService","useTransactionsService","filterSelectors","useTrFilterSelectors","actionsCreator","service","modal","useModalProvider","useCallback","ctx","title","icon","disabled","disabledCheck","type","onClick","handleOpenModal","ModalChildren","TransactionForm","modalChildrenProps","filterOptions","onSubmitEdit","editById","fillHeight","onSubmit","create","iconSize","deleteById","separator","defaultOption","defaultState","useTrActionsCreator","tableConfig","useMemo","tableData","transactionsMockData","state","transactions","tableTitles","transactionsColumns","tableSearchParams","transactionsSearchParams","el","search","tableSortParams","sort","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","onRowClick","AppGridPage","TableList","_objectSpread","css","takeFullPlace","_templateObject2","_templateObject3"],"sourceRoot":""}