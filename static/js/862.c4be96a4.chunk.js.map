{"version":3,"file":"static/js/862.c4be96a4.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Overviews/offer/offerOverviewCellsMap.tsx","components/Overviews/offer/OfferOverviewXL.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/Forms/offers/variations/OfferVariationPropertySelector.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewTextCell.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormProductDefaultsOverlay.tsx","components/Overviews/components/OfferOverviewDefaultsCell.tsx","components/Overlays/FormProductImagesOverlay.tsx","components/Overviews/components/OfferOverviewImagesCell.tsx","components/Forms/offers/FormProductCategories.tsx","components/Overlays/FormSelectCategoriesOverlay.tsx","components/Overviews/components/OfferOverviewCategoriesCell.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Overviews/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/components/OrderOverviewTotals.tsx","components/atoms/LangButtonsGroup.tsx","data/warehauses.data.ts"],"sourcesContent":["import { useOverlayService } from './OverlayStackProvider';\nimport React, { MouseEventHandler, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              overlaySrv.remove(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\n\nenum RightSideOptionEnum {\n  Variations = 'Variations',\n  Prices = 'Prices',\n  Warehousing = 'Warehousing',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(RightSideOptionEnum.Variations);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n    };\n    return tabs?.[currentTab] ?? null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      {isVisible && (\n        <ModalHeader\n          onBackPress={toggleVisibility}\n          renderTitle={\n            <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n              <Text $weight={600} $size={14}>\n                {page?.currentOffer?.label}\n              </Text>\n\n              <Text $size={14}>{page?.currentOffer?.sku}</Text>\n            </FlexBox>\n          }\n        />\n      )}\n\n      <TabBox overflow={'hidden'} fillWidth flex={1}>\n        <TabSelector filterOptions={TabsList} defaultValue={currentTab} onOptSelect={filterHandler} preventFilter />\n\n        {renderTab}\n      </TabBox>\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import { OverviewCellProps } from '../components/overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { t } from '../../../lang';\nimport { IMeasurement } from '../../../types/utils.types';\nimport { enumToFilterOptions, toAppDateFormat } from '../../../utils';\nimport { isString } from 'lodash';\nimport {\n  OfferOverviewCategoriesCell,\n  OfferOverviewDefaultsCell,\n  OfferOverviewImagesCell,\n  OfferOverviewStaticProperties,\n} from '../components';\n\nexport enum ProductOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nexport const ProductOverviewTabsList = enumToFilterOptions(ProductOverviewTabsEnum);\n\nconst offerOverviewCells: OverviewCellProps<OfferEntity, ProductOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: OfferOverviewCategoriesCell,\n    gridArea: 'categories',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Brand'),\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Properties'),\n    CellComponent: OfferOverviewStaticProperties,\n    gridArea: 'properties',\n    tab: ProductOverviewTabsEnum.Properties,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OfferOverviewDefaultsCell,\n    gridArea: 'defaults',\n    tab: ProductOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.user?.email} / ${\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : ''\n          }`\n        : null,\n    gridArea: 'created',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.user?.email} / ${\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : ''\n          }`\n        : null,\n    gridArea: 'updated',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OfferOverviewImagesCell,\n    gridArea: 'images',\n    tab: ProductOverviewTabsEnum.Images,\n  },\n];\n\nexport const getOfferOverviewCellsMap = (): Record<\n  ProductOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, ProductOverviewTabsEnum>[]\n> => {\n  const offerOverviewCellsMap: Record<\n    ProductOverviewTabsEnum | string,\n    OverviewCellProps<OfferEntity, ProductOverviewTabsEnum>[]\n  > = {};\n  offerOverviewCells.forEach(item => {\n    const tab = item.tab;\n    if (tab) {\n      if (offerOverviewCellsMap[tab]) {\n        offerOverviewCellsMap[tab].push(item);\n      } else {\n        offerOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return offerOverviewCellsMap;\n};\n","import { OfferEntity } from '../../../types/offers/offers.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../../lang';\nimport { usePageCurrentOffer } from '../../AppPages/offers/PageOfferProvider';\nimport { OverlayHeader } from '../../Overlays';\nimport TabSelector from '../../atoms/TabSelector';\n\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../../hooks';\nimport { getOfferOverviewCellsMap, ProductOverviewTabsEnum, ProductOverviewTabsList } from './offerOverviewCellsMap';\nimport { OverviewTextCell } from '../components';\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\nconst cellsMap = getOfferOverviewCellsMap();\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n\n  const [currentTab, setCurrentTab] = useState<ProductOverviewTabsEnum>(ProductOverviewTabsEnum.General);\n  console.log('OfferOverviewXL', cellsMap);\n  const renderCells = useMemo(\n    () =>\n      cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n        if (CellComponent) {\n          return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n        }\n        return <OverviewTextCell key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n      }),\n    [currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        filterOptions={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport default OfferOverviewXL;\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/offer/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { products: productsS } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              _id: page?.currentOffer?._id,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          productsS.getProductFullInfo({\n            data: { _id: page.currentOffer?._id },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({ offer: { content: t('Loading product info') } });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      service\n        .getProductFullInfo({\n          data: { _id: offerId },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .finally();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    service.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      service.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { pricesColumnsForProductReview } from 'data/priceManagement.data';\nimport FormCreatePrice from '../../../Forms/pricing/FormCreatePrice/FormCreatePrice';\nimport { OfferPriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { getIdRef } from 'utils/data-transform';\nimport { OnlyUUID } from 'redux/global.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  // const updateDefaults = ({}: { price?: OnlyUUID }) => {};\n\n  const tableConfig = useMemo((): ITableListProps<OfferPriceEntity> => {\n    return {\n      tableData: currentOffer?.prices,\n      tableTitles: pricesColumnsForProductReview,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: FormCreatePrice,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                      // onSubmit: (d, o) => {\n                      //   pricesS.addPriceToList({\n                      //     data: { updateCurrent: true, data: { data: d } },\n                      //     onSuccess: data => {\n                      //       updateDefaults({ price: { _id: data._id } });\n                      //\n                      //       o?.close && m?.onClose();\n                      //     },\n                      //   });\n                      // },\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentOffer, withActions, onSelect, loadData, modalS]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n    />\n  );\n};\n\nexport default PricesTab;\n","import { IProperty, IPropertyValue } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { PropertyItemStylesByCmsKey } from '../../../Directories/DirProperties/components/PropertyItem';\n\nexport interface OfferVariationPropertySelectorProps {\n  item: IProperty;\n  selectedValue?: string;\n  selectedIds?: string[];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n}\nexport const OfferVariationPropertySelector = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: OfferVariationPropertySelectorProps) => {\n  const renderChildren = useMemo(() => {\n    return item.childrenList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, item.childrenList, onSelect, selectedIds]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox fillWidth padding={'8px 0'} gap={6} cmsKey={item.cmsConfigs?.key}>\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ cmsKey?: MaybeNull<string> }>`\n  width: 100%;\n  display: grid;\n\n  grid-template-columns: repeat(${p => (p.cmsKey ? PropertyItemStylesByCmsKey[p.cmsKey]?.numColumns ?? 2 : 2)}, 1fr);\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: IPropertyValue;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  return (\n    <ValueTag\n      variant={isSelected ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nexport default OfferVariationPropertySelector;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { toVariationFormData, toVariationReqData } from '../../utils';\nimport { IVariationFormData, VariationEntity } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../Forms/components/FormAfterSubmitOptions';\nimport { OverlayFooter, OverlayHeader } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport LangButtonsGroup from '../atoms/LangButtonsGroup';\nimport { MaybeNull, UUID } from '../../types/utils.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { IProperiesGroup, IProperty, IPropertyValue } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  update?: UUID;\n\n  create?: boolean;\n\n  defaultState?: VariationEntity;\n}\nconst validation = yup.object().shape({\n  label: yup.string().required().min(5).max(64),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\n\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const loaders = useLoaders<'create'>();\n  const currentOffer = useCurrentOffer({ id: update || offerId || offer?._id });\n  const submitOptions = useAfterSubmitOptions();\n  // _setCurrentTemplate\n  const [currentTemplate] = useState<IProperiesGroup>(templates?.[0]);\n  const [selectedPropsMap, setSelectedPropsMap] = useState<Record<string, IPropertyValue>>({});\n\n  const { propertiesList, propValuesDataMap } = useMemo(() => {\n    const list = currentTemplate?.childrenList?.filter(el => el?.isSelectable);\n    const _propValuesMap: Record<string, IPropertyValue> = {};\n\n    const map: Record<string, IProperty> = Object.assign(\n      {},\n      ...(list ?? []).map(pr => {\n        if (pr?.childrenList?.length) {\n          pr?.childrenList.forEach(val => {\n            _propValuesMap[val._id] = val;\n          });\n        }\n\n        return { [pr._id]: pr };\n      })\n    );\n\n    return { propertiesList: list, propertiesDataMap: map, propValuesDataMap: _propValuesMap };\n  }, [currentTemplate?.childrenList]);\n\n  const formMethods = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      defaultState ? { ...defaultState, offer: currentOffer } : { offer: currentOffer }\n    ),\n    resolver: yupResolver(validation as never),\n    reValidateMode: 'onSubmit',\n  });\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  useEffect(() => {\n    console.log({ formValues });\n  }, [formValues]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const { label } = useMemo(() => {\n    // const _sortedIds = Object.keys(selectedPropsMap ?? {}).sort((prev, next) => prev.localeCompare(next));\n\n    const _sorted = Object.entries(selectedPropsMap).sort((prev, next) => {\n      return prev[0].localeCompare(next[0]);\n    });\n    const _labels: string[] = currentOffer?.label ? [currentOffer?.label] : [];\n\n    for (const entry of _sorted) {\n      const value = entry[1];\n      value?.label && _labels.push(value?.label);\n    }\n    const _base = !_sorted?.length ? `${currentOffer?.label}. {{VARIATION_LABEL}}` : _labels.join('. ');\n\n    return { label: _base };\n  }, [currentOffer?.label, selectedPropsMap]);\n\n  useEffect(() => {\n    setValue('label', label);\n  }, [label, setValue]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: toVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: toVariationReqData(data),\n            onSuccess: data => {\n              submitOptions.state.close && onClose && onClose();\n              submitOptions.state.clear && reset();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [loaders, onClose, reset, service, submitOptions.state.clear, submitOptions.state.close, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string, label?: MaybeNull<string>) => {\n      setValue(`propertiesMap.${parentId}`, id);\n\n      setSelectedPropsMap(p => ({ ...p, [parentId]: propValuesDataMap?.[id] }));\n    },\n    [propValuesDataMap, setValue]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setSelectedPropsMap({});\n  }, [setValue]);\n\n  const renderTemplate = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  return (\n    <FormContainer\n      onSubmit={handleSubmit(onValid, errors => {\n        console.error('[SUBMIT ERROR]', errors);\n      })}\n      onReset={handleClearMap}\n      {...props}\n    >\n      <OverlayHeader\n        onBackPress={onClose}\n        title={(title || currentTemplate?.label) ?? ''}\n        canSubmit={canSubmit}\n        okButton\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <Inputs>\n          <InputLabel label={t('label')} error={errors.label}>\n            <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n          </InputLabel>\n\n          <FlexBox fxDirection={'row'} gap={8} fillWidth>\n            <InputLabel label={t('sku')} error={errors.sku}>\n              <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n            </InputLabel>\n\n            <InputLabel label={t('barCode')} error={errors.barCode}>\n              <InputText {...register('barCode')} placeholder={t('barCode')} />\n            </InputLabel>\n          </FlexBox>\n\n          {/*<DimensionsInputs form={formMethods} />*/}\n        </Inputs>\n\n        <TemplateBox padding={'0 0 8px'} margin={'8px 0 0'}>\n          {renderTemplate}\n        </TemplateBox>\n\n        {!currentOffer && (\n          <CmsConfigs padding={'8px 0'} fillWidth>\n            <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n              <Text $size={13} $weight={500}>\n                {t('Cms configs')}\n              </Text>\n            </CmsConfigsHeader>\n\n            <Inputs>\n              <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n                <LangButtonsGroup disabled />\n              </InputLabel>\n\n              <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n                <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n              </InputLabel>\n            </Inputs>\n          </CmsConfigs>\n        )}\n      </Content>\n\n      <OverlayFooter\n        loading={loaders.isLoading?.create}\n        resetButtonShown\n        submitButtonText={loaders.isLoading?.create ? 'Loading...' : update ? 'Підтвердити' : 'Додати'}\n        canSubmit={canSubmit}\n        extraFooter={\n          <ExtraFooterBox>\n            <FormAfterSubmitOptions {...submitOptions} />\n          </ExtraFooterBox>\n        }\n      />\n    </FormContainer>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst Inputs = styled(FlexBox)`\n  padding: 0 4px;\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { IVariationTableData } from '../../../../types/offers/variations.types';\nimport { getIdRef } from '../../../../utils';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\nimport { IProperty } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const page = usePageCurrentOffer();\n  const modalS = useModalProvider();\n  const currentOffer = page.currentOffer;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, offerId: currentOffer._id },\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, IProperty> = {};\n    for (const variation of currentOffer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [currentOffer?.variations]);\n\n  const tableConfig = useMemo(() => {\n    return {\n      tableTitles: variationsTableTitles,\n      tableData: currentOffer?.variations,\n      transformData: transformVariationTableData,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n                  const dataForUpdate = currentOffer?.variations?.find(v => v?._id === currentId);\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: {\n                      update: currentId,\n                      defaultState: dataForUpdate,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: { offer: page.currentOffer },\n                  });\n                },\n              },\n            ];\n          },\n    } as ITableListProps<IVariationTableData>;\n  }, [currentOffer?.variations, loadData, modalS, onSelect, page.currentOffer, variationsTableTitles, withActions]);\n\n  useEffect(() => {\n    if (currentOffer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n    />\n  );\n};\nexport default VariationsTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px;\n\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox fxDirection={'row'} justifyContent={'space-between'} height={'max-content'} alignItems={'center'}>\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/global.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IWarehouse } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList isSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nexport interface FormProductDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum FormProductDefaultsTabs {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\nexport type OfferOverlayLoaderKey =\n  | keyof typeof FormProductDefaultsTabs\n  | `${keyof typeof FormProductDefaultsTabs}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    currentOffer?._id &&\n      productsS.setDefaults({\n        data: { _id: currentOffer?._id, defaults: toReqData(fData) as never, updateCurrent: true },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n\n  const renderTab = useMemo(() => {\n    const tabsMap: Record<FormProductDefaultsTabs, React.ReactNode> = {\n      [FormProductDefaultsTabs.warehouse]: <WarehousesTab onSelect={handleSelect} selected={formValues?.warehouse} />,\n      [FormProductDefaultsTabs.price]: <PricesTab withActions onSelect={handleSelect} selected={formValues?.price} />,\n      [FormProductDefaultsTabs.variation]: (\n        <VariationsTab withActions onSelect={handleSelect} selected={formValues?.variation} />\n      ),\n      [FormProductDefaultsTabs.inventory]: (\n        <WarehousingTab withActions onSelect={handleSelect} selected={formValues?.inventory} />\n      ),\n      [FormProductDefaultsTabs.supplier]: (\n        <CounterpartyTab\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          withActions\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      ),\n    };\n\n    return tabsMap[tabs[currentTabIdx]?.value] ?? null;\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    formValues?.warehouse,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentOffer?.defaults;\n\n    const tabIs: Record<FormProductDefaultsTabs | string, boolean> = {\n      [tabs?.[currentTabIdx]?.value ?? '']: true,\n    };\n\n    if (tabIs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabIs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabIs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabIs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabIs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentOffer?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} onCreatePress={() => {}} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport FormProductDefaultsOverlay from '../../Overlays/FormProductDefaultsOverlay';\n\nimport { OfferPriceEntity } from '../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../types/utils.types';\nimport { toPrice } from '../../../utils/numbers';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: OfferPriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import FormOfferImagesComponent from '../Forms/offers/components/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils/data-transform';\nimport { OverlayFooter, OverlayHeader } from './index';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: OfferEntity;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(currentProduct?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={\n          <OverlayHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />\n        }\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../Overlays/FormProductImagesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} disabled />\n          ))}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport translate from '../../../lang';\nimport { IDirItemBase, IProductCategoryDirItem } from '../../../types/dir.types';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport styled from 'styled-components';\n\nexport interface FormProductCategoriesProps {\n  onSelect?: (id: string, option?: IProductCategoryDirItem) => void;\n  onChange?: (ids: string[]) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  options?: IProductCategoryDirItem[];\n}\n\nconst FormProductCategories: React.FC<FormProductCategoriesProps> = ({ options, onSelect, onChange, defaultData }) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const handleSelect = useCallback(\n    (option?: IProductCategoryDirItem) => {\n      setSelectedIds(prev => {\n        const newData = option\n          ? prev.includes(option?._id)\n            ? prev.filter(el => el !== option?._id)\n            : [...prev, option._id]\n          : prev;\n        onSelect && option?._id && onSelect(option?._id);\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n  const handleRemove = useCallback(\n    (id: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.filter(el => el !== id);\n\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange]\n  );\n\n  const renderTreeData = useMemo(() => {\n    return options?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_0_${item._id}`}\n          item={item}\n          index={index}\n          selectedIds={selectedIds}\n          onRemove={handleRemove}\n        />\n      );\n    });\n  }, [handleRemove, options, selectedIds]);\n\n  useEffect(() => {\n    if (defaultData) {\n      setSelectedIds(defaultData);\n    }\n  }, [defaultData]);\n\n  return (\n    <FlexBox fillWidth gap={6}>\n      <CustomSelect\n        treeMode\n        dropDownIsAbsolute\n        defaultValue={defaultData}\n        {...{\n          label: translate('categories'),\n          placeholder: translate('categories'),\n          required: true,\n          options,\n        }}\n        onSelect={handleSelect}\n      />\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} gap={8}>\n        {renderTreeData}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n\nconst ListItem: React.FC<{\n  item: IDirItemBase;\n  lvl?: number;\n  index?: number;\n  onRemove?: (id: string) => void;\n  selectedIds: string[];\n}> = ({\n  item,\n  index = 0,\n  lvl = 0,\n  selectedIds,\n  onRemove = () => {\n    console.log('onRemove not passed', lvl);\n  },\n}) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          onRemove={onRemove}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, onRemove, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <TagItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n          <ButtonIcon\n            variant={'onlyIcon'}\n            endIcon={'close'}\n            size={'24px'}\n            endIconSize={'80%'}\n            onClick={() => onRemove && onRemove(item._id)}\n          />\n        </TagItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n\nconst TagItem = styled(FlexBox)`\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.accentColor.base};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\nexport default FormProductCategories;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector, useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../utils/data-transform';\nimport FormProductCategories from '../Forms/offers/FormProductCategories';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\n\nexport interface FormSelectCategoriesOverlayProps extends OverlayHandlerReturn {}\n\nconst FormProductCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const { currentOffer } = useProductsSelector();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<string[]>([]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentOffer &&\n      service.updateById({\n        data: { ...getIdRef(currentOffer), data: { categories: state }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  const canSubmit = useMemo(() => {\n    const initialString = currentOffer?.categories?.map(c => c._id)?.toString();\n    const currentString = state.toString();\n\n    return initialString !== currentString;\n  }, [currentOffer?.categories, state]);\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setState(currentOffer?.categories.map(c => c._id));\n    }\n  }, [currentOffer?.categories]);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader title={'Категорії'} onBackPress={onClose} canSubmit={canSubmit} okButton />\n\n      <Content padding={'0 0 8px 0'} flex={1}>\n        <FormProductCategories onChange={setState} options={directory} defaultData={state} />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductCategoriesOverlay;\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../redux/selectors.store';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport FormProductCategoriesOverlay from '../../Overlays/FormSelectCategoriesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { IProductCategoryDirItem } from '../../../types/dir.types';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: IProductCategoryDirItem;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport CustomSelect from '../atoms/Inputs/CustomSelect/CustomSelect';\nimport { t } from '../../lang';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface FormSelectPropertiesProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  update?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentOffer = offer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [currentId, setCurrentId] = useState<string>(templates[0]?._id);\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const canSubmit = useMemo(() => {\n    return currentOffer?.properties?.map(p => p._id).join(',') !== selectedIds.join(',');\n  }, [currentOffer?.properties, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = update ?? currentOffer?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentOffer?._id, onClose, onSubmit, selectedIds, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentId?: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n        onChange && onChange(newData);\n        onSelect && onSelect(id);\n\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (currentOffer?.properties) {\n      setSelectedIds(currentOffer?.properties.map(p => p._id));\n    }\n  }, [currentOffer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        title={(title || templateData?.label) ?? ''}\n        okButton\n      />\n\n      <CustomSelect\n        label={t('Available templates')}\n        options={templates}\n        selectedValue={currentId}\n        onSelect={option => {\n          setCurrentId(option?._id);\n        }}\n      />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>`\n  //display: grid;\n  //grid-template-columns: repeat(auto-fill, 25%);\n  //\n  //@media screen and (max-width: 480px) {\n  //  grid-template-columns: repeat(auto-fill, 50%);\n  //}\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  //width: 100%;\n  //min-width: unset;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { IProperty } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: IProperty;\n  selectedItems?: string[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedItems }) => {\n  const renderValues = useMemo(() => {\n    return item.childrenList\n      ?.filter(el => selectedItems?.includes(el._id))\n      ?.map((value, index) => {\n        return (\n          <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n            {value.label}\n          </CellStyledComp.CategoryItem>\n        );\n      });\n  }, [item.childrenList, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport React, { useMemo, useState } from 'react';\nimport FormSelectPropertiesOverlay from '../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { OverviewPropertyComponent } from './OverviewPropertyComponent';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const templates = useProductsSelector().properties;\n  // ! setCurrentId\n  const [currentId] = useState<string>(templates[0]?._id);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const availableProperties = useMemo(() => {\n    return template?.childrenList?.filter(prop => !prop.isSelectable);\n  }, [template?.childrenList]);\n\n  const selectedItems = useMemo(() => {\n    return data?.properties?.map(p => p._id);\n  }, [data?.properties]);\n\n  const renderProperties = useMemo(() => {\n    return availableProperties?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, selectedItems, data }}\n        />\n      );\n    });\n  }, [availableProperties, overlayHandler, selectedItems, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {renderProperties && renderProperties?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n\n        {/*{renderPropertiesFromVariations}*/}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { t } from '../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { numberWithSpaces } from '../../../utils';\nimport { Text } from '../../atoms/Text';\n\nexport const OrderOverviewTotals: RenderOverviewCellComponent<OrderEntity> = ({ data, cell }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Amount'), value: numberWithSpaces(data?.total?.amount) },\n      { label: t('Items count'), value: data?.total?.items },\n    ];\n    return cells.map(cell => (\n      <FlexBox fxDirection={'row'} padding={'6px'} justifyContent={'space-between'} fillWidth gap={8}>\n        <Text $size={11}>{cell.label}</Text>\n        <CellStyledComp.CellText $weight={600}>{cell?.value}</CellStyledComp.CellText>\n      </FlexBox>\n    ));\n  }, [data?.total?.amount, data?.total?.items]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={cell.title} />\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { LangKeyEnum } from '../../lang';\nimport React, { useMemo } from 'react';\nimport { enumToFilterOptions } from '../../utils/fabrics';\nimport ButtonsGroup from './ButtonsGroup';\n\nconst LangButtonsGroup = ({ onChange, disabled }: { onChange?: (value: LangKeyEnum) => void; disabled?: boolean }) => {\n  const options = useMemo(() => enumToFilterOptions(LangKeyEnum), []);\n\n  return <ButtonsGroup disabled={disabled} options={options} onSelect={info => onChange && onChange(info.value)} />;\n};\n\nexport default LangButtonsGroup;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseItemEntity, IWarehouse } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email') },\n    bottom: { name: t('phone') },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","_objectSpread","onClose","overlayId","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColor","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","createContext","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","compId","value","open","Provider","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","modalBorderColor","_page$currentOffer","_page$currentOffer2","toggleVisibility","page","usePageCurrentOffer","Variations","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","currentOffer","tabs","_defineProperty","VariationsTab","withActions","Warehousing","WarehousingTab","Prices","PricesTab","_jsxs","ModalHeader","onBackPress","renderTitle","padding","fxDirection","justifyContent","gap","Text","$weight","$size","label","sku","flex","TabSelector","filterOptions","defaultValue","onOptSelect","preventFilter","ProductOverviewTabsEnum","ProductOverviewTabsList","offerOverviewCells","title","t","getValue","data","gridArea","tab","General","approved","type","barCode","CellComponent","OfferOverviewCategoriesCell","_data$brand","brand","product","measurement","JSON","parse","unit","min","max","step","join","e","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","OfferOverviewStaticProperties","Properties","OfferOverviewDefaultsCell","Defaults","_product$author","_product$author$user","author","user","email","createdAt","isString","toAppDateFormat","Date","_product$editor","_product$editor$user","editor","updatedAt","OfferOverviewImagesCell","Images","cellsMap","offerOverviewCellsMap","forEach","item","push","getOfferOverviewCellsMap","Container","sideBarBackgroundColor","Content","sideBarBorderColor","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","_p$product","_objectWithoutProperties","_excluded","router","useAppRouter","offer","console","log","renderCells","_cellsMap$currentTab","_ref2","cell","_excluded2","overlayHandler","OverviewTextCell","OverlayHeader","goBack","optionProps","fitContentH","option","replace","hash","size","variant","iconSize","icon","disabled","onEdit","visible","onHide","onDelete","margin","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","loaders","useOfferOverviewLoaders","modalS","useModalProvider","productsS","useAppServiceProvider","products","OfferOverviewXL","openModal","Modal","Modals","_id","_page$currentOffer3","getProductFullInfo","onLoading","useLoadersProvider","Page","takeFullGridArea","path","useLoaders","content","isRightSideVisible","setIsRightSideVisible","toggleRightSide","LoadersProvider","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","PageCurrentOfferCTX","service","ServiceName","useAppParams","offerId","useCurrentOffer","useEffect","_loaders$isLoading","isLoading","finally","clearCurrent","undefined","onSelect","selected","_ref$withActions","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","refresh","update","wrap","_context","next","abrupt","getAllPrices","refreshCurrent","updateCurrent","stop","_x","apply","arguments","tableConfig","tableData","prices","tableTitles","pricesColumnsForProductReview","onRowClick","rowData","getIdRef","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","separator","ModalChildren","FormCreatePrice","modalChildrenProps","TableList","isSearch","isFilter","PropertyBox","PropertyValuesBox","_PropertyItemStylesBy","_PropertyItemStylesBy2","cmsKey","PropertyItemStylesByCmsKey","numColumns","RenderPropertyValue","isSelected","ValueTag","fontWeight","_item$cmsConfigs","_ref$selectedIds","selectedIds","renderChildren","_item$childrenList","childrenList","paddingLeft","cmsConfigs","key","validation","yup","shape","required","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","price","out","FormContainer","fontColorSidebar","tableBackgroundColor","TemplateBox","Inputs","ExtraFooterBox","CmsConfigs","_templateObject6","CmsConfigsHeader","_templateObject7","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs2$l","_loaders$isLoading2","defaultState","onSubmit","create","templates","usePropertiesSelector","submitOptions","useAfterSubmitOptions","currentTemplate","_useState3","_useState4","selectedPropsMap","setSelectedPropsMap","_useMemo","_currentTemplate$chil","list","isSelectable","_propValuesMap","propertiesList","propertiesDataMap","Object","assign","pr","_pr$childrenList","val","propValuesDataMap","formMethods","useAppForm","defaultValues","toVariationFormData","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","reset","values","canSubmit","_step","_sorted","entries","sort","localeCompare","_labels","_iterator","_createForOfIteratorHelper","s","n","done","err","f","onValid","updateVariationById","toVariationReqData","onSuccess","onError","ToastService","then","createVariation","state","close","clear","handleSelect","parentId","handleClearMap","renderTemplate","prop","OfferVariationPropertySelector","onReset","okButton","InputLabel","InputText","placeholder","LangButtonsGroup","OverlayFooter","loading","resetButtonShown","submitButtonText","extraFooter","FormAfterSubmitOptions","getAllVariationsByProductId","variationsTableTitles","_currentOffer$variati","variations","_step2","propsList","properties","_iterator2","_prop$parent","propId","parent","createTableTitlesFromProperties","transformData","transformVariationTableData","window","confirm","_currentOffer$variati2","dataForUpdate","v","CreateVariationOverlay","currentProduct","useProductsSelector","setLoading","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","CellStyledComp","CategoryItem","field","backgroundColor","minHeight","OverviewCellHeader","_ref$title","_ref$openOverlayButto","openOverlayButtonTitle","onOpenOverlayPress","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","height","marginRight","types","counterparties","useDirectorySelector","ApiDirType","directory","filteredData","c","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","FormProductDefaultsTabs","Form","modalBackgroundColor","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","_tabsMap","_tabsMap$tabs$current","_tabs$currentTabIdx","warehouse","WarehousesTab","variation","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx$v","_tabs$currentTabIdx2","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","tabIs","fData","setDefaults","toReqData","meta","currentIndex","onChangeIndex","hasLoading","onCreatePress","useTheme","renderVariationTags","_variation$properties","_item$value","$align","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","commission","percentage","markup","createPriceOverviewTagsData","FormProductDefaultsOverlay","color","fontColorHeader","flexWrap","code","info","images","setState","preventDefault","updateById","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","renderImageSets","_data$images","set","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","ListItem","_item$parent","_item$parent2","_ref2$lvl","lvl","_ref2$onRemove","onRemove","_Fragment","TagItem","endIcon","endIconSize","options","onChange","defaultData","setSelectedIds","newData","handleRemove","renderTreeData","CustomSelect","treeMode","dropDownIsAbsolute","translate","_currentOffer$categor","_currentOffer$categor2","categories","toString","OverlayForm","FormProductCategories","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","NotActiveTreeDataItem","FormProductCategoriesOverlay","PropertyValuesList","light","_templates$","template","setCurrentId","_useState5","_useState6","templateData","_currentOffer$propert","event","_meta","debug","_templateData$childre","_prop$childrenList","selectedValue","OverviewPropertyComponent","selectedItems","renderValues","_item$childrenList$fi","maxWidth","availableProperties","_template$childrenLis","_data$properties","renderProperties","FormSelectPropertiesOverlay","OrderOverviewTotals","_data$total3","_data$total4","_data$total","_data$total2","numberWithSpaces","total","items","LangKeyEnum","ButtonsGroup","top","getData","rd","bottom","width","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}