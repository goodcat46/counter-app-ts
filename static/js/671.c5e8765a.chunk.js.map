{"version":3,"file":"static/js/671.c5e8765a.chunk.js","mappings":"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","sources":["components/AppPages/PageCurrentProductProvider.tsx","components/Forms/FormVariation.tsx","components/AppPages/PageProductOverview/PageProductOverviewRightSide.tsx","components/Overviews/ProductOverviewXL.tsx","components/AppPages/PageProductOverview/PageProductOverviewLeftSide.tsx","components/AppPages/PageProductOverview.tsx","components/AppPages/pagesStyles.tsx"],"sourcesContent":["import React, { createContext, useCallback, useContext, useMemo, useState } from 'react';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { IProduct } from '../../redux/products/products.types';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface PageCurrentProductProviderProps {\n  children?: React.ReactNode;\n}\nexport interface PageCurrentProductProviderValue {\n  currentProduct?: IProduct;\n  getOverlayStack: () => OverlayStackItemData[];\n  overlayStack: OverlayStackItemData[];\n  createOverlayComponent: OverlayHandler;\n  handleRemoveStackItem: (id: string) => void;\n  mainPagePath?: string;\n}\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => OverlayHandlerReturn;\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport type OverlayRenderComponentProps<Props = any> = OverlayHandlerReturn & Props;\nexport interface OverlayHandlerReturn {\n  onClose?: () => void;\n  index?: number;\n  overlayId?: string;\n}\nexport const PageCurrentProductCTX = createContext({});\nexport const usePageCurrentProduct = () => useContext(PageCurrentProductCTX) as PageCurrentProductProviderValue;\n\nconst PageCurrentProductProvider: React.FC<PageCurrentProductProviderProps> = ({ children }) => {\n  const { currentProduct } = useProductsSelector();\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const handleRemoveStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.id !== isExist.id);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: OverlayHandlerReturn = {\n        onClose: () => handleRemoveStackItem(id),\n        overlayId: id,\n      };\n      return returnData;\n    },\n    [handleRemoveStackItem]\n  );\n\n  const getOverlayStack = useCallback(() => overlayStack, [overlayStack]);\n\n  const CTX = useMemo(\n    (): PageCurrentProductProviderValue => ({\n      currentProduct,\n      createOverlayComponent,\n      overlayStack,\n      handleRemoveStackItem,\n      getOverlayStack,\n    }),\n    [createOverlayComponent, currentProduct, getOverlayStack, handleRemoveStackItem, overlayStack]\n  );\n\n  return <PageCurrentProductCTX.Provider value={CTX}>{children}</PageCurrentProductCTX.Provider>;\n};\nexport default PageCurrentProductProvider;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { useProductsSelector, usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { useCallback, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler, UseAppFormSubmitOptions } from '../../hooks/useAppForm.hook';\nimport { OverlayHandlerReturn } from '../AppPages/PageCurrentProductProvider';\nimport { useForm } from 'react-hook-form';\nimport { createVariationFormData, createVariationReqData } from '../../utils/dataTransform';\nimport { IVariation } from '../../redux/products/variations.types';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ToastService } from '../../services';\nimport AppLoader from '../atoms/AppLoader';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions from './components/FormAfterSubmitOptions';\n\nexport interface FormVariationProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, IVariation>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  product?: OnlyUUID;\n\n  create?: boolean;\n  update?: string;\n\n  defaultState?: IVariation;\n}\nexport interface IVariationFormData {\n  propertiesMap: Record<string, string>;\n  price?: OnlyUUID;\n  product?: OnlyUUID;\n  timeFrom?: string | number | Date;\n  timeTo?: string | number | Date;\n}\nconst FormVariation: React.FC<FormVariationProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  ...props\n}) => {\n  const product = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n\n  const [submitOptions, setSubmitOptions] = useState<UseAppFormSubmitOptions>({});\n  const handleChangeAfterSubmit = (key: keyof UseAppFormSubmitOptions) => {\n    setSubmitOptions(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  const { setValue, watch, handleSubmit } = useForm<IVariationFormData>({\n    defaultValues: defaultState ? createVariationFormData({ ...defaultState, product }) : { product },\n  });\n  const formValues = watch();\n\n  const template = useMemo(() => {\n    const pr = defaultState?.product || product;\n\n    return templates.find(t => t._id === pr?.template?._id);\n  }, [defaultState?.product, product, templates]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: createVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: e => {\n              console.log(e);\n            },\n            onLoading: setLoading,\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: createVariationReqData(data),\n            onSuccess: data => {\n              console.log('createVariation onSuccess', data);\n              onClose && onClose();\n            },\n            onError: e => {\n              console.log(e);\n              ToastService.error('createVariation error');\n            },\n            onLoading: setLoading,\n          })\n          .then();\n      }\n\n      onSubmit && onSubmit(data);\n    },\n    [onClose, onSubmit, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string) => {\n      setValue(`propertiesMap.${parentId}`, id);\n    },\n    [setValue]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return template?.childrenList?.map(prop => {\n      return (\n        <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n          <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n            {prop.label}\n          </Text>\n\n          <FlexBox fillWidth padding={'8px 0'} fxDirection={'row'} gap={6} flexWrap={'wrap'}>\n            {prop.childrenList?.map(value => {\n              const isActive = formValues?.propertiesMap && formValues?.propertiesMap[prop._id] === value._id;\n\n              return (\n                <ValueTag\n                  key={`prop-value-${value._id}`}\n                  variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                  padding={'6px 8px'}\n                  fontWeight={500}\n                  onClick={() => handleSelect(prop._id, value._id)}\n                >\n                  {value.label}\n                </ValueTag>\n              );\n            })}\n          </FlexBox>\n        </PropertyBox>\n      );\n    });\n  }, [formValues, handleSelect, template?.childrenList]);\n\n  return (\n    <FormContainer onSubmit={handleSubmit(onValid)} {...props}>\n      <Header alignItems={'center'} justifyContent={'space-between'} fxDirection={'row'} gap={6} fillWidth>\n        <FlexBox fxDirection={'row'} padding={'4px 0'} alignItems={'center'} fillHeight>\n          <Text $weight={600} $size={18}>\n            {title || template?.label || 'Title'}\n          </Text>\n        </FlexBox>\n\n        <ButtonIcon variant={'onlyIcon'} onClick={onClose} icon={'close'}></ButtonIcon>\n      </Header>\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <Footer>\n        <ExtraFooterBox>\n          <FormAfterSubmitOptions\n            clear={submitOptions.clearAfterSave}\n            close={submitOptions.closeAfterSave}\n            toggleOption={handleChangeAfterSubmit}\n          />\n        </ExtraFooterBox>\n\n        <FlexBox padding={'6px 0'} fxDirection={'row'} gap={8} alignItems={'center'}>\n          <ButtonIcon\n            onClick={onClose}\n            variant={'onlyIconFilled'}\n            size={'36px'}\n            iconSize={'28px'}\n            textTransform={'uppercase'}\n            icon={'close'}\n          />\n\n          <ButtonIcon\n            type={'submit'}\n            fontWeight={600}\n            variant={'outlinedLarge'}\n            textTransform={'uppercase'}\n            endIcon={'SmallArrowRight'}\n            disabled={loading}\n            style={{ flex: 1 }}\n          >\n            {update ? 'Підтвердити' : 'Додати'}\n          </ButtonIcon>\n        </FlexBox>\n      </Footer>\n\n      <AppLoader isLoading={loading} />\n    </FormContainer>\n  );\n};\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Header = styled(FlexBox)`\n  height: 32px;\n`;\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Footer = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormVariation;\n","import { usePageCurrentProduct } from '../PageCurrentProductProvider';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../TableList/TableList';\nimport { pricesColumnsForProductReview } from '../../../data/priceManagement.data';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { createTableTitlesFromTemplate } from '../../../utils';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { Text } from '../../atoms/Text';\nimport ModalFilter, { FilterSelectHandler } from '../../ModalForm/ModalFilter';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport FormCreateVariation from '../../Forms/FormVariation';\nimport { IPriceListItem } from 'redux/priceManagement/priceManagement.types';\nimport { IVariationTableData } from 'redux/products/variations.types';\nimport { transformVariationTableData } from '../../../utils/tables';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { ExtractId } from '../../../utils/dataTransform';\nimport { usePropertiesSelector } from '../../../redux/selectors.store';\nimport AppLoader from '../../atoms/AppLoader';\n\n// const openLoader = (current: RightSideOptionEnum) =>\n//   ToastService.createLoader('Loading data...').open({\n//     afterClose: [`${current} data loaded`, { type: 'success' }],\n//   });\nenum RightSideOptionEnum {\n  Variations = 'Variations',\n  Prices = 'Prices',\n}\nconst toggleOptions = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface PageProductOverviewRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n// interface ITableDataByType {\n//   [RightSideOptionEnum.Variations]: IVariation;\n//   [RightSideOptionEnum.Prices]: IPriceListItem;\n// }\nconst PageProductOverviewRightSide: React.FC<PageProductOverviewRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentProduct();\n  const [current, setCurrent] = useState<RightSideOptionEnum>(RightSideOptionEnum.Prices);\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n  const [loading, setLoading] = useState(false);\n\n  const templates = usePropertiesSelector();\n\n  const variationsTableTitles = useMemo(() => {\n    const template = templates.find(t => t._id === page.currentProduct?.template?._id);\n    return createTableTitlesFromTemplate(template);\n  }, [page.currentProduct?.template?._id, templates]);\n\n  const loadCurrentData = useCallback(\n    (current: RightSideOptionEnum) => {\n      if (current === RightSideOptionEnum.Variations && page.currentProduct) {\n        productsS\n          .getAllVariationsByProductId({\n            data: { product: ExtractId(page.currentProduct), refreshCurrent: true },\n            onLoading: setLoading,\n          })\n          .finally();\n      }\n      if (current === RightSideOptionEnum.Prices && page.currentProduct) {\n        pricesS\n          .getAllPricesByProductId({\n            data: { productId: ExtractId(page.currentProduct) },\n            onLoading: setLoading,\n          })\n          .finally();\n      }\n    },\n    [page.currentProduct, pricesS, productsS]\n  );\n\n  const currentTableSettings = useMemo((): ITableListProps | undefined => {\n    if (current === RightSideOptionEnum.Variations) {\n      return {\n        tableTitles: variationsTableTitles,\n        tableData: page?.currentProduct?.variations,\n        transformData: transformVariationTableData,\n        actionsCreator: ctx => {\n          const currentId = ctx.selectedRow?._id;\n\n          return [\n            {\n              icon: 'delete',\n              type: 'onlyIcon',\n              disabled: !currentId,\n              onClick: () => {\n                window.confirm(`Видалити варіацію:\\n ${currentId}`);\n              },\n            },\n            {\n              icon: 'edit',\n              type: 'onlyIcon',\n              disabled: !currentId,\n              onClick: () => {\n                if (!currentId || !ctx.selectedRow) return;\n                const dataForUpdate = page.currentProduct?.variations?.find(v => v?._id === currentId);\n\n                modalS.open({\n                  ModalChildren: FormCreateVariation,\n                  modalChildrenProps: {\n                    update: currentId,\n                    product: page.currentProduct,\n                    defaultState: dataForUpdate,\n                  },\n                });\n                // toggleVisibility && toggleVisibility();\n              },\n            },\n            {\n              icon: 'plus',\n              type: 'onlyIconFilled',\n              onClick: () => {\n                // toggleVisibility && toggleVisibility();\n\n                modalS.open({\n                  ModalChildren: FormCreateVariation,\n                  modalChildrenProps: { product: page.currentProduct },\n                });\n              },\n            },\n          ];\n        },\n      } as ITableListProps<IVariationTableData>;\n    }\n\n    if (current === RightSideOptionEnum.Prices) {\n      return {\n        tableData: page?.currentProduct?.prices,\n        tableTitles: pricesColumnsForProductReview,\n        actionsCreator: ctx => [{ icon: 'plus' }],\n      } as ITableListProps<IPriceListItem>;\n    }\n  }, [current, modalS, page, variationsTableTitles]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrent(value);\n    // loadCurrentData(value);\n  };\n\n  useEffect(() => {\n    current && page.currentProduct && loadCurrentData(current);\n    // eslint-disable-next-line\n  }, [current, page.currentProduct?._id]);\n\n  return (\n    <RightSide overflow={'auto'} fillHeight isVisible={isVisible}>\n      <Top fillWidth padding={'4px 8px'} gap={4} height={'44px'} isVisible={isVisible}>\n        <Text $weight={600} $size={16}>\n          {page?.currentProduct?.label}\n        </Text>\n\n        <Text $size={12}>{page?.currentProduct?.sku}</Text>\n      </Top>\n\n      <ModalFilter filterOptions={toggleOptions} onOptSelect={filterHandler} />\n\n      <TableList isSearch={false} isFilter={false} checkBoxes {...currentTableSettings} />\n\n      <Bottom fillWidth flex={1} fxDirection={'row'} justifyContent={'flex-end'}>\n        <ButtonIcon variant={'textExtraSmall'} endIcon={'SmallArrowRight'} onClick={toggleVisibility}>\n          {'Згорнути'}\n        </ButtonIcon>\n      </Bottom>\n\n      <AppLoader isLoading={loading} />\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  min-width: 320px;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  //border: 1px solid blue;\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst Top = styled(FlexBox)<{ isVisible?: boolean }>`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nconst Bottom = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nexport default PageProductOverviewRightSide;\n","import { IProduct } from '../../redux/products/products.types';\nimport FlexBox from '../atoms/FlexBox';\nimport React, { useMemo } from 'react';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { Text } from '../atoms/Text';\nimport t from '../../lang';\nimport FormCreateVariation from '../Forms/FormVariation';\nimport { OverlayHandler, usePageCurrentProduct } from '../AppPages/PageCurrentProductProvider';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport interface ProductOverviewXLProps {\n  product?: IProduct;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\nexport interface OverviewRenderCellReturnData {\n  value?: string | number;\n  title?: string;\n  gridArea?: keyof IProduct;\n  getValue?: () => React.ReactNode;\n}\nexport interface ProductOverviewCell {\n  value?: string | number;\n  title?: string;\n  gridArea?: keyof IProduct;\n  renderCell?: RenderOverviewCell<IProduct>;\n  CellComponent?: React.FC<{ data?: IProduct; cell: ProductOverviewCell; setOverlayContent: OverlayHandler }>;\n  getValue?: (product?: IProduct) => string | number;\n}\nexport type RenderOverviewCell<T = any> = (\n  cell: ProductOverviewCell,\n  setOverlayContent: OverlayHandler,\n  data?: T\n) => React.ReactNode;\nconst ProductOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, onOpenRightSide, ...p }) => {\n  const product = useProductsSelector().currentProduct;\n  const page = usePageCurrentProduct();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const renderCells = useMemo(\n    () =>\n      productOverviewCells.map(({ CellComponent, ...cell }) => {\n        if (cell.renderCell) {\n          return cell.renderCell(cell, page.createOverlayComponent, product);\n        }\n        if (CellComponent) {\n          return (\n            <CellComponent\n              key={cell.title}\n              setOverlayContent={page.createOverlayComponent}\n              cell={cell}\n              data={product}\n            />\n          );\n        }\n        const value = cell.getValue && cell.getValue(product);\n        return renderTextCell(cell.title, value);\n      }),\n    [page.createOverlayComponent, product]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <Header alignItems={'center'} justifyContent={'space-between'} fxDirection={'row'} gap={6} fillWidth>\n        <FlexBox fxDirection={'row'} padding={'4px 0'} alignItems={'center'} fillHeight>\n          <Text $weight={600} $size={18}>\n            {'Перегляд продукту'}\n          </Text>\n        </FlexBox>\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          icon={'close'}\n          onClick={() => {\n            if (product && location?.pathname) {\n              const newPath = location?.pathname?.replace(`/${product?._id}`, '');\n\n              newPath && navigate(newPath);\n            }\n          }}\n        />\n      </Header>\n\n      <FlexBox fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </FlexBox>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon size={'36px'} variant={'onlyIcon'} iconSize={'85%'} icon={'edit'} onClick={p?.onEdit} />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn variant={'onlyIcon'} size={'36px'} iconSize={'85%'} icon={'delete'} onClick={p?.onDelete} />\n\n        <OpenBtn\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'SmallArrowLeft'}\n          onClick={onOpenRightSide}\n        />\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n`;\nconst Header = styled(FlexBox)`\n  height: 32px;\n`;\nconst Footer = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  margin-left: auto;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nconst OverlayOpenButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 12px;\n  padding: 0 6px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n`;\n\nconst Cell = styled(FlexBox)`\n  min-height: 50px;\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nexport default ProductOverviewXL;\n\nconst renderTextCell = (title?: string, value?: string | number) => {\n  return (\n    <Cell key={title} padding={'4px'}>\n      <CellText $isTitle $size={12}>\n        {title}\n      </CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellText $disabled={!value} $weight={500}>\n          {value || 'не визначено'}\n        </CellText>\n      </FlexBox>\n    </Cell>\n  );\n};\nconst VariationsTemplateCell: React.FC<{\n  cell: ProductOverviewCell;\n  setOverlayContent: OverlayHandler;\n  data?: IProduct;\n}> = ({ cell, setOverlayContent, data }) => {\n  return (\n    <Cell key={cell.title} padding={'4px'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} justifyContent={'space-between'} gap={8}>\n        <CellText $isTitle $size={12}>\n          {cell.title}\n        </CellText>\n\n        {data?.template && (\n          <OverlayOpenButton\n            type={'button'}\n            onClick={() => {\n              setOverlayContent({ RenderComponent: FormCreateVariation, props: { create: true } });\n            }}\n          >\n            {'Перегляд'}\n          </OverlayOpenButton>\n        )}\n      </FlexBox>\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        gap={8}\n        height={'24px'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n      >\n        <CellText $disabled={!data?.template?.label} $weight={500}>{`${data?.template?.label}`}</CellText>\n      </FlexBox>\n    </Cell>\n  );\n};\n\nconst productOverviewCells: ProductOverviewCell[] = [\n  {\n    title: 'Назва',\n    renderCell: (cell, _, product) => renderTextCell(cell.title, product?.label),\n    gridArea: 'label',\n  },\n  {\n    title: 'Тип',\n    renderCell: (cell, _, product) => renderTextCell(cell.title, product?.type),\n    gridArea: 'type',\n  },\n  {\n    title: 'Артикул | SKU',\n    renderCell: (cell, _, product) => renderTextCell(cell.title, product?.sku),\n    gridArea: 'sku',\n  },\n  {\n    title: 'Штрих-код',\n    renderCell: (cell, _, product) => renderTextCell(cell.title, product?.barCode),\n    gridArea: 'barCode',\n  },\n  {\n    title: t('variationsTemplate'),\n    CellComponent: VariationsTemplateCell,\n    gridArea: 'template',\n  },\n  {\n    title: 'Категорія',\n    renderCell: (cell, _, product) =>\n      renderTextCell(cell.title, `${product?.category?.parent?.label || ''}/${product?.category?.label}`),\n    gridArea: 'category',\n  },\n  {\n    title: 'Бренд',\n    renderCell: (cell, _, product) => renderTextCell(cell.title, product?.brand?.label),\n    gridArea: 'brand',\n  },\n\n  {\n    title: 'Опис',\n    renderCell: (cell, _, product) => renderTextCell(cell.title, product?.description),\n    gridArea: 'description',\n  },\n];\n","import { usePageCurrentProduct } from '../PageCurrentProductProvider';\nimport ProductOverviewXL from '../../Overviews/ProductOverviewXL';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo } from 'react';\nimport { Modals } from '../../ModalProvider/Modals';\nimport { ToastService } from '../../../services';\n\nexport interface PageProductOverviewRightSideProps {\n  toggleRightSideVisibility?: () => void;\n}\nconst PageProductOverviewRightSide: React.FC<PageProductOverviewRightSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentProduct();\n  const modalS = useModalProvider();\n  const { products: productsS } = useAppServiceProvider();\n\n  const renderOverlayStack = useMemo(() => {\n    const stack = page.getOverlayStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox key={`overlay-${id}`} style={{ zIndex: 20 + index }} fillHeight fillWidth>\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              page.handleRemoveStackItem(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [page]);\n\n  return (\n    <LeftSide>\n      <ProductOverviewXL\n        product={page?.currentProduct}\n        onEdit={() => {\n          const m = modalS.handleOpenModal({\n            Modal: Modals.FormCreateProduct,\n            props: {\n              edit: true,\n              _id: page?.currentProduct?._id,\n              defaultState: page?.currentProduct,\n              onSubmit: (d, o) => {\n                productsS.updateById({\n                  data: { ...d, refreshCurrent: true },\n                  onSuccess: () => {\n                    o?.closeAfterSave && m?.onClose();\n                    ToastService.success(`Updated product`);\n                  },\n                });\n              },\n            },\n          });\n        }}\n        onDelete={() => {}}\n        onArchive={() => {}}\n        onHide={() => {}}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n        {renderOverlayStack}\n      </Backdrop>\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  left: ${p => (p.isActive ? 0 : '100%')};\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 20;\n\n  animation: 'OverlayFromRight';\n`;\n\nexport default PageProductOverviewRightSide;\n","import { PagePathType } from '../../redux/APP_CONFIGS';\nimport styled from 'styled-components';\nimport { takeFullGridArea } from './pagesStyles';\nimport AppGridPage from './AppGridPage';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useAppParams } from '../../hooks';\nimport { useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport PageCurrentProductProvider from './PageCurrentProductProvider';\nimport { ToastService } from '../../services';\nimport PageProductOverviewRightSide from './PageProductOverview/PageProductOverviewRightSide';\nimport PageProductOverviewLeftSide from './PageProductOverview/PageProductOverviewLeftSide';\nimport AppLoader from '../atoms/AppLoader';\n\nexport interface PageProductOverviewProps {\n  path: PagePathType;\n}\n\nconst PageProductOverview: React.FC<PageProductOverviewProps> = ({ path }) => {\n  const { productId } = useAppParams();\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n  const { products: productsS } = useAppServiceProvider();\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const rt = ToastService.createToastLoader('Loading product');\n    if (productId) {\n      productsS\n        .getProductFullInfo({\n          data: { _id: productId },\n          onLoading: setLoading,\n          onError: e => {\n            console.warn('PageProductOverview', e);\n          },\n        })\n        .finally(rt);\n    }\n  }, [productId, productsS]);\n\n  return (\n    <AppGridPage path={path}>\n      <PageCurrentProductProvider>\n        <Page>\n          <PageProductOverviewLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n          <PageProductOverviewRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n        </Page>\n      </PageCurrentProductProvider>\n\n      <AppLoader isLoading={loading} />\n    </AppGridPage>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(280px, 1fr) 2fr;\n\n  ${takeFullGridArea};\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: minmax(280px, 1fr) 0;\n  }\n`;\n\nexport default PageProductOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n"],"names":["PageCurrentProductCTX","createContext","usePageCurrentProduct","useContext","_ref","children","currentProduct","useProductsSelector","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","handleRemoveStackItem","useCallback","id","pStack","filter","el","createOverlayComponent","params","concat","RenderComponent","name","nanoid","prev","isExist","find","includes","clearedStack","_toConsumableArray","_objectSpread","onClose","overlayId","getOverlayStack","CTX","useMemo","_jsx","Provider","value","FormContainer","styled","_templateObject","_taggedTemplateLiteral","p","theme","tableBackgroundColor","Header","FlexBox","_templateObject2","TemplateBox","_templateObject3","sideBarBorderColor","PropertyBox","_templateObject4","Footer","_templateObject5","ExtraFooterBox","_templateObject6","ValueTag","ButtonIcon","_templateObject7","accentColor","light","base","title","defaultState","onSubmit","update","props","create","_objectWithoutProperties","_excluded","product","service","useAppServiceProvider","ServiceName","templates","usePropertiesSelector","loading","setLoading","_useState3","_useState4","submitOptions","setSubmitOptions","_useForm","useForm","defaultValues","createVariationFormData","setValue","watch","handleSubmit","formValues","template","pr","t","_pr$template","_id","onValid","data","updateVariationById","createVariationReqData","onSuccess","console","log","onError","e","onLoading","then","createVariation","ToastService","handleSelect","parentId","renderTemplate","_template$childrenLis","childrenList","map","prop","_prop$childrenList","_jsxs","gap","fillWidth","padding","Text","style","flex","paddingLeft","$weight","label","fxDirection","flexWrap","isActive","propertiesMap","variant","fontWeight","onClick","alignItems","justifyContent","fillHeight","$size","icon","overflow","FormAfterSubmitOptions","clear","clearAfterSave","close","closeAfterSave","toggleOption","key","_defineProperty","size","iconSize","textTransform","type","endIcon","disabled","AppLoader","isLoading","RightSideOptionEnum","toggleOptions","enumToFilterOptions","RightSide","globals","timingFunctionMain","backgroundColorLight","isVisible","Top","modalBorderColor","Bottom","_page$currentProduct2","_page$currentProduct3","_page$currentProduct8","_page$currentProduct9","_page$currentProduct10","toggleVisibility","page","Prices","current","setCurrent","modalS","useModalProvider","productsS","pricesS","variationsTableTitles","_page$currentProduct","_page$currentProduct$","createTableTitlesFromTemplate","loadCurrentData","Variations","getAllVariationsByProductId","ExtractId","refreshCurrent","finally","getAllPricesByProductId","productId","currentTableSettings","_page$currentProduct4","_page$currentProduct7","tableTitles","tableData","variations","transformData","transformVariationTableData","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","window","confirm","_page$currentProduct5","_page$currentProduct6","dataForUpdate","v","open","ModalChildren","FormCreateVariation","modalChildrenProps","prices","pricesColumnsForProductReview","useEffect","height","sku","ModalFilter","filterOptions","onOptSelect","_","index","TableList","isSearch","isFilter","checkBoxes","Container","DeleteBtn","colors","error","OpenBtn","OverlayOpenButton","Cell","CellText","_templateObject8","$isTitle","$disabled","inputPlaceholderColor","undefined","_p$product","className","onOpenRightSide","navigate","useNavigate","location","useLocation","renderCells","productOverviewCells","_ref2","CellComponent","cell","_excluded2","renderCell","setOverlayContent","getValue","renderTextCell","pathname","_location$pathname","newPath","replace","onEdit","visible","onHide","onDelete","minHeight","gridArea","barCode","_ref3","_data$template","_data$template2","_product$category","_product$category$par","_product$category2","category","parent","_product$brand","brand","description","LeftSide","Backdrop","backdropColor","OverlayBox","toggleRightSideVisibility","products","renderOverlayStack","zIndex","ProductOverviewXL","m","handleOpenModal","Modal","Modals","edit","d","o","updateById","onArchive","length","Page","takeFullGridArea","path","useAppParams","isRightSideVisible","setIsRightSideVisible","toggleRightSide","rt","getProductFullInfo","warn","AppGridPage","PageCurrentProductProvider","PageProductOverviewLeftSide","PageProductOverviewRightSide","css","takeFullPlace"],"sourceRoot":""}