{"version":3,"file":"static/js/790.4f8509d8.chunk.js","mappings":"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","sources":["components/Forms/offers/AddImageSetModal.tsx","components/Forms/offers/components/FormOfferImagesComponent.tsx","components/atoms/ImagePreviewSmall.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import { OfferImageSlotEntity } from '../../../types/offers/offers.types';\nimport ModalForm, { ModalFormProps } from '../../ModalForm';\nimport { ChangeEventHandler, useRef, useState } from 'react';\nimport { FilterOption } from '../../atoms/TabSelector';\nimport FlexBox from '../../atoms/FlexBox';\nimport SvgIcon from '../../atoms/SvgIcon/SvgIcon';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport ButtonsGroup from '../../atoms/ButtonsGroup';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { ImageSetSrcType } from '../../../types/offers/offer-images.types';\nimport { formAddImageSetTabs } from 'data';\n\nexport interface FormAddImageSetData extends Partial<Omit<OfferImageSlotEntity, '_id' | 'createdAt' | 'updatedAt'>> {}\n\nexport interface AddImageSetModalProps extends Omit<ModalFormProps<any, any, FormAddImageSetData>, 'onSubmit'> {\n  onSubmit?: (data: Partial<FormAddImageSetData>, setId?: string, setIndex?: number) => void;\n  setId?: string;\n  setIndex?: number;\n  type?: ImageSetSrcType;\n}\n\nconst AddImageSetModal = ({\n  title,\n  fillHeight = true,\n  onSubmit,\n  onClose,\n  defaultState,\n  type,\n  ...props\n}: AddImageSetModalProps) => {\n  const [current, setCurrent] = useState<FilterOption<ImageSetSrcType> | undefined>(formAddImageSetTabs[0]);\n  const [formData, setFormData] = useState<FormAddImageSetData>(defaultState || {});\n  const inputRef = useRef<HTMLInputElement>(null);\n  const handleSubmitForm = () => {\n    onSubmit && onSubmit(formData);\n    onClose && onClose();\n  };\n\n  const handleInputChange: ChangeEventHandler<HTMLInputElement> = e => {\n    const { name, value } = e.target;\n\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n  const handleClear = () => {\n    current?.value && setFormData(prev => ({ ...prev, [current?.value]: '' }));\n  };\n\n  return (\n    <ModalForm\n      title={title || 'Додати новий сет зображень'}\n      fillHeight={fillHeight}\n      {...props}\n      width={'360px'}\n      onClose={onClose}\n      onSubmit={handleSubmitForm}\n    >\n      <FormContentGrid>\n        <FlexBox fillWidth fillHeight alignItems={'center'} overflow={'hidden'}>\n          {current?.value && formData[current?.value] ? (\n            <Image src={formData[current?.value] as never} />\n          ) : (\n            <AddImageBox disabled>\n              <SvgIcon icon={'plus'} size={'56px'} />\n\n              <input name={'img_preview'} type={'file'} className={'visually-hidden'} disabled />\n            </AddImageBox>\n          )}\n        </FlexBox>\n\n        {current?.value && (\n          <FlexBox fxDirection={'row'} gap={6} alignItems={'flex-end'}>\n            <InputLabel label={current?.label?.replace('img_', 'image ').toUpperCase()} required={current?.required}>\n              <InputText\n                ref={inputRef}\n                name={current?.value}\n                value={formData[current?.value] || ''}\n                onChange={handleInputChange}\n                placeholder={'Впишіть або вставте посилання на зображення'}\n                required={current?.required}\n                autoFocus\n              />\n            </InputLabel>\n\n            <ButtonIcon variant={'onlyIcon'} icon={'close'} size={'28px'} iconSize={'100%'} onClick={handleClear} />\n          </FlexBox>\n        )}\n\n        <FlexBox padding={'8px 0'}>\n          <ButtonsGroup\n            options={formAddImageSetTabs}\n            currentOption={current}\n            // defaultIndex={type ? formAddImageSetTabs.findIndex(el => el.value === type) : 0}\n            onSelect={info => {\n              setCurrent(info.option);\n              // inputRef.current?.focus({ preventScroll: true });\n            }}\n          />\n        </FlexBox>\n      </FormContentGrid>\n    </ModalForm>\n  );\n};\nconst FormContentGrid = styled.div`\n  flex: 1;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr min-content min-content;\n  gap: 6px;\n\n  padding: 8px;\n  overflow: hidden;\n`;\nconst AddImageBox = styled.label<{ disabled?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n  width: 100%;\n  max-height: 100%;\n\n  fill: ${p => p.theme.sideBarBorderColor};\n\n  border-radius: 2px;\n  border: 2px solid ${p => p.theme.sideBarBorderColor};\n\n  transition: ${p => p.theme.globals.timingFnMui};\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n  &:hover {\n    fill: ${p => p.theme.accentColor.base};\n    border-color: ${p => p.theme.accentColor.light};\n  }\n`;\n\nconst Image = styled.img`\n  //min-width: 100px;\n  //max-width: 100px;\n  //\n  //height: 145px;\n\n  max-height: 100%;\n`;\nexport default AddImageSetModal;\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { Text } from '../../../atoms/Text';\nimport { useModalService } from '../../../ModalProvider/ModalProvider';\nimport AddImageSetModal, { FormAddImageSetData } from '../AddImageSetModal';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport { checks as check } from '../../../../utils';\nimport { t } from '../../../../lang';\nimport { formAddImageSetTabs } from '../../../../data';\nimport { ImageSetSrcType } from '../../../../types/offers/offer-images.types';\n\nexport interface FormOfferImagesComponentProps {\n  onChangeState?: (state: Partial<OfferImageSlotEntity>[]) => void;\n  initialData?: Partial<OfferImageSlotEntity>[];\n  renderHeader?: React.ReactNode;\n  canEditOrder?: boolean;\n  onClose?: () => void;\n  hideLabel?: boolean;\n  contentContainerStyle?: React.CSSProperties;\n  FooterComponent?: React.FC<{ onAddNewImageSetPress: () => void }>;\n  HeaderComponent?: React.FC;\n}\n\nconst FormOfferImagesComponent: React.FC<FormOfferImagesComponentProps> = ({\n  onChangeState,\n  renderHeader,\n  initialData,\n  canEditOrder = true,\n  onClose,\n  FooterComponent,\n  contentContainerStyle,\n  hideLabel,\n}) => {\n  const modalS = useModalService();\n\n  const [formData, setFormData] = useState<Partial<OfferImageSlotEntity>[]>([]);\n  useEffect(() => {\n    if (!initialData) {\n      return;\n    } else {\n      setFormData(initialData);\n    }\n  }, [initialData]);\n  const handleAddImageSet = (info: FormAddImageSetData) => {\n    if (onChangeState) {\n      const updatedData = [...(initialData ?? []), { ...info, order: formData.length + 1 }];\n      onChangeState(updatedData);\n    } else {\n      setFormData(prev => {\n        return [...prev, { ...info, order: formData.length + 1 }];\n      });\n    }\n  };\n  const handleChangeOrder = useCallback(\n    (currentSetOrder: number, increment: number) => {\n      setFormData(prev => {\n        const newOrder = currentSetOrder + increment;\n\n        return prev.map((set, index) => {\n          if (newOrder > formData.length || newOrder < 1) {\n            return set;\n          }\n          if (set.order === newOrder) {\n            return { ...set, order: currentSetOrder };\n          } else if (set.order === currentSetOrder) {\n            return { ...set, order: newOrder };\n          } else {\n            return set;\n          }\n        });\n      });\n    },\n    [formData.length]\n  );\n\n  const handleAddImageToSet = useCallback(\n    ({ setIndex, type, uri }: { setId?: string; setIndex?: number; uri?: string; type?: ImageSetSrcType }) => {\n      if (onChangeState && initialData) {\n        const updatedData = initialData?.map((set, index) => {\n          if (setIndex === index) {\n            return { ...set, [type as never]: uri };\n          }\n          return set;\n        });\n        onChangeState(updatedData);\n      } else {\n        setFormData(prev => {\n          const updatedData = prev.map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: uri };\n            }\n            return set;\n          });\n          return updatedData;\n        });\n      }\n    },\n    [initialData, onChangeState]\n  );\n  // TODO need refactoring\n  const handleRemoveImageFromSet = useCallback(\n    ({ setId, setIndex, type }: { setId?: string; setIndex?: number; type?: ImageSetSrcType }) => {\n      const confirmed =\n        type !== ImageSetSrcType.img_preview || window.confirm('Буде видалено цілий сет фото.\\nПродовжити?');\n      if (!confirmed) return;\n\n      setFormData(prev => {\n        const updatedData = prev\n          .map((set, index) => {\n            if (setIndex === index) {\n              return { ...set, [type as never]: '' };\n            }\n            return set;\n          })\n          .filter(set => {\n            return set.img_preview;\n          })\n          .map((set, index) => ({ ...set, order: index + 1 }));\n\n        onChangeState && onChangeState(updatedData);\n        return updatedData;\n      });\n    },\n    [onChangeState]\n  );\n\n  const handleAddNewSet = () => {\n    modalS.open({\n      ModalChildren: AddImageSetModal,\n      modalChildrenProps: {\n        onSubmit: data => {\n          handleAddImageSet(data);\n        },\n      },\n    });\n  };\n\n  const renderImageSets = useMemo(() => {\n    let dataForRender = formData;\n    try {\n      dataForRender = [...formData].sort((a, b) => (a?.order ?? 0) - (b?.order ?? 0));\n    } catch (e) {\n      dataForRender = formData;\n    }\n\n    return dataForRender?.map((slot, slotIndex) => {\n      const renderPreviews = formAddImageSetTabs.map((el, imgIndex) => {\n        return (\n          <ImagePreviewSmall\n            key={`small-prev_${imgIndex}`}\n            src={slot[el?.value as never]}\n            title={el.label ?? ''}\n            onEditPress={() => {\n              modalS.open({\n                ModalChildren: AddImageSetModal,\n                modalChildrenProps: {\n                  defaultState: slot,\n                  type: el.value,\n                  onSubmit: data => {\n                    el.value &&\n                      data[el.value] &&\n                      handleAddImageToSet({\n                        setId: slot?._id,\n                        setIndex: slotIndex,\n                        uri: data[el.value],\n                        type: el.value,\n                      });\n                  },\n                },\n              });\n            }}\n            onDeletePress={() => {\n              handleRemoveImageFromSet({ setId: '', setIndex: slotIndex, type: el.value });\n            }}\n          />\n        );\n      });\n\n      return (\n        <ImagesSetBox\n          key={`images-set_${slot?._id || slotIndex}`}\n          gap={2}\n          fxDirection={'row'}\n          fillWidth\n          overflow={'auto'}\n        >\n          {canEditOrder && (\n            <SlotOrderChanger\n              currentOrder={slot?.order}\n              canMoveUp={(slot?.order ?? 0) > 1}\n              onMoveUpPress={() => {\n                check.isNum(slot.order) && handleChangeOrder(slot.order, -1);\n              }}\n              canMoveDown={(slot?.order ?? 0) < formData.length}\n              onMoveDownPress={() => {\n                check.isNum(slot.order) && handleChangeOrder(slot.order, +1);\n              }}\n            />\n          )}\n\n          {renderPreviews}\n        </ImagesSetBox>\n      );\n    });\n  }, [canEditOrder, formData, handleAddImageToSet, handleChangeOrder, handleRemoveImageFromSet, modalS]);\n\n  useEffect(() => {\n    if (initialData) {\n      setFormData(initialData as Required<OfferImageSlotEntity>[]);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {renderHeader || (\n        <FlexBox\n          padding={'4px 8px'}\n          height={'32px'}\n          fxDirection={'row'}\n          gap={2}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $weight={600} $size={14}>\n            {!hideLabel && t('Images')}\n          </Text>\n\n          <AddImageSetButton type={'button'} onClick={onClose || handleAddNewSet}>\n            {onClose ? t('Close') : t('Add')}\n          </AddImageSetButton>\n        </FlexBox>\n      )}\n\n      <FlexBox gap={2} padding={'8px 0'} style={contentContainerStyle}>\n        {renderImageSets}\n      </FlexBox>\n\n      {FooterComponent && <FooterComponent onAddNewImageSetPress={handleAddNewSet} />}\n    </>\n  );\n};\nconst AddImageSetButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: ${p => p.theme.accentColor.base};\n  font-family: inherit;\n  font-size: 12px;\n  font-weight: 600;\n  padding: 2px 6px;\n\n  background-color: transparent;\n  border: 0;\n\n  cursor: pointer;\n`;\n\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst SlotOrderChanger = ({\n  onMoveUpPress,\n  onMoveDownPress,\n  currentOrder,\n  canMoveDown,\n  canMoveUp,\n}: {\n  onMoveUpPress?: () => void;\n  onMoveDownPress?: () => void;\n  currentOrder?: number;\n  canMoveDown?: boolean;\n  canMoveUp?: boolean;\n  inverse?: boolean;\n}) => {\n  return (\n    <FlexBox\n      style={{ minWidth: 'fit-content' }}\n      fillHeight\n      gap={6}\n      justifyContent={'space-between'}\n      overflow={'hidden'}\n    >\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowUp'} disabled={!canMoveUp} onClick={onMoveUpPress} />\n      <Text $align={'center'} $weight={600}>\n        {currentOrder || 0}\n      </Text>\n      <ButtonIcon variant={'onlyIcon'} icon={'SmallArrowDown'} disabled={!canMoveDown} onClick={onMoveDownPress} />\n    </FlexBox>\n  );\n};\n\nexport default FormOfferImagesComponent;\n","import ButtonIcon from './ButtonIcon/ButtonIcon';\nimport { Text } from './Text';\nimport styled from 'styled-components';\nimport FlexBox from './FlexBox';\nimport * as React from 'react';\n\nexport interface ImageSmallPreviewProps {\n  src: string;\n  title?: string;\n  type?: string;\n  onDeletePress?: () => void;\n  onEditPress?: () => void;\n  onAddNewPress?: () => void;\n  disabled?: boolean;\n\n  maxWidth?: string;\n  maxHeight?: string;\n}\nconst ImagePreviewSmall = ({\n  title,\n  src,\n  onDeletePress,\n  onEditPress,\n  disabled,\n  maxWidth,\n  maxHeight,\n}: ImageSmallPreviewProps) => {\n  return (\n    <ImageSmallPreviewBox\n      className={`ImagePreview_${title}`}\n      fillWidth\n      overflow={'hidden'}\n      gap={4}\n      height={'115px'}\n      border={'1px solid lightgrey'}\n      borderRadius={'2px'}\n      style={{ position: 'relative' }}\n      disabled={disabled}\n    >\n      {src && <img src={src} alt={title} style={{ width: '100%' }} />}\n\n      <ImagePreviewBottom fillWidth>\n        <FlexBox padding={'4px'}>\n          <Text $size={12} $weight={500} color={'#fff'}>\n            {title}\n          </Text>\n        </FlexBox>\n\n        <ImagePreviewTop\n          className={'top'}\n          fxDirection={'row'}\n          gap={6}\n          style={{ fill: '#fff' }}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n          fillWidth\n        >\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'edit'}\n            iconSize={'28px'}\n            disabled={!onEditPress}\n            onClick={onEditPress}\n          />\n          <ButtonIcon\n            variant={'onlyIcon'}\n            icon={'delete'}\n            iconSize={'28px'}\n            disabled={!onDeletePress}\n            onClick={onDeletePress}\n          />\n        </ImagePreviewTop>\n      </ImagePreviewBottom>\n    </ImageSmallPreviewBox>\n  );\n};\n\nconst ImageSmallPreviewBox = styled(FlexBox)<{ disabled?: boolean; maxWidth?: string; maxHeight?: string }>`\n  min-width: 90px;\n  width: 90px;\n\n  pointer-events: ${p => (p.disabled ? 'none' : 'all')};\n\n  &:hover {\n    & .top {\n      min-height: 36px;\n    }\n  }\n`;\n\nconst ImagePreviewTop = styled(FlexBox)`\n  //position: absolute;\n  //top: 0;\n  //left: 0;\n  //z-index: 5;\n\n  height: 0;\n  min-height: 0;\n  padding: 0 6px;\n  overflow: hidden;\n\n  //background-color: rgba(26, 26, 26, 0.2);\n  //backdrop-filter: blur(3px);\n\n  transition: min-height ${p => p.theme.globals.timingFnMain};\n`;\nconst ImagePreviewBottom = styled(FlexBox)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 5;\n\n  background-color: rgba(26, 26, 26, 0.2);\n  backdrop-filter: blur(3px);\n`;\n\nexport default ImagePreviewSmall;\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    width: '100px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => toPrice(d.price?.in) },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', path: 'brand.label' },\n    bottom: { name: 'Виробник', path: 'manufacturer.name' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.email },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.email },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const productsSearchParams: SelectItem[] = [\n  // {\n  //   label: t('type'),\n  //   dataPath: 'type',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('price'),\n  //   dataPath: 'price',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Оновлено',\n  //   dataPath: 'createdAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Створено',\n  //   dataPath: 'updatedAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countIn'),\n  //   dataPath: 'countIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountIn'),\n  //   dataPath: 'subCountIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countOut'),\n  //   dataPath: 'countOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountOut'),\n  //   dataPath: 'subCountOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('category'),\n  //   dataPath: 'category.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCategory'),\n  //   dataPath: 'subCategory.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  //\n  // {\n  //   label: 'Контрагент',\n  //   dataPath: 'contractor.name',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Документ',\n  //   dataPath: 'document',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('project'),\n  //   dataPath: 'project.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  // {\n  //   label: 'Статус',\n  //   dataPath: 'status',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    // top: { name: t('Product label'), getData: rd => rd.offer?.label },\n    top: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'text',\n    width: '210px',\n  },\n  {\n    top: { name: t('Product sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Product bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  createdDateColumn,\n];\n","import { IBase } from '../../redux/global.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n}\n"],"names":["FormContentGrid","styled","_templateObject","_taggedTemplateLiteral","AddImageBox","_templateObject2","p","theme","sideBarBorderColor","globals","timingFnMui","disabled","accentColor","base","light","Image","_templateObject3","_ref","_current$label","title","_ref$fillHeight","fillHeight","onSubmit","onClose","defaultState","props","type","_objectWithoutProperties","_excluded","_useState","useState","formAddImageSetTabs","_useState2","_slicedToArray","current","setCurrent","_useState3","_useState4","formData","setFormData","inputRef","useRef","_jsx","ModalForm","_objectSpread","width","children","_jsxs","FlexBox","fillWidth","alignItems","overflow","value","src","SvgIcon","icon","size","name","className","fxDirection","gap","InputLabel","label","replace","toUpperCase","required","InputText","ref","onChange","e","_e$target","target","prev","_defineProperty","placeholder","autoFocus","ButtonIcon","variant","iconSize","onClick","padding","ButtonsGroup","options","currentOption","onSelect","info","option","AddImageSetButton","ImagesSetBox","SlotOrderChanger","_ref4","onMoveUpPress","onMoveDownPress","currentOrder","canMoveDown","canMoveUp","style","minWidth","justifyContent","Text","$align","$weight","onChangeState","renderHeader","initialData","_ref$canEditOrder","canEditOrder","FooterComponent","contentContainerStyle","hideLabel","modalS","useModalService","useEffect","handleChangeOrder","useCallback","currentSetOrder","increment","newOrder","map","set","index","length","order","handleAddImageToSet","_ref2","setIndex","uri","updatedData","handleRemoveImageFromSet","_ref3","setId","ImageSetSrcType","window","confirm","filter","img_preview","handleAddNewSet","open","ModalChildren","AddImageSetModal","modalChildrenProps","data","concat","_toConsumableArray","handleAddImageSet","renderImageSets","useMemo","_dataForRender","dataForRender","sort","a","b","_a$order","_b$order","slot","slotIndex","_slot$order","_slot$order2","renderPreviews","el","imgIndex","_el$label","ImagePreviewSmall","onEditPress","_id","onDeletePress","check","_Fragment","height","$size","t","onAddNewImageSetPress","ImageSmallPreviewBox","ImagePreviewTop","timingFnMain","ImagePreviewBottom","maxWidth","maxHeight","border","borderRadius","position","alt","color","fill","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","enumToFilterOptions","offersTableColumns","top","getData","rd","getImgPreview","pr","_pr$images$","images","undefined","action","sku","bottom","barCode","path","d","approved","align","_d$price","toPrice","price","out","_d$price2","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$editor","editor","email","_rd$author","author","createdDateColumn","ordersTableColumns","OrderStatusEnum","status","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slots","slotsCount","_rd$reference","reference","internal","_rd$reference2","external","_rd$group","_rd$group$reference","group","_rd$group2","strategy","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","customer","first","second","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","ordersSearchParams","dataPath","search","orderSlotsTableColumns","_rd$variation","_rd$offer","offer","_rd$variation2","_rd$offer2","_rd$variation3","quantity","getBasePriceColumns"],"sourceRoot":""}