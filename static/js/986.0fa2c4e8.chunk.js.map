{"version":3,"file":"static/js/986.0fa2c4e8.chunk.js","mappings":"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","sources":["hooks/useProductsFilterSelectors.hook.ts","hooks/useProductsActionsCreator.hook.ts","components/AppPages/offersManagement/PageProducts.tsx","components/AppPages/pagesStyles.tsx","components/Forms/FormProduct/FormProductStaticProperties.tsx","components/Forms/FormProduct/components/DimensionsInputs.tsx","components/Forms/FormProduct/components/MeasuremenInputs.tsx","components/Forms/FormProduct/FormCreateProduct.tsx","data/products.data.ts","data/transactions.data.ts"],"sourcesContent":["import { FilterSelectorType } from 'components/Filter/AppFilter';\nimport { IProduct } from '../types/products.types';\n\nconst useStorageFilterSelectors = (): FilterSelectorType<keyof IProduct>[] => {\n  return [\n    // {\n    //   label: 'Рахунок OUT',\n    //   data: dirCounts.directory,\n    //   selectorName: 'countOut',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Суб-рахунок OUT',\n    //   data: dirCounts.directory,\n    //   selectorName: 'subCountOut',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Рахунок IN',\n    //   data: dirCounts.directory,\n    //   selectorName: 'countIn',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Суб-рахунок IN',\n    //   data: dirCounts.directory,\n    //   selectorName: 'subCountIn',\n    //   dirType: ApiDirType.COUNTS,\n    // },\n    // {\n    //   label: 'Категорії',\n    //   data: dirCategories.directory,\n    //   selectorName: 'category',\n    //   dirType: ApiDirType.CATEGORIES_TR,\n    // },\n    // {\n    //   label: 'Під-категорії',\n    //   data: dirCategories.directory,\n    //   selectorName: 'subCategory',\n    //   dirType: ApiDirType.CATEGORIES_TR,\n    // },\n  ];\n};\nexport default useStorageFilterSelectors;\n","import { useModalProvider } from '../components/ModalProvider/ModalProvider';\nimport { useCallback } from 'react';\nimport { TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { IProduct, OfferTypeEnum } from '../types/products.types';\nimport FormCreateProduct from '../components/Forms/FormProduct/FormCreateProduct';\nimport { productsFilterOptions } from '../data/modalFilterOptions.data';\nimport { useNavigate } from 'react-router-dom';\nimport { ServiceName, useAppServiceProvider } from './useAppServices.hook';\nimport { ToastService } from '../services';\nimport { toOfferFormData } from '../utils/data-transform';\nimport { createApiCall, ProductsApi } from '../api';\nimport { t } from '../lang';\n\nexport type ProductsActionsCreator = TableActionCreator<IProduct>;\n\nconst useProductsActionsCreator = (): ProductsActionsCreator => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const navigate = useNavigate();\n  const modals = useModalProvider();\n\n  return useCallback(\n    ctx => [\n      {\n        name: 'refreshData',\n        title: t('Refresh data'),\n        icon: 'refresh',\n        type: 'onlyIcon',\n        onClick: () => {\n          service.getAll({ data: { refresh: true }, onLoading: ctx.onRefresh });\n        },\n      },\n      { separator: true },\n\n      {\n        name: 'reviewProduct',\n        title: 'Перегляд продукту',\n        icon: 'openInNew',\n        disabled: !ctx.selectedRow?._id,\n        type: 'onlyIcon',\n        onClick: () => {\n          ctx.selectedRow?._id && navigate(ctx.selectedRow?._id);\n        },\n      },\n\n      {\n        name: 'editProduct',\n        title: 'Змінити',\n        icon: 'edit',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: !ctx?.selectedRow?._id,\n        onClick: async () => {\n          const res = await createApiCall({ data: ctx?.selectedRow?._id }, ProductsApi.getFullInfoById, ProductsApi);\n          if (!res?.data.data) {\n            return;\n          }\n          console.log(res?.data.data);\n          const formData = toOfferFormData(res?.data.data);\n\n          const modal = modals.handleOpenModal({\n            ModalChildren: FormCreateProduct,\n            modalChildrenProps: {\n              title: 'Змінити',\n              _id: ctx?.selectedRow?._id,\n              filterOptions: productsFilterOptions,\n              defaultState: formData,\n              onSubmit: (data, o) => {\n                service.updateById({\n                  data,\n                  onSuccess(d) {\n                    o?.closeAfterSave && modal?.onClose();\n                    ToastService.success(`Product updated`);\n                  },\n                  onError: e => {\n                    console.error('Product apdate action', e);\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'copyProduct',\n        title: 'Копіювати',\n        icon: 'copy',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: !ctx?.selectedRow?._id,\n        onClick: async () => {\n          const res = await createApiCall({ data: ctx?.selectedRow?._id }, ProductsApi.getFullInfoById, ProductsApi);\n          if (!res?.data.data) {\n            return;\n          }\n          const formData = toOfferFormData(res?.data.data);\n\n          const modal = modals.handleOpenModal({\n            ModalChildren: FormCreateProduct,\n            modalChildrenProps: {\n              title: 'Змінити',\n              filterOptions: productsFilterOptions,\n              defaultState: formData,\n\n              onSubmit: (data, o) => {\n                service.create({\n                  data,\n                  onSuccess(d) {\n                    o?.closeAfterSave && modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'archiveProduct',\n        title: 'Архів',\n        icon: 'archive',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: true,\n      },\n      { separator: true },\n      {\n        name: 'createProduct',\n        title: 'Новий',\n        icon: 'plus',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        onClick: () => {\n          const modal = modals.handleOpenModal({\n            ModalChildren: FormCreateProduct,\n            modalChildrenProps: {\n              title: 'Створити',\n              filterOptions: productsFilterOptions,\n              defaultState: { type: OfferTypeEnum.GOODS },\n              onSubmit: (data, o) => {\n                service.create({\n                  data,\n                  onSuccess(d) {\n                    (o?.closeAfterSave || o?.close) && modal?.onClose();\n                  },\n                });\n              },\n              fillHeight: true,\n            },\n          });\n        },\n      },\n    ],\n\n    [modals, navigate, service]\n  );\n};\n\nexport default useProductsActionsCreator;\n\n// const currentProduct=useProductsSelector().currentProduct\n\n// const onSubmitCreateWrapper = useCallback(\n//   (onCloseModal: () => void) => {\n//     return (data: ITransactionReqData, options: AfterFormSubmitOptions,) => {\n//       service.create({\n//         data,\n//         onSuccess(d) {\n//           toast.success(`Сторено транзакцію на суму: ${d.amount}`);\n//           options?.close && onCloseModal();\n//         },\n//       });\n//     };\n//   },\n//   [service]\n// );\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { ISortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport { IProduct } from '../../../types/products.types';\nimport useStorageServiceHook from '../../../hooks/useProductsService.hook';\nimport useProductsFilterSelectorsHook from '../../../hooks/useProductsFilterSelectors.hook';\nimport useProductsActionsCreator from '../../../hooks/useProductsActionsCreator.hook';\nimport { BaseAppPageProps } from '../index';\nimport { productsColumns } from '../../../data/products.data';\nimport { transactionsSearchParams } from '../../../data/transactions.data';\n\ninterface Props extends BaseAppPageProps {}\n\nconst PageProducts: React.FC<any> = (props: Props) => {\n  const { getAll } = useStorageServiceHook();\n  const state = useProductsSelector();\n  const filterSelectors = useProductsFilterSelectorsHook();\n  const actionsCreator = useProductsActionsCreator();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IProduct> => ({\n      tableData: state.products,\n      tableTitles: productsColumns,\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: false,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, filterSelectors, getAll, sortParams, state.products]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    if (!sortParams && !filterParams) {\n      getAll({\n        data: { refresh: true },\n        onLoading: setIsLoading,\n      });\n      // if (state.products.length === 0) {\n      // }\n    }\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TableList {...tableConfig} isLoading={isLoading} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageProducts;\n\nexport const useProductsTableSettings = () => {\n  const service = useStorageServiceHook();\n  const state = useProductsSelector();\n  const { getAll } = service;\n  const filterSelectors = useProductsFilterSelectorsHook();\n  const actionsCreator = useProductsActionsCreator();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IProduct> => ({\n      tableData: state.products,\n      tableTitles: productsColumns,\n      tableSortParams: transactionsSearchParams.filter(el => el.sort),\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: false,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, filterSelectors, getAll, sortParams, state.products]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    if (!sortParams && !filterParams) {\n      if (state.products.length === 0) {\n        getAll({\n          data: { refresh: true },\n          onLoading: setIsLoading,\n        });\n      }\n    }\n  }, [filterParams, getAll, isLoading, sortParams, state.products.length, tableConfig]);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { IPropertyValue, IVariationTemplate } from '../../../types/properties.types';\nimport { IFormDataValueWithID } from '../../../redux/global.types';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { Text } from '../../atoms/Text';\n\nexport interface FormProductStaticPropertiesProps {\n  template?: IVariationTemplate;\n  formData?: IFormDataValueWithID[];\n  onSelect?: (id: string, option?: IPropertyValue) => void;\n  onChange?: (ids: string[]) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n}\nconst FormProductStaticProperties: React.FC<FormProductStaticPropertiesProps> = ({\n  children,\n  onSelect,\n  onChange,\n  template,\n  defaultData,\n}) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (defaultData) {\n      setSelectedIds(defaultData);\n    }\n  }, [defaultData]);\n\n  const handleSelect = useCallback(\n    (id: string, option?: IPropertyValue) => {\n      setSelectedIds(p => {\n        const newData = p.includes(id) ? p.filter(el => el !== id) : [...p, id];\n        onSelect && onSelect(id);\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const currentTemplateData = useMemo(() => {\n    return template?.childrenList?.filter(props => !props.isSelectable);\n  }, [template?.childrenList]);\n\n  const renderProperties = useMemo(() => {\n    return currentTemplateData?.map(item => {\n      return (\n        <PropertyBox key={`prop-${item?._id}`} gap={8} fillWidth padding={'8px 0'}>\n          <Text $weight={500} $size={12} style={{ marginInline: 8 }}>\n            {item?.label}\n          </Text>\n\n          <FlexBox fillWidth gap={8} fxDirection={'row'} flexWrap={'wrap'}>\n            {item?.childrenList?.map(value => (\n              <ButtonIcon\n                key={`prop-value-${value?._id}`}\n                variant={selectedIds.includes(value?._id) ? 'filledSmall' : 'outlinedSmall'}\n                onClick={() => {\n                  handleSelect(value?._id);\n                }}\n              >\n                {value?.label}\n              </ButtonIcon>\n            ))}\n          </FlexBox>\n        </PropertyBox>\n      );\n    });\n  }, [currentTemplateData, handleSelect, selectedIds]);\n\n  return (\n    <Container fillWidth>\n      <FlexBox padding={'8px 8px 0'}>\n        <Text $size={14} $weight={600}>\n          {'Доступні харктеристики'}\n        </Text>\n      </FlexBox>\n\n      {children && (\n        <FlexBox fillWidth padding={'6px 0'}>\n          {children}\n        </FlexBox>\n      )}\n\n      {renderProperties}\n    </Container>\n  );\n};\nconst Container = styled(FlexBox)`\n  margin: 8px 0 0;\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductStaticProperties;\n","import { t } from 'lang';\nimport * as React from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport styled from 'styled-components';\nimport { UseFormReturn } from 'react-hook-form/dist/types';\nimport { DimensionsKeyType, HasDimensions } from 'types/utils.types';\n\nexport interface DimensionsFormData extends HasDimensions {}\n\nexport const dimensionsInputsProps: {\n  label?: string;\n  placeholder?: string;\n  name: DimensionsKeyType;\n}[] = [\n  { name: 'height', label: t('Height'), placeholder: t('Sm') },\n  { name: 'width', label: t('Width'), placeholder: t('Sm') },\n  { name: 'length', label: t('Length'), placeholder: t('Sm') },\n  { name: 'weight', label: t('Weight'), placeholder: t('Kg') },\n];\n\nconst DimensionsInputs = ({ form }: { form: UseFormReturn<DimensionsFormData> }) => {\n  return (\n    <Box fillWidth>\n      {dimensionsInputsProps.map(input => {\n        return (\n          <InputLabel key={input.name} label={input.label}>\n            <InputText\n              placeholder={input.placeholder}\n              min={1}\n              type={'number'}\n              {...form.register(`dimensions.${input.name}`, {\n                valueAsNumber: true,\n                min: 1,\n              })}\n            />\n          </InputLabel>\n        );\n      })}\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 8px;\n\n  @media screen and (min-width: 480px) and (max-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport default DimensionsInputs;\n","import { Path } from 'react-hook-form';\nimport { MeasurementUnit } from 'types/products.types';\nimport { FilterOption } from '../../../ModalForm/ModalFilter';\nimport { enumToFilterOptions } from 'utils/fabrics';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport FlexBox from '../../../atoms/FlexBox';\nimport * as React from 'react';\nimport { UseAppFormReturn } from 'hooks/useAppForm.hook';\nimport { t } from 'lang';\nimport { HasMeasurement } from 'types/utils.types';\n\nexport interface MeasurementInputsFormData extends HasMeasurement {}\n\nconst productsMeasurementUnitOptions = enumToFilterOptions(MeasurementUnit);\n\nconst measurementInputs: {\n  label?: string;\n  placeholder?: string;\n  name: Path<MeasurementInputsFormData>;\n  type?: HTMLInputElement['type'];\n  options?: FilterOption[];\n}[] = [\n  { name: 'measurement.unit', label: t('unit'), placeholder: t('unit'), options: productsMeasurementUnitOptions },\n  { name: 'measurement.min', label: t('min'), placeholder: t('min'), type: 'number' },\n  { name: 'measurement.max', label: t('max'), placeholder: t('max'), type: 'number' },\n  // { name: 'measurement.step', label: t('step'), placeholder: t('step'), type: 'number' },\n];\n\nconst MeasurementInputs = ({ appForm }: { appForm: UseAppFormReturn<MeasurementInputsFormData> }) => {\n  return (\n    <FlexBox fillWidth style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr', columnGap: 8 }}>\n      {measurementInputs.map(input => {\n        return input.options ? (\n          <CustomSelect\n            key={input.name}\n            {...appForm.registerSelect(input?.name, {\n              options: input?.options,\n              label: input?.label,\n              placeholder: input?.label,\n              dropDownIsAbsolute: true,\n              onlyValue: true,\n            })}\n          />\n        ) : (\n          <InputLabel key={input.name} label={input.label} error={appForm?.formState?.errors[input.name as never]}>\n            <InputText\n              placeholder={input.placeholder}\n              min={input?.type === 'number' ? 1 : undefined}\n              type={input?.type}\n              {...appForm.register(input.name, {\n                valueAsNumber: input?.type === 'number',\n                min: input?.type === 'number' ? 1 : undefined,\n              })}\n            />\n          </InputLabel>\n        );\n      })}\n    </FlexBox>\n  );\n};\n\nexport default MeasurementInputs;\n","import * as React from 'react';\nimport { useMemo } from 'react';\nimport ModalForm, { ModalFormProps } from '../../ModalForm';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport TextareaPrimary from '../../atoms/Inputs/TextareaPrimary';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport { useAppSelector } from '../../../redux/store.store';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport { useAppForm } from '../../../hooks';\nimport { IProductFormData, IProductReqData, ProductFilterOpt, ProductStatusEnum } from '../../../types/products.types';\nimport { toReqData } from '../../../utils/data-transform';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../components/FormAfterSubmitOptions';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { IVariationTemplate } from '../../../types/properties.types';\nimport FormProductStaticProperties from './FormProductStaticProperties';\nimport FormProductImagesComponent from './FormProductImagesComponent';\nimport FormProductCategories from './FormProductCategories';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport DimensionsInputs from './components/DimensionsInputs';\nimport MeasurementInputs from './components/MeasuremenInputs';\n\nexport interface FormCreateProductProps extends Omit<ModalFormProps<any, any, IProductFormData>, 'onSubmit'> {\n  copy?: boolean;\n  id?: string;\n  edit?: boolean;\n  _id?: string;\n  onSubmit?: AppSubmitHandler<IProductReqData>;\n  filterOptions?: ProductFilterOpt[];\n  defaultState?: IProductFormData;\n  addInputs?: boolean;\n}\n\nconst productsStatusOption = enumToFilterOptions(ProductStatusEnum);\n\nconst FormCreateProduct: React.FC<FormCreateProductProps> = ({\n  edit,\n  _id,\n  onSubmit,\n  copy,\n  defaultState,\n  addInputs,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const {\n    directories: { directories },\n    products: { properties },\n  } = useAppSelector();\n  const form = useAppForm<IProductFormData>({\n    defaultValues: defaultState,\n  });\n  const {\n    formState: { errors },\n    formValues,\n    register,\n    setValue,\n    registerSelect,\n    handleSubmit,\n  } = form;\n\n  const categories = useMemo(() => {\n    return directories[ApiDirType.CATEGORIES_PROD].filter(el => el.type === formValues.type);\n  }, [directories, formValues.type]);\n\n  const currentTemplate = useMemo((): IVariationTemplate | undefined => {\n    return properties.find(t => t._id === formValues?.template?._id);\n  }, [formValues?.template?._id, properties]);\n\n  // TODO eventDate: formatDateForInputValue(defaultState?.eventDate)\n  function onValidSubmit(submitData: IProductFormData) {\n    const productForSubmit = toReqData(submitData, { ignorePaths: ['measurement'] });\n\n    onSubmit &&\n      onSubmit(\n        { _id, data: productForSubmit },\n        {\n          ...submitOptions.state,\n        }\n      );\n  }\n\n  return (\n    <ModalForm\n      {...props}\n      onSubmit={handleSubmit(onValidSubmit, data => console.log(data))}\n      onOptSelect={({ value }) => value && setValue('type', value)}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <FlexBox className={'inputs'} flex={'1'} fillWidth maxHeight={'100%'} padding={'0 8px 8px'} overflow={'auto'}>\n        <InputLabel label={t('label')} error={errors.label} required>\n          <InputText placeholder={t('label')} {...register('label')} required autoFocus />\n        </InputLabel>\n\n        <FlexBox fxDirection={'row'} gap={6} fillWidth>\n          <InputLabel label={t('sku')} error={errors.sku}>\n            <InputText placeholder={t('sku')} {...register('sku')} />\n          </InputLabel>\n\n          <InputLabel label={'Штрих-код'} error={errors.barCode}>\n            <InputText placeholder={'Штрих-код'} {...register('barCode')} />\n          </InputLabel>\n        </FlexBox>\n\n        <FormProductCategories\n          options={categories}\n          defaultData={formValues?.categories}\n          onChange={data => {\n            setValue('categories', data);\n          }}\n        />\n\n        <CustomSelect\n          {...registerSelect('brand', {\n            options: directories[ApiDirType.BRANDS],\n            label: t('brand'),\n            placeholder: t('selectBrand'),\n            multipleMode: true,\n          })}\n        />\n\n        <CustomSelect\n          {...registerSelect('approved', {\n            options: productsStatusOption,\n            label: t('status'),\n            placeholder: t('status'),\n          })}\n        />\n\n        <MeasurementInputs appForm={form} />\n\n        <DimensionsInputs form={form} />\n\n        <InputLabel label={t('description')} error={errors.description}>\n          <TextareaPrimary placeholder={t('description')} {...register('description')} />\n        </InputLabel>\n\n        <FormProductStaticProperties\n          template={currentTemplate}\n          defaultData={formValues?.properties}\n          onChange={ids => {\n            setValue('properties', ids);\n          }}\n        >\n          <CustomSelect\n            {...registerSelect('template', {\n              options: properties,\n              dropDownIsAbsolute: true,\n              label: t('variationsTemplate'),\n              placeholder: t('selectVariationsTemplate'),\n            })}\n          />\n        </FormProductStaticProperties>\n\n        <FormProductImagesComponent\n          initialData={formValues?.images}\n          onChangeState={data => {\n            setValue('images', data);\n          }}\n        />\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\n// const GridWrapper = styled.div<{ gridTemplateColumns?: string }>`\n//   display: grid;\n//   grid-template-columns: ${({ gridTemplateColumns }) => gridTemplateColumns || '1fr 120px'};\n//   gap: 12px;\n// `;\n\nexport default FormCreateProduct;\n\n// const optionalSelectItem = yup\n//   .object()\n//   .shape({\n//     _id: yup.string(),\n//     label: yup.string(),\n//   })\n//   .nullable()\n//   .optional();\n// const requiredSelectItem = yup\n//   .object()\n//   .shape({\n//     _id: yup.string(),\n//     label: yup.string(),\n//   })\n//   .required();\n//\n// const getValidation = (type: TransactionType) =>\n//   yup.object().shape({\n//     category: requiredSelectItem,\n//   });\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { IProduct, ProductStatusEnum } from '../types/products.types';\nimport { getStatusesByEnum } from './statuses.data';\n\nexport const productStatusesData = getStatusesByEnum(ProductStatusEnum);\n\nexport const productsColumns: CellTittleProps<IProduct>[] = [\n  {\n    top: { name: t('label'), align: 'start', getData: rd => rd?.label },\n    // bottom: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), align: 'start', getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), align: 'start', path: 'type' },\n    bottom: { name: t('status'), align: 'start', getData: d => d.approved as never },\n    width: '100px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      getData: rd => rd.category?.label,\n    },\n    bottom: {\n      name: t('parentCategory'),\n      align: 'start',\n      getData: rd => rd.category?.parent?.label,\n    },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Бренд', align: 'start', path: 'brand.label' },\n    bottom: { name: 'Виробник', align: 'start', path: 'manufacturer.name' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновив', align: 'start', getData: rd => rd?.editor?.email },\n    bottom: { name: 'Автор', align: 'start', getData: rd => rd?.author?.email },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const productsSearchParams: SelectItem[] = [\n  // {\n  //   label: t('type'),\n  //   dataPath: 'type',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('price'),\n  //   dataPath: 'price',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Оновлено',\n  //   dataPath: 'createdAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Створено',\n  //   dataPath: 'updatedAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countIn'),\n  //   dataPath: 'countIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountIn'),\n  //   dataPath: 'subCountIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countOut'),\n  //   dataPath: 'countOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountOut'),\n  //   dataPath: 'subCountOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('category'),\n  //   dataPath: 'category.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCategory'),\n  //   dataPath: 'subCategory.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  //\n  // {\n  //   label: 'Контрагент',\n  //   dataPath: 'contractor.name',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Документ',\n  //   dataPath: 'document',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('project'),\n  //   dataPath: 'project.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  // {\n  //   label: 'Статус',\n  //   dataPath: 'status',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n];\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { ITransaction } from '../redux/transactions/transactions.types';\nimport { t } from '../lang';\nimport { FilterOpt } from '../components/ModalForm/ModalFilter';\nimport { CategoryTypes } from '../types/directories.types';\n\nexport type TransactionsFilterOpt = FilterOpt<CategoryTypes>;\nexport type DataPath =\n  | 'countIn.label'\n  | 'subCountIn.label'\n  | 'countOut.label'\n  | 'subCountOut.label'\n  | 'category.label'\n  | 'subCategory.label'\n  | 'owner.name'\n  | 'project.name'\n  | 'project.label'\n  | 'contractor.name'\n  | 'contractor.type'\n  | 'meta.author.name'\n  | 'author.name'\n  | 'author.email'\n  | 'meta.editor.name'\n  | 'editor.name'\n  | 'editor.email'\n  | 'meta.auditor.name'\n  | 'auditor.name'\n  | 'auditor.email'\n  | 'eventDate'\n  | 'type'\n  | 'status'\n  | 'amount'\n  | 'currency'\n  | 'activity.label'\n  | 'comment'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'mark.label'\n  | 'invoice.label'\n  | 'invoice.code'\n  | 'invoice.number'\n  | 'payment.label'\n  | 'payment.code'\n  | 'payment.number'\n  | 'order.code';\nexport const transactionsColumnsNew: CellTittleProps<ITransaction, DataPath>[] = [\n  {\n    top: { name: t('date'), align: 'center', path: 'eventDate' },\n    bottom: { name: t('time'), align: 'center' },\n    width: '90px',\n    action: 'dateSimple',\n  },\n  {\n    top: { name: t('type'), align: 'start', path: 'type' },\n    bottom: { name: t('status'), align: 'start', path: 'status' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('amount'), align: 'end', path: 'amount' },\n    bottom: { name: 'Валюта', align: 'end', path: 'currency' },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('countIn'), align: 'start', path: 'countIn.label' },\n    bottom: {\n      name: t('subCountIn'),\n      align: 'start',\n      path: 'subCountIn.label',\n    },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('countOut'),\n      align: 'start',\n      path: 'countOut.label',\n    },\n    bottom: {\n      name: t('subCountOut'),\n      align: 'start',\n      path: 'subCountOut.label',\n    },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      path: 'category.label',\n    },\n    bottom: {\n      name: t('subCategory'),\n      align: 'start',\n      path: 'subCategory.label',\n    },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Контрагент', align: 'start', path: 'contractor.name' },\n    bottom: { name: 'Тип', align: 'start', path: 'contractor.type' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Діяльність', align: 'start', path: 'activity.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Проект', align: 'start', path: 'project.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Коментар', align: 'start', path: 'comment' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\nexport const transactionsColumns: CellTittleProps<ITransaction, DataPath>[] = [\n  {\n    top: { name: 'Дата', align: 'center', path: 'eventDate' },\n    bottom: { name: 'Час', align: 'center' },\n    width: '90px',\n    action: 'dateSimple',\n  },\n  {\n    top: { name: 'Тип', align: 'start', path: 'type' },\n    bottom: { name: 'Статус', align: 'start', path: 'status' },\n    width: '100px',\n    action: 'status',\n  },\n  {\n    top: { name: t('amount'), align: 'end', path: 'amount' },\n    bottom: { name: 'Валюта', align: 'end', path: 'currency' },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: {\n      name: t('countOut'),\n      align: 'start',\n      path: 'countOut.label',\n    },\n    bottom: {\n      name: t('subCountOut'),\n      align: 'start',\n      path: 'subCountOut.label',\n    },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('countIn'), align: 'start', path: 'countIn.label' },\n    bottom: {\n      name: t('subCountIn'),\n      align: 'start',\n      path: 'subCountIn.label',\n    },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      path: 'category.label',\n    },\n    bottom: {\n      name: t('subCategory'),\n      align: 'start',\n      path: 'subCategory.label',\n    },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інвойс', align: 'start', path: 'invoice.label' },\n    bottom: { name: 'Номер', align: 'start', path: 'invoice.number' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оплата', align: 'start', path: 'payment.label' },\n    bottom: { name: 'Номер', align: 'start', path: 'payment.number' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: 'Контрагент', align: 'start', path: 'contractor.name' },\n    bottom: { name: 'Тип', align: 'start', path: 'contractor.type' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Діяльність', align: 'start', path: 'activity.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Проект', align: 'start', path: 'project.label' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Коментар', align: 'start', path: 'comment' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створив', align: 'start', path: 'author.email' },\n    bottom: { name: 'Оновив', align: 'start', path: 'editor.email' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const transactionsSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'amount',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('countIn'),\n    dataPath: 'countIn.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('subCountIn'),\n    dataPath: 'subCountIn.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('countOut'),\n    dataPath: 'countOut.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('subCountOut'),\n    dataPath: 'subCountOut.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('category'),\n    dataPath: 'category.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('subCategory'),\n    dataPath: 'subCategory.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n\n  {\n    label: 'Контрагент',\n    dataPath: 'contractor.name',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n\n  {\n    label: t('project'),\n    dataPath: 'project.label',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n];\n\nexport const filterOptions: TransactionsFilterOpt[] = [\n  { label: t('INCOME'), value: 'INCOME' },\n  { label: t('TRANSFER'), value: 'TRANSFER' },\n  { label: t('EXPENSE'), value: 'EXPENSE' },\n];\n"],"names":["service","useAppServiceProvider","ServiceName","navigate","useNavigate","modals","useModalProvider","useCallback","ctx","_ctx$selectedRow","_ctx$selectedRow4","_ctx$selectedRow7","name","title","t","icon","type","onClick","getAll","data","refresh","onLoading","onRefresh","separator","disabled","selectedRow","_id","_ctx$selectedRow2","_ctx$selectedRow3","iconSize","_onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ctx$selectedRow5","_ctx$selectedRow6","res","formData","modal","wrap","_context","prev","next","createApiCall","ProductsApi","sent","abrupt","console","log","toOfferFormData","handleOpenModal","ModalChildren","FormCreateProduct","modalChildrenProps","filterOptions","productsFilterOptions","defaultState","onSubmit","o","updateById","onSuccess","d","closeAfterSave","onClose","ToastService","onError","e","error","fillHeight","stop","apply","arguments","_onClick2","_callee2","_ctx$selectedRow8","_context2","create","OfferTypeEnum","close","Page","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","props","useStorageServiceHook","state","useProductsSelector","filterSelectors","useProductsFilterSelectorsHook","actionsCreator","useProductsActionsCreator","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","sortParams","setSortParams","_useState5","_useState6","filterParams","setFilterParams","tableConfig","useMemo","tableData","products","tableTitles","productsColumns","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","query","then","handleTableSort","param","sortOrder","dataPath","useEffect","_jsx","AppGridPage","path","children","TableList","_objectSpread","useProductsTableSettings","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","tableSortParams","transactionsSearchParams","el","sort","length","css","takeFullPlace","_templateObject2","_templateObject3","Container","FlexBox","p","theme","sideBarBorderColor","PropertyBox","_ref","onSelect","onChange","template","defaultData","selectedIds","setSelectedIds","handleSelect","id","option","newData","includes","filter","concat","_toConsumableArray","currentTemplateData","_template$childrenLis","childrenList","isSelectable","renderProperties","map","item","_item$childrenList","_jsxs","gap","fillWidth","padding","Text","$weight","$size","style","marginInline","label","fxDirection","flexWrap","value","ButtonIcon","variant","dimensionsInputsProps","placeholder","Box","form","input","InputLabel","InputText","min","register","valueAsNumber","productsMeasurementUnitOptions","enumToFilterOptions","MeasurementUnit","measurementInputs","options","appForm","display","gridTemplateColumns","columnGap","_appForm$formState","CustomSelect","registerSelect","dropDownIsAbsolute","onlyValue","formState","errors","undefined","productsStatusOption","ProductStatusEnum","edit","_formValues$template2","copy","addInputs","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppSelector","useAppSelector","directories","properties","useAppForm","defaultValues","formValues","setValue","handleSubmit","categories","ApiDirType","currentTemplate","find","_formValues$template","ModalForm","submitData","productForSubmit","toReqData","ignorePaths","onOptSelect","_ref2","extraFooter","FormAfterSubmitOptions","className","flex","maxHeight","overflow","required","autoFocus","sku","barCode","FormProductCategories","multipleMode","MeasurementInputs","DimensionsInputs","description","TextareaPrimary","FormProductStaticProperties","ids","FormProductImagesComponent","initialData","images","onChangeState","productStatusesData","getStatusesByEnum","top","align","getData","rd","getImgPreview","pr","_pr$images$","img_preview","width","action","bottom","approved","_rd$category","category","_rd$category2","_rd$category2$parent","parent","_rd$editor","editor","email","_rd$author","author","transactionsColumns","search"],"sourceRoot":""}