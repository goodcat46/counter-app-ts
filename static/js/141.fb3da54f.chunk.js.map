{"version":3,"file":"static/js/141.fb3da54f.chunk.js","mappings":"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","sources":["components/AppPages/pagesStyles.ts","components/TableList/TebleCells/CellTitle.tsx","components/TableList/TebleCells/CellComponents/CheckBox.tsx","components/TableList/TebleCells/CellComponents/CheckBoxHead.tsx","components/TableList/TebleCells/CellCheckBoxHead.tsx","components/TableList/TableRows/TableHeadRow.tsx","components/TableList/TableHead.tsx","components/TableList/TableRows/RowContext.jsx","utils/getNestedData.ts","components/TableList/TebleCells/CellTextDbl.tsx","components/TableList/TebleCells/Cell.tsx","components/TableList/TebleCells/CellComponents/DateComp.tsx","components/TableList/TebleCells/CellDateSimple.tsx","components/TableList/TebleCells/CellComponents/StatusComp.tsx","components/TableList/TebleCells/CellStatus.tsx","components/TableList/TebleCells/index.tsx","components/TableList/TableRows/TableRow.tsx","components/TableList/TableBody.tsx","components/TableList/QuickActions/QuickActions.tsx","components/TableList/TableFilter/SearchParamInput/SearchParamInput.tsx","components/DeviceTypeInformer/DeviceTypeController.tsx","components/Filter/Selector.tsx","components/ModalForm/ModalHeader.tsx","components/ModalForm/ModalFilter.tsx","components/ModalForm/ModalFooter.tsx","components/ModalForm/ModalForm.tsx","components/Filter/SelectorContent/SelectorContent.tsx","components/Filter/SelectorContent/SelectsListItem.tsx","components/Filter/SelectorContent/SelectsList.tsx","components/Filter/Filter.tsx","components/TableList/TableFilter/TableFilter.tsx","components/TableList/TableActions/TableActions.tsx","components/TableList/TableOverHead.tsx","components/TableList/TableFooter.tsx","components/TableList/TableList.tsx"],"sourcesContent":["import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/11;\n  grid-row: 1/11;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CellActionsName } from '../TebleCells';\nimport { useTable } from '../TableList';\n\nexport type CellTitleContent = {\n  name: string;\n  action?: string;\n  dataKey?: string;\n  nestedDataKey?: string;\n  def?: string;\n  sort?: boolean;\n  align?: 'center' | 'start' | 'end';\n};\nexport type CellTittleProps = {\n  top: CellTitleContent;\n  bottom?: CellTitleContent;\n  width: string;\n  idx?: number;\n  titleInfo?: CellTittleProps;\n  action: CellActionsName;\n  onClick?: (ev: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst CellTitle: React.FC<CellTittleProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  width,\n  idx,\n  onClick,\n  top,\n  bottom,\n  ...props\n}) => {\n  const { handleTableSort, sortParams } = useTable();\n  return (\n    <StCellHead width={width} onClick={onClick} {...props}>\n      <Wrapper>\n        <Top align={top.align}>\n          <span className=\"inner\"> {top.name || top.dataKey || 'Title'}</span>\n          {top?.sort && (\n            <StButtonIcon\n              variant=\"def\"\n              iconId={iconId.SmallArrowDown}\n              iconSize=\"100%\"\n              size=\"18px\"\n              className={top.dataKey === sortParams?.dataKey ? 'isActive' : ''}\n              descending={sortParams?.descending}\n              onClick={() => {\n                handleTableSort && handleTableSort({ descending: !sortParams?.descending, dataKey: top.dataKey || '' });\n              }}\n            />\n          )}\n        </Top>\n\n        {bottom && (\n          <Bottom align={bottom?.align}>\n            <>\n              <span className=\"inner\"> {bottom?.name || bottom?.dataKey || 'SubTitle'}</span>\n\n              {bottom?.sort && (\n                <StButtonIcon\n                  variant=\"def\"\n                  iconId={iconId.SmallArrowDown}\n                  iconSize=\"100%\"\n                  size=\"18px\"\n                  className={bottom?.dataKey === sortParams?.dataKey ? 'isActive' : ''}\n                  descending={sortParams?.descending}\n                  onClick={() => {\n                    handleTableSort &&\n                      handleTableSort({ descending: !sortParams?.descending, dataKey: bottom?.dataKey || '' });\n                  }}\n                />\n              )}\n            </>\n          </Bottom>\n        )}\n      </Wrapper>\n\n      <WidthChanger type=\"button\"></WidthChanger>\n    </StCellHead>\n  );\n};\nconst StCellHead = styled.div<{ width: string }>`\n  display: flex;\n  align-items: center;\n\n  width: ${({ width }) => width};\n  height: 100%;\n  padding-left: 10px;\n\n  /* outline: 1px solid tomato; */\n`;\nconst Wrapper = styled.div`\n  flex-grow: 1;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr;\n  justify-content: center;\n\n  height: 100%;\n`;\nconst Content = styled.div`\n  flex-grow: 1;\n\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  width: 100%;\n\n  & .inner {\n    flex-grow: 1;\n\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n  }\n`;\n\nconst Top = styled(Content)<Omit<CellTitleContent, 'name'>>`\n  font-size: 12px;\n  font-weight: 700;\n  text-transform: uppercase;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\nconst Bottom = styled(Content)<Omit<CellTitleContent, 'name'>>`\n  font-size: 11px;\n  font-weight: 400;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\n\nconst StButtonIcon = styled(ButtonIcon)<{ descending?: boolean }>`\n  border-width: 0;\n  border-radius: 0;\n\n  fill: rgba(122, 122, 122, 1);\n\n  &:hover {\n    background-color: transparent;\n    fill: ${({ theme }) => theme.fillColor};\n  }\n  &:active {\n    fill: ${({ theme }) => theme.fillColor};\n    background-color: transparent;\n  }\n  &.isActive {\n    fill: ${({ theme }) => theme.accentColor.base};\n    & .icon {\n      transform: ${({ descending }) => `rotate(${descending ? '0' : '180'}deg)`};\n    }\n  }\n`;\n\nconst WidthChanger = styled.button`\n  position: relative;\n\n  height: 80%;\n  width: 4px;\n  border-style: none;\n  background-color: transparent;\n  padding: 0;\n\n  cursor: col-resize;\n  &::before {\n    position: absolute;\n    top: 0;\n    right: 0;\n    display: block;\n    content: '';\n    height: 100%;\n    width: 1px;\n    border-right: 1px solid #59595a;\n    /* border-right: 1px solid ${({ theme }) => theme.trBorderClr}; */\n  }\n`;\n\nexport default CellTitle;\n","import React from 'react';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport { iconId } from 'data';\n\nimport styled from 'styled-components';\nexport interface CustomCheckBoxProps {\n  size?: string;\n  icon?: string;\n}\nconst CheckBox: React.FC<CustomCheckBoxProps & React.InputHTMLAttributes<HTMLInputElement>> = ({\n  onChange,\n  id = '1',\n  checked = false,\n  size = '24px',\n  icon,\n}) => {\n  return (\n    <StLabel htmlFor={id}>\n      <input id={id} className=\"visually-hidden\" type=\"checkbox\" onChange={onChange} />\n\n      <SvgIcon size={size} iconId={icon || checked ? iconId.checkBoxOn : iconId.checkBoxOff} />\n    </StLabel>\n  );\n};\nconst StLabel = styled.label<{ checked?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n  fill: ${({ theme, checked }) => (checked ? theme.accentColor.base : theme.fillColor)};\n`;\n\nexport default CheckBox;\n","import { useTable } from 'components/TableList/TableList';\nimport { iconId } from 'data';\nimport { useState, useEffect } from 'react';\nimport CheckBox from './CheckBox';\n\nexport interface CheckBoxHeadProps {\n  onChange: React.ChangeEventHandler;\n}\n\nconst CheckBoxHead: React.FC<CheckBoxHeadProps> = ({ onChange }) => {\n  const { tableData } = useTable();\n  const [status, setStatus] = useState<'avery' | 'some' | 'none'>();\n  const [some, setSome] = useState(false);\n  const [everyOn, setEveryOn] = useState(false);\n  const [everyOff, setEveryOff] = useState(true);\n  // const [currentIconId, setCurrentIconId] = useState('');\n\n  // const statusMap = {\n  //   checkBoxOn: 'checkBoxOn',\n  //   checkBoxOff: 'checkBoxOff',\n  //   checkBoxMinus: 'checkBoxMinus',\n  // };\n\n  function handleChange(ev: React.ChangeEvent) {\n    onChange(ev);\n\n    setSome(false);\n\n    setEveryOn(!everyOn);\n\n    setEveryOff(!everyOff);\n  }\n\n  useEffect(() => {\n    setStatus(status);\n\n    // let some, everyOn;\n\n    // some = tableData?.some(item => item?.selected);\n\n    // if (some) {\n    //   setCurrentIconId(iconId.checkBoxMinus);\n    //   return;\n    // }\n    // everyOn = tableData?.every(item => item?.selected);\n\n    // if (everyOn) {\n    //   setCurrentIconId(iconId.checkBoxOn);\n    //   return;\n    // }\n\n    // setCurrentIconId(some ? iconId.checkBoxMinus : everyOn ? iconId.checkBoxOn : iconId.checkBoxOff);\n  }, [everyOff, everyOn, some, status, tableData]);\n\n  return (\n    <CheckBox\n      onChange={handleChange}\n      icon={some ? iconId.checkBoxMinus : everyOn ? iconId.checkBoxOn : everyOff ? iconId.checkBoxOff : ''}\n    />\n  );\n};\n\nexport default CheckBoxHead;\n\n// iconId={(everyOn && iconId.checkBoxOn) || (some && iconId.checkBoxMinus) || (everyOff && iconId.checkBoxOff)}\n","import React from 'react';\nimport styled from 'styled-components';\n// import { useRow } from '../TableRows/RowContext';\nimport CheckBoxHead from './CellComponents/CheckBoxHead';\n\n// import s from './TableCells.module.scss';\nexport type CellCheckBoxHeadProps = {\n  title?: string;\n  idx?: number;\n  className?: string;\n};\nconst CellCheckBoxHead: React.FC<CellCheckBoxHeadProps> = ({ title, className, ...props }) => {\n  return (\n    <StCell {...props} className={className}>\n      <CheckBoxHead {...props} onChange={() => {}} />\n    </StCell>\n  );\n};\n\nconst StCell = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 0 8px;\n\n  height: 100%;\n\n  color: inherit;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  height: 100%;\n\n  background-color: inherit;\n\n  & .top {\n    font-size: 12px;\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n  & .bottom {\n    font-size: 11px;\n    font-weight: 400;\n  }\n  border-right: 1px solid #59595a;\n`;\nexport default CellCheckBoxHead;\n","import { useTable } from '../TableList';\nimport CellTitle from '../TebleCells/CellTitle';\nimport CellCheckBoxHead from '../TebleCells/CellCheckBoxHead';\n\nimport styled from 'styled-components';\n\nexport interface TableHeadRowProps {}\n\nconst TableHeadRow: React.FC<TableHeadRowProps> = () => {\n  const { tableTitles = [], checkBoxes, rowGrid } = useTable();\n\n  return (\n    <ThRow>\n      <ThRowStickyEl>{checkBoxes && <CellCheckBoxHead />}</ThRowStickyEl>\n\n      <ThRowData style={{ ...rowGrid }}>\n        {tableTitles.map((item, idx) => (\n          <CellTitle key={idx} {...item} idx={idx} />\n        ))}\n      </ThRowData>\n    </ThRow>\n  );\n};\n\nexport const ThRow = styled.div`\n  display: flex;\n  align-items: center;\n\n  min-width: 100%;\n  display: grid;\n  grid-template-columns: min-content max-content;\n  grid-template-rows: 100%;\n\n  position: relative;\n\n  width: fit-content;\n  height: 100%;\n\n  cursor: default;\n\n  background-color: inherit;\n  font-size: 12px;\n\n  height: 100%;\n`;\nexport const ThRowStickyEl = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n\n  height: 100%;\n  width: max-content;\n\n  background-color: inherit;\n  // background-color: #1c1c1e;\n\n  @media print {\n    width: 0;\n    overflow: hidden;\n  }\n`;\nexport const ThRowData = styled.div`\n  height: 100%;\n`;\n\nexport default TableHeadRow;\n","import styled from 'styled-components';\nimport TableHeadRow from './TableRows/TableHeadRow';\n\nexport interface TableHeadProps {}\n\nconst TableHead: React.FC<TableHeadProps> = () => {\n  return (\n    <THead>\n      <TableHeadRow />\n    </THead>\n  );\n};\nconst THead = styled.div`\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nexport default TableHead;\n","import { useContext, createContext } from 'react';\n\nexport const RowCNTXT = createContext();\nexport const useRow = () => useContext(RowCNTXT);\n\nconst RowContext = ({ children, value }) => {\n  return (\n    <RowCNTXT.Provider value={{ ...value }}>\n      <>{children}</>\n    </RowCNTXT.Provider>\n  );\n};\n\nexport default RowContext;\n","interface Params<D extends Record<string, any>, N extends Record<string, any>> {\n  dataKey?: keyof D;\n  nestedDataKey?: keyof N;\n  defaultValue?: string;\n  def?: string;\n  data: D;\n}\n\nconst getNestedData = <D extends Record<string, any>, N extends Record<string, any>>(args: Params<D, N>) => {\n  if (!args?.data || !args?.dataKey) return null as null;\n  const { data, dataKey, nestedDataKey, def } = args;\n\n  if (data && dataKey && data[dataKey]) {\n    if (typeof data[dataKey] === 'string' || typeof data[dataKey] === 'number') {\n      return data[dataKey];\n    }\n\n    if (nestedDataKey && data[dataKey][nestedDataKey]) {\n      if (typeof data[dataKey][nestedDataKey] === 'object') {\n        return def;\n      }\n\n      return data[dataKey][nestedDataKey];\n    }\n    if (nestedDataKey && !data[dataKey][nestedDataKey]) {\n      return def;\n    }\n  }\n  return null;\n\n  // return (\n  //   nestedDataKey && data[dataKey] && data[dataKey][nestedDataKey]\n  //     ? data[dataKey][nestedDataKey]\n  //     : data[dataKey]\n  //     ? data[dataKey]\n  //     : defaultValue || null\n  // ) as string | D[keyof D] | D[keyof D][keyof N] | null;\n};\n\nexport default getNestedData;\n","import React from 'react';\nimport styled from 'styled-components';\nimport getNestedData from 'utils/getNestedData';\nimport { useRow } from '../TableRows/RowContext';\nimport { CellTitleContent, CellTittleProps } from './CellTitle';\n\nexport interface CellTextDblProps {\n  titleInfo: CellTittleProps;\n  idx?: number;\n}\n\nconst CellTextDbl: React.FC<CellTextDblProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  ...props\n}) => {\n  const { rowData } = useRow();\n  const { top, bottom, width = '100px' } = titleInfo;\n\n  const contentTop = getNestedData({\n    data: rowData,\n    ...top,\n  });\n  const contentBottom = getNestedData({\n    data: rowData,\n    ...bottom,\n  });\n\n  return (\n    <CellBase style={{ width }} {...props}>\n      <Top align={top.align}>\n        <div title={contentTop} className=\"inner\">\n          {contentTop}\n        </div>\n      </Top>\n\n      <Bottom align={bottom?.align}>\n        {contentBottom ? (\n          <div title={contentBottom} className=\"inner\">\n            {contentBottom}\n          </div>\n        ) : null}\n      </Bottom>\n    </CellBase>\n  );\n};\n\nconst CellBase = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr;\n\n  height: 100%;\n\n  max-height: 100%;\n  padding: 4px 10px;\n\n  overflow: hidden;\n`;\nconst Content = styled.div<Omit<CellTitleContent, 'name'>>`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  width: 100%;\n  overflow: hidden;\n\n  & .inner {\n    width: fit-content;\n    /* display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1; */\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    line-height: 1;\n  }\n`;\n\nconst Top = styled(Content)`\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  justify-content: ${({ align }) => {\n    console.log(align);\n    return align === 'center' ? 'center' : `flex-${align}`;\n  }};\n`;\nconst Bottom = styled(Content)`\n  font-size: 11px;\n  font-weight: 400;\n\n  justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n`;\n\nexport default CellTextDbl;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { CellTittleProps } from './CellTitle';\n// import { useRow } from '../TableRows/RowContext';\n\n// import s from './TableCells.module.scss';\n\nexport interface CellBaseProps {\n  idx?: number;\n  titleInfo?: CellTittleProps;\n}\n\nconst Cell: React.FC<CellBaseProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  children,\n  ...props\n}) => {\n  // const { rowData } = useRow();\n\n  return (\n    <CellBase style={{ width: titleInfo?.width }} {...props}>\n      {children}\n    </CellBase>\n  );\n};\nexport const CellBase = styled.div`\n  height: 100%;\n`;\n\nexport default Cell;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface DateCompProps {\n  dateInfo: Date | string;\n  wraped?: boolean;\n}\nconst DateComp: React.FC<DateCompProps> = ({ dateInfo, wraped }) => {\n  let date, year, month, day, hours, minutes, seconds;\n\n  if (dateInfo) {\n    date = new Date(dateInfo);\n    year = date.getFullYear().toString().padStart(2, '0');\n    month = (date.getMonth() + 1).toString().padStart(2, '0');\n    day = date.getDate().toString().padStart(2, '0');\n    hours = date.getHours().toString().padStart(2, '0');\n    minutes = date.getMinutes().toString().padStart(2, '0');\n    seconds = date.getSeconds().toString().padStart(2, '0');\n  }\n\n  return (\n    <Wrapper wraped={wraped}>\n      <StDate>{dateInfo ? `${day}.${month}.${year}` : `00.00.0000 `}</StDate>\n      <StTime>{dateInfo ? `(${hours}:${minutes}:${seconds})` : `(00:00:00)`}</StTime>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div<{ wraped?: boolean }>`\n  display: flex;\n  flex-direction: ${({ wraped }) => (wraped ? 'column' : 'row')};\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  gap: 4px;\n`;\nconst StDate = styled.span``;\nconst StTime = styled.span<{ wrap?: boolean }>`\n  font-size: ${({ wrap }) => (wrap ? '10px' : '12px')}; ;\n`;\n\nexport default DateComp;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useRow } from '../TableRows/RowContext';\nimport DateComp from './CellComponents/DateComp';\nimport { CellTitleContent, CellTittleProps } from './CellTitle';\n\nexport interface CellDateSimpleProps {\n  titleInfo: CellTittleProps;\n  idx?: number;\n}\n\nconst CellDateSimple: React.FC<CellDateSimpleProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  ...props\n}) => {\n  const { rowData } = useRow();\n  const { top, bottom, width = '100px' } = titleInfo;\n\n  const contentTop = top?.dataKey && rowData[top?.dataKey] ? rowData[top?.dataKey] : null;\n  const contentBottom = bottom?.dataKey && rowData[bottom?.dataKey] ? rowData[bottom?.dataKey] : null;\n\n  return (\n    <CellBase style={{ width }} {...props}>\n      <Top align={top.align}>\n        <DateComp dateInfo={contentTop} wraped={!contentBottom ? true : false} />\n      </Top>\n\n      {contentBottom && (\n        <Bottom align={bottom?.align}>\n          <DateComp dateInfo={contentBottom} wraped={!contentBottom ? true : false} />\n        </Bottom>\n      )}\n    </CellBase>\n  );\n};\n\nconst CellBase = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  height: 100%;\n  padding: 4px 10px 4px 10px;\n\n  /* outline: 1px solid #8b8b8b; */\n`;\nconst Content = styled.div<Omit<CellTitleContent, 'name'>>`\n  flex-grow: 1;\n\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  width: 100%;\n`;\n\nconst Top = styled(Content)`\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\nconst Bottom = styled(Content)`\n  font-size: 11px;\n  font-weight: 400;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\n\nexport default CellDateSimple;\n","import React from 'react';\nimport { statusDataMap } from 'data';\n\nimport styled, { css } from 'styled-components';\nimport { StatusNames } from 'data/statuses.data';\n\nexport type StatusCompVariants = 'outlined' | 'filled' | 'text';\nexport interface StatusCompProps {\n  status: StatusNames;\n  variant?: StatusCompVariants;\n}\nconst StatusComp: React.FC<StatusCompProps> = ({ status = 'noStatus', variant = 'text' }) => {\n  let statusData = statusDataMap[status];\n\n  const style = {\n    color: statusData?.color,\n    fill: statusData?.color,\n    borderColor: variant === 'outlined' ? statusData?.color : 'transparent',\n  };\n\n  return (\n    <StStatusComp variant={variant} style={style} title={statusData?.descr}>\n      {/* {statusData?.iconId && <SvgIcon iconId={statusData?.iconId} size=\"20px\" />} */}\n\n      <Label>{statusData?.label}</Label>\n    </StStatusComp>\n  );\n};\ntype VariansMapType = {\n  [variant in StatusCompVariants]?: any;\n};\nconst variantsMap: VariansMapType = {\n  outlined: css`\n    border: 2px solid;\n  `,\n  filled: css``,\n  text: css``,\n};\n\nconst StStatusComp = styled.div<{ variant: StatusCompVariants; color?: string; fill?: string; borderColor?: string }>`\n  display: flex;\n  align-items: center;\n\n  gap: 8px;\n  font-size: 14px;\n\n  min-width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  cursor: default;\n  color: ${({ color, theme }) => (color ? color : '')};\n  fill: ${({ fill, theme }) => (fill ? fill : '')};\n  border-color: ${({ borderColor, theme }) => (borderColor ? borderColor : theme.borderColor)};\n\n  ${({ variant }) => (variant ? variantsMap[variant] : variantsMap['text'])};\n`;\nconst Label = styled.span`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport default StatusComp;\n","import React from 'react';\nimport styled from 'styled-components';\nimport getNestedData from 'utils/getNestedData';\nimport { useRow } from '../TableRows/RowContext';\nimport StatusComp from './CellComponents/StatusComp';\nimport { CellTitleContent, CellTittleProps } from './CellTitle';\n\nexport interface CellTextDblProps {\n  titleInfo: CellTittleProps;\n  idx?: number;\n}\n\nconst CellStatus: React.FC<CellTextDblProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  ...props\n}) => {\n  const { rowData } = useRow();\n  const { top, width = '100px' } = titleInfo;\n\n  const contentTop = getNestedData({\n    data: rowData,\n    ...top,\n  });\n  return (\n    <CellBase style={{ width }} {...props}>\n      <Content align={top.align}>\n        <StatusComp status={contentTop} />\n      </Content>\n    </CellBase>\n  );\n};\n\nconst CellBase = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n\n  height: 100%;\n  padding: 4px 10px 4px 10px;\n\n  /* outline: 1px solid #8b8b8b; */\n`;\nconst Content = styled.div<Omit<CellTitleContent, 'name'>>`\n  display: flex;\n  align-items: center;\n  justify-content: ${({ align }) => (align ? (align === 'center' ? 'center' : `flex-${align}`) : 'center')};\n  gap: 4px;\n\n  width: 100%;\n  height: 100%;\n\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport default CellStatus;\n","import CellTextDbl from './CellTextDbl';\nimport Cell from './Cell';\nimport CellDateSimple from './CellDateSimple';\nimport CellStatus from './CellStatus';\n\nexport type CellActionsName = 'string' | 'cell' | 'cellDbl' | 'dateSimple' | 'dateDbl' | 'status';\ntype CellVarianType = {\n  [key in CellActionsName]?: React.FC<any>;\n};\n\nexport const CellsMap: CellVarianType = {\n  cell: Cell,\n  cellDbl: CellTextDbl,\n  dateSimple: CellDateSimple,\n  status: CellStatus,\n  dateDbl: CellDateSimple,\n};\n\n// import CellCategory from './CellCategory';\n// import CellStatusApprove from './CellStatusApprove';\n// import CellStatusVisibility from './CellStatusVisibility';\n// import CellStatusAvailability from './CellStatusAvailability';\n// import CellStatusType from './CellStatusType';\n// import CellNumber from './CellNumber';\n// import CellTransactionDate from './CellTransactionDate';\n// import CellDateDbl from './CellDateDbl';\n// import CellDate from './CellDate';\n// import CellStatus from './CellStatus';\n// import CellCheckBox from './CellCheckBox';\n// import CellActions from './CellActions';\n// import CellTextNested from './CellTextNested';\n// import CellNestedDbl from './CellNestedDbl';\n// actions: CellActions,\n// checkbox: CellCheckBox,\n// transactionDate: CellTransactionDate,\n// date: CellDate,\n// dateDbl: CellDateDbl,\n// category: CellCategory,\n// approvedStatus: CellStatusApprove,\n// visibilityStatus: CellStatusVisibility,\n// availabilityStatus: CellStatusAvailability,\n// typeStatus: CellStatusType,\n// number: CellNumber,\n// status: CellStatus,\n// nestedDbl: CellNestedDbl,\n// nested: CellTextNested,\n","import RowContext from './RowContext';\nimport React from 'react';\nimport CellTextDbl from '../TebleCells/CellTextDbl';\nimport { CellsMap } from '../TebleCells';\nimport { useState } from 'react';\nimport { useTable } from '../TableList';\n\nimport styled from 'styled-components';\nimport { ThRow, ThRowData, ThRowStickyEl } from './TableHeadRow';\nimport { ITransaction } from '../../../data/transactions.types';\n\nexport interface TableRowProps {\n  rowData: ITransaction;\n  idx: number;\n}\n\nconst TableRow: React.FC<TableRowProps> = props => {\n  const { tableTitles, tableData, rowGrid } = useTable();\n  const [isActionsOpen, setIsActionsOpen] = useState(false);\n\n  function handleToggleActions() {\n    setIsActionsOpen(!isActionsOpen);\n  }\n  function handleCloseActions() {\n    setIsActionsOpen(false);\n  }\n\n  const ctxValue = {\n    ...props,\n    isActionsOpen,\n    handleToggleActions,\n    handleCloseActions,\n  };\n\n  return (\n    <Row id={props?.rowData?._id} data-row>\n      <RowContext value={ctxValue}>\n        <RowStickyEl>{/* {checkBoxes && <CellCheckBox />} */}</RowStickyEl>\n\n        <StRowData gridRepeat={tableData?.length || 0} style={{ ...rowGrid }}>\n          {tableTitles &&\n            tableTitles?.map((item, idx) => {\n              let CellComp = item.action ? CellsMap[item.action] : CellTextDbl;\n              if (CellComp instanceof Function) {\n                return <CellComp key={idx} titleInfo={item} idx={idx} />;\n              }\n              console.log(item.action);\n\n              return <CellTextDbl key={idx} titleInfo={item} idx={idx} />;\n            })}\n        </StRowData>\n      </RowContext>\n    </Row>\n  );\n};\n\nconst Row = styled(ThRow)`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  grid-template-rows: 1fr;\n\n  height: 44px;\n  min-width: 100%;\n\n  border-top: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  border-bottom-color: ${({ theme }) => theme.borderColor};\n\n  &:hover {\n    border-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.selected {\n    background-color: ${({ theme }) => theme.accentColor.light};\n  }\n`;\n\nconst RowStickyEl = styled(ThRowStickyEl)``;\n\nconst StRowData = styled(ThRowData)<{ gridRepeat: number }>`\n  display: grid;\n  grid-template-columns: ${({ gridRepeat }) => `repeat(${gridRepeat} min-content)`};\n  grid-template-rows: 1fr;\n\n  max-height: 100%;\n\n  /* overflow: hidden; */\n`;\n\nexport default TableRow;\n","import TableRow from './TableRows/TableRow';\nimport { useTable } from './TableList';\n\nimport styled from 'styled-components';\n\nconst TableBody: React.FC = () => {\n  const { tableData, rowRef, onRowClick } = useTable();\n\n  function handleOnRowClick(ev: React.MouseEvent<HTMLDivElement>) {\n    if (!(ev instanceof MouseEvent)) return;\n    const { target } = ev;\n    let rowEl: any;\n\n    if (target instanceof HTMLElement && !target.closest('[data-row]')) {\n      rowRef?.current && rowRef.current.classList.remove('selected');\n      return;\n    }\n    rowEl = target instanceof HTMLElement && target.closest('[data-row]');\n\n    if (onRowClick instanceof Function) {\n      let rowData = tableData?.find(el => el?._id === rowEl?.id);\n\n      onRowClick({ ev, _id: rowEl?.id, data: rowData });\n    }\n\n    if (!rowRef?.current) {\n      if (rowRef?.current) rowRef.current = rowEl;\n      rowRef?.current?.classList.add('selected');\n      return;\n    }\n\n    if (rowEl !== rowRef.current) {\n      rowRef.current.classList.remove('selected');\n      rowRef.current = rowEl;\n    }\n\n    rowRef?.current?.classList.toggle('selected');\n  }\n\n  return (\n    <TBody onClick={handleOnRowClick}>\n      {tableData?.map((rowData, idx) => {\n        return <TableRow key={idx} {...{ rowData, idx }} />;\n      })}\n    </TBody>\n  );\n};\n\nconst TBody = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: min-content;\n  align-content: start;\n\n  min-width: 100%;\n\n  position: relative;\n  & .selected {\n    background-color: var(--ligthOrange);\n\n    &:hover {\n      background-color: var(--ligthOrange);\n    }\n  }\n`;\n\nexport default TableBody;\n\n// {/* <TableRow {...{ rowData: tableData[0] }} /> */}\n\n// {/* {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })} */}\n","import React, { useEffect, useState } from 'react';\nimport ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\n\nimport styled, { css } from 'styled-components';\n\nconst QuickActions: React.FC<{ top?: any[]; bottom?: any[]; footer?: boolean }> = ({ top, bottom, footer }) => {\n  const [isShown, setIsShown] = useState(false);\n  function onMenuBtnClick() {\n    setIsShown(!isShown);\n  }\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      if (ev.target instanceof HTMLElement && !ev.target.closest('[data-burger]')) setIsShown(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsShown(false);\n    }\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, []);\n\n  return (\n    <Menu isShown={isShown} footer={footer} data-burger>\n      <List isShown={isShown}>\n        <Top top={!!top}>\n          {top &&\n            top.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIcon\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                iconSize=\"80%\"\n                tabIndex={isShown ? -1 : 0}\n                {...props}\n              />\n            ))}\n        </Top>\n\n        <Separator />\n\n        <Bottom bottom={!!bottom}>\n          {bottom &&\n            bottom.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIconFilled\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                // iconSize=\"80%\"\n                tabIndex={isShown ? -1 : 0}\n                {...props}\n              />\n            ))}\n        </Bottom>\n      </List>\n\n      <ToggleButton\n        isShown={isShown}\n        // iconId={isShown ? iconId.close : iconId.actionsV}\n        iconId={iconId.plus}\n        variant=\"def\"\n        iconSize=\"70%\"\n        size=\"48px\"\n        onClick={onMenuBtnClick}\n      />\n    </Menu>\n  );\n};\n\nconst ToggleButton = styled(ButtonIcon)<{ isShown: boolean }>`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  z-index: 70;\n\n  border-radius: 50%;\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  box-shadow: ${({ isShown }) => (isShown ? 'var(--header-shadow)' : '')};\n  background-color: ${({ theme, isShown }) => (isShown ? theme.backgroundColorSecondary : theme.backgroundColorLight)};\n\n  & .icon {\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n  }\n  & .icon {\n    transform: ${({ isShown }) => (isShown ? 'rotate(45deg)' : '')};\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundColorSecondary};\n  }\n  &:active {\n    background-color: ${({ theme }) => theme.backgroundColorLight};\n  }\n`;\n\nconst Menu = styled.div<{ isShown: boolean; footer?: boolean }>`\n  position: absolute;\n  bottom: ${({ footer }) => (footer ? '40px' : '10px')};\n  right: 10px;\n  z-index: 65;\n\n  width: 44px;\n  height: 44px;\n\n  border-radius: 24px;\n`;\nconst List = styled.div<{ isShown: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  width: 48px;\n  min-height: 48px;\n  height: max-content;\n  overflow: hidden;\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  border-radius: 24px;\n  box-shadow: ${({ isShown }) => (isShown ? 'var(--header-shadow)' : '')};\n\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n\n  ${({ isShown }) =>\n    isShown\n      ? css`\n          max-height: 90vh;\n          padding: 16px 8px 64px;\n          visibility: visible;\n          pointer-events: all;\n        `\n      : css`\n          max-height: 48px;\n          padding: 8px;\n          visibility: hidden;\n          pointer-events: none;\n        `}\n  @media screen and (max-height: 480px) {\n    flex-direction: row;\n    width: max-content;\n    height: 48px;\n    ${({ isShown }) =>\n      isShown\n        ? css`\n            max-width: 90vh;\n            padding: 8px 64px 8px 16px;\n            visibility: visible;\n            pointer-events: all;\n          `\n        : css`\n            max-width: 48px;\n            padding: 8px;\n            /* visibility: hidden; */\n            pointer-events: none;\n          `};\n  }\n`;\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n\n  width: 100%;\n\n  @media screen and (max-height: 480px) {\n    flex-direction: row;\n  }\n`;\nconst Top = styled(Content)<{ top: boolean }>``;\n\nconst Bottom = styled(Content)<{ bottom: boolean }>``;\n\nconst Separator = styled.div`\n  position: relative;\n\n  width: 100%;\n\n  &::before {\n    display: block;\n    content: '';\n    /* position: absolute; */\n    width: 100%;\n    height: 1px;\n\n    border-top: 1px solid ${({ theme }) => theme.borderColor};\n  }\n  @media screen and (max-height: 480px) {\n    height: 100%;\n    &::before {\n      height: 100%;\n      width: 1px;\n\n      border-right: 1px solid ${({ theme }) => theme.borderColor};\n    }\n  }\n`;\n\nexport default QuickActions;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport SvgIcon from 'components/SvgIcon/SvgIcon';\nimport { iconId } from 'data';\nimport React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface SelectItem extends Record<string, any> {\n  _id?: string;\n  filter?: boolean;\n  search: boolean;\n  label: string;\n  dataKey: string;\n}\nexport interface ISearchParamInputProps {\n  data?: SelectItem[];\n  defaultValue?: SelectItem;\n  selectedItem?: SelectItem;\n  onSelect?: (item: SelectItem) => void;\n}\n\nconst SearchParamInput: React.FC<ISearchParamInputProps> = ({ data, defaultValue, selectedItem, onSelect }) => {\n  const [inputValue, setInputValue] = useState({ searchParam: '' });\n  const [filteredData, setFilteredData] = useState<SelectItem[]>(data || []);\n  const [current, setCurrent] = useState<SelectItem | null>(defaultValue || selectedItem || null);\n  const [isOpen, setIsOpen] = useState(false);\n  function handleToggleList(state?: boolean) {\n    setIsOpen(state || !isOpen);\n  }\n  function onSelectItemClick(item: SelectItem) {\n    setCurrent(item);\n\n    if (onSelect instanceof Function) {\n      onSelect(item);\n      setInputValue({ searchParam: item.label });\n    }\n\n    handleToggleList();\n  }\n\n  function onChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = ev.target;\n\n    current && setCurrent(null);\n    setInputValue(prev => {\n      return { ...prev, [name]: value };\n    });\n  }\n  function onSerchParamReset() {\n    setInputValue({ searchParam: '' });\n  }\n\n  useEffect(() => {\n    // console.log('select data', data);\n    if (data?.length === 0) {\n      return;\n    }\n\n    const filteredData = data?.filter(el => {\n      if (inputValue?.searchParam)\n        return !(inputValue?.searchParam && !el?.label.toLowerCase().includes(inputValue?.searchParam.toLowerCase()));\n\n      return true;\n    });\n\n    filteredData && setFilteredData(filteredData);\n  }, [data, inputValue, inputValue?.searchParam]);\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      const { target } = ev;\n      if (target instanceof HTMLElement && !target.closest('[data-select]')) setIsOpen(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsOpen(false);\n    }\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, []);\n\n  return (\n    <InputBox className={isOpen ? 'isOpen' : ''} data-select>\n      <ToggleButton onClick={() => handleToggleList()}>\n        <SvgIcon iconId={iconId.SmallArrowDown} className={'svgIcon'} size=\"24px\" />\n      </ToggleButton>\n\n      <StyledLabel>\n        <StyledInput\n          type=\"text\"\n          placeholder=\"Параметр\"\n          name=\"searchParam\"\n          // defaultValue={defaultValue?.label || data[current].label}\n          value={inputValue.searchParam}\n          onChange={onChange}\n          onClick={() => handleToggleList(true)}\n        />\n      </StyledLabel>\n\n      <ParamsListContainer isOpen={isOpen}>\n        <ParamsList>\n          {filteredData.length > 0 &&\n            filteredData.map((item, idx) => (\n              <ListItem\n                key={item.dataKey}\n                title={item.label}\n                onClick={() => {\n                  onSelectItemClick(item);\n                }}\n              >\n                <span>{item.label}</span>\n              </ListItem>\n            ))}\n\n          {filteredData.length === 0 && (\n            <ListItem listEmpty>\n              <span>Нічого не знайдено</span>\n            </ListItem>\n          )}\n        </ParamsList>\n        {false && (\n          <CloseListItem>\n            <ButtonIcon variant=\"outlinedSmall\" onClick={onSerchParamReset}>\n              Очистити\n            </ButtonIcon>\n          </CloseListItem>\n        )}\n      </ParamsListContainer>\n    </InputBox>\n  );\n};\n\nconst StyledLabel = styled.label`\n  display: block;\n  position: relative;\n\n  border-style: none;\n  border-image: none;\n  border-width: 0;\n\n  height: 100%;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    height: calc(100% + 4px);\n    width: 0;\n\n    border-radius: 4px;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%, -50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus-within {\n    &::before {\n      width: calc(100% + 4px);\n    }\n  }\n`;\n\nconst InputBox = styled.label`\n  position: relative;\n  z-index: 2;\n\n  height: 100%;\n  width: 100%;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  /* &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n\n    height: calc(10% + 4px);\n    width: 0;\n\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n     transform: translate(50, 50);\n  background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus-within {\n    &::before {\n      width: calc(100% + 4px);\n    }\n  } */\n  &.isOpen {\n    & .svgIcon {\n      transform: rotate(-180deg);\n    }\n  }\n`;\n\nconst StyledInput = styled.input`\n  display: block;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 10;\n\n  height: 100%;\n  width: 100%;\n  padding: 4px 30px 4px 8px;\n\n  font-size: 12px;\n  font-family: inherit;\n  color: inherit;\n  background-color: transparent;\n\n  border-radius: 2px;\n  border-style: none;\n  border: 1px solid ${({ theme }) => theme.globals.inputBorder};\n  background-color: ${({ theme }) => theme.backgroundColorMain};\n  transition: all ${({ theme }) => theme.globals.timingFnMui};\n  &:focus {\n    border-color: transparent;\n  }\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n`;\n\nconst ToggleButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: absolute;\n  right: 5px;\n  top: 50%;\n\n  transform: translateY(-50%);\n  &:focus-within {\n    ${StyledInput} {\n      border-color: ${({ theme }) => theme.accentColor.base};\n      outline: 2px solid ${({ theme }) => theme.accentColor.base};\n    }\n  }\n`;\n\nconst ParamsListContainer = styled.ul<{ isOpen: boolean }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr min-content;\n\n  position: absolute;\n  top: calc(100% + 4px);\n  left: 0;\n  z-index: 50;\n\n  min-width: 100%;\n  width: max-content;\n  max-width: calc(100% + 40px);\n  height: max-content;\n\n  /* height: 50vh; */\n\n  max-height: ${({ isOpen }) => (isOpen ? '60vh' : '0')};\n  overflow: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\n  ${({ isOpen }) => (isOpen ? css`` : null)}\n\n  font-size: 12px;\n\n  border-radius: 2px;\n  box-shadow: var(--header-shadow);\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n  /* border: 1px solid ${({ theme }) => theme.trBorderClr}; */\n  border: ${({ isOpen }) => (isOpen ? '1px' : '0')} solid ${({ theme }) => theme.trBorderClr};\n\n  @media screen and (max-width: 480px) {\n    font-size: 10px;\n  }\n`;\nconst ParamsList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 32px;\n\n  max-width: 100%;\n\n  overflow: auto;\n\n  color: ${({ theme }) => theme.fillColorHeader};\n`;\n\nconst ListItem = styled.li<{ listEmpty?: boolean }>`\n  display: flex;\n  align-items: center;\n\n  padding: 8px;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  &:hover {\n    cursor: default;\n    background-color: ${({ listEmpty }) => (listEmpty ? '' : 'rgba(254, 254, 254, 0.1)')};\n  }\n`;\n\nconst CloseListItem = styled.div`\n  display: flex;\n  justify-content: center;\n\n  /* position: sticky;\n  bottom: 0;\n  left: 0; */\n\n  width: 100%;\n  height: max-content;\n  padding: 6px;\n\n  border-top: 1px solid ${({ theme }) => theme.trBorderClr};\n  background-color: inherit;\n  &:hover,\n  &:active {\n    background-color: inherit;\n  }\n`;\n\nexport default SearchParamInput;\n","import { useMediaQuery } from 'react-responsive';\nimport { Navigate, Outlet } from 'react-router-dom';\nconst LITTLE_MOBILE = 279;\nconst MOBILE_END = 479;\nconst TABLET_START = 480;\nconst TABLET_END = 767;\nconst TABLET_MAX_START = 768;\nconst TABLET_MAX_END = 1099;\nconst DESKTOP_START = 1100;\nexport const deviceParams = {\n  LITTLE_MOBILE,\n  MOBILE_END,\n  TABLET_START,\n  TABLET_END,\n  TABLET_MAX_START,\n  TABLET_MAX_END,\n  DESKTOP_START,\n};\n\nexport const MinDesktop: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isDesktop = useMediaQuery({ minWidth: DESKTOP_START });\n  return isDesktop ? children : null;\n};\nexport const Tablet: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTablet = useMediaQuery({ minWidth: TABLET_START, maxWidth: TABLET_END });\n  return isTablet ? children : null;\n};\nexport const TabletXL: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTabletXl = useMediaQuery({ minWidth: TABLET_MAX_START, maxWidth: DESKTOP_START });\n  return isTabletXl ? children : null;\n};\nexport const AllTablets: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTablet = useMediaQuery({ minWidth: TABLET_START, maxWidth: TABLET_MAX_END });\n  return isTablet ? children : null;\n};\nexport const LiitleMobile: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isLittleMobile = useMediaQuery({ maxWidth: LITTLE_MOBILE });\n  return isLittleMobile ? children : null;\n};\nexport const Mobile: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isMobile = useMediaQuery({ maxWidth: MOBILE_END });\n  return isMobile ? children : null;\n};\nexport const MaxToTablet: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTablet = useMediaQuery({ maxWidth: TABLET_END });\n  return isTablet ? children : null;\n};\nexport const MaxToTabletXl: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTabletXL = useMediaQuery({ maxWidth: DESKTOP_START });\n  return isTabletXL ? children : null;\n};\nexport const MinTabletXl: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTabletXL = useMediaQuery({ minWidth: TABLET_MAX_START });\n  return isTabletXL ? children : null;\n};\nexport const NotMobile: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isNotMobile = useMediaQuery({ minWidth: TABLET_MAX_START });\n  return isNotMobile ? children : null;\n};\nexport const NotMobileRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isMobile = useMediaQuery({ minWidth: MOBILE_END });\n  return isMobile ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MobileRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isMobile = useMediaQuery({ maxWidth: MOBILE_END });\n  return isMobile ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MaxTabletRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isTablet = useMediaQuery({ maxWidth: TABLET_END });\n  return isTablet ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MinTabletXlRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isTabletXl = useMediaQuery({ minWidth: TABLET_MAX_START });\n  return isTabletXl ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MinDesktopRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isTabletXl = useMediaQuery({ minWidth: DESKTOP_START });\n  return isTabletXl ? <Outlet /> : <Navigate to={redirectTo} />;\n};\n\nconst DeviceConrol = {\n  MinDesktop,\n  Tablet,\n  TabletXL,\n  AllTablets,\n  LiitleMobile,\n  Mobile,\n  MaxToTablet,\n  MaxToTabletXl,\n  MinTabletXl,\n  NotMobile,\n  NotMobileRoute,\n  MobileRoute,\n  MaxTabletRoute,\n  MinTabletXlRoute,\n  MinDesktopRoute,\n};\nexport default DeviceConrol;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport { MaxToTablet } from 'components/DeviceTypeInformer/DeviceTypeController';\nimport { iconId } from 'data';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { IFilterSelector } from './Filter';\n\n// import { MaxToTablet } from 'components/DeviceTypeInformer/DeviceTypeController';\n\nexport interface FilterSelectorProps extends React.HTMLAttributes<Element> {\n  label: string;\n  selectorName?: string;\n  data?: any[];\n  idx: number;\n  currentIdx: number | null;\n  CurrentData: IFilterSelector;\n  onCheckAll?: () => void;\n  onSelectorClick: (idx?: number) => void;\n}\nconst Selector: React.FC<FilterSelectorProps> = ({\n  label = 'Selector label',\n  data = [],\n  selectorName = 'selector',\n  onSelectorClick,\n  currentIdx,\n  onCheckAll,\n  idx,\n  children,\n}) => {\n  const [selectedItems, setSelectedItem] = useState<any[] | undefined>(data);\n  const [isActive, setIsActive] = useState<boolean>(false);\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function onChange(id: string) {\n    setSelectedItem(prev =>\n      prev?.map(el => {\n        if (el._id === id) return { ...el, checked: !el?.checked };\n\n        return el;\n      })\n    );\n  }\n  function onResetFilter() {\n    setSelectedItem(prev =>\n      prev?.map(el => {\n        return { ...el, checked: false };\n      })\n    );\n  }\n\n  useEffect(() => {\n    setIsActive(selectedItems?.some(el => el.checked) ? true : false);\n  }, [selectedItems]);\n\n  return (\n    <SelectorContainer>\n      <StyledSelector isCurrent={currentIdx === idx}>\n        <ButtonIcon\n          size=\"26px\"\n          variant=\"def\"\n          iconId={iconId.checkBoxOff}\n          iconSize=\"22px\"\n          onClick={() => onCheckAll && onCheckAll()}\n        />\n\n        <SelectorBody isCurrent={currentIdx === idx}>\n          <Label>{label}</Label>\n\n          <ButtonIcon\n            size=\"26px\"\n            variant=\"def\"\n            iconId={iconId.filterOff}\n            disabled={!isActive}\n            onClick={onResetFilter}\n          />\n\n          <StOpenButton\n            size=\"26px\"\n            variant=\"def\"\n            isCurrent={currentIdx === idx}\n            iconId={iconId.SmallArrowDown}\n            iconSize=\"22px\"\n            onClick={() => onSelectorClick && onSelectorClick()}\n          />\n        </SelectorBody>\n      </StyledSelector>\n\n      <MaxToTablet>{currentIdx === idx ? <SelectorList>{children}</SelectorList> : null}</MaxToTablet>\n    </SelectorContainer>\n  );\n};\nconst SelectorContainer = styled.div``;\nconst StyledSelector = styled.div<{ isCurrent: boolean }>`\n  display: flex;\n  align-items: center;\n\n  gap: 2px;\n\n  font-size: 12px;\n  color: ${({ theme }) => theme.fontColorHeader};\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  border-radius: 2px;\n  /* border: 2px solid ${({ isCurrent, theme }) => (isCurrent ? theme.accentColor.base : 'transparent')}; */\n`;\nconst SelectorBody = styled.div<{ isCurrent: boolean }>`\n  flex-grow: 1;\n\n  display: grid;\n  grid-template-columns: 1fr min-content min-content;\n  gap: 4px;\n\n  border-radius: 2px;\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n  border: 2px solid ${({ isCurrent, theme }) => (isCurrent ? theme.accentColor.base : 'transparent')};\n`;\nconst Label = styled.div`\n  flex-grow: 1;\n\n  display: flex;\n  align-items: center;\n\n  padding: 5px 8px;\n`;\nconst StOpenButton = styled(ButtonIcon)<{ isCurrent: boolean }>`\n  & .icon {\n    transform: ${({ isCurrent }) => `rotate(${isCurrent ? 180 : 0}deg)`};\n  }\n\n  @media screen and (min-width: 768px) {\n    & .icon {\n      transform: ${({ isCurrent }) => `rotate(${isCurrent ? -90 : 90}deg)`};\n    }\n  }\n`;\nconst SelectorList = styled.div`\n  overflow: hidden;\n\n  max-height: 250px;\n\n  padding: 4px 0 4px 28px;\n`;\n\nexport default Selector;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport styled from 'styled-components';\n\nconst ModalHeader: React.FC<{ title: string }> = ({ title = 'default header titile' }) => {\n  return (\n    <Header>\n      <Title>{title}</Title>\n\n      <ButtonIcon type=\"reset\" size=\"28px\" iconId={iconId.close} variant=\"onlyIcon\" />\n    </Header>\n  );\n};\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  /* position: sticky;\n  top: 0;\n  left: 0; */\n\n  width: 100%;\n  min-height: 28px;\n\n  border-top-right-radius: 2px;\n  border-top-left-radius: 2px;\n\n  color: ${({ theme }) => theme.fontColorHeader};\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n`;\nconst Title = styled.p`\n  color: #efefef;\n  text-transform: uppercase;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  font-size: 12px;\n  line-height: 1.33;\n  font-weight: 700;\n\n  padding: 6px 8px;\n  height: 100%;\n\n  flex-basis: 100px;\n  flex-grow: 1;\n`;\n\nexport default ModalHeader;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { ModalFormProps } from './ModalForm';\n\nconst ModalFilter: React.FC<Pick<ModalFormProps, 'filterOptions' | 'onOptSelect'>> = ({\n  filterOptions,\n  onOptSelect,\n}) => {\n  const [current, setCurrent] = useState<number>(0);\n  return (\n    <Filter gridRepeat={filterOptions?.length}>\n      {filterOptions &&\n        filterOptions?.length > 0 &&\n        filterOptions?.map((opt, idx: number) => (\n          <FilterBtn\n            key={opt?.label || idx}\n            isActive={idx === current}\n            type=\"button\"\n            onClick={() => {\n              setCurrent(idx);\n              if (typeof onOptSelect === 'function') onOptSelect(opt);\n            }}\n          >\n            {opt?.label || opt?.name || `option ${idx + 1}`}\n          </FilterBtn>\n        ))}\n    </Filter>\n  );\n};\n\nconst Filter = styled.div<{ gridRepeat?: number }>`\n  display: grid;\n  align-items: center;\n  grid-template-columns: ${({ gridRepeat }) => `repeat(${gridRepeat || 1}, 1fr)`};\n\n  height: 44px;\n\n  background-color: inherit;\n`;\n\nconst FilterBtn = styled.button<{ isActive: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 100%;\n  min-height: 20px;\n\n  font-weight: 700;\n  font-size: 12px;\n  letter-spacing: 0.05em;\n  color: inherit;\n\n  text-transform: uppercase;\n\n  background-color: ${({ isActive, theme }) => (isActive ? 'inherit' : `${theme.borderColor}`)};\n  border-style: none;\n`;\n\nexport default ModalFilter;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\n\nimport styled from 'styled-components';\nimport { ModalFormProps } from './ModalForm';\n\nconst ModalFooter: React.FC<Pick<ModalFormProps, 'onSubmit'>> = ({ onSubmit }) => {\n  return (\n    <Footer>\n      {onSubmit && (\n        <ButtonIcon type=\"reset\" variant=\"outlinedSmall\">\n          Закрити\n        </ButtonIcon>\n      )}\n\n      <ButtonIcon type={onSubmit ? 'submit' : 'reset'} variant=\"filledSmall\">\n        {onSubmit ? 'Прийняти' : 'Закрити'}\n      </ButtonIcon>\n    </Footer>\n  );\n};\n\nconst Footer = styled.footer`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  flex-wrap: wrap;\n  gap: 8px;\n\n  position: sticky;\n  bottom: 0;\n  left: 0;\n\n  padding: 8px;\n\n  width: 100%;\n\n  border-bottom-right-radius: 2px;\n  border-bottom-left-radius: 2px;\n\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  color: ${({ theme }) => theme.fontColorHeader};\n  fill: ${({ theme }) => theme.fillColorHeader};\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n`;\nexport default ModalFooter;\n","import ModalHeader from './ModalHeader';\nimport ModalFilter from './ModalFilter';\nimport ModalFooter from './ModalFooter';\n\nimport styled from 'styled-components';\nimport { useModalProvider } from 'components/ModalProvider/ModalProvider';\nimport { FormEvent } from 'react';\n\nexport interface ModalFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  filterOptions?: FilterOpt[];\n  beforeSubmit?: () => void | any;\n  afterSubmit?: () => void | any;\n  beforeClose?: () => void | any;\n  onReset?: () => void | any;\n  afterClose?: () => void | any;\n  onOptSelect?: (opt: FilterOpt) => void | any;\n}\nexport interface FilterOpt extends Record<string, any> {\n  _id: string;\n  label?: string;\n  name?: string;\n}\n\nconst ModalForm: React.FC<ModalFormProps> = ({\n  title = 'default modal title',\n  children,\n  beforeSubmit,\n  filterOptions,\n  onSubmit,\n  afterSubmit,\n  beforeClose,\n  onReset,\n  afterClose,\n  onOptSelect,\n  ...props\n}) => {\n  const { handleCloseModal } = useModalProvider();\n\n  function handleSubmit(ev: FormEvent<HTMLFormElement>) {\n    ev.preventDefault();\n\n    handleCloseModal();\n\n    if (!onSubmit) return console.log('No passed \"onSubmit\" handler');\n\n    if (typeof beforeSubmit === 'function') beforeSubmit();\n    if (typeof onSubmit === 'function') onSubmit(ev);\n    if (typeof afterSubmit === 'function') afterSubmit();\n  }\n  function handleReset() {\n    handleCloseModal();\n    if (!onReset) return console.log('No passed \"onReset\" handler');\n    if (typeof beforeClose === 'function') beforeClose();\n    if (typeof onReset === 'function') onReset();\n    if (typeof afterClose === 'function') afterClose();\n  }\n  function handleSelect(option: FilterOpt) {\n    if (!onOptSelect) console.log('No passed \"onSelect\" handler', option);\n    if (typeof onOptSelect === 'function') onOptSelect(option);\n  }\n\n  return (\n    <ModalFormContainer onSubmit={handleSubmit} onReset={handleReset} {...props}>\n      <ModalHeader title={title} />\n\n      <ModalMain filterOn={filterOptions ? true : false}>\n        {filterOptions && <ModalFilter onOptSelect={handleSelect} filterOptions={filterOptions} />}\n\n        <MainScroll>{children}</MainScroll>\n      </ModalMain>\n\n      <ModalFooter onSubmit={onSubmit} />\n    </ModalFormContainer>\n  );\n};\n\nconst ModalFormContainer = styled.form`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 28px 1fr max-content;\n\n  position: relative;\n\n  /* min-height: 350px; */\n  max-height: 100%;\n  min-width: 250px;\n  max-width: 100%;\n\n  border-radius: 2px;\n  overflow: hidden;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    min-width: 450px;\n  }\n`;\n\nconst ModalMain = styled.main<{ filterOn: boolean }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: ${({ filterOn }) => (filterOn ? 'min-content 1fr' : '1fr')};\n\n  overflow: hidden;\n  /* position: relative; */\n\n  height: 100%;\n  max-width: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.backgroundColorMain};\n\n  border-right: 1px solid ${({ theme }) => theme.borderColor};\n  border-left: 1px solid ${({ theme }) => theme.borderColor};\n`;\n\nconst MainScroll = styled.div`\n  overflow: auto;\n\n  max-width: 100%;\n  min-width: min-content;\n  height: 100%;\n  max-height: 100%;\n\n  background-color: ${({ theme }) => theme.backgroundColorMain};\n`;\n\nexport default ModalForm;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nexport interface SelectorListItem {\n  label?: string;\n  _id?: string;\n  checked?: boolean;\n}\n\nexport interface SelectorContentProps {\n  onSelect: (item: SelectorListItem) => void;\n  isOpen?: boolean;\n  data: SelectorListItem[];\n  selectorName?: string;\n  ListComp?: React.FC<any>;\n}\n\nconst SelectorContent: React.FC<SelectorContentProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  isOpen = false,\n  onSelect,\n  data,\n  selectorName,\n  ListComp,\n  ...props\n}) => {\n  const [searchParam, setSearchParam] = useState<string>('');\n  const [filteredData, setFilteredData] = useState<SelectorListItem[]>(data || []);\n\n  function onInputChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    const { value } = ev.target;\n    setSearchParam(value);\n    // setInputValue(prev => {\n    //   return { ...prev, [name]: value };\n    // });\n  }\n  function onSerchParamReset() {\n    setSearchParam('');\n  }\n\n  useEffect(() => {\n    // console.log('select data', data);\n    if (data?.length === 0) {\n      return;\n    }\n\n    const filteredData = data?.filter(el => {\n      if (searchParam && el?.label)\n        return !(searchParam && !el.label.toLowerCase().includes(searchParam.toLowerCase()));\n\n      return true;\n    });\n\n    filteredData && setFilteredData(filteredData);\n  }, [data, searchParam]);\n\n  return (\n    <Content {...props}>\n      <StyledLabel htmlFor={selectorName}>\n        <SearchInput type=\"text\" name={selectorName} placeholder=\"Пошук\" value={searchParam} onChange={onInputChange} />\n\n        <StResetInputButton variant=\"onlyIcon\" size=\"26px\" iconId={iconId.close} onClick={onSerchParamReset} />\n      </StyledLabel>\n\n      {filteredData.length > 0 && ListComp ? (\n        <ListComp\n          isOpen={isOpen}\n          mapedData={filteredData}\n          onSelect={(data: any) => {\n            console.log(data);\n          }}\n        ></ListComp>\n      ) : null}\n    </Content>\n  );\n};\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 28px 1fr;\n\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  overflow: hidden;\n  color: ${({ theme }) => theme.fontColorHeader};\n\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n`;\nconst StyledLabel = styled.label`\n  position: relative;\n\n  border-style: none;\n  border-image: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 2px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus-within {\n    &::before {\n      width: 100%;\n    }\n  }\n`;\nconst SearchInput = styled.input`\n  height: 100%;\n  width: 100%;\n  padding: 4px 30px 4px 8px;\n\n  font-size: 12px;\n  font-family: inherit;\n  color: inherit;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n  background-color: transparent;\n\n  border-style: none;\n  border-bottom: 1px solid ${({ theme }) => theme.globals.inputBorder};\n  &:hover,\n  &:focus {\n    /* border-bottom-color: ${({ theme }) => theme.accentColor.hover}; */\n    outline-style: none;\n  }\n`;\nconst StResetInputButton = styled(ButtonIcon)`\n  position: absolute;\n\n  right: 0;\n  top: 0;\n`;\n\n// const SelectList = styled.ul<{ isOpen: boolean }>`\n//   display: grid;\n//   grid-template-columns: 1fr;\n//   grid-auto-rows: 22px;\n\n//   padding: 8px 0;\n//   gap: 2px;\n\n//   width: 100%;\n//   max-height: 100%;\n//   overflow: auto;\n\n//   /* background-color: #323234; */\n// `;\n// const SelectListItem = styled.li`\n//   display: flex;\n//   align-items: center;\n\n//   gap: 8px;\n\n//   padding: 0 8px;\n\n//   border-radius: 2px;\n// `;\n\nexport default SelectorContent;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n\nexport interface SelectsListItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  checked?: boolean;\n  _id: string;\n  label: string;\n  onSelect: <T = any | undefined>(item: T) => void;\n}\n\nconst SelectsListItem: React.FC<SelectsListItemProps> = ({ checked, label, _id, onSelect }) => {\n  const [isChecked, setIsChecked] = useState<boolean | undefined>(checked || false);\n  function handleSelect() {\n    setIsChecked(prev => (checked ? checked : !prev));\n    onSelect({ _id, checked, label });\n  }\n\n  return (\n    <StyledItem>\n      <ButtonIcon\n        size=\"26px\"\n        variant=\"onlyIcon\"\n        iconId={isChecked ? iconId.checkBoxOn : iconId.checkBoxOff}\n        aria-checked={isChecked}\n        onClick={handleSelect}\n      ></ButtonIcon>\n\n      <span>{label}</span>\n    </StyledItem>\n  );\n};\n\nconst StyledItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  gap: 8px;\n\n  padding: 0 8px;\n\n  border-radius: 2px;\n`;\n\nexport default SelectsListItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport SelectsListItem from './SelectsListItem';\n\nexport interface SelectsListProps<T = any> {\n  isOpen: boolean;\n  onSelect: () => void;\n  mapedData: T[];\n}\n\nconst SelectsList: React.FC<SelectsListProps> = ({ isOpen, onSelect, mapedData }) => {\n  return (\n    <List isOpen={isOpen}>\n      {mapedData.map(({ _id, label }, idx) => (\n        <SelectsListItem key={_id || idx} onSelect={onSelect} _id={_id} label={label} />\n      ))}\n    </List>\n  );\n};\n\nconst List = styled.ul<{ isOpen?: boolean }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: min-content;\n\n  padding: 8px 0;\n  gap: 2px;\n\n  width: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  /* background-color: #323234; */\n`;\n\nexport default SelectsList;\n","import { useState, useEffect } from 'react';\nimport Selector from './Selector';\nimport ModalDefault from 'components/ModalForm/ModalForm';\n\nimport styled from 'styled-components';\nimport SelectorContent from './SelectorContent/SelectorContent';\nimport { IContractor, IDocument, IProject } from 'data/transactions.types';\nimport SelectsList from './SelectorContent/SelectsList';\n\nconst contractors: IContractor[] = [\n  { _id: 'ds6d5vf6sd5f1v64d', label: 'ФОП Петров' },\n  { _id: 'ds6d5vs6sd6f1v4sd', label: 'ТОВ \"Рога і копита\"' },\n  { _id: 'ds6d5vf6sd6f1v6sd', label: 'ТОВ \"Дикі крила\"' },\n];\n// const categoriesArr: ITrCategory[] = [\n//   { _id: 'ds6d5vf6sd5f1v6sd', label: 'Офісні витрати', type: 'EXPENSE', owner: '' },\n//   { _id: 'ds6d5vf6sd6f1v7sd', label: 'Транспорт', type: 'EXPENSE' },\n//   { _id: 'ds6d5vf6sd6f1v5sd', label: 'Обладнання', type: 'EXPENSE' },\n//   { _id: 'ds6d5vf6sd6f1v5sd', label: 'Обладнання', type: 'EXPENSE' },\n// ];\nconst documents: IDocument[] = [\n  { _id: 'ds6d5vf6sd5f1v6sd', label: 'Чек №351351321' },\n  { _id: 'ds6d5vf6sd6f1v3sd', label: 'Накладна №351351321' },\n  { _id: 'ds6d5vf6dd6f1v2sd', label: 'Акт №351351321' },\n];\nconst projects: IProject[] = [\n  { _id: 'ds6d5vf6sd5f1v6sd', label: 'ЖК \"Авалон\"' },\n  { _id: 'ds6d5vf6sd6f1v61d', label: 'ЖК \"Захід\"' },\n  { _id: 'ds6d5vf6dd6f1v68d', label: 'ЖК \"Люксар\"' },\n];\nconst transationTypes = [\n  { _id: 'ds6d5vf6sd5f1v6sd', name: 'INCOME', label: 'ДОХІД' },\n  { _id: 'ds6d5vf6sd6f1v61d', name: 'TRANSFER', label: 'ПЕРЕКАЗ' },\n  { _id: 'ds6d5vf6dd6f1v68d', name: 'EXPENSE', label: 'ВИТРАТИ' },\n];\nexport interface IFilterSelector {\n  label: string;\n  data: any[];\n  name: string;\n  ListComp: React.FC<any>;\n}\nconst selectorsArr: IFilterSelector[] = [\n  { label: 'Тип', data: transationTypes, name: 'type', ListComp: SelectsList },\n  // { label: 'Категорії', data: categoriesArr, name: 'category' },\n  { label: 'Контрагенти', data: contractors, name: 'contractor', ListComp: SelectsList },\n  { label: 'Документи', data: documents, name: 'document', ListComp: SelectsList },\n  { label: 'Проєкти', data: projects, name: 'project', ListComp: SelectsList },\n];\nconst Filter: React.FC = () => {\n  const [selectors] = useState<IFilterSelector[]>(selectorsArr);\n  const [CurrentData, setCurrentData] = useState<IFilterSelector>(selectors[0]);\n  const [currentIdx, setCurrentIdx] = useState<number | null>(0);\n\n  function onSelectorClick(idx: number) {\n    setCurrentIdx(prev => (prev === idx ? null : idx));\n  }\n\n  function onFilterStateChange(item: any) {\n    console.log(item);\n  }\n\n  useEffect(() => {\n    if (!currentIdx) return;\n\n    setCurrentData(selectors[currentIdx]);\n  }, [currentIdx, selectors]);\n\n  return (\n    <ModalDefSt title=\"Фільтрація транзакцій\">\n      <FilterContainer>\n        <DatePickers>\n          <InputDate type=\"datetime-local\" />\n          <InputDate type=\"datetime-local\" />\n        </DatePickers>\n\n        <Bottom>\n          <LeftSide>\n            <SelectorsList>\n              {selectorsArr.map(({ name, label, data }, idx) => (\n                <Selector\n                  key={name}\n                  label={label}\n                  data={data}\n                  selectorName={name}\n                  idx={idx}\n                  onSelectorClick={() => onSelectorClick(idx)}\n                  currentIdx={currentIdx}\n                  CurrentData={CurrentData}\n                >\n                  <SelectorContent\n                    data={CurrentData.data}\n                    onSelect={onFilterStateChange}\n                    selectorName={CurrentData?.name}\n                    ListComp={CurrentData.ListComp}\n                  />\n                </Selector>\n              ))}\n            </SelectorsList>\n          </LeftSide>\n\n          <RightSide>\n            <SelectorContent\n              data={CurrentData && CurrentData.data ? CurrentData.data : selectors[0].data}\n              onSelect={onFilterStateChange}\n              selectorName={CurrentData?.name}\n              ListComp={CurrentData.ListComp}\n            />\n          </RightSide>\n        </Bottom>\n      </FilterContainer>\n    </ModalDefSt>\n  );\n};\n\nconst ModalDefSt = styled(ModalDefault)`\n  height: 98vh;\n  @media screen and (min-width: 768px) {\n    width: 680px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n  gap: 12px;\n\n  max-width: 100%;\n\n  min-height: 100%;\n  max-height: 100%;\n\n  padding: 8px;\n  overflow: hidden;\n\n  color: inherit;\n\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n  @media screen and (min-width: 768px) {\n    padding: 16px;\n  }\n`;\n\nconst DatePickers = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 16px;\n\n  color: inherit;\n\n  width: 100%;\n`;\nconst InputDate = styled.input`\n  color: inherit;\n  font-family: inherit;\n  fill: inherit;\n\n  height: 26px;\n  padding: 5px 8px;\n  width: 100%;\n\n  border-radius: 2px;\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n  color: ${({ theme }) => theme.fillColorHeader};\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n`;\n\nconst Bottom = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 16px;\n\n  width: 100%;\n  max-width: 100%;\n  min-height: 100%;\n  max-height: 100%;\n\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\nconst Side = styled.div`\n  position: relative;\n\n  max-height: 100%;\n  overflow: hidden;\n`;\nconst LeftSide = styled(Side)``;\nconst RightSide = styled(Side)`\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nconst SelectorsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: min-content;\n  gap: 12px;\n\n  max-height: 100%;\n  overflow: auto;\n`;\n\nexport default Filter;\n","import { useState } from 'react';\nimport ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport { useModalProvider } from 'components/ModalProvider/ModalProvider';\nimport { iconId } from 'data';\nimport styled from 'styled-components';\nimport { useTable } from '../TableList';\n\nimport SearchParamInput from './SearchParamInput/SearchParamInput';\nimport Filter from 'components/Filter/Filter';\n\nconst TableFilter: React.FC = () => {\n  const modal = useModalProvider();\n  const [searchParam, setSearchParam] = useState<any>({});\n  const { tableSearchParams = [], filter } = useTable();\n\n  function onSelect(item: any) {\n    console.log(item);\n    setSearchParam(item);\n  }\n\n  return (\n    <FilterContainer isFilter={filter}>\n      {filter && (\n        <ButtonIcon\n          iconId={iconId.filterOff}\n          size=\"28px\"\n          variant=\"onlyIcon\"\n          onClick={() => {\n            modal.handleOpenModal({ ModalChildren: Filter });\n          }}\n        />\n      )}\n\n      <StyledLabel>\n        <SearchInput type=\"text\" placeholder=\"Пошук\" />\n      </StyledLabel>\n\n      <SearchParamInput {...{ data: tableSearchParams, onSelect, searchParam, defaultValue: searchParam?.title }} />\n\n      <ButtonIcon iconId={iconId.search} size=\"28px\" variant=\"onlyIconFilled\" />\n    </FilterContainer>\n  );\n};\n// <{ filter?: boolean }>\n// grid-template-columns: ${({ filter }) => {\n// console.log(filter);\n// return filter ? 'min-content 1.2fr 1fr min-content' : '1.2fr 1fr min-content';\n// }};\nconst FilterContainer = styled.div<{ isFilter?: boolean }>`\n  display: grid;\n  grid-template-columns: ${({ isFilter }) =>\n    isFilter ? 'min-content 1.2fr 1fr min-content' : '1.2fr 1fr min-content'};\n  grid-template-rows: 28px;\n  gap: 8px;\n\n  color: inherit;\n`;\n\nconst StyledLabel = styled.label`\n  position: relative;\n\n  border-style: none;\n  border-image: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 2px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus-within {\n    &::before {\n      width: 100%;\n    }\n  }\n`;\nconst SearchInput = styled.input`\n  height: 100%;\n  width: 100%;\n  padding: 4px 8px;\n\n  font-size: 12px;\n  font-family: inherit;\n  color: inherit;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n  background-color: transparent;\n\n  border-style: none;\n  border-bottom: 1px solid ${({ theme }) => theme.globals.inputBorder};\n  &:hover,\n  &:focus {\n    /* border-bottom-color: ${({ theme }) => theme.accentColor.hover}; */\n    outline-style: none;\n  }\n`;\nexport default TableFilter;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\n\nimport styled from 'styled-components';\nimport { TableActionsProps } from '../TableList';\n\nconst TableActions: React.FC<TableActionsProps> = ({ top, bottom }) => {\n  return (\n    <Menu>\n      <List>\n        <Left top={!!top}>\n          {top &&\n            top.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIcon\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                iconSize=\"80%\"\n                {...props}\n              />\n            ))}\n        </Left>\n\n        <Separator />\n\n        <Right bottom={!!bottom}>\n          {bottom &&\n            bottom.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIconFilled\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                // iconSize=\"80%\"\n                {...props}\n              />\n            ))}\n        </Right>\n      </List>\n    </Menu>\n  );\n};\n\nconst Menu = styled.div`\n  flex-grow: 1;\n\n  display: flex;\n  justify-content: flex-end;\n`;\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  /* min-height: 48px; */\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  width: 100%;\n`;\nconst Left = styled(Content)<{ top: boolean }>``;\n\nconst Right = styled(Content)<{ bottom: boolean }>``;\n\nconst Separator = styled.div`\n  position: relative;\n\n  height: 100%;\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 50%;\n    height: 100%;\n    width: 1px;\n    border-right: 1px solid ${({ theme }) => theme.trBorderClr};\n  }\n`;\n\nexport default TableActions;\n","import React from 'react';\nimport TableFilter from './TableFilter/TableFilter';\nimport styled from 'styled-components';\nimport { useTable } from './TableList';\nimport TableActions from './TableActions/TableActions';\nimport DeviceConrol from 'components/DeviceTypeInformer/DeviceTypeController';\n\nconst TableOverHead: React.FC = () => {\n  const { tableActions } = useTable();\n  return (\n    <OverHead>\n      <TableFilter />\n\n      <DeviceConrol.MinDesktop>\n        <TableActions {...tableActions} />\n      </DeviceConrol.MinDesktop>\n    </OverHead>\n  );\n};\n\nconst OverHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 8px;\n  @media screen and (min-width: 480px) {\n    padding: 20px 8px 16px;\n  }\n`;\nexport default TableOverHead;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useTable } from './TableList';\n\nconst TableFooter: React.FC = () => {\n  const { selectedRows = [] } = useTable();\n  const [rowsAmountSum, setRowsAmountSum] = useState<number>(0);\n\n  useEffect(() => {\n    const countedSum = selectedRows.reduce(\n      (acc: number, { amount, type }: { amount: number; type: string }) =>\n        type !== 'TRANSFER' ? acc + amount : acc + 0,\n      0\n    );\n\n    setRowsAmountSum(countedSum);\n  }, [selectedRows.length, selectedRows, rowsAmountSum]);\n\n  return (\n    <Footer>\n      <Wrapper>\n        <span>Обрано:</span>\n        <span>{selectedRows?.length}</span>\n      </Wrapper>\n\n      <Wrapper>\n        <span>Сума:</span>\n        <span>{rowsAmountSum}</span>\n      </Wrapper>\n    </Footer>\n  );\n};\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 4px 8px;\n  width: 100%;\n  height: 100%;\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport default TableFooter;\n","import React from 'react';\nimport { useContext, createContext, useRef, useState } from 'react';\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\nimport AppLoader from 'components/AppLoader/AppLoader';\nimport QuickActions from './QuickActions/QuickActions';\nimport TableOverHead from './TableOverHead';\nimport TableFooter from './TableFooter';\nimport styled from 'styled-components';\nimport { CellTittleProps } from './TebleCells/CellTitle';\nimport { SelectItem } from './TableFilter/SearchParamInput/SearchParamInput';\nimport { MaxToTabletXl } from 'components/DeviceTypeInformer/DeviceTypeController';\n\nexport type ITableListProps = {\n  tableTitles?: CellTittleProps[];\n  tableSearchParams?: SelectItem[];\n  tableData?: any[];\n  isLoading?: boolean;\n  RowActionsComp?: React.ReactNode;\n  quickActions?: {\n    ActionsStart?: React.ReactNode;\n    ActionsEnd?: React.ReactNode;\n  };\n  tableActions?: TableActionsProps;\n  TableActionsComp?: React.ReactNode;\n  filter?: boolean;\n  search?: boolean;\n  footer?: boolean;\n  checkBoxes?: boolean;\n  rowGrid?: any;\n  children?: React.ReactNode;\n};\n\nexport interface TableActionsProps {\n  top?: any[];\n  bottom?: any[];\n  footer?: boolean;\n}\n\nexport type TableSortParamsType = { descending: boolean; dataKey: string };\nexport type OnRowClickType = ({ ev, _id, data }: { ev: MouseEvent; _id: string; data: any }) => typeof ev;\n\nexport interface ITableListContext {\n  onSelectRow?: ({ ev, rowData }: { ev: Event; rowData: any }) => void;\n  onUnselectRow?: ({ ev, rowData }: { ev: Event; rowData: any }) => void;\n  selectedRows?: any[];\n  onRowClick?: OnRowClickType;\n  rowRef?: React.MutableRefObject<HTMLElement | undefined>;\n  sortParams?: TableSortParamsType;\n\n  handleTableSort?: (sortParams: TableSortParamsType) => void;\n}\n\nexport const TableCTX = createContext<ITableListContext & ITableListProps>({});\nexport const useTable = () => useContext(TableCTX);\n\nconst TableList: React.FC<ITableListProps> = ({\n  tableData = [],\n  isLoading = false,\n  RowActionsComp,\n  TableActionsComp,\n  tableTitles,\n  tableSearchParams,\n  tableActions,\n  footer,\n  ...props\n}) => {\n  const [sortParams, setSortParams] = useState<TableSortParamsType>();\n  const [selectedRows, setSelectedRows] = useState<{ _id: string; amount?: number; type?: string }[] | any[]>([]);\n  const rowRef = useRef<HTMLElement>();\n\n  const rowGrid = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${tableTitles?.length}, min-content)`,\n  };\n\n  function onSelectRow({ rowData }: { ev?: Event; rowData: any }) {\n    setSelectedRows(prev => [rowData, ...prev]);\n  }\n  function onUnselectRow({ rowData }: { ev?: Event; rowData: { _id: string } }) {\n    setSelectedRows(prev => prev.filter(row => row._id !== rowData._id));\n  }\n  function handleTableSort(sortParams: TableSortParamsType) {\n    setSortParams(sortParams);\n  }\n\n  const CTX = {\n    tableSearchParams,\n    tableTitles,\n    rowGrid,\n    rowRef,\n    selectedRows,\n    onSelectRow,\n    onUnselectRow,\n    tableData,\n    isLoading,\n    RowActionsComp,\n    sortParams,\n    handleTableSort,\n    tableActions,\n    ...props,\n  };\n\n  return (\n    <Table>\n      <TableCTX.Provider value={CTX}>\n        <AppLoader isLoading={isLoading} />\n\n        <TableOverHead />\n\n        <TableScroll>\n          <TableHead />\n\n          {tableData.length !== 0 ? <TableBody /> : <NoData>Дані відсутні</NoData>}\n\n          <MaxToTabletXl>{tableActions ? <QuickActions {...tableActions} footer={footer} /> : null}</MaxToTabletXl>\n        </TableScroll>\n\n        {footer && <TableFooter />}\n      </TableCTX.Provider>\n    </Table>\n  );\n};\n\n// import cloneDeep from 'lodash.clonedeep';\n// import { applyFounder } from 'components/BlockWithList/BlockUtils/founder';\n\nconst NoData = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 100%;\n`;\nconst Table = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr min-content;\n\n  position: relative;\n\n  height: 100%;\n  width: 100%;\n`;\nconst TableScroll = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px 1fr min-content;\n\n  /* position: relative; */\n\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n`;\n\nexport default TableList;\n"],"names":["takeFullGridArea","css","_templateObject","_taggedTemplateLiteral","takeFullPlace","_templateObject2","_templateObject3","StCellHead","styled","_ref2","width","Wrapper","Content","Top","_templateObject4","_ref3","align","concat","Bottom","_templateObject5","_ref4","StButtonIcon","ButtonIcon","_templateObject6","_ref5","theme","fillColor","_ref6","_ref7","accentColor","base","_ref8","descending","WidthChanger","_templateObject7","_ref9","trBorderClr","_ref","onClick","idx","top","bottom","props","_objectWithoutProperties","_excluded","_useTable","useTable","handleTableSort","sortParams","_jsxs","_objectSpread","children","className","name","dataKey","sort","_jsx","variant","iconId","iconSize","size","_Fragment","type","StLabel","checked","onChange","_ref$id","id","_ref$checked","_ref$size","icon","htmlFor","SvgIcon","tableData","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","some","setSome","_useState5","_useState6","everyOn","setEveryOn","_useState7","_useState8","everyOff","setEveryOff","useEffect","CheckBox","ev","StCell","title","CheckBoxHead","ThRow","ThRowStickyEl","ThRowData","_useTable$tableTitles","tableTitles","checkBoxes","rowGrid","CellCheckBoxHead","style","map","item","CellTitle","THead","tableBackgroundColor","TableHeadRow","RowCNTXT","createContext","useRow","useContext","value","Provider","args","data","nestedDataKey","def","CellBase","console","log","titleInfo","rowData","_titleInfo$width","contentTop","getNestedData","contentBottom","wraped","StDate","StTime","wrap","date","year","month","day","hours","minutes","seconds","dateInfo","Date","getFullYear","toString","padStart","getMonth","getDate","getHours","getMinutes","getSeconds","DateComp","variantsMap","outlined","filled","text","StStatusComp","color","fill","borderColor","Label","_ref$status","_ref$variant","statusData","statusDataMap","descr","label","StatusComp","CellsMap","cell","Cell","cellDbl","CellTextDbl","dateSimple","CellDateSimple","CellStatus","dateDbl","Row","light","RowStickyEl","StRowData","gridRepeat","_props$rowData","isActionsOpen","setIsActionsOpen","ctxValue","handleToggleActions","handleCloseActions","_id","RowContext","length","CellComp","action","Function","TBody","rowRef","onRowClick","_rowRef$current2","MouseEvent","rowEl","target","HTMLElement","closest","current","classList","remove","_rowEl2","find","el","_rowEl","_rowRef$current","add","toggle","TableRow","ToggleButton","isShown","backgroundColorSecondary","backgroundColorLight","globals","timingFnMui","_ref10","Menu","_ref11","footer","List","_ref12","_ref13","_ref14","timingFunctionMain","_ref15","_ref16","_templateObject8","_templateObject9","_templateObject10","Separator","_templateObject11","_ref17","_ref18","setIsShown","onMenuClose","KeyboardEvent","code","document","addEventListener","removeEventListener","disableChek","disabled","tabIndex","_excluded2","StyledLabel","InputBox","StyledInput","inputBorder","backgroundColorMain","inputPlaceholderColor","ParamsListContainer","isOpen","_ref19","ParamsList","_ref20","fillColorHeader","ListItem","_ref21","listEmpty","_ref22","defaultValue","selectedItem","onSelect","searchParam","inputValue","setInputValue","filteredData","setFilteredData","setCurrent","setIsOpen","handleToggleList","state","filter","toLowerCase","includes","placeholder","_ev$target","prev","_defineProperty","onSelectItemClick","MOBILE_END","TABLET_END","TABLET_MAX_START","DESKTOP_START","MaxToTablet","useMediaQuery","maxWidth","MaxToTabletXl","MinDesktop","minWidth","Tablet","TabletXL","AllTablets","LiitleMobile","Mobile","MinTabletXl","NotMobile","NotMobileRoute","redirectTo","Outlet","Navigate","to","MobileRoute","MaxTabletRoute","MinTabletXlRoute","MinDesktopRoute","SelectorContainer","StyledSelector","fontColorHeader","isCurrent","SelectorBody","StOpenButton","SelectorList","_ref$label","_ref$data","onSelectorClick","selectorName","currentIdx","onCheckAll","selectedItems","setSelectedItem","isActive","setIsActive","Header","Title","_ref$title","Filter","FilterBtn","filterOptions","onOptSelect","opt","Footer","onSubmit","ModalFormContainer","fontColor","ModalMain","filterOn","MainScroll","beforeSubmit","afterSubmit","beforeClose","onReset","afterClose","handleCloseModal","useModalProvider","preventDefault","ModalHeader","ModalFilter","option","ModalFooter","SearchInput","hover","StResetInputButton","_ref$isOpen","ListComp","setSearchParam","mapedData","StyledItem","isChecked","setIsChecked","SelectsListItem","selectorsArr","SelectsList","ModalDefSt","ModalDefault","FilterContainer","DatePickers","InputDate","Side","LeftSide","RightSide","SelectorsList","selectors","CurrentData","setCurrentData","setCurrentIdx","onFilterStateChange","Selector","SelectorContent","isFilter","modal","_useTable$tableSearch","tableSearchParams","handleOpenModal","ModalChildren","SearchParamInput","Left","Right","OverHead","tableActions","TableFilter","DeviceConrol","TableActions","_useTable$selectedRow","selectedRows","rowsAmountSum","setRowsAmountSum","countedSum","reduce","acc","amount","TableCTX","NoData","Table","TableScroll","_ref$tableData","_ref$isLoading","isLoading","RowActionsComp","TableActionsComp","setSortParams","setSelectedRows","useRef","display","gridTemplateColumns","CTX","onSelectRow","_toConsumableArray","onUnselectRow","row","AppLoader","TableOverHead","TableHead","TableBody","QuickActions","TableFooter"],"sourceRoot":""}