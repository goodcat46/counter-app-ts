{"version":3,"file":"static/js/961.2e0a8d3a.chunk.js","mappings":"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","sources":["components/ProfileCard/ProfileCard.tsx","components/AppPages/PageHome.tsx"],"sourcesContent":["import { useAuthSelector } from 'redux/selectors.store';\nimport styled from 'styled-components';\n\nconst ProfileCard = () => {\n  const { name, email, avatarURL } = useAuthSelector().user;\n\n  return (\n    <Card>\n      <Avatar>\n        <img src={avatarURL} alt=\"karina\" width={100} height={100} />\n      </Avatar>\n      <ProfileWrapper>\n        <ProfileName>{name}</ProfileName>\n        <ProfileEmail>{email}</ProfileEmail>\n      </ProfileWrapper>\n    </Card>\n  );\n};\nconst Card = styled.div`\n  display: flex;\n`;\nconst Avatar = styled.div`\n  min-width: 64px;\n  max-width: 64px;\n  height: 64px;\n  overflow: hidden;\n  border-radius: 50%;\n`;\nconst ProfileWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px;\n\n  height: 100%;\n`;\nconst ProfileName = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`;\nconst ProfileEmail = styled.div`\n  font-size: 10px;\n  line-height: 16px;\n`;\nexport default ProfileCard;\n","import ButtonIcon from 'components/ButtonIcon/ButtonIcon';\nimport ProfileCard from 'components/ProfileCard/ProfileCard';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\n\nconst companyTypes = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\nconst companies = [\n  { _id: '', name: 'Рога і копита' },\n  { _id: '', name: 'Казінакі макі' },\n];\nconst permissions = [\n  { _id: '1', status: 'accepted', company: companies[0], user: '', role: { _id: '', name: 'manager' } },\n  { _id: '2', status: 'pending', company: companies[1], user: '', role: { _id: '', name: 'counter' } },\n];\nconsole.log(permissions);\n\nconst PageHome: React.FC = () => {\n  const [serchParams, setSearchParaps] = useSearchParams({ companyType: companyTypes[0].param });\n  function onSearchParamClick(param: string) {\n    setSearchParaps({ companyType: param });\n  }\n  function isActive(param: string) {\n    return serchParams.get('companyType') === param ? 'active' : '';\n  }\n\n  useEffect(() => {\n    setSearchParaps({ companyType: companyTypes[0].param });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>\n          <ProfileCard />\n        </ProfileInfo>\n\n        <FilterButtons>\n          {companyTypes.map(item => (\n            <StButtonIcon\n              key={item.param}\n              variant=\"def\"\n              onClick={() => onSearchParamClick(item.param)}\n              className={isActive(item.param)}\n            >\n              {item.title}\n            </StButtonIcon>\n          ))}\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        {/* <Outlet /> */}\n\n        <TableList\n          {...{\n            filter: false,\n            search: true,\n            checkboxes: false,\n          }}\n        />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace}\n`;\n\nconst ProfileInfo = styled.div`\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-rows: 32px;\n\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n    grid-auto-rows: 44px;\n    max-width: 768px;\n  }\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.borderColor};\n  }\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 1px;\n    width: 100%;\n    height: 5px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default PageHome;\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","Avatar","_templateObject2","ProfileWrapper","_templateObject3","ProfileName","_templateObject4","ProfileEmail","_templateObject5","_useAuthSelector$user","useAuthSelector","user","name","email","avatarURL","_jsxs","children","_jsx","src","alt","width","height","companyTypes","title","param","companies","_id","permissions","status","company","role","console","log","Page","takeFullGridArea","Top","_ref","theme","tableBackgroundColor","takeFullPlace","Bottom","ProfileInfo","FilterButtons","StButtonIcon","ButtonIcon","_templateObject6","_ref2","borderColor","_ref3","globals","timingFnMui","_ref4","accentColor","base","_useSearchParams","useSearchParams","companyType","_useSearchParams2","_slicedToArray","serchParams","setSearchParaps","useEffect","ProfileCard","map","item","variant","onClick","className","get","TableList","filter","search","checkboxes"],"sourceRoot":""}