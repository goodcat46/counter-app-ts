{"version":3,"file":"static/js/264.e1e0fd84.chunk.js","mappings":"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","sources":["components/Modals/EditOfferModal.tsx"],"sourcesContent":["import { ModalFormProps } from '../ModalForm';\nimport { OfferDimensionsFormArea } from '../Forms/offers/components/OfferDimensionsFormArea';\nimport ModalBase from '../atoms/Modal';\nimport { t } from '../../lang';\nimport { toOfferFormData } from '../../utils';\nimport { useEffect } from 'react';\nimport { OfferTypeEnum } from '../../types/offers/offers.types';\nimport { OfferMeasurementFormArea } from 'components/Forms/offers/components/OfferMeasurementFormArea';\nimport { OfferBaseInfoFormArea } from '../Forms/offers/components/OfferBaseInfoFormArea';\nimport FlexBox from '../atoms/FlexBox';\nimport { AppLoaderSpiner } from '../atoms/AppLoaderSpiner';\nimport { Text } from '../atoms/Text';\nimport TabSelector from '../atoms/TabSelector';\nimport { productsFilterOptions } from '../../data/modalFilterOptions.data';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { LoadersProvider } from 'Providers/Loaders/LoaderProvider';\nimport { OfferFormPropertiesArea } from '../Forms/offers/components/OfferFormPropertiesArea';\nimport useOffersService from '../../hooks/useProductsService.hook';\nimport { OfferFormImagesArea } from '../Forms/offers/components/OfferFormImagesArea';\nimport { useAppRouter, useCurrentOffer } from '../../hooks';\nimport { OfferFormCategoriesArea } from '../Forms/offers/components/OfferFormCategoriesArea';\nimport { OfferLoadersData, OfferLoadersKey } from '../Forms/offers/types';\n\nexport interface EditOfferModalProps extends ModalFormProps {\n  _id: string;\n  copy?: boolean;\n}\n\nconst EditOfferModal: React.FC<EditOfferModalProps> = ({ onClose, _id, copy }) => {\n  const currentOffer = useCurrentOffer({ _id: _id });\n  const service = useOffersService();\n  const loaders = useLoaders<OfferLoadersKey, OfferLoadersData>(\n    { offer_refresh: { content: 'Refreshing...' }, offer_update: { content: 'Updating...' } },\n    {\n      formData: currentOffer ? toOfferFormData(currentOffer) : { type: OfferTypeEnum.GOODS },\n    }\n  );\n\n  const { setData, state } = loaders;\n\n  const offerId = copy ? state.formData?._id : _id;\n\n  const router = useAppRouter();\n\n  useEffect(() => {\n    service.getProductFullInfo({\n      data: { _id },\n      onSuccess: loaders.onSuccess('offer_refresh', data => {\n        if (copy) {\n          data._id = '';\n        }\n        // const formData = toOfferFormData(data);\n        setData('formData', toOfferFormData(data));\n        router.push({ query: { offerId: _id } });\n      }),\n      onLoading: loaders.onLoading('offer_refresh'),\n    });\n\n    // eslint-disable-next-line\n  }, [_id, copy]);\n\n  return (\n    <ModalBase\n      fillHeight\n      title={!copy ? t('Update offer') : t('Copy offer')}\n      onClose={onClose}\n      extraHeader={\n        <TabSelector\n          filterOptions={productsFilterOptions}\n          defaultValue={state?.formData?.type ?? undefined}\n          preventDefault\n          onOptSelect={o => {\n            setData('formData', p => ({ ...p, type: o.value }));\n          }}\n        />\n      }\n    >\n      <LoadersProvider value={loaders}>\n        {loaders.isLoading?.offer ? (\n          <FlexBox fillWidth padding={'24px'} alignItems={'center'} gap={16}>\n            <AppLoaderSpiner size={52} />\n\n            <Text>{t('Loading info about offer...')}</Text>\n          </FlexBox>\n        ) : (\n          <FlexBox padding={'0 8px 16px'}>\n            <OfferBaseInfoFormArea\n              _id={offerId}\n              edit={!copy}\n              type={state.formData?.type}\n              defaultValues={state?.formData}\n              onSuccess={data => {\n                setData('formData', copy ? { ...toOfferFormData(data), _id: data._id } : toOfferFormData(data));\n              }}\n            />\n\n            <OfferFormCategoriesArea\n              _id={offerId}\n              offer={currentOffer}\n              defaultValues={state.formData?.categories}\n              disabled={!state.formData}\n            />\n\n            <OfferFormPropertiesArea\n              _id={offerId}\n              offer={currentOffer}\n              defaultValues={state.formData?.properties}\n              disabled={!state.formData}\n            />\n\n            <OfferFormImagesArea\n              offer={currentOffer}\n              defaultValues={state?.formData?.images}\n              disabled={!state?.formData}\n              _id={copy ? state?.formData?._id : _id}\n            />\n\n            <OfferDimensionsFormArea\n              offer={currentOffer}\n              defaultValues={state.formData?.dimensions}\n              disabled={copy ? !(state.formData?._id && state.formData) : !_id}\n              _id={offerId}\n            />\n            <OfferMeasurementFormArea\n              offer={currentOffer}\n              defaultValues={state.formData?.measurement}\n              disabled={copy ? !(state.formData?._id && state.formData) : !_id}\n              _id={offerId}\n            />\n          </FlexBox>\n        )}\n      </LoadersProvider>\n    </ModalBase>\n  );\n};\n\nexport default EditOfferModal;\n"],"names":["_ref","_state$formData","_state$formData$type","_state$formData2","_loaders$isLoading","_state$formData3","_state$formData4","_state$formData5","_state$formData6","_state$formData7","_state$formData8","_state$formData9","_state$formData10","_state$formData11","onClose","_id","copy","currentOffer","useCurrentOffer","service","useOffersService","loaders","useLoaders","offer_refresh","content","offer_update","formData","toOfferFormData","type","OfferTypeEnum","setData","state","offerId","router","useAppRouter","useEffect","getProductFullInfo","data","onSuccess","push","query","onLoading","_jsx","ModalBase","fillHeight","title","t","extraHeader","TabSelector","filterOptions","productsFilterOptions","defaultValue","undefined","preventDefault","onOptSelect","o","p","_objectSpread","value","children","LoadersProvider","isLoading","offer","_jsxs","FlexBox","fillWidth","padding","alignItems","gap","AppLoaderSpiner","size","Text","OfferBaseInfoFormArea","edit","defaultValues","OfferFormCategoriesArea","categories","disabled","OfferFormPropertiesArea","properties","OfferFormImagesArea","images","OfferDimensionsFormArea","dimensions","OfferMeasurementFormArea","measurement"],"sourceRoot":""}