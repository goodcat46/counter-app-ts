{"version":3,"file":"static/js/807.46e2976c.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/Overlays/OverlayBase.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/offers/tabs/SalesTab.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Overlays/SelectCategoriesOverlay.tsx","components/Overviews/offer/components/OfferOverviewCategoriesCell.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormProductDefaultsOverlay.tsx","components/Overlays/FormProductImagesOverlay.tsx","components/Overviews/offer/OfferOverviewXL.tsx","components/Overviews/offer/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/offer/components/OfferOverviewDefaultsCell.tsx","components/Overviews/offer/components/OfferOverviewImagesCell.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Overviews/components/OverviewTextCell.tsx","data/warehauses.data.ts"],"sourcesContent":["import { useOverlayService } from './OverlayStackProvider';\nimport React, { MouseEventHandler, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              overlaySrv.remove(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const offersSrv = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ _id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      offersSrv\n        .getOne({\n          data: {\n            params: {\n              _id: offerId,\n              getVariations: false,\n              getPrices: false,\n            },\n          },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .catch();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    offersSrv.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      offersSrv.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import styled from 'styled-components';\nimport React, { memo } from 'react';\nimport { OverlayHeader } from './index';\n\nexport interface DrawerBaseProps extends Omit<React.FormHTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onReset'> {\n  footer?: boolean;\n  onClosePress?: () => void;\n  onBackPress?: () => void;\n  isLoading?: boolean;\n  extraFooter?: React.ReactNode;\n  extraHeader?: React.ReactNode;\n  fillWidth?: boolean;\n  fillHeight?: boolean;\n  fitContentV?: boolean;\n  fitContentH?: boolean;\n  height?: string;\n  width?: string;\n  canSubmit?: boolean;\n  okButton?: boolean;\n}\n\nconst DrawerBase: React.FC<DrawerBaseProps> = ({\n  title,\n  footer = false,\n  children,\n  extraFooter,\n  extraHeader,\n  isLoading = false,\n  onClosePress,\n  onBackPress,\n  okButton,\n  canSubmit,\n  ...props\n}) => {\n  return (\n    <DrawerContainer className=\"modal_base\" {...props}>\n      <OverlayHeader\n        onBackPress={onBackPress}\n        onClosePress={onClosePress}\n        title={title}\n        canSubmit={canSubmit}\n        okButton={okButton}\n      >\n        {extraHeader}\n      </OverlayHeader>\n\n      <Content className=\"main\">{children}</Content>\n    </DrawerContainer>\n  );\n};\n\nconst DrawerContainer = styled.div<\n  Pick<DrawerBaseProps, 'fillHeight' | 'fillWidth' | 'fitContentH' | 'fitContentV' | 'width' | 'height'>\n>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr max-content;\n\n  position: relative;\n  padding: 0 8px;\n\n  min-height: 200px;\n  max-height: 90vh;\n\n  color: ${p => p.theme.fontColorSidebar};\n  width: ${({ width = '480px', fillWidth, fitContentH }) =>\n    (fillWidth && '100vw') || (fitContentH && 'max-content') || width};\n  height: ${({ height = '', fillHeight, fitContentV }) =>\n    (fillHeight && '90vh') || (fitContentV && 'max-content') || height};\n\n  min-width: 250px;\n  max-width: 100%;\n\n  //overflow: hidden;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  border-radius: 2px;\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: ${p => (p.fillWidth ? '98vw' : '450px')};\n  }\n`;\n\nconst Content = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  overflow: auto;\n  position: relative;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\n\nexport default memo(DrawerBase);\n","import styled from 'styled-components';\nimport FlexBox, { FlexForm } from '../atoms/FlexBox';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { ObjectEntries, toVariationFormData, toVariationReqData } from '../../utils';\nimport { IVariationFormData, VariationEntity } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../Forms/components/FormAfterSubmitOptions';\nimport { OverlayFooter } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer, useCurrentVariation } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport LangButtonsGroup from '../atoms/LangButtonsGroup';\nimport { UUID } from '../../types/utils.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { ProperiesGroupEntity, PropertyEntity, PropertyValueEntity } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport DrawerBase from './OverlayBase';\nimport { PropertiesGroupSelect } from '../atoms/PropertiesGroupSelect';\nimport { AccordionFormArea } from '../Forms/FormArea/AccordionForm';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  updateId?: UUID;\n\n  create?: boolean;\n\n  defaultState?: Partial<VariationEntity>;\n}\nconst _schema = yup.object().shape({\n  label: yup.string().required().min(5).max(128),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  onSubmit,\n  updateId,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const state = useProductsSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useLoaders<'create' | 'update' | 'refresh'>();\n  const { variation } = useCurrentVariation({ id: updateId });\n  const currentOffer = useCurrentOffer({ _id: variation?.offer?._id || offerId || offer?._id });\n\n  const submitOptions = useAfterSubmitOptions();\n\n  const [currentTemplate, setCurrentTemplate] = useState<ProperiesGroupEntity>();\n\n  const formMethods = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      variation\n        ? { ...variation, offer: currentOffer, template: currentTemplate }\n        : { offer: currentOffer, template: currentTemplate },\n      currentOffer\n    ),\n    resolver: yupResolver(_schema as never),\n    reValidateMode: 'onSubmit',\n  });\n\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  const [selectedPropsMap, setSelectedPropsMap] = useState<Record<string, PropertyValueEntity>>(() => {\n    const init: Record<string, PropertyValueEntity> = {};\n    for (const [propId, valueId] of ObjectEntries(formValues.propertiesMap ?? {})) {\n      const value = state.propertiesDataMap?.[valueId];\n      if (value) {\n        init[propId] = value;\n      }\n    }\n    return init;\n  });\n\n  const propertiesList = useMemo(() => {\n    const _rootId = currentTemplate?._id;\n    const _propertiesList: PropertyEntity[] = [];\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId ?? 'def'] ?? [];\n\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const { label: compiledLabel } = useMemo(() => {\n    // const _sortedIds = Object.keys(selectedPropsMap ?? {}).sort((prev, next) => prev.localeCompare(next));\n\n    const _sorted = Object.entries(selectedPropsMap).sort((prev, next) => {\n      return prev[0].localeCompare(next[0]);\n    });\n    const _labels: string[] = currentOffer?.label ? [currentOffer?.label] : [];\n\n    for (const entry of _sorted) {\n      const value = entry[1];\n      value?.label && _labels.push(value?.label);\n    }\n    const _base = !_sorted?.length\n      ? variation?.label ?? `${currentOffer?.label}. {{VARIATION_LABEL}}`\n      : _labels.join('. ');\n\n    return { label: _base };\n  }, [currentOffer?.label, selectedPropsMap, variation?.label]);\n\n  useEffect(() => {\n    setValue('label', compiledLabel);\n  }, [compiledLabel, setValue, variation]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (updateId) {\n        service.updateVariationById({\n          data: toVariationReqData(data, updateId),\n          onSuccess: data => {\n            console.log('updateVariationById onSuccess', data);\n\n            onClose && onClose();\n          },\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('update'),\n        });\n      } else {\n        service.createVariation({\n          data: toVariationReqData(data),\n          onSuccess: data => {\n            submitOptions.state.close && onClose && onClose();\n            submitOptions.state.clear && reset();\n          },\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('create'),\n        });\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [loaders, onClose, reset, service, submitOptions.state.clear, submitOptions.state.close, updateId]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string) => {\n      setValue(`propertiesMap.${parentId}`, id);\n      const value = state.propertiesDataMap?.[id];\n      if (value) {\n        setSelectedPropsMap(p => ({ ...p, [parentId]: value }));\n      }\n    },\n    [setValue, state.propertiesDataMap]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setSelectedPropsMap({});\n  }, [setValue]);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  return (\n    <DrawerBase fillHeight onBackPress={onClose} okButton={false} title={title}>\n      <FormContainer\n        onSubmit={handleSubmit(onValid, errors => {\n          console.error('[SUBMIT ERROR]', errors);\n        })}\n        onReset={handleClearMap}\n        {...props}\n      >\n        <Content flex={1} fillWidth overflow={'auto'} gap={12}>\n          <AccordionFormArea label={'Offer'} expandable={false} hideFooter>\n            <InputLabel label={t('Offer label')} error={errors?.offer?._id} required disabled>\n              <InputText value={currentOffer?.label ?? undefined} placeholder={t('label')} required disabled />\n            </InputLabel>\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <InputLabel label={t('sku')} disabled>\n                <InputText value={currentOffer?.sku ?? undefined} placeholder={t('sku')} disabled />\n              </InputLabel>\n\n              <InputLabel label={t('barCode')} disabled>\n                <InputText value={currentOffer?.barCode ?? undefined} placeholder={t('barCode')} disabled />\n              </InputLabel>\n            </FlexBox>\n          </AccordionFormArea>\n\n          <AccordionFormArea label={'Main info'} expandable={false} hideFooter>\n            <InputLabel label={t('label')} error={errors.label}>\n              <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n            </InputLabel>\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <InputLabel label={t('sku')} error={errors.sku}>\n                <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n              </InputLabel>\n\n              <InputLabel label={t('barCode')} error={errors.barCode}>\n                <InputText {...register('barCode')} placeholder={t('barCode')} />\n              </InputLabel>\n            </FlexBox>\n\n            {/*<DimensionsInputs form={formMethods} />*/}\n          </AccordionFormArea>\n\n          <AccordionFormArea label={t('Properties')} expandable={false} hideFooter>\n            <PropertiesGroupSelect\n              onSelect={opt => {\n                setValue('template', opt);\n                setCurrentTemplate(opt);\n              }}\n              selected={currentTemplate}\n            />\n\n            <TemplateBox padding={'0 8px'} margin={'8px 0'}>\n              {renderPropertiesList}\n            </TemplateBox>\n          </AccordionFormArea>\n\n          {variation && (\n            <AccordionFormArea label={t('Cms information')} expandable={false} hideFooter>\n              <CmsConfigs padding={'8px 0'} fillWidth>\n                <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n                  <Text $size={13} $weight={500}>\n                    {t('Cms configs')}\n                  </Text>\n                </CmsConfigsHeader>\n\n                <Inputs>\n                  <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n                    <LangButtonsGroup disabled />\n                  </InputLabel>\n\n                  <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n                    <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n                  </InputLabel>\n                </Inputs>\n              </CmsConfigs>\n            </AccordionFormArea>\n          )}\n        </Content>\n\n        <OverlayFooter\n          loading={loaders.isLoading?.create}\n          resetButtonShown\n          submitButtonText={loaders.isLoading?.create ? 'Loading...' : updateId ? 'Підтвердити' : 'Додати'}\n          canSubmit={canSubmit}\n          extraFooter={\n            <ExtraFooterBox>\n              <FormAfterSubmitOptions {...submitOptions} />\n            </ExtraFooterBox>\n          }\n        />\n      </FormContainer>\n    </DrawerBase>\n  );\n};\n\nconst FormContainer = styled(FlexForm)`\n  flex: 1;\n  max-height: 100%;\n  height: 100vh;\n\n  width: 100%;\n  //padding: 0 12px;\n\n  overflow: hidden;\n\n  //max-width: 380px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst Inputs = styled(FlexBox)`\n  padding: 0 4px;\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { getIdRef } from '../../../../utils';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\nimport { PropertyEntity } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\nimport { IVariationTableData } from '../../../../types/offers/variations.types';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const page = usePageCurrentOffer();\n  const modalS = useModalProvider();\n  const currentOffer = page.currentOffer;\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, offerId: currentOffer._id },\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, PropertyEntity> = {};\n    for (const variation of currentOffer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [currentOffer?.variations]);\n\n  const tableConfig = useMemo((): ITableListProps<IVariationTableData> => {\n    return {\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: {\n                      updateId: currentId,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: { offer: page.currentOffer },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [loadData, modalS, onSelect, page.currentOffer, withActions]);\n\n  useEffect(() => {\n    if (currentOffer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n      tableData={currentOffer?.variations}\n      tableTitles={variationsTableTitles}\n      transformData={transformVariationTableData as never}\n    />\n  );\n};\nexport default VariationsTab;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { PriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { OnlyUUID } from 'redux/app-redux.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport CreatePriceModal from '../../../Modals/CreatePriceModal';\nimport { pricesColumnsForProductReview } from '../../../../data/priceManagement.data';\nimport { IBase } from '../../../../types/utils.types';\nimport { useAppDispatch } from '../../../../redux/store.store';\nimport { getPriceThunk } from '../../../../redux/priceManagement/priceManagement.thunks';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ _id: offerId });\n  const [selectedRow, setSelectedRoe] = useState<IBase>();\n  const loaders = useLoadersProvider<'prices' | 'price' | 'discounts' | 'discount'>();\n  const dispatch = useAppDispatch();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  const tableConfig = useMemo((): ITableListProps<PriceEntity> => {\n    return {\n      onRowClick: data => {\n        setSelectedRoe(data?.rowData);\n\n        if (onSelect) {\n          onSelect({ _id: data?._id || data?.rowData?._id || '' });\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id || selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: true },\n              { icon: 'copy', type: 'onlyIcon', disabled: true },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  dispatch(\n                    getPriceThunk({\n                      data: { params: { _id: currentId } },\n                      onLoading: loaders.onLoading('price', undefined, { content: 'Refreshing price info...' }),\n                      onSuccess: () => {\n                        modalS.open({\n                          ModalChildren: CreatePriceModal,\n                          modalChildrenProps: {\n                            offer: currentOffer,\n                            updateId: currentId,\n                          },\n                        });\n                      },\n                    })\n                  );\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: CreatePriceModal,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [withActions, onSelect, selectedRow?._id, loadData, dispatch, loaders, modalS, currentOffer]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n      tableData={currentOffer?.prices}\n      tableTitles={pricesColumnsForProductReview}\n    />\n  );\n};\n\nexport default PricesTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferOverviewAddsTabProps } from './types';\nimport { Text } from '../../../atoms/Text';\n\ninterface OfferSalesTabProps extends OfferOverviewAddsTabProps {}\nexport const SalesTab = (props: OfferSalesTabProps) => {\n  return (\n    <FlexBox padding={'16px'}>\n      <Text $size={16} $weight={600}>\n        In work\n      </Text>\n    </FlexBox>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\nimport { SalesTab } from './tabs/SalesTab';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { OfferOverlayLoaderKey } from '../../Overlays/FormProductDefaultsOverlay';\nimport { LoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\n\nenum RightSideOptionEnum {\n  Prices = 'Prices',\n  Variations = 'Variations',\n  Warehousing = 'Warehousing',\n  Sales = 'Sales',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(TabsList[0].value);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n      [RightSideOptionEnum.Sales]: <SalesTab withActions />,\n    };\n    return tabs?.[currentTab] ?? null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <LoadersProvider value={loaders}>\n      <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n        {isVisible && (\n          <ModalHeader\n            onBackPress={toggleVisibility}\n            renderTitle={\n              <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n                <Text $weight={600} $size={14}>\n                  {page?.currentOffer?.label}\n                </Text>\n\n                <Text $size={14}>{page?.currentOffer?.sku}</Text>\n              </FlexBox>\n            }\n          />\n        )}\n\n        <TabBox overflow={'hidden'} fillWidth flex={1}>\n          <TabSelector filterOptions={TabsList} onOptSelect={filterHandler} preventDefault />\n\n          {renderTab}\n        </TabBox>\n      </RightSide>\n    </LoadersProvider>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef, sortIds } from '../../utils';\nimport OfferCategoriesSelector from '../Forms/offers/categories/OfferCategoriesSelector';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { useCurrentOffer } from '../../hooks';\n\nexport interface FormSelectCategoriesOverlayProps extends CreatedOverlay {}\n\nconst OfferCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const currentOffer = useCurrentOffer();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const loaders = useLoaders<'update'>({ update: { content: 'Loadings...' } });\n  const initIds = sortIds(currentOffer?.categories?.map(p => p._id));\n\n  const [categoriesIds, setCategoriesIds] = useState<string[]>(initIds);\n\n  const canSubmit = useMemo(() => {\n    return initIds?.join(',') !== sortIds(categoriesIds).join(',');\n  }, [initIds, categoriesIds]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentOffer &&\n      service.updateById({\n        onLoading: loaders.onLoading('update'),\n        data: { ...getIdRef(currentOffer), data: { categories: categoriesIds }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setCategoriesIds(currentOffer?.categories.map(c => c._id));\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader\n        title={'Категорії'}\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        okButton\n        isLoading={loaders.isLoading?.update}\n      />\n\n      <Content padding={'0 0 8px 0'} flex={1} overflow={'auto'}>\n        <OfferCategoriesSelector\n          onChangeIds={setCategoriesIds}\n          options={directory}\n          defaultData={categoriesIds}\n          offer={currentOffer}\n        />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} loading={loaders.isLoading?.update} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default OfferCategoriesOverlay;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport OfferCategoriesOverlay from '../../../Overlays/SelectCategoriesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { OfferCategoryEntity } from '../../../../types/dir.types';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: OfferCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: OfferCategoryEntity;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { PropertyBaseEntity, PropertyEntity } from '../../types/offers/properties.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { PropertiesGroupSelect } from '../atoms/PropertiesGroupSelect';\nimport { useCurrentOffer } from '../../hooks';\nimport { sortIds } from '../../utils';\n\nexport interface FormSelectPropertiesProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  updateId?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  updateId,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentOffer = useCurrentOffer(offer);\n  const state = useProductsSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [currentTemplate, setCurrentTemlate] = useState<PropertyBaseEntity>();\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const initState = useMemo(() => {\n    return sortIds(currentOffer?.properties?.map(prop => prop._id));\n  }, [currentOffer?.properties]);\n\n  useEffect(() => {\n    if (initState?.length) {\n      setSelectedIds(initState);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const propertiesList = useMemo(() => {\n    const _rootId = currentTemplate?._id;\n    const _propertiesList: PropertyEntity[] = [];\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId ?? 'def'] ?? [];\n\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop && !prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const canSubmit = useMemo(() => {\n    return sortIds(initState)?.join(',') !== sortIds(selectedIds).join(',');\n  }, [initState, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = updateId ?? currentOffer?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentOffer?._id, onClose, onSubmit, selectedIds, service, updateId]\n  );\n\n  const handleSelect = useCallback((_parentId?: string, valueId: string = '') => {\n    setSelectedIds(prev => {\n      return prev.includes(valueId) ? prev.filter(el => el !== valueId) : [...prev, valueId];\n    });\n  }, []);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  useEffect(() => {\n    if (currentOffer?.properties) {\n      setSelectedIds(currentOffer?.properties.map(p => p._id));\n    }\n  }, [currentOffer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        title={(title || currentTemplate?.label) ?? ''}\n        okButton\n      />\n\n      <PropertiesGroupSelect onSelect={setCurrentTemlate} selected={currentTemplate} />\n\n      <PropertiesBox flex={1} overflow={'auto'}>\n        {renderPropertiesList}\n      </PropertiesBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst PropertiesBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { PropertyEntity, PropertyValueEntity } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: PropertyEntity;\n  selectedIds?: string[];\n  selectedItems?: PropertyValueEntity[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({\n  item,\n  selectedIds,\n  selectedItems,\n}) => {\n  const renderValues = useMemo(() => {\n    const _list = selectedItems?.length\n      ? selectedItems\n      : item.childrenList?.filter(el => selectedIds?.includes(el._id));\n\n    return _list?.map((value, index) => {\n      return (\n        <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n          {value.label}\n        </CellStyledComp.CategoryItem>\n      );\n    });\n  }, [item.childrenList, selectedIds, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/app-redux.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IWarehouse } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList isSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nexport interface FormProductDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum FormProductDefaultsTabs {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\nexport type OfferOverlayLoaderKey =\n  | keyof typeof FormProductDefaultsTabs\n  | `${keyof typeof FormProductDefaultsTabs}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const currentOffer = useCurrentOffer({ _id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    currentOffer?._id &&\n      productsS.setDefaults({\n        data: { _id: currentOffer?._id, defaults: toReqData(fData) as never, updateCurrent: true },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n\n  const renderTab = useMemo(() => {\n    const tabsMap: Record<FormProductDefaultsTabs, React.ReactNode> = {\n      [FormProductDefaultsTabs.warehouse]: (\n        <WarehousesTab withActions onSelect={handleSelect} selected={formValues?.warehouse} />\n      ),\n      [FormProductDefaultsTabs.price]: <PricesTab withActions onSelect={handleSelect} selected={formValues?.price} />,\n      [FormProductDefaultsTabs.variation]: (\n        <VariationsTab withActions onSelect={handleSelect} selected={formValues?.variation} />\n      ),\n      [FormProductDefaultsTabs.inventory]: (\n        <WarehousingTab withActions onSelect={handleSelect} selected={formValues?.inventory} />\n      ),\n      [FormProductDefaultsTabs.supplier]: (\n        <CounterpartyTab\n          withActions\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      ),\n    };\n\n    return tabsMap[tabs[currentTabIdx]?.value] ?? null;\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    formValues?.warehouse,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentOffer?.defaults;\n\n    const tabIs: Record<FormProductDefaultsTabs | string, boolean> = {\n      [tabs?.[currentTabIdx]?.value ?? '']: true,\n    };\n\n    if (tabIs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabIs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabIs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabIs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabIs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentOffer?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} onCreatePress={() => {}} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FormOfferImagesComponent from '../Forms/offers/components/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils/data-transform';\nimport { OverlayFooter, OverlayHeader } from './index';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: OfferEntity;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(currentProduct?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={\n          <OverlayHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />\n        }\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import { OfferEntity } from '../../../types/offers/offers.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../../lang';\nimport { usePageCurrentOffer } from '../../AppPages/offers/PageOfferProvider';\nimport { OverlayHeader } from '../../Overlays';\nimport TabSelector from '../../atoms/TabSelector';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../../hooks';\nimport { OverviewTextCell } from '../components/OverviewTextCell';\nimport { enumToFilterOptions, toAppDateFormat } from '../../../utils';\nimport { OverviewCellProps } from '../components/overview-types';\nimport { IMeasurement, PartialRecord } from '../../../types/utils.types';\nimport { isString } from 'lodash';\nimport { OfferOverviewCategoriesCell } from './components/OfferOverviewCategoriesCell';\nimport { OfferOverviewStaticProperties } from './components/OfferOverviewStaticPropertiesCell';\nimport { OfferOverviewDefaultsCell } from './components/OfferOverviewDefaultsCell';\nimport { OfferOverviewImagesCell } from './components/OfferOverviewImagesCell';\n\nexport enum OfferOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nexport const ProductOverviewTabsList = enumToFilterOptions(OfferOverviewTabsEnum);\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n  const cellsMap = getOfferOverviewCellsMap();\n\n  const [currentTab, setCurrentTab] = useState<OfferOverviewTabsEnum>(OfferOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n            }\n            return <OverviewTextCell key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n          }),\n    [cellsMap, currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        filterOptions={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nconst offerOverviewCells: OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: OfferOverviewCategoriesCell,\n    gridArea: 'categories',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  {\n    title: t('Brand'),\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Properties'),\n    CellComponent: OfferOverviewStaticProperties,\n    gridArea: 'properties',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OfferOverviewDefaultsCell,\n    gridArea: 'defaults',\n    tab: OfferOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.user?.email} / ${\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : ''\n          }`\n        : null,\n    gridArea: 'created',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.user?.email} / ${\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : ''\n          }`\n        : null,\n    gridArea: 'updated',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OfferOverviewImagesCell,\n    gridArea: 'images',\n    tab: OfferOverviewTabsEnum.Images,\n  },\n];\n\nfunction getOfferOverviewCellsMap(): PartialRecord<\n  OfferOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n> {\n  const offerOverviewCellsMap: PartialRecord<\n    OfferOverviewTabsEnum | string,\n    OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n  > = {};\n  offerOverviewCells.forEach(item => {\n    const tab = item.tab;\n    if (tab) {\n      if (offerOverviewCellsMap[tab]) {\n        offerOverviewCellsMap[tab]?.push(item);\n      } else {\n        offerOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return offerOverviewCellsMap;\n}\nexport default OfferOverviewXL;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport React, { useMemo, useRef } from 'react';\nimport FormSelectPropertiesOverlay from '../../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { OverviewPropertyComponent } from '../../components/OverviewPropertyComponent';\nimport { PropertyEntity, PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { useCurrentOffer } from '../../../../hooks';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const state = useProductsSelector();\n  const currentOffer = useCurrentOffer(data);\n  const valuesIdsSet = useRef(new Set(currentOffer?.properties?.map(prop => prop._id) ?? []));\n  const selectedParentIdsSet = useRef(new Set(currentOffer?.properties?.map(prop => prop?.parent?._id) ?? []));\n\n  const { propertiesList, valuesListMap } = useMemo(() => {\n    const _propertiesList: PropertyEntity[] = [];\n\n    const _valuesListMap: Record<string, PropertyValueEntity[]> = {};\n\n    for (const propId of Array.from(selectedParentIdsSet.current)) {\n      const parent = propId ? state.propertiesDataMap?.[propId] : undefined;\n\n      if (parent) {\n        _propertiesList.push(parent);\n        _valuesListMap[parent._id] = [];\n      }\n    }\n    for (const valueId of Array.from(valuesIdsSet.current)) {\n      const value = valueId ? state.propertiesDataMap?.[valueId] : undefined;\n\n      if (value && value.parent?._id) {\n        _valuesListMap[value.parent?._id].push(value);\n      }\n    }\n\n    return { propertiesList: _propertiesList, valuesListMap: _valuesListMap };\n  }, [state.propertiesDataMap]);\n\n  const renderProperties = useMemo(() => {\n    return propertiesList?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, selectedItems: valuesListMap[prop._id], data }}\n        />\n      );\n    });\n  }, [propertiesList, overlayHandler, valuesListMap, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {propertiesList?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport FormProductDefaultsOverlay from '../../../Overlays/FormProductDefaultsOverlay';\n\nimport { PriceEntity } from '../../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { toPrice } from '../../../../utils/numbers';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: PriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../../Overlays/FormProductImagesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} disabled />\n          ))}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/offer/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { offers: offersSrv } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              _id: page?.currentOffer?._id,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          offersSrv.getOne({\n            data: { params: { _id: page.currentOffer?._id, getPrices: false, getVariations: false } },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({\n    offer: { content: t('Loading product info') },\n    prices: { content: 'Loading prices' },\n    variations: { content: 'Loading variations' },\n  });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 8px;\n\n  font-weight: 500;\n  font-size: 13px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'max-content'}\n      alignItems={'center'}\n      minHeight={'36px'}\n      padding={'4px 0'}\n    >\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { IWarehouse, WarehouseItemEntity } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email'), path: 'email' },\n    bottom: { name: t('phone'), path: 'phone' },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","_objectSpread","onClose","overlayId","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColor","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","createContext","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","compId","value","open","Provider","PageCurrentOfferCTX","usePageCurrentOffer","offersSrv","useAppServiceProvider","ServiceName","loaders","useOfferOverviewLoaders","useAppParams","offerId","currentOffer","useCurrentOffer","_id","useEffect","_loaders$isLoading","isLoading","offer","getOne","data","getVariations","getPrices","onLoading","catch","clearCurrent","undefined","DrawerBase","title","footer","extraHeader","extraFooter","onClosePress","onBackPress","okButton","canSubmit","_objectWithoutProperties","_excluded","_jsxs","DrawerContainer","OverlayHeader","Content","fontColorSidebar","_ref2","_ref2$width","width","fitContentH","_ref3","_ref3$height","height","fitContentV","_ref4","shadowMain","_ref5","fillColor","_ref6","fontColor","_ref7","modalBackgroundColor","_ref8","modalBorderColor","_ref9","_ref10","_ref11","memo","_schema","yup","shape","label","required","min","max","sku","barCode","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","price","out","FormContainer","FlexForm","tableBackgroundColor","sideBarBorderColor","TemplateBox","_templateObject3","Inputs","_templateObject4","ExtraFooterBox","_templateObject5","CmsConfigs","_templateObject6","CmsConfigsHeader","_templateObject7","_variation$offer","_errors$offer","_currentOffer$label","_currentOffer$sku","_currentOffer$barCode","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs2$l","_loaders$isLoading2","updateId","onSubmit","create","state","useProductsSelector","service","useLoaders","variation","useCurrentVariation","submitOptions","useAfterSubmitOptions","currentTemplate","setCurrentTemplate","formMethods","useAppForm","defaultValues","toVariationFormData","template","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","reset","_useState3","_formValues$propertie","_step","init","_iterator","_createForOfIteratorHelper","ObjectEntries","s","n","done","_state$propertiesData","_step$value","propId","valueId","propertiesDataMap","err","e","f","_useState4","selectedPropsMap","setSelectedPropsMap","propertiesList","_state$propertiesKeys","_state$propertiesKeys2","_step2","_rootId","_propertiesList","_propertiesIds","propertiesKeysMap","_iterator2","_state$propertiesData2","prop","isSelectable","childrenIds","push","selectedIds","Object","values","compiledLabel","_variation$label","_step3","_sorted","entries","sort","next","localeCompare","_labels","_iterator3","join","onValid","updateVariationById","toVariationReqData","onSuccess","console","log","onError","ToastService","createVariation","close","clear","handleSelect","parentId","_state$propertiesData3","_defineProperty","handleClearMap","renderPropertiesList","OfferVariationPropertySelector","item","onSelect","error","onReset","flex","gap","AccordionFormArea","expandable","hideFooter","InputLabel","t","disabled","InputText","placeholder","fxDirection","PropertiesGroupSelect","opt","selected","padding","margin","justifyContent","Text","$size","$weight","cmsConfigs","key","LangButtonsGroup","OverlayFooter","loading","resetButtonShown","submitButtonText","FormAfterSubmitOptions","_ref$withActions","withActions","useLoadersProvider","page","modalS","useModalProvider","productsS","loadData","refresh","update","getAllVariationsByProductId","refreshCurrent","updateCurrent","variationsTableTitles","_currentOffer$variati","variations","propsList","properties","_prop$parent","parent","createTableTitlesFromProperties","tableConfig","onRowClick","rowData","getIdRef","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","icon","type","separator","window","confirm","ModalChildren","CreateVariationOverlay","modalChildrenProps","TableList","isSearch","isFilter","tableData","tableTitles","transformData","transformVariationTableData","setSelectedRoe","dispatch","useAppDispatch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","abrupt","getAllPrices","stop","_x","apply","arguments","_data$rowData","getPriceThunk","content","CreatePriceModal","prices","pricesColumnsForProductReview","currentProduct","setLoading","product","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","SalesTab","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","_page$currentOffer","_page$currentOffer2","toggleVisibility","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","tabs","Variations","VariationsTab","Warehousing","WarehousingTab","Prices","PricesTab","Sales","LoadersProvider","ModalHeader","renderTitle","TabSelector","filterOptions","onOptSelect","preventDefault","_currentOffer$categor","directory","useDirectorySelector","ApiDirType","initIds","sortIds","categories","categoriesIds","setCategoriesIds","c","OverlayForm","updateById","meta","OfferCategoriesSelector","onChangeIds","options","defaultData","NotActiveTreeDataItem","_item$parent","_item$parent2","_ref2$lvl","lvl","renderChildren","_item$childrenList","childrenList","isSelected","_Fragment","CellStyledComp","PropertiesBox","defaultState","onChange","setCurrentTemlate","_useState5","_useState6","setSelectedIds","initState","_currentOffer$propert","_sortIds","event","_meta","debug","_parentId","OverviewPropertyComponent","selectedItems","renderValues","_list","maxWidth","flexWrap","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","FormProductDefaultsTabs","Form","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","_tabsMap","_tabsMap$tabs$current","_tabs$currentTabIdx","warehouse","WarehousesTab","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx$v","_tabs$currentTabIdx2","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","tabIs","fData","setDefaults","toReqData","currentIndex","onChangeIndex","hasLoading","onCreatePress","sideBarBackgroundColor","images","setState","useTheme","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","OfferOverviewTabsEnum","ProductOverviewTabsList","Container","Footer","DeleteBtn","ButtonIcon","colors","OpenBtn","offerOverviewCells","getValue","gridArea","tab","General","approved","CellComponent","cell","overlayHandler","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","minHeight","OverviewCellHeader","openOverlayButtonTitle","onOpenOverlayPress","OfferCategoriesOverlay","Properties","_data$brand","brand","measurement","JSON","parse","unit","step","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","_currentOffer$propert2","_currentOffer$propert3","_currentOffer$propert4","valuesIdsSet","useRef","Set","selectedParentIdsSet","_useMemo","_valuesListMap","_i","_Array$from","Array","from","current","_i2","_Array$from2","_value$parent","_value$parent2","valuesListMap","renderProperties","FormSelectPropertiesOverlay","renderVariationTags","_variation$properties","_item$value","$align","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","commission","percentage","markup","createPriceOverviewTagsData","FormProductDefaultsOverlay","color","fontColorHeader","code","info","Defaults","_product$author","_product$author$user","author","user","email","createdAt","isString","toAppDateFormat","Date","_product$editor","_product$editor$user","editor","updatedAt","renderImageSets","_data$images","set","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","Images","_p$product","router","useAppRouter","cellsMap","offerOverviewCellsMap","forEach","_offerOverviewCellsMa","getOfferOverviewCellsMap","renderCells","_cellsMap$currentTab","_excluded2","OverviewTextCell","goBack","optionProps","option","replace","hash","size","variant","iconSize","onEdit","visible","onHide","onDelete","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","offers","OfferOverviewXL","openModal","Modal","Modals","_page$currentOffer3","Page","takeFullGridArea","path","isRightSideVisible","setIsRightSideVisible","toggleRightSide","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","CategoryItem","field","backgroundColor","_ref$title","_ref$openOverlayButto","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","marginRight","top","getData","rd","bottom","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}