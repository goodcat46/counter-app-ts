{"version":3,"file":"static/js/553.0b385988.chunk.js","mappings":"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","sources":["components/AppPages/pagesStyles.ts","components/TableList/TebleCells/CellTitle.tsx","components/TableList/TebleCells/CellComponents/CheckBox.tsx","components/TableList/TebleCells/CellComponents/CheckBoxHead.tsx","components/TableList/TebleCells/CellCheckBoxHead.tsx","components/TableList/TableRows/TableHeadRow.tsx","components/TableList/TableHead.tsx","components/TableList/TableRows/RowContext.jsx","utils/getNestedData.ts","components/TableList/TebleCells/CellTextDbl.tsx","components/TableList/TebleCells/Cell.tsx","components/TableList/TebleCells/CellComponents/DateComp.tsx","components/TableList/TebleCells/CellDateSimple.tsx","components/TableList/TebleCells/CellComponents/StatusComp.tsx","components/TableList/TebleCells/CellStatus.tsx","components/TableList/TebleCells/index.tsx","components/TableList/TableRows/TableRow.tsx","components/TableList/TableBody.tsx","components/TableList/QuickActions/QuickActions.tsx","components/TableList/TableOverHead/TableActions/TableActions.tsx","components/atoms/DeviceTypeInformer/DeviceTypeController.tsx","components/TableList/TableOverHead/TableSearch/SearchParamInput.tsx","components/TableList/TableOverHead/TableSearch/TabelSearch.tsx","components/TableList/TableOverHead/TableOverHead.tsx","components/TableList/TableFooter/FooterCounter.tsx","components/Filter/Selector.tsx","components/Filter/SelectorContent/SelectorContent.tsx","components/Filter/Filter.tsx","components/TableList/TableFooter/TableFilter.tsx","components/TableList/TableFooter/TablePagination.tsx","components/TableList/TableFooter/TableSortComp/TableSortParamsList.tsx","components/TableList/TableFooter/TableSortComp/TableSort.tsx","components/TableList/TableFooter/TableFooter.tsx","components/TableList/TableList.tsx"],"sourcesContent":["import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/11;\n  grid-row: 1/11;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CellActionsName } from '../TebleCells';\nimport { useTable } from '../TableList';\n\nexport type CellTitleContent = {\n  name: string;\n  action?: string;\n  dataKey?: string;\n  nestedDataKey?: string;\n  def?: string;\n  sort?: boolean;\n  align?: 'center' | 'start' | 'end';\n};\nexport type CellTittleProps = {\n  top: CellTitleContent;\n  bottom?: CellTitleContent;\n  width: string;\n  idx?: number;\n  titleInfo?: CellTittleProps;\n  action: CellActionsName;\n  onClick?: (ev: React.MouseEvent<HTMLDivElement>) => void;\n};\n\nconst CellTitle: React.FC<CellTittleProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  width,\n  idx,\n  onClick,\n  top,\n  bottom,\n  ...props\n}) => {\n  const { handleTableSort, sortParams } = useTable();\n  return (\n    <StCellHead width={width} onClick={onClick} {...props}>\n      <Wrapper>\n        <Top align={top.align}>\n          <span className=\"inner\"> {top.name || top.dataKey || 'Title'}</span>\n          {top?.sort && (\n            <StButtonIcon\n              variant=\"def\"\n              iconId={iconId.SmallArrowDown}\n              iconSize=\"100%\"\n              size=\"18px\"\n              className={top.dataKey === sortParams?.dataKey ? 'isActive' : ''}\n              descending={sortParams?.descending}\n              onClick={() => {\n                handleTableSort && handleTableSort({ descending: !sortParams?.descending, dataKey: top.dataKey || '' });\n              }}\n            />\n          )}\n        </Top>\n\n        {bottom && (\n          <Bottom align={bottom?.align}>\n            <>\n              <span className=\"inner\"> {bottom?.name || bottom?.dataKey || 'SubTitle'}</span>\n\n              {bottom?.sort && (\n                <StButtonIcon\n                  variant=\"def\"\n                  iconId={iconId.SmallArrowDown}\n                  iconSize=\"100%\"\n                  size=\"18px\"\n                  className={bottom?.dataKey === sortParams?.dataKey ? 'isActive' : ''}\n                  descending={sortParams?.descending}\n                  onClick={() => {\n                    handleTableSort &&\n                      handleTableSort({ descending: !sortParams?.descending, dataKey: bottom?.dataKey || '' });\n                  }}\n                />\n              )}\n            </>\n          </Bottom>\n        )}\n      </Wrapper>\n\n      <WidthChanger type=\"button\"></WidthChanger>\n    </StCellHead>\n  );\n};\nconst StCellHead = styled.div<{ width: string }>`\n  display: flex;\n  align-items: center;\n\n  width: ${({ width }) => width};\n  height: 100%;\n  padding-left: 10px;\n\n  /* outline: 1px solid tomato; */\n`;\nconst Wrapper = styled.div`\n  flex-grow: 1;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr;\n  justify-content: center;\n\n  height: 100%;\n`;\nconst Content = styled.div`\n  flex-grow: 1;\n\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  width: 100%;\n\n  & .inner {\n    flex-grow: 1;\n\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n  }\n`;\n\nconst Top = styled(Content)<Omit<CellTitleContent, 'name'>>`\n  font-size: 12px;\n  font-weight: 700;\n  text-transform: uppercase;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\nconst Bottom = styled(Content)<Omit<CellTitleContent, 'name'>>`\n  font-size: 11px;\n  font-weight: 400;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\n\nconst StButtonIcon = styled(ButtonIcon)<{ descending?: boolean }>`\n  border-width: 0;\n  border-radius: 0;\n\n  fill: rgba(122, 122, 122, 1);\n\n  &:hover {\n    background-color: transparent;\n    fill: ${({ theme }) => theme.fillColor};\n  }\n  &:active {\n    fill: ${({ theme }) => theme.fillColor};\n    background-color: transparent;\n  }\n  &.isActive {\n    fill: ${({ theme }) => theme.accentColor.base};\n    & .icon {\n      transform: ${({ descending }) => `rotate(${descending ? '0' : '180'}deg)`};\n    }\n  }\n`;\n\nconst WidthChanger = styled.button`\n  position: relative;\n\n  height: 80%;\n  width: 4px;\n  border-style: none;\n  background-color: transparent;\n  padding: 0;\n\n  cursor: col-resize;\n  &::before {\n    position: absolute;\n    top: 0;\n    right: 0;\n    display: block;\n    content: '';\n    height: 100%;\n    width: 1px;\n    border-right: 1px solid #59595a;\n    /* border-right: 1px solid ${({ theme }) => theme.trBorderClr}; */\n  }\n`;\n\nexport default CellTitle;\n","import React from 'react';\nimport SvgIcon from 'components/atoms/SvgIcon/SvgIcon';\nimport { iconId } from 'data';\n\nimport styled from 'styled-components';\nexport interface CustomCheckBoxProps {\n  size?: string;\n  icon?: string;\n}\nconst CheckBox: React.FC<CustomCheckBoxProps & React.InputHTMLAttributes<HTMLInputElement>> = ({\n  onChange,\n  id = '1',\n  checked = false,\n  size = '24px',\n  icon,\n}) => {\n  return (\n    <StLabel htmlFor={id}>\n      <input id={id} className=\"visually-hidden\" type=\"checkbox\" onChange={onChange} />\n\n      <SvgIcon size={size} iconId={icon || checked ? iconId.checkBoxOn : iconId.checkBoxOff} />\n    </StLabel>\n  );\n};\nconst StLabel = styled.label<{ checked?: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n  fill: ${({ theme, checked }) => (checked ? theme.accentColor.base : theme.fillColor)};\n`;\n\nexport default CheckBox;\n","import { useTable } from 'components/TableList/TableList';\nimport { iconId } from 'data';\nimport { useState, useEffect } from 'react';\nimport CheckBox from './CheckBox';\n\nexport interface CheckBoxHeadProps {\n  onChange: React.ChangeEventHandler;\n}\n\nconst CheckBoxHead: React.FC<CheckBoxHeadProps> = ({ onChange }) => {\n  const { tableData } = useTable();\n  const [status, setStatus] = useState<'avery' | 'some' | 'none'>();\n  const [some, setSome] = useState(false);\n  const [everyOn, setEveryOn] = useState(false);\n  const [everyOff, setEveryOff] = useState(true);\n  // const [currentIconId, setCurrentIconId] = useState('');\n\n  // const statusMap = {\n  //   checkBoxOn: 'checkBoxOn',\n  //   checkBoxOff: 'checkBoxOff',\n  //   checkBoxMinus: 'checkBoxMinus',\n  // };\n\n  function handleChange(ev: React.ChangeEvent) {\n    onChange(ev);\n\n    setSome(false);\n\n    setEveryOn(!everyOn);\n\n    setEveryOff(!everyOff);\n  }\n\n  useEffect(() => {\n    setStatus(status);\n\n    // let some, everyOn;\n\n    // some = tableData?.some(item => item?.selected);\n\n    // if (some) {\n    //   setCurrentIconId(iconId.checkBoxMinus);\n    //   return;\n    // }\n    // everyOn = tableData?.every(item => item?.selected);\n\n    // if (everyOn) {\n    //   setCurrentIconId(iconId.checkBoxOn);\n    //   return;\n    // }\n\n    // setCurrentIconId(some ? iconId.checkBoxMinus : everyOn ? iconId.checkBoxOn : iconId.checkBoxOff);\n  }, [everyOff, everyOn, some, status, tableData]);\n\n  return (\n    <CheckBox\n      onChange={handleChange}\n      icon={some ? iconId.checkBoxMinus : everyOn ? iconId.checkBoxOn : everyOff ? iconId.checkBoxOff : ''}\n    />\n  );\n};\n\nexport default CheckBoxHead;\n\n// iconId={(everyOn && iconId.checkBoxOn) || (some && iconId.checkBoxMinus) || (everyOff && iconId.checkBoxOff)}\n","import React from 'react';\nimport styled from 'styled-components';\n// import { useRow } from '../TableRows/RowContext';\nimport CheckBoxHead from './CellComponents/CheckBoxHead';\n\n// import s from './TableCells.module.scss';\nexport type CellCheckBoxHeadProps = {\n  title?: string;\n  idx?: number;\n  className?: string;\n};\nconst CellCheckBoxHead: React.FC<CellCheckBoxHeadProps> = ({ title, className, ...props }) => {\n  return (\n    <StCell {...props} className={className}>\n      <CheckBoxHead {...props} onChange={() => {}} />\n    </StCell>\n  );\n};\n\nconst StCell = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 0 8px;\n\n  height: 100%;\n\n  color: inherit;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  height: 100%;\n\n  background-color: inherit;\n\n  & .top {\n    font-size: 12px;\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n  & .bottom {\n    font-size: 11px;\n    font-weight: 400;\n  }\n  border-right: 1px solid #59595a;\n`;\nexport default CellCheckBoxHead;\n","import { useTable } from '../TableList';\nimport CellTitle from '../TebleCells/CellTitle';\nimport CellCheckBoxHead from '../TebleCells/CellCheckBoxHead';\n\nimport styled from 'styled-components';\n\nexport interface TableHeadRowProps {}\n\nconst TableHeadRow: React.FC<TableHeadRowProps> = () => {\n  const { tableTitles = [], checkBoxes, rowGrid } = useTable();\n\n  return (\n    <ThRow>\n      <ThRowStickyEl>{checkBoxes && <CellCheckBoxHead />}</ThRowStickyEl>\n\n      <ThRowData style={{ ...rowGrid }}>\n        {tableTitles.map((item, idx) => (\n          <CellTitle key={idx} {...item} idx={idx} />\n        ))}\n      </ThRowData>\n    </ThRow>\n  );\n};\n\nexport const ThRow = styled.div`\n  display: flex;\n  align-items: center;\n\n  min-width: 100%;\n  display: grid;\n  grid-template-columns: min-content max-content;\n  grid-template-rows: 100%;\n\n  position: relative;\n\n  width: fit-content;\n  height: 100%;\n\n  cursor: default;\n\n  background-color: inherit;\n  font-size: 12px;\n\n  height: 100%;\n`;\nexport const ThRowStickyEl = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n\n  height: 100%;\n  width: max-content;\n\n  background-color: inherit;\n  // background-color: #1c1c1e;\n\n  @media print {\n    width: 0;\n    overflow: hidden;\n  }\n`;\nexport const ThRowData = styled.div`\n  height: 100%;\n`;\n\nexport default TableHeadRow;\n","import styled from 'styled-components';\nimport TableHeadRow from './TableRows/TableHeadRow';\n\nexport interface TableHeadProps {}\n\nconst TableHead: React.FC<TableHeadProps> = () => {\n  return (\n    <THead>\n      <TableHeadRow />\n    </THead>\n  );\n};\nconst THead = styled.div`\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nexport default TableHead;\n","import { useContext, createContext } from 'react';\n\nexport const RowCNTXT = createContext();\nexport const useRow = () => useContext(RowCNTXT);\n\nconst RowContext = ({ children, value }) => {\n  return (\n    <RowCNTXT.Provider value={{ ...value }}>\n      <>{children}</>\n    </RowCNTXT.Provider>\n  );\n};\n\nexport default RowContext;\n","interface Params<D extends Record<string, any>, N extends Record<string, any>> {\n  dataKey?: keyof D;\n  nestedDataKey?: keyof N;\n  defaultValue?: string;\n  def?: string;\n  data: D;\n}\n\nconst getNestedData = <D extends Record<string, any>, N extends Record<string, any>>(args: Params<D, N>) => {\n  if (!args?.data || !args?.dataKey) return null as null;\n  const { data, dataKey, nestedDataKey, def } = args;\n\n  if (data && dataKey && data[dataKey]) {\n    if (typeof data[dataKey] === 'string' || typeof data[dataKey] === 'number') {\n      return data[dataKey];\n    }\n\n    if (nestedDataKey && data[dataKey][nestedDataKey]) {\n      if (typeof data[dataKey][nestedDataKey] === 'object') {\n        return def;\n      }\n\n      return data[dataKey][nestedDataKey];\n    }\n    if (nestedDataKey && !data[dataKey][nestedDataKey]) {\n      return def;\n    }\n  }\n  return null;\n\n  // return (\n  //   nestedDataKey && data[dataKey] && data[dataKey][nestedDataKey]\n  //     ? data[dataKey][nestedDataKey]\n  //     : data[dataKey]\n  //     ? data[dataKey]\n  //     : defaultValue || null\n  // ) as string | D[keyof D] | D[keyof D][keyof N] | null;\n};\n\nexport default getNestedData;\n","import React from 'react';\nimport styled from 'styled-components';\nimport getNestedData from 'utils/getNestedData';\nimport { useRow } from '../TableRows/RowContext';\nimport { CellTitleContent, CellTittleProps } from './CellTitle';\n\nexport interface CellTextDblProps {\n  titleInfo: CellTittleProps;\n  idx?: number;\n}\n\nconst CellTextDbl: React.FC<CellTextDblProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  ...props\n}) => {\n  const { rowData } = useRow();\n  const { top, bottom, width = '100px' } = titleInfo;\n\n  const contentTop = getNestedData({\n    data: rowData,\n    ...top,\n  });\n  const contentBottom = getNestedData({\n    data: rowData,\n    ...bottom,\n  });\n\n  return (\n    <CellBase style={{ width }} {...props}>\n      <Top align={top.align}>\n        <div title={contentTop} className=\"inner\">\n          {contentTop}\n        </div>\n      </Top>\n\n      <Bottom align={bottom?.align}>\n        {contentBottom ? (\n          <div title={contentBottom} className=\"inner\">\n            {contentBottom}\n          </div>\n        ) : null}\n      </Bottom>\n    </CellBase>\n  );\n};\n\nconst CellBase = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr;\n\n  height: 100%;\n\n  max-height: 100%;\n  padding: 4px 10px;\n\n  overflow: hidden;\n`;\nconst Content = styled.div<Omit<CellTitleContent, 'name'>>`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  width: 100%;\n  overflow: hidden;\n\n  & .inner {\n    width: fit-content;\n    /* display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1; */\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    line-height: 1;\n  }\n`;\n\nconst Top = styled(Content)`\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n`;\nconst Bottom = styled(Content)`\n  font-size: 11px;\n  font-weight: 400;\n\n  justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n`;\n\nexport default CellTextDbl;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { CellTittleProps } from './CellTitle';\n// import { useRow } from '../TableRows/RowContext';\n\n// import s from './TableCells.module.scss';\n\nexport interface CellBaseProps {\n  idx?: number;\n  titleInfo?: CellTittleProps;\n}\n\nconst Cell: React.FC<CellBaseProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  children,\n  ...props\n}) => {\n  // const { rowData } = useRow();\n\n  return (\n    <CellBase style={{ width: titleInfo?.width }} {...props}>\n      {children}\n    </CellBase>\n  );\n};\nexport const CellBase = styled.div`\n  height: 100%;\n`;\n\nexport default Cell;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface DateCompProps {\n  dateInfo: Date | string;\n  wraped?: boolean;\n}\nconst DateComp: React.FC<DateCompProps> = ({ dateInfo, wraped }) => {\n  let date, year, month, day, hours, minutes, seconds;\n\n  if (dateInfo) {\n    date = new Date(dateInfo);\n    year = date.getFullYear().toString().padStart(2, '0');\n    month = (date.getMonth() + 1).toString().padStart(2, '0');\n    day = date.getDate().toString().padStart(2, '0');\n    hours = date.getHours().toString().padStart(2, '0');\n    minutes = date.getMinutes().toString().padStart(2, '0');\n    seconds = date.getSeconds().toString().padStart(2, '0');\n  }\n\n  return (\n    <Wrapper wraped={wraped}>\n      <StDate>{dateInfo ? `${day}.${month}.${year}` : `00.00.0000 `}</StDate>\n      <StTime>{dateInfo ? `(${hours}:${minutes}:${seconds})` : `(00:00:00)`}</StTime>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div<{ wraped?: boolean }>`\n  display: flex;\n  flex-direction: ${({ wraped }) => (wraped ? 'column' : 'row')};\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  gap: 4px;\n`;\nconst StDate = styled.span``;\nconst StTime = styled.span<{ wrap?: boolean }>`\n  font-size: ${({ wrap }) => (wrap ? '10px' : '12px')}; ;\n`;\n\nexport default DateComp;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useRow } from '../TableRows/RowContext';\nimport DateComp from './CellComponents/DateComp';\nimport { CellTitleContent, CellTittleProps } from './CellTitle';\n\nexport interface CellDateSimpleProps {\n  titleInfo: CellTittleProps;\n  idx?: number;\n}\n\nconst CellDateSimple: React.FC<CellDateSimpleProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  ...props\n}) => {\n  const { rowData } = useRow();\n  const { top, bottom, width = '100px' } = titleInfo;\n\n  const contentTop = top?.dataKey && rowData[top?.dataKey] ? rowData[top?.dataKey] : null;\n  const contentBottom = bottom?.dataKey && rowData[bottom?.dataKey] ? rowData[bottom?.dataKey] : null;\n\n  return (\n    <CellBase style={{ width }} {...props}>\n      <Top align={top.align}>\n        <DateComp dateInfo={contentTop} wraped={!contentBottom ? true : false} />\n      </Top>\n\n      {contentBottom && (\n        <Bottom align={bottom?.align}>\n          <DateComp dateInfo={contentBottom} wraped={!contentBottom ? true : false} />\n        </Bottom>\n      )}\n    </CellBase>\n  );\n};\n\nconst CellBase = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  height: 100%;\n  padding: 4px 10px 4px 10px;\n\n  /* outline: 1px solid #8b8b8b; */\n`;\nconst Content = styled.div<Omit<CellTitleContent, 'name'>>`\n  flex-grow: 1;\n\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  width: 100%;\n`;\n\nconst Top = styled(Content)`\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\nconst Bottom = styled(Content)`\n  font-size: 11px;\n  font-weight: 400;\n\n  & .inner {\n    justify-content: ${({ align }) => (align === 'center' ? 'center' : `flex-${align}`)};\n  }\n`;\n\nexport default CellDateSimple;\n","import React from 'react';\nimport { statusDataMap } from 'data';\n\nimport styled, { css } from 'styled-components';\nimport { StatusNames } from 'data/statuses.data';\n\nexport type StatusCompVariants = 'outlined' | 'filled' | 'text';\nexport interface StatusCompProps {\n  status: StatusNames;\n  variant?: StatusCompVariants;\n}\nconst StatusComp: React.FC<StatusCompProps> = ({ status = 'noStatus', variant = 'text' }) => {\n  let statusData = statusDataMap[status];\n\n  const style = {\n    color: statusData?.color,\n    fill: statusData?.color,\n    borderColor: variant === 'outlined' ? statusData?.color : 'transparent',\n  };\n\n  return (\n    <StStatusComp variant={variant} style={style} title={statusData?.descr}>\n      {/* {statusData?.iconId && <SvgIcon iconId={statusData?.iconId} size=\"20px\" />} */}\n\n      <Label>{statusData?.label}</Label>\n    </StStatusComp>\n  );\n};\ntype VariansMapType = {\n  [variant in StatusCompVariants]?: any;\n};\nconst variantsMap: VariansMapType = {\n  outlined: css`\n    border: 2px solid;\n  `,\n  filled: css``,\n  text: css``,\n};\n\nconst StStatusComp = styled.div<{ variant: StatusCompVariants; color?: string; fill?: string; borderColor?: string }>`\n  display: flex;\n  align-items: center;\n\n  gap: 8px;\n  font-size: 14px;\n\n  min-width: 100%;\n  height: 100%;\n\n  overflow: hidden;\n\n  cursor: default;\n  color: ${({ color, theme }) => (color ? color : '')};\n  fill: ${({ fill, theme }) => (fill ? fill : '')};\n  border-color: ${({ borderColor, theme }) => (borderColor ? borderColor : theme.borderColor)};\n\n  ${({ variant }) => (variant ? variantsMap[variant] : variantsMap['text'])};\n`;\nconst Label = styled.span`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\nexport default StatusComp;\n","import React from 'react';\nimport styled from 'styled-components';\nimport getNestedData from 'utils/getNestedData';\nimport { useRow } from '../TableRows/RowContext';\nimport StatusComp from './CellComponents/StatusComp';\nimport { CellTitleContent, CellTittleProps } from './CellTitle';\n\nexport interface CellTextDblProps {\n  titleInfo: CellTittleProps;\n  idx?: number;\n}\n\nconst CellStatus: React.FC<CellTextDblProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  titleInfo,\n  idx,\n  ...props\n}) => {\n  const { rowData } = useRow();\n  const { top, width = '100px' } = titleInfo;\n\n  const contentTop = getNestedData({\n    data: rowData,\n    ...top,\n  });\n  return (\n    <CellBase style={{ width }} {...props}>\n      <Content align={top.align}>\n        <StatusComp status={contentTop} />\n      </Content>\n    </CellBase>\n  );\n};\n\nconst CellBase = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n\n  height: 100%;\n  padding: 4px 10px 4px 10px;\n\n  /* outline: 1px solid #8b8b8b; */\n`;\nconst Content = styled.div<Omit<CellTitleContent, 'name'>>`\n  display: flex;\n  align-items: center;\n  justify-content: ${({ align }) => (align ? (align === 'center' ? 'center' : `flex-${align}`) : 'center')};\n  gap: 4px;\n\n  width: 100%;\n  height: 100%;\n\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\n\nexport default CellStatus;\n","import CellTextDbl from './CellTextDbl';\nimport Cell from './Cell';\nimport CellDateSimple from './CellDateSimple';\nimport CellStatus from './CellStatus';\n\nexport type CellActionsName = 'string' | 'cell' | 'cellDbl' | 'dateSimple' | 'dateDbl' | 'status';\ntype CellVarianType = {\n  [key in CellActionsName]?: React.FC<any>;\n};\n\nexport const CellsMap: CellVarianType = {\n  cell: Cell,\n  cellDbl: CellTextDbl,\n  dateSimple: CellDateSimple,\n  status: CellStatus,\n  dateDbl: CellDateSimple,\n};\n\n// import CellCategory from './CellCategory';\n// import CellStatusApprove from './CellStatusApprove';\n// import CellStatusVisibility from './CellStatusVisibility';\n// import CellStatusAvailability from './CellStatusAvailability';\n// import CellStatusType from './CellStatusType';\n// import CellNumber from './CellNumber';\n// import CellTransactionDate from './CellTransactionDate';\n// import CellDateDbl from './CellDateDbl';\n// import CellDate from './CellDate';\n// import CellStatus from './CellStatus';\n// import CellCheckBox from './CellCheckBox';\n// import CellActions from './CellActions';\n// import CellTextNested from './CellTextNested';\n// import CellNestedDbl from './CellNestedDbl';\n// actions: CellActions,\n// checkbox: CellCheckBox,\n// transactionDate: CellTransactionDate,\n// date: CellDate,\n// dateDbl: CellDateDbl,\n// category: CellCategory,\n// approvedStatus: CellStatusApprove,\n// visibilityStatus: CellStatusVisibility,\n// availabilityStatus: CellStatusAvailability,\n// typeStatus: CellStatusType,\n// number: CellNumber,\n// status: CellStatus,\n// nestedDbl: CellNestedDbl,\n// nested: CellTextNested,\n","import RowContext from './RowContext';\nimport React from 'react';\nimport CellTextDbl from '../TebleCells/CellTextDbl';\nimport { CellsMap } from '../TebleCells';\nimport { useState } from 'react';\nimport { useTable } from '../TableList';\n\nimport styled from 'styled-components';\nimport { ThRow, ThRowData, ThRowStickyEl } from './TableHeadRow';\nimport { ITransaction } from '../../../data/transactions.types';\n\nexport interface TableRowProps {\n  rowData: ITransaction;\n  idx: number;\n}\n\nconst TableRow: React.FC<TableRowProps> = props => {\n  const { tableTitles, tableData, rowGrid } = useTable();\n  const [isActionsOpen, setIsActionsOpen] = useState(false);\n\n  function handleToggleActions() {\n    setIsActionsOpen(!isActionsOpen);\n  }\n  function handleCloseActions() {\n    setIsActionsOpen(false);\n  }\n\n  const ctxValue = {\n    ...props,\n    isActionsOpen,\n    handleToggleActions,\n    handleCloseActions,\n  };\n\n  return (\n    <Row id={props?.rowData?._id} data-row>\n      <RowContext value={ctxValue}>\n        <RowStickyEl>{/* {checkBoxes && <CellCheckBox />} */}</RowStickyEl>\n\n        <StRowData gridRepeat={tableData?.length || 0} style={{ ...rowGrid }}>\n          {tableTitles &&\n            tableTitles?.map((item, idx) => {\n              let CellComp = item.action ? CellsMap[item.action] : CellTextDbl;\n              if (CellComp instanceof Function) {\n                return <CellComp key={idx} titleInfo={item} idx={idx} />;\n              }\n              console.log(item.action);\n\n              return <CellTextDbl key={idx} titleInfo={item} idx={idx} />;\n            })}\n        </StRowData>\n      </RowContext>\n    </Row>\n  );\n};\n\nconst Row = styled(ThRow)`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  grid-template-rows: 1fr;\n\n  height: 44px;\n  min-width: 100%;\n\n  border-top: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  border-bottom-color: ${({ theme }) => theme.borderColor};\n\n  &:hover {\n    border-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.selected {\n    background-color: ${({ theme }) => theme.accentColor.light};\n  }\n`;\n\nconst RowStickyEl = styled(ThRowStickyEl)``;\n\nconst StRowData = styled(ThRowData)<{ gridRepeat: number }>`\n  display: grid;\n  grid-template-columns: ${({ gridRepeat }) => `repeat(${gridRepeat} min-content)`};\n  grid-template-rows: 1fr;\n\n  max-height: 100%;\n\n  /* overflow: hidden; */\n`;\n\nexport default TableRow;\n","import TableRow from './TableRows/TableRow';\nimport { useTable } from './TableList';\n\nimport styled from 'styled-components';\n\nconst TableBody: React.FC = () => {\n  const { tableData, rowRef, onRowClick } = useTable();\n\n  function handleOnRowClick(ev: React.MouseEvent<HTMLDivElement>) {\n    if (!(ev instanceof MouseEvent)) return;\n    const { target } = ev;\n    let rowEl: any;\n\n    if (target instanceof HTMLElement && !target.closest('[data-row]')) {\n      rowRef?.current && rowRef.current.classList.remove('selected');\n      return;\n    }\n    rowEl = target instanceof HTMLElement && target.closest('[data-row]');\n\n    if (onRowClick instanceof Function) {\n      let rowData = tableData?.find(el => el?._id === rowEl?.id);\n\n      onRowClick({ ev, _id: rowEl?.id, data: rowData });\n    }\n\n    if (!rowRef?.current) {\n      if (rowRef?.current) rowRef.current = rowEl;\n      rowRef?.current?.classList.add('selected');\n      return;\n    }\n\n    if (rowEl !== rowRef.current) {\n      rowRef.current.classList.remove('selected');\n      rowRef.current = rowEl;\n    }\n\n    rowRef?.current?.classList.toggle('selected');\n  }\n\n  return (\n    <TBody onClick={handleOnRowClick}>\n      {tableData?.map((rowData, idx) => {\n        return <TableRow key={idx} {...{ rowData, idx }} />;\n      })}\n    </TBody>\n  );\n};\n\nconst TBody = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: min-content;\n  align-content: start;\n\n  min-width: 100%;\n\n  position: relative;\n  & .selected {\n    background-color: var(--ligthOrange);\n\n    &:hover {\n      background-color: var(--ligthOrange);\n    }\n  }\n`;\n\nexport default TableBody;\n\n// {/* <TableRow {...{ rowData: tableData[0] }} /> */}\n\n// {/* {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })}\n\n// {tableData.map((rowData, idx) => {\n//   return <TableRow key={idx} {...{ rowData, idx }} />;\n// })} */}\n","import React, { useEffect, useState } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\n\nimport styled, { css } from 'styled-components';\n\nconst QuickActions: React.FC<{ top?: any[]; bottom?: any[]; footer?: boolean }> = ({ top, bottom, footer }) => {\n  const [isShown, setIsShown] = useState(false);\n  function onMenuBtnClick() {\n    setIsShown(!isShown);\n  }\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      if (ev.target instanceof HTMLElement && !ev.target.closest('[data-burger]')) setIsShown(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsShown(false);\n    }\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, []);\n\n  return (\n    <Menu isShown={isShown} footer={footer} data-burger>\n      <List isShown={isShown}>\n        <Top top={!!top}>\n          {top &&\n            top.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIcon\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                iconSize=\"80%\"\n                tabIndex={isShown ? -1 : 0}\n                {...props}\n              />\n            ))}\n        </Top>\n\n        <Separator />\n\n        <Bottom bottom={!!bottom}>\n          {bottom &&\n            bottom.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIconFilled\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                // iconSize=\"80%\"\n                tabIndex={isShown ? -1 : 0}\n                {...props}\n              />\n            ))}\n        </Bottom>\n      </List>\n\n      <ToggleButton\n        isShown={isShown}\n        // iconId={isShown ? iconId.close : iconId.actionsV}\n        iconId={iconId.plus}\n        variant=\"def\"\n        iconSize=\"70%\"\n        size=\"48px\"\n        onClick={onMenuBtnClick}\n      />\n    </Menu>\n  );\n};\n\nconst ToggleButton = styled(ButtonIcon)<{ isShown: boolean }>`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  z-index: 70;\n\n  border-radius: 50%;\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  box-shadow: ${({ isShown }) => (isShown ? 'var(--header-shadow)' : '')};\n  background-color: ${({ theme, isShown }) => (isShown ? theme.backgroundColorMain : theme.backgroundColorSecondary)};\n  transition: ${({ theme }) => theme.globals.timingFunctionMain};\n  & .icon {\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n  }\n  & .icon {\n    transform: ${({ isShown }) => (isShown ? 'rotate(45deg)' : '')};\n  }\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundColorMain};\n  }\n  &:active {\n    background-color: ${({ theme }) => theme.backgroundColorMain};\n  }\n`;\n\nconst Menu = styled.div<{ isShown: boolean; footer?: boolean }>`\n  position: absolute;\n  bottom: ${({ footer }) => (footer ? '40px' : '10px')};\n  right: 10px;\n  z-index: 65;\n\n  width: 44px;\n  height: 44px;\n\n  border-radius: 24px;\n`;\nconst List = styled.div<{ isShown: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  position: absolute;\n  bottom: 0;\n  right: 0;\n\n  width: 48px;\n  min-height: 48px;\n  height: max-content;\n  overflow: hidden;\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  border-radius: 24px;\n  box-shadow: ${({ isShown }) => (isShown ? 'var(--header-shadow)' : '')};\n\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n\n  ${({ isShown }) =>\n    isShown\n      ? css`\n          max-height: 90vh;\n          padding: 16px 8px 64px;\n          visibility: visible;\n          pointer-events: all;\n        `\n      : css`\n          max-height: 48px;\n          padding: 8px;\n          visibility: hidden;\n          pointer-events: none;\n        `}\n  @media screen and (max-height: 480px) {\n    flex-direction: row;\n    width: max-content;\n    height: 48px;\n    ${({ isShown }) =>\n      isShown\n        ? css`\n            max-width: 90vh;\n            padding: 8px 64px 8px 16px;\n            visibility: visible;\n            pointer-events: all;\n          `\n        : css`\n            max-width: 48px;\n            padding: 8px;\n            /* visibility: hidden; */\n            pointer-events: none;\n          `};\n  }\n`;\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n\n  width: 100%;\n\n  @media screen and (max-height: 480px) {\n    flex-direction: row;\n  }\n`;\nconst Top = styled(Content)<{ top: boolean }>``;\n\nconst Bottom = styled(Content)<{ bottom: boolean }>``;\n\nconst Separator = styled.div`\n  position: relative;\n\n  width: 100%;\n\n  &::before {\n    display: block;\n    content: '';\n    /* position: absolute; */\n    width: 100%;\n    height: 1px;\n\n    border-top: 1px solid ${({ theme }) => theme.borderColor};\n  }\n  @media screen and (max-height: 480px) {\n    height: 100%;\n    &::before {\n      height: 100%;\n      width: 1px;\n\n      border-right: 1px solid ${({ theme }) => theme.borderColor};\n    }\n  }\n`;\n\nexport default QuickActions;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nimport styled from 'styled-components';\nimport { TableActionsProps } from '../../TableList';\n\nconst TableActions: React.FC<TableActionsProps> = ({ top, bottom }) => {\n  return (\n    <Menu>\n      <List>\n        <Separator />\n\n        <Left top={!!top}>\n          {top &&\n            top.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIcon\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                iconSize=\"80%\"\n                {...props}\n              />\n            ))}\n        </Left>\n\n        <Separator />\n\n        <Right bottom={!!bottom}>\n          {bottom &&\n            bottom.map(({ name, disableChek, ...props }, idx) => (\n              <ButtonIcon\n                key={idx}\n                variant=\"onlyIconFilled\"\n                disabled={disableChek instanceof Function && disableChek()}\n                size=\"28px\"\n                // iconSize=\"80%\"\n                {...props}\n              />\n            ))}\n        </Right>\n      </List>\n    </Menu>\n  );\n};\n\nconst Menu = styled.div`\n  flex-grow: 1;\n\n  display: flex;\n  justify-content: flex-end;\n`;\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  /* min-height: 48px; */\n  overflow: hidden;\n`;\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  width: 100%;\n`;\nconst Left = styled(Content)<{ top: boolean }>``;\n\nconst Right = styled(Content)<{ bottom: boolean }>``;\n\nconst Separator = styled.div`\n  position: relative;\n\n  height: 100%;\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 50%;\n    height: 100%;\n    width: 1px;\n    border-right: 1px solid ${({ theme }) => theme.trBorderClr};\n  }\n`;\n\nexport default TableActions;\n","import { useMediaQuery } from 'react-responsive';\nimport { Navigate, Outlet } from 'react-router-dom';\nconst LITTLE_MOBILE = 279;\nconst MOBILE_END = 479;\nconst TABLET_START = 480;\nconst TABLET_END = 767;\nconst TABLET_MAX_START = 768;\nconst TABLET_MAX_END = 1099;\nconst DESKTOP_START = 1100;\nexport const deviceParams = {\n  LITTLE_MOBILE,\n  MOBILE_END,\n  TABLET_START,\n  TABLET_END,\n  TABLET_MAX_START,\n  TABLET_MAX_END,\n  DESKTOP_START,\n};\n\nexport const MinDesktop: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isDesktop = useMediaQuery({ minWidth: DESKTOP_START });\n  return isDesktop ? children : null;\n};\nexport const Tablet: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTablet = useMediaQuery({ minWidth: TABLET_START, maxWidth: TABLET_END });\n  return isTablet ? children : null;\n};\nexport const TabletXL: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTabletXl = useMediaQuery({ minWidth: TABLET_MAX_START, maxWidth: DESKTOP_START });\n  return isTabletXl ? children : null;\n};\nexport const AllTablets: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTablet = useMediaQuery({ minWidth: TABLET_START, maxWidth: TABLET_MAX_END });\n  return isTablet ? children : null;\n};\nexport const LiitleMobile: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isLittleMobile = useMediaQuery({ maxWidth: LITTLE_MOBILE });\n  return isLittleMobile ? children : null;\n};\nexport const Mobile: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isMobile = useMediaQuery({ maxWidth: MOBILE_END });\n  return isMobile ? children : null;\n};\nexport const MaxToTablet: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTablet = useMediaQuery({ maxWidth: TABLET_END });\n  return isTablet ? children : null;\n};\nexport const MaxToTabletXl: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTabletXL = useMediaQuery({ maxWidth: DESKTOP_START });\n  return isTabletXL ? children : null;\n};\nexport const MinTabletXl: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isTabletXL = useMediaQuery({ minWidth: TABLET_MAX_START });\n  return isTabletXL ? children : null;\n};\nexport const NotMobile: React.FC<{ children: React.ReactElement<any, any> | null }> = ({ children }) => {\n  const isNotMobile = useMediaQuery({ minWidth: TABLET_MAX_START });\n  return isNotMobile ? children : null;\n};\nexport const NotMobileRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isMobile = useMediaQuery({ minWidth: MOBILE_END });\n  return isMobile ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MobileRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isMobile = useMediaQuery({ maxWidth: MOBILE_END });\n  return isMobile ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MaxTabletRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isTablet = useMediaQuery({ maxWidth: TABLET_END });\n  return isTablet ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MinTabletXlRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isTabletXl = useMediaQuery({ minWidth: TABLET_MAX_START });\n  return isTabletXl ? <Outlet /> : <Navigate to={redirectTo} />;\n};\nexport const MinDesktopRoute: React.FC<{ redirectTo?: string | any }> = ({ redirectTo }) => {\n  const isTabletXl = useMediaQuery({ minWidth: DESKTOP_START });\n  return isTabletXl ? <Outlet /> : <Navigate to={redirectTo} />;\n};\n\nconst DeviceConrol = {\n  MinDesktop,\n  Tablet,\n  TabletXL,\n  AllTablets,\n  LiitleMobile,\n  Mobile,\n  MaxToTablet,\n  MaxToTabletXl,\n  MinTabletXl,\n  NotMobile,\n  NotMobileRoute,\n  MobileRoute,\n  MaxTabletRoute,\n  MinTabletXlRoute,\n  MinDesktopRoute,\n};\nexport default DeviceConrol;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport SvgIcon from 'components/atoms/SvgIcon/SvgIcon';\nimport { SelectItem } from 'components/TableList/TableList';\nimport { iconId } from 'data';\nimport React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface ISearchParamInputProps {\n  data?: SelectItem[];\n  defaultValue?: SelectItem;\n  selectedItem?: SelectItem;\n  onSelect?: (item: SelectItem) => void;\n}\n\nconst SearchParamInput: React.FC<ISearchParamInputProps> = ({ data, defaultValue, selectedItem, onSelect }) => {\n  const [inputValue, setInputValue] = useState({ searchParam: '' });\n  const [filteredData, setFilteredData] = useState<SelectItem[]>(data || []);\n  const [current, setCurrent] = useState<SelectItem | null>(defaultValue || selectedItem || null);\n  const [isOpen, setIsOpen] = useState(false);\n  function handleToggleList(state?: boolean) {\n    setIsOpen(state || !isOpen);\n  }\n  function onSelectItemClick(item: SelectItem) {\n    setCurrent(item);\n\n    if (onSelect instanceof Function) {\n      onSelect(item);\n      setInputValue({ searchParam: item.label ? item.label : '' });\n    }\n\n    handleToggleList();\n  }\n\n  function onChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = ev.target;\n\n    current && setCurrent(null);\n    setInputValue(prev => {\n      return { ...prev, [name]: value };\n    });\n  }\n  function onSerchParamReset() {\n    setInputValue({ searchParam: '' });\n  }\n\n  useEffect(() => {\n    // console.log('select data', data);\n    if (data?.length === 0) {\n      return;\n    }\n\n    const filteredData = data?.filter(el => {\n      if (inputValue?.searchParam && el?.name)\n        return !(inputValue?.searchParam && !el?.name.toLowerCase().includes(inputValue?.searchParam.toLowerCase()));\n\n      if (inputValue?.searchParam && el?.label)\n        return !(inputValue?.searchParam && !el?.label.toLowerCase().includes(inputValue?.searchParam.toLowerCase()));\n\n      return true;\n    });\n\n    filteredData && setFilteredData(filteredData);\n  }, [data, inputValue, inputValue?.searchParam]);\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      const { target } = ev;\n      if (target instanceof HTMLElement && !target.closest('[data-select]')) setIsOpen(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsOpen(false);\n    }\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, []);\n\n  return (\n    <InputBox className={isOpen ? 'isOpen' : ''} data-select>\n      <StyledLabel className={isOpen ? 'isOpen' : ''}>\n        <StyledInput\n          type=\"text\"\n          placeholder=\"Параметр\"\n          name=\"searchParam\"\n          className={isOpen ? 'isOpen' : ''}\n          value={inputValue.searchParam}\n          onChange={onChange}\n          // onClick={() => handleToggleList()}\n        />\n\n        <ToggleButton onClick={() => handleToggleList()}>\n          <SvgIcon iconId={iconId.SmallArrowDown} className={'svgIcon'} size=\"24px\" />\n        </ToggleButton>\n      </StyledLabel>\n\n      <ParamsListContainer isOpen={isOpen}>\n        <ParamsList>\n          {filteredData.length > 0 &&\n            filteredData.map((item, idx) => (\n              <ListItem\n                key={item.dataKey}\n                title={item.label}\n                onClick={() => {\n                  onSelectItemClick(item);\n                }}\n              >\n                <span>{item.label}</span>\n              </ListItem>\n            ))}\n\n          {filteredData.length === 0 && (\n            <ListItem listEmpty>\n              <span>Нічого не знайдено</span>\n            </ListItem>\n          )}\n        </ParamsList>\n        {false && (\n          <CloseListItem>\n            <ButtonIcon variant=\"outlinedSmall\" onClick={onSerchParamReset}>\n              Очистити\n            </ButtonIcon>\n          </CloseListItem>\n        )}\n      </ParamsListContainer>\n    </InputBox>\n  );\n};\nconst InputBox = styled.label`\n  position: relative;\n  z-index: 2;\n\n  height: 100%;\n  width: 100%;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  /* &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 0;\n\n    height: calc(10% + 4px);\n    width: 0;\n\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n     transform: translate(50, 50);\n  background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus-within {\n    &::before {\n      width: calc(100% + 4px);\n    }\n  } */\n  &.isOpen {\n    & .svgIcon {\n      transform: rotate(-180deg);\n    }\n  }\n`;\nconst StyledLabel = styled.label`\n  display: flex;\n\n  position: relative;\n\n  border-style: none;\n  border-image: none;\n  border-width: 5px;\n\n  height: 100%;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    height: calc(100% + 4px);\n    width: 0;\n\n    pointer-events: none;\n\n    border-radius: 4px;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%, -50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.isOpen {\n    &::before {\n      width: calc(100% + 4px);\n    }\n    /* background: linear-gradient(#fff, #fff) padding-box,\n      linear-gradient(90deg, rgba(255, 175, 61, 0) 50%, rgba(255, 175, 61, 1) 50%, rgba(255, 175, 61, 0) 50%) border-box; */\n  }\n  &:focus-within {\n  }\n  &:focus {\n    outline-style: none;\n  }\n`;\n\nconst StyledInput = styled.input`\n  display: block;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 10;\n\n  height: 100%;\n  width: 100%;\n  flex-basis: 50px;\n  flex-grow: 1;\n  padding: 4px 32px 4px 8px;\n\n  font-size: 12px;\n  font-family: inherit;\n  color: inherit;\n  background-color: transparent;\n\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n  border-radius: 2px;\n  border-style: none;\n  border: 2px solid ${({ theme }) => theme.trBorderClr};\n  transition: border ${({ theme }) => theme.globals.timingFnMui};\n\n  &:focus {\n    outline-style: none;\n  }\n  &.isOpen {\n    border-color: transparent;\n  }\n\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n`;\n\nconst ToggleButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: absolute;\n  right: 0px;\n  top: 50%;\n  z-index: 10;\n  width: 28px;\n  height: 28px;\n\n  transform: translateY(-50%);\n`;\n\nconst ParamsListContainer = styled.ul<{ isOpen: boolean }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr min-content;\n\n  position: absolute;\n  top: calc(100% + 4px);\n  left: 0;\n  z-index: 50;\n\n  min-width: 100%;\n  width: max-content;\n  max-width: calc(100% + 40px);\n  height: max-content;\n\n  /* height: 50vh; */\n\n  max-height: ${({ isOpen }) => (isOpen ? '60vh' : '0')};\n  overflow: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\n  ${({ isOpen }) => (isOpen ? css`` : null)}\n\n  font-size: 12px;\n\n  border-radius: 2px;\n  box-shadow: var(--header-shadow);\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n  /* border: 1px solid ${({ theme }) => theme.trBorderClr}; */\n  border: ${({ isOpen }) => (isOpen ? '1px' : '0')} solid ${({ theme }) => theme.trBorderClr};\n\n  @media screen and (max-width: 480px) {\n    font-size: 10px;\n  }\n`;\nconst ParamsList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 32px;\n\n  max-width: 100%;\n\n  overflow: auto;\n\n  color: ${({ theme }) => theme.fillColorHeader};\n`;\n\nconst ListItem = styled.li<{ listEmpty?: boolean }>`\n  display: flex;\n  align-items: center;\n\n  padding: 8px;\n\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n\n  &:hover {\n    cursor: default;\n    background-color: ${({ listEmpty }) => (listEmpty ? '' : 'rgba(254, 254, 254, 0.1)')};\n  }\n`;\n\nconst CloseListItem = styled.div`\n  display: flex;\n  justify-content: center;\n\n  /* position: sticky;\n  bottom: 0;\n  left: 0; */\n\n  width: 100%;\n  height: max-content;\n  padding: 6px;\n\n  border-top: 1px solid ${({ theme }) => theme.trBorderClr};\n  background-color: inherit;\n  &:hover,\n  &:active {\n    background-color: inherit;\n  }\n`;\n\nexport default SearchParamInput;\n/* background: linear-gradient(#fff, #fff) padding-box,\n    linear-gradient(90deg, rgba(255, 175, 61, 0) 50%, rgba(255, 175, 61, 1) 50%, rgba(255, 175, 61, 0) 50%) border-box; */\n/* background: linear-gradient(90deg, rgba(255, 175, 61, 0) 50%, rgba(255, 175, 61, 1) 50%, rgba(255, 175, 61, 0) 50%); */\n/* background: linear-gradient(#fff, #fff) padding-box,\n      linear-gradient(90deg, rgba(255, 175, 61, 1) 0%, rgba(255, 175, 61, 1) 50%, rgba(255, 175, 61, 1) 100%) border-box; */\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { SelectItem } from 'components/TableList/TableList';\nimport { iconId } from 'data';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport SearchParamInput from './SearchParamInput';\n\nexport interface TableSearchProps {\n  tableSearchParams?: SelectItem[];\n}\n\nconst TabelSearch: React.FC<TableSearchProps> = ({ tableSearchParams }) => {\n  const [searchParam, setSearchParam] = useState<SelectItem>();\n  function onSelect(item: SelectItem) {\n    console.log(item);\n    setSearchParam(item);\n  }\n  return (\n    <SearchContainer>\n      <StyledLabel>\n        <SearchInput type=\"text\" placeholder=\"Пошук\" />\n      </StyledLabel>\n\n      <SearchParamInput {...{ data: tableSearchParams, onSelect, searchParam, defaultValue: searchParam?.title }} />\n\n      <ButtonIcon iconId={iconId.search} size=\"28px\" variant=\"onlyIconFilled\" />\n    </SearchContainer>\n  );\n};\n\nconst SearchContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr min-content;\n  gap: 8px;\n`;\nconst StyledLabel = styled.label`\n  position: relative;\n\n  border-style: none;\n  border-image: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 2px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus-within {\n    &::before {\n      width: 100%;\n    }\n  }\n`;\nconst SearchInput = styled.input`\n  height: 100%;\n  width: 100%;\n  padding: 4px 8px;\n\n  font-size: 12px;\n  font-family: inherit;\n  color: inherit;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n  background-color: transparent;\n\n  border-style: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${({ theme }) => theme.globals.inputBorder};\n  &:hover,\n  &:focus {\n    /* border-bottom-color: ${({ theme }) => theme.accentColor.hover}; */\n    outline-style: none;\n  }\n`;\nexport default TabelSearch;\n","import React from 'react';\n\nimport styled from 'styled-components';\nimport { useTable } from '../TableList';\nimport TableActions from './TableActions/TableActions';\nimport DeviceConrol from 'components/atoms/DeviceTypeInformer/DeviceTypeController';\nimport TabelSearch from './TableSearch/TabelSearch';\n\nconst TableOverHead: React.FC = () => {\n  const { tableActions, tableSearchParams } = useTable();\n  return (\n    <OverHead>\n      <LeftSide>\n        <TabelSearch {...{ tableSearchParams }} />\n      </LeftSide>\n\n      <DeviceConrol.MinDesktop>\n        <RightSide>\n          <TableActions {...tableActions} />\n        </RightSide>\n      </DeviceConrol.MinDesktop>\n    </OverHead>\n  );\n};\n\nconst OverHead = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: space-between;\n\n  gap: 8px;\n\n  position: relative;\n  z-index: 50;\n\n  width: 100%;\n  padding: 8px;\n  @media screen and (max-height: 480px) {\n    padding: 8px;\n  }\n  @media screen and (min-height: 280px) and (min-width: 480px) {\n    grid-template-columns: 1fr 1fr;\n  }\n  @media screen and (min-width: 480px) and (min-height: 480px) {\n    padding: 20px 8px 16px;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\nconst LeftSide = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  /* overflow: hidden; */\n`;\nconst RightSide = styled.div`\n  align-self: flex-end;\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  gap: 8px;\n\n  /* overflow: hidden; */\n`;\n\nexport default TableOverHead;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nexport interface FooterCounterProps {\n  includes?: string[];\n  selectedRows?: any[];\n}\n\nconst FooterCounter: React.FC<FooterCounterProps> = ({ includes = [''], selectedRows = [] }) => {\n  const [rowsAmountSum, setRowsAmountSum] = useState<number>(0);\n\n  useEffect(() => {\n    const countedSum = selectedRows.reduce(\n      (acc: number, { amount, type }: { amount: number; type: string }) =>\n        includes.includes(type) ? acc + amount : acc + 0,\n      0\n    );\n\n    setRowsAmountSum(countedSum);\n  }, [includes, selectedRows]);\n\n  return (\n    <Box>\n      <Wrapper>\n        <span>Обрано:</span>\n        <span>{selectedRows?.length}</span>\n      </Wrapper>\n\n      <Wrapper>\n        <span>Сума:</span>\n        <span>{rowsAmountSum}</span>\n      </Wrapper>\n    </Box>\n  );\n};\nconst Box = styled.div`\n  display: flex;\n  gap: 12px;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`;\nexport default FooterCounter;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { MaxToTablet } from 'components/atoms/DeviceTypeInformer/DeviceTypeController';\nimport { iconId } from 'data';\nimport styled from 'styled-components';\nimport { FilterSelectorDataType } from './Filter';\n\nexport interface IFilterSelectorAddsProps {\n  ListComp?: React.FC<any>;\n}\n\nexport interface FilterSelectorProps {\n  label: string;\n  selectorName?: string;\n  data: FilterSelectorDataType;\n  idx: number;\n  currentIdx: number | null;\n  CurrentData: any;\n  onSelectorClick: (idx?: number) => void;\n}\n\nconst Selector: React.FC<FilterSelectorProps & React.HTMLAttributes<Element>> = ({\n  label = 'Selector label',\n  selectorName = 'selector',\n  onSelectorClick,\n  currentIdx,\n  data,\n  idx,\n  children,\n}) => {\n  return (\n    <SelectorContainer>\n      <StOpenButton\n        variant=\"def\"\n        isCurrent={currentIdx === idx}\n        endIconId={iconId.SmallArrowDown}\n        endIconSize=\"22px\"\n        onClick={() => onSelectorClick && onSelectorClick()}\n      >\n        <Label>{label}</Label>\n      </StOpenButton>\n\n      <MaxToTablet>{currentIdx === idx ? <SelectorList>{children}</SelectorList> : null}</MaxToTablet>\n    </SelectorContainer>\n  );\n};\nconst SelectorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nconst Label = styled.div`\n  flex-grow: 1;\n\n  display: flex;\n  align-items: center;\n\n  padding: 5px 8px;\n`;\nconst StOpenButton = styled(ButtonIcon)<{ isCurrent: boolean }>`\n  width: 100%;\n  font-size: 12px;\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  justify-content: space-between;\n\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n\n  border-color: ${({ isCurrent, theme }) => (isCurrent ? theme.accentColor.base : '')};\n  & .endIcon {\n    transform: ${({ isCurrent }) => `rotate(${isCurrent ? 180 : 0}deg)`};\n  }\n\n  @media screen and (min-width: 768px) {\n    & .endIcon {\n      transform: ${({ isCurrent }) => `rotate(${isCurrent ? -90 : 90}deg)`};\n    }\n  }\n`;\nconst SelectorList = styled.div`\n  overflow: hidden;\n`;\n\nexport default Selector;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { FilterSelectorProps, IFilterSelectorAddsProps } from '../Selector';\n\nexport interface SelectorListItem {\n  label?: string;\n  name?: string;\n  _id?: string;\n  checked?: boolean;\n}\n\nexport interface SelectorContentProps {\n  onSelect: (item: SelectorListItem) => void;\n  isOpen?: boolean;\n}\n\nconst SelectorContent: React.FC<\n  SelectorContentProps &\n    Pick<FilterSelectorProps, 'selectorName' | 'data'> &\n    Pick<IFilterSelectorAddsProps, 'ListComp'> &\n    React.HTMLAttributes<HTMLDivElement>\n> = ({ isOpen = false, onSelect, data, selectorName, ListComp, ...props }) => {\n  // const data = useData();\n  const [searchParam, setSearchParam] = useState<string>('');\n  const [filteredData, setFilteredData] = useState<SelectorListItem[]>(data || []);\n\n  function onInputChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    const { value } = ev.target;\n    setSearchParam(value);\n  }\n  function onSerchParamReset() {\n    setSearchParam('');\n  }\n  function onSelectAllClick(status?: boolean) {\n    setFilteredData(_prev => {\n      if (searchParam) {\n        return filteredData?.map(el => {\n          return { ...el, checked: status ? status : false };\n        });\n      }\n\n      return data?.map(el => {\n        return { ...el, checked: status ? status : false };\n      });\n    });\n  }\n\n  useEffect(() => {\n    if (data?.length === 0) {\n      return;\n    }\n\n    const filteredData = data?.filter((el: any) => {\n      if (searchParam && el?.name) return !(searchParam && !el.name.toLowerCase().includes(searchParam.toLowerCase()));\n\n      if (searchParam && el?.label)\n        return !(searchParam && !el.label.toLowerCase().includes(searchParam.toLowerCase()));\n\n      return true;\n    });\n\n    filteredData && setFilteredData(filteredData);\n  }, [data, searchParam]);\n\n  return (\n    <Content {...props}>\n      <StyledLabel>\n        <SearchInput type=\"text\" name={selectorName} placeholder=\"Пошук\" value={searchParam} onChange={onInputChange} />\n\n        <ButtonIcon variant=\"onlyIcon\" size=\"26px\" iconId={iconId.close} onClick={onSerchParamReset} />\n      </StyledLabel>\n\n      {filteredData.length > 0 && ListComp ? (\n        <ListComp\n          isOpen={isOpen}\n          mapedData={filteredData}\n          onSelect={(data: SelectorListItem) => {\n            if (selectorName) {\n              console.log({ [selectorName]: data });\n            }\n          }}\n        />\n      ) : (\n        <NotFound>Нчіого не знайдено</NotFound>\n      )}\n\n      <AcceptButtons>\n        <ButtonIcon variant=\"onlyIcon\" size=\"26px\" iconId={iconId.done} />\n\n        <ButtonIcon variant=\"onlyIcon\" size=\"26px\" iconId={iconId.doneAll} onClick={() => onSelectAllClick(true)} />\n\n        <ButtonIcon variant=\"onlyIcon\" size=\"26px\" iconId={iconId.close} onClick={() => onSelectAllClick()} />\n      </AcceptButtons>\n    </Content>\n  );\n};\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 28px 1fr 28px;\n\n  width: 100%;\n  /* height: 100%; */\n  height: 250px;\n  max-height: 100%;\n  overflow: hidden;\n  color: ${({ theme }) => theme.fontColorHeader};\n\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    height: 100%;\n  }\n`;\nconst StyledLabel = styled.label`\n  display: flex;\n\n  position: relative;\n\n  border-style: none;\n  border-image: none;\n  border-width: 0;\n  border-bottom: 1px solid ${({ theme }) => theme.globals.inputBorder};\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 2px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus-within {\n    &::before {\n      width: 100%;\n    }\n  }\n`;\nconst SearchInput = styled.input`\n  height: 100%;\n  width: 100%;\n  padding: 4px 30px 4px 8px;\n\n  font-size: 12px;\n  font-family: inherit;\n  color: inherit;\n\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n  background-color: transparent;\n\n  border-style: none;\n\n  &:hover,\n  &:focus {\n    /* border-bottom-color: ${({ theme }) => theme.accentColor.hover}; */\n    outline-style: none;\n  }\n`;\n\nconst NotFound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AcceptButtons = styled.div`\n  display: flex;\n  justify-content: end;\n  gap: 16px;\n\n  border-top: 1px solid ${({ theme }) => theme.globals.inputBorder};\n`;\n\nexport default SelectorContent;\n","import { useState } from 'react';\nimport Selector from './Selector';\nimport ModalDefault, { ModalFormProps } from 'components/ModalForm/ModalForm';\n\nimport styled from 'styled-components';\nimport SelectorContent from './SelectorContent/SelectorContent';\nimport { MinTabletXl } from 'components/atoms/DeviceTypeInformer/DeviceTypeController';\n\nimport { ICount } from 'data/counts.types';\nimport { ICategory } from 'data/categories.types';\n\nexport type FilterSelectorDataType = ICount[] | ICategory[] | any[];\nexport type FilterSelectorType = {\n  selectorName: string;\n  label: string;\n  data: FilterSelectorDataType;\n  ListComp: React.FC<any>;\n};\nexport interface FilterProps extends ModalFormProps {\n  useFilterSelectors: () => FilterSelectorType[] | [];\n}\n\nconst Filter: React.FC<FilterProps> = props => {\n  const { useFilterSelectors, ...restProps } = props;\n  if (!useFilterSelectors) {\n    return <SelectorErr>'useFilterSelectors' not passed</SelectorErr>;\n  }\n\n  if (typeof useFilterSelectors !== 'function') {\n    return <SelectorErr>'useFilterSelectors' not function</SelectorErr>;\n  }\n\n  const selectors = props.useFilterSelectors();\n  if (!Array.isArray(selectors) || selectors.some(sel => !isSelectorType(sel))) {\n    return <SelectorErr>Invalid filter selectors</SelectorErr>;\n  }\n\n  return <AppFilter useFilterSelectors={props.useFilterSelectors} {...restProps} />;\n};\n\nconst AppFilter: React.FC<FilterProps & ModalFormProps> = ({ useFilterSelectors, ...props }) => {\n  const selectors = useFilterSelectors();\n  const [CurrentData, setCurrentData] = useState<FilterSelectorType | null>(selectors[0]);\n  const [currentIdx, setCurrentIdx] = useState<number | null>(0);\n\n  function onSelectorClick(idx: number) {\n    setCurrentIdx(idx);\n    if (typeof idx === 'number') setCurrentData(selectors[idx]);\n  }\n  function onFilterStateChange(item: any) {\n    console.log('onFilterStateChange', item);\n  }\n\n  return (\n    <ModalDefSt {...props}>\n      <FilterContainer>\n        <DatePickers>\n          <InputDate type=\"datetime-local\" placeholder=\"Дата і час\" />\n          <InputDate type=\"datetime-local\" placeholder=\"Дата і час\" />\n        </DatePickers>\n\n        <Bottom>\n          <LeftSide>\n            <SelectorsList>\n              {selectors.map(({ selectorName, label, data, ListComp }, idx) => (\n                <Selector\n                  key={selectorName}\n                  label={label}\n                  data={data}\n                  selectorName={selectorName}\n                  idx={idx}\n                  onSelectorClick={() => onSelectorClick(idx)}\n                  currentIdx={currentIdx}\n                  CurrentData={CurrentData}\n                >\n                  <SelectorContent\n                    data={data}\n                    onSelect={onFilterStateChange}\n                    selectorName={selectorName}\n                    ListComp={ListComp}\n                  />\n                </Selector>\n              ))}\n            </SelectorsList>\n          </LeftSide>\n\n          <MinTabletXl>\n            <RightSide>\n              <SelectorContent\n                data={CurrentData?.data || []}\n                onSelect={onFilterStateChange}\n                selectorName={CurrentData?.selectorName}\n                ListComp={CurrentData?.ListComp}\n              />\n            </RightSide>\n          </MinTabletXl>\n        </Bottom>\n      </FilterContainer>\n    </ModalDefSt>\n  );\n};\n\nconst ModalDefSt = styled(ModalDefault)`\n  height: 98vh;\n  @media screen and (min-width: 768px) {\n    width: 680px;\n  }\n`;\n\nconst FilterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  max-width: 100%;\n  height: 100%;\n\n  min-height: 100%;\n  max-height: 100%;\n\n  overflow: hidden;\n  color: inherit;\n\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n  @media screen and (min-width: 768px) {\n    /* padding: 16px; */\n  }\n`;\n\nconst DatePickers = styled.div`\n  display: grid;\n\n  grid-template-columns: 1fr;\n  gap: 12px;\n\n  color: inherit;\n  padding: 12px;\n\n  width: 100%;\n\n  @media screen and (min-width: 480px) {\n    gap: 24px;\n    grid-template-columns: 1fr 1fr;\n  }\n`;\nconst InputDate = styled.input`\n  color: inherit;\n  font-family: inherit;\n  fill: inherit;\n\n  height: 26px;\n  padding: 5px 8px;\n  width: 100%;\n\n  border-radius: 2px;\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n  color: ${({ theme }) => theme.fillColorHeader};\n  &::placeholder {\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n`;\n\nconst Bottom = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n\n  width: 100%;\n  max-width: 100%;\n  min-height: 100%;\n  max-height: 100%;\n\n  padding-bottom: 12px;\n\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`;\nconst Side = styled.div`\n  position: relative;\n\n  max-height: 100%;\n  overflow: hidden;\n`;\nconst LeftSide = styled(Side)``;\nconst RightSide = styled(Side)`\n  padding: 0 12px;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nconst SelectorsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 12px;\n\n  max-height: 100%;\n  min-height: 100%;\n  overflow: auto;\n\n  padding: 0 12px;\n`;\n\nconst SelectorErr = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 14px;\n  font-weight: 500;\n\n  width: 250px;\n  height: 250px;\n\n  color: ${({ theme }) => theme.fontColor};\n\n  background-color: ${({ theme }) => theme.backgroundColorMain};\n`;\n\n// define a type guard to check if an object is of type SelectorType\nfunction isSelectorType(obj: any): obj is FilterSelectorType {\n  return (\n    typeof obj.selectorName === 'string' &&\n    typeof obj.label === 'string' &&\n    Array.isArray(obj.data) &&\n    typeof obj.ListComp === 'function'\n  );\n}\n\nexport default Filter;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { useModalProvider } from 'components/ModalProvider/ModalProvider';\nimport { iconId } from 'data';\n\nimport Filter, { FilterProps, FilterSelectorType } from 'components/Filter/Filter';\nexport interface TableFilterProps {\n  title?: string;\n  useFilterSelectors: () => FilterSelectorType[] | [];\n}\n\nconst TableFilter: React.FC<TableFilterProps> = ({ title, useFilterSelectors }) => {\n  const modal = useModalProvider();\n\n  return (\n    <ButtonIcon\n      iconId={iconId.filterOff}\n      size=\"28px\"\n      iconSize=\"26px\"\n      variant=\"onlyIcon\"\n      onClick={() => {\n        modal.handleOpenModal<FilterProps>({\n          ModalChildren: Filter,\n          modalChildrenProps: { title, useFilterSelectors },\n          settings: {},\n        });\n      }}\n    />\n  );\n};\n\nexport default TableFilter;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface TablePaginationProps {\n  onSelect?: (opt: PaginationOption) => void;\n}\nexport interface PaginationOption {\n  label: string;\n  value: number | null;\n}\nconst pagOptions: PaginationOption[] = [\n  { label: '15', value: 15 },\n  { label: '30', value: 30 },\n  { label: '60', value: 60 },\n  { label: 'Усі', value: null },\n];\n\nconst TablePagination: React.FC<TablePaginationProps> = ({ onSelect }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [current, setCurrent] = useState<PaginationOption>(pagOptions[0]);\n\n  function onOpen() {\n    setIsOpen(prev => !prev);\n  }\n  function onSelectOpt(idx: number) {\n    setCurrent(pagOptions[idx]);\n    onSelect && onSelect(pagOptions[idx]);\n    onOpen();\n  }\n\n  return (\n    <Box>\n      <DropDownBox>\n        <StButton isOpen={isOpen} variant=\"def\" endIconSize=\"26px\" endIconId=\"SmallArrowUp\" onClick={onOpen}>\n          <span>{current?.label}</span>\n        </StButton>\n\n        <SelectList isOpen={isOpen}>\n          {pagOptions.map((opt, idx) => (\n            <SelectItem key={idx} onClick={() => onSelectOpt(idx)}>\n              {opt.label}\n            </SelectItem>\n          ))}\n        </SelectList>\n      </DropDownBox>\n    </Box>\n  );\n};\n\nconst Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\nconst DropDownBox = styled.div`\n  position: relative;\n`;\nconst StButton = styled(ButtonIcon)<{ isOpen: boolean }>`\n  width: fit-content;\n  height: 100%;\n  gap: 0;\n\n  min-width: 65px;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n  color: ${({ theme }) => theme.fontColorHeader};\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n\n  &:active,\n  &:focus,\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundColorLight};\n  }\n\n  & .endIcon {\n    transform: ${({ isOpen }) => `rotate(${isOpen ? 180 : 0}deg)`};\n  }\n  & span {\n    padding: 0 8px;\n  }\n`;\n\nconst SelectList = styled.ul<{ isOpen: boolean }>`\n  display: flex;\n  flex-direction: column;\n\n  position: absolute;\n  bottom: 120%;\n  right: 0;\n\n  min-width: 100%;\n  overflow: hidden;\n\n  border-radius: 2px;\n\n  color: ${({ theme }) => theme.fontColorHeader};\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain},\n    transform ${({ theme }) => theme.globals.timingFnMui};\n  transform-origin: bottom;\n\n  ${({ isOpen }) =>\n    isOpen\n      ? css``\n      : css`\n          transform: scale(0.7, 0.5);\n          opacity: 0;\n          visibility: hidden;\n          pointer-events: none;\n        `}\n`;\nconst SelectItem = styled.li`\n  font-size: 16px;\n  padding: 8px;\n\n  cursor: default;\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundColorLight};\n  }\n`;\nexport default TablePagination;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { ModalFormProps } from 'components/ModalForm/ModalForm';\nimport { iconId } from 'data';\nimport React, { useEffect, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { SelectItem } from 'components/TableList/TableList';\n\nexport interface TableSortParamsListProps extends ModalFormProps {\n  tableSortParams?: SelectItem[];\n  current: SelectItem & { descending: boolean };\n  isOpen?: boolean;\n  onOpenClick: (isOpen?: boolean) => void;\n  handleSetCurrent: (param: SelectItem, descending: boolean) => <T = any>(args?: T | undefined) => any;\n}\n\nconst TableSortParamsList: React.FC<TableSortParamsListProps> = ({\n  tableSortParams,\n  handleSetCurrent,\n  current,\n  onOpenClick,\n  isOpen,\n}) => {\n  const [currentEl, setCurrentEl] = useState<SelectItem & { descending: boolean }>(current);\n\n  function handleSetCurrentState(param: SelectItem, descending: boolean) {\n    return () => {\n      handleSetCurrent(param, descending) && handleSetCurrent(param, descending)();\n      setCurrentEl({ ...param, descending });\n    };\n  }\n  function isActive(param: SelectItem, descending: boolean) {\n    return param.dataKey === currentEl?.dataKey && currentEl.descending === descending;\n  }\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      const { target } = ev;\n\n      if (target instanceof HTMLElement && target?.closest('[data-table-sort-open]')) return onOpenClick(true);\n      if (target instanceof HTMLElement && !target?.closest('[data-table-sort-close]')) onOpenClick(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') onOpenClick(false);\n    }\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, [isOpen, onOpenClick]);\n  return (\n    <Box isOpen={isOpen} data-table-sort-close>\n      <Title>\n        <span>Сортування</span>\n\n        <ButtonIcon variant=\"def\" iconId=\"close\" iconSize=\"26px\" onClick={() => onOpenClick(false)} />\n      </Title>\n\n      <SelectList>\n        {tableSortParams?.map(param => (\n          <ListParam key={param.dataKey}>\n            <ParamLabel>{param.name || param.label}</ParamLabel>\n\n            <SetOrderButton\n              isActive={isActive(param, true)}\n              variant=\"onlyIcon\"\n              iconSize=\"24px\"\n              iconId={iconId.SmallArrowDown}\n              onClick={handleSetCurrentState(param, true)}\n            />\n\n            <SetOrderButton\n              isActive={isActive(param, false)}\n              variant=\"onlyIcon\"\n              iconSize=\"24px\"\n              iconId={iconId.SmallArrowUp}\n              onClick={handleSetCurrentState(param, false)}\n            />\n          </ListParam>\n        ))}\n      </SelectList>\n    </Box>\n  );\n};\n\nconst Box = styled.div<{ isOpen?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  bottom: 10px;\n  left: 0;\n  z-index: 2000;\n\n  min-height: 150px;\n  max-height: 70vh;\n  min-width: 150px;\n  min-width: max-content;\n\n  overflow: hidden;\n  border-radius: 2px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n\n  color: ${({ theme }) => theme.fontColorHeader};\n  fill: ${({ theme }) => theme.fontColorHeader};\n  /* background-color: ${({ theme }) => theme.backgroundColorSecondary}; */\n\n  backdrop-filter: blur(3px);\n  background-color: ${({ theme }) => theme.backdropColor};\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain},\n    transform ${({ theme }) => theme.globals.timingFnMui};\n\n  ${({ isOpen }) =>\n    isOpen\n      ? css`\n          transform: translate(0%, 0);\n        `\n      : css`\n          transform: translate(-100%, 0);\n          /* opacity: 0; */\n          visibility: hidden;\n          pointer-events: none;\n        `}\n\n  @media screen and (min-height: 480px) {\n    max-height: max-content;\n  }\n`;\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 100;\n\n  width: 100%;\n\n  font-size: 14px;\n  font-weight: 600;\n  & span {\n    padding: 0 8px;\n  }\n\n  border-bottom: 1px solid ${({ theme }) => theme.trBorderClr};\n  background-color: inherit;\n  backdrop-filter: blur(3px);\n`;\nconst SelectList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 36px;\n\n  overflow: auto;\n`;\nconst ListParam = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  font-size: 14px;\n\n  padding: 0 8px;\n\n  /* gap: 8px; */\n`;\nconst ParamLabel = styled.div`\n  flex-grow: 1;\n  align-items: center;\n\n  padding: 0 8px;\n  min-width: max-content;\n`;\nconst SetOrderButton = styled(ButtonIcon)<{ isActive: boolean }>`\n  fill: ${({ isActive, theme }) => (isActive ? theme.accentColor.base : theme.fontColorHeader)};\n`;\n\nexport default TableSortParamsList;\n","import React, { useState } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n// import { useModalProvider } from 'components/ModalProvider/ModalProvider';\nimport TableSortParamsList from './TableSortParamsList';\nimport styled from 'styled-components';\nimport { SelectItem } from 'components/TableList/TableList';\n\nexport interface TableSortProps {\n  tableSortParams: SelectItem[];\n}\n\nconst TableSort: React.FC<TableSortProps> = ({ tableSortParams }) => {\n  // const modal = useModalProvider();\n  const [isOpen, setIsOpen] = useState<boolean | undefined>(false);\n  const [current, setCurrent] = useState<SelectItem & { descending: boolean }>({\n    descending: false,\n    ...tableSortParams[0],\n  });\n\n  function onOpenClick(newState?: boolean) {\n    setIsOpen(newState);\n  }\n  function handleSetCurrent(param: SelectItem, descending: boolean) {\n    return () => {\n      setCurrent({ ...param, descending });\n    };\n  }\n\n  return (\n    <Box>\n      <StButton\n        descending={current?.descending}\n        variant=\"def\"\n        iconId=\"sort\"\n        iconSize=\"18px\"\n        endIconSize=\"26px\"\n        endIconId=\"SmallArrowDown\"\n        onClick={() => onOpenClick(true)}\n        data-table-sort-open\n      >\n        <span title={current.name || current.label}>{current.name || current.label}</span>\n      </StButton>\n\n      <ListBox isOpen={!!isOpen}>\n        <TableSortParamsList {...{ tableSortParams, handleSetCurrent, current, isOpen, onOpenClick }} />\n      </ListBox>\n    </Box>\n  );\n};\n\nconst Box = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  max-width: 150px;\n  min-width: 150px;\n`;\n\nconst StButton = styled(ButtonIcon)<{ descending?: boolean }>`\n  display: grid;\n  grid-template-columns: 26px 1fr 26px;\n  height: 100%;\n  max-width: 100%;\n  width: 100%;\n\n  padding-left: 4px;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n  color: ${({ theme }) => theme.fontColorHeader};\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n\n  & span {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n\n  &:active,\n  &:focus,\n  &:hover {\n    background-color: ${({ theme }) => theme.backgroundColorLight};\n  }\n  & .endIcon {\n    transform: ${({ descending }) => `rotate(${!descending ? 180 : 0}deg)`};\n  }\n`;\n\nconst ListBox = styled.div<{ isOpen: boolean }>`\n  position: absolute;\n\n  bottom: 100%;\n  left: 0;\n  z-index: 200;\n\n  min-height: 100%;\n\n  pointer-events: ${({ isOpen }) => (isOpen ? 'all' : 'none')};\n\n  /* outline: 3px solid tomato; */\n`;\n\nexport default TableSort;\n","import styled from 'styled-components';\nimport { useTable } from '../TableList';\nimport FooterCounter from './FooterCounter';\nimport TableFilter from './TableFilter';\nimport TablePagination from './TablePagination';\nimport TableSort from './TableSortComp/TableSort';\n\nconst TableFooter: React.FC<any> = () => {\n  const { useFilterSelectors, tableSortParams, selectedRows } = useTable();\n\n  return (\n    <Footer>\n      {selectedRows && selectedRows?.length === 0 && (\n        <FooterCounter selectedRows={selectedRows} includes={['INCOME', 'EXPENSE']} />\n      )}\n\n      <Bottom>\n        {tableSortParams && <TableSort {...{ tableSortParams }} />}\n\n        <TablePagination />\n\n        <TableFilter\n          {...{ title: 'Фільтрація транзакцій' }}\n          useFilterSelectors={useFilterSelectors ? useFilterSelectors : () => []}\n        />\n      </Bottom>\n    </Footer>\n  );\n};\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  position: relative;\n\n  min-height: 28px;\n  width: 100%;\n  height: 100%;\n\n  padding: 2px 4px;\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n  @media screen and (min-width: 480px) {\n    flex-direction: row-reverse;\n  }\n`;\nconst Bottom = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport default TableFooter;\n","import React from 'react';\nimport { useContext, createContext, useRef, useState } from 'react';\nimport TableHead from './TableHead';\nimport TableBody from './TableBody';\nimport AppLoader from 'components/AppLoader/AppLoader';\nimport QuickActions from './QuickActions/QuickActions';\nimport TableOverHead from './TableOverHead/TableOverHead';\nimport TableFooter from './TableFooter/TableFooter';\nimport styled from 'styled-components';\nimport { CellTittleProps } from './TebleCells/CellTitle';\nimport { MaxToTabletXl } from 'components/atoms/DeviceTypeInformer/DeviceTypeController';\nimport { FilterSelectorType } from 'components/Filter/Filter';\nexport interface SelectItem extends Record<string, any> {\n  _id?: string;\n  filter?: boolean;\n  search?: boolean;\n  label?: string;\n  name?: string;\n  value?: string | number;\n  dataKey: string;\n}\nexport type ITableListProps = {\n  tableTitles?: CellTittleProps[];\n  tableSearchParams?: SelectItem[];\n  tableSortParams?: SelectItem[];\n  tableData?: any[];\n  isLoading?: boolean;\n  RowActionsComp?: React.ReactNode;\n  quickActions?: {\n    ActionsStart?: React.ReactNode;\n    ActionsEnd?: React.ReactNode;\n  };\n  tableActions?: TableActionsProps;\n  TableActionsComp?: React.ReactNode;\n  filter?: boolean;\n  search?: boolean;\n  footer?: boolean;\n  checkBoxes?: boolean;\n  rowGrid?: any;\n  children?: React.ReactNode;\n  useFilterSelectors?: () => FilterSelectorType[] | [];\n};\n\nexport interface TableActionsProps {\n  top?: any[];\n  bottom?: any[];\n  footer?: boolean;\n}\n\nexport type TableSortParamsType = { descending: boolean; dataKey: string };\nexport type OnRowClickType = <D = any>({\n  ev,\n  _id,\n  data,\n}: {\n  ev: MouseEvent | React.MouseEvent<HTMLDivElement>;\n  _id: string;\n  data: D;\n}) => any;\n\nexport interface ITableListContext {\n  onSelectRow?: ({ ev, rowData }: { ev: Event; rowData: any }) => void;\n  onUnselectRow?: ({ ev, rowData }: { ev: Event; rowData: any }) => void;\n  selectedRows?: any[];\n  onRowClick?: OnRowClickType;\n  rowRef?: React.MutableRefObject<HTMLElement | undefined>;\n  sortParams?: TableSortParamsType;\n\n  handleTableSort?: (sortParams: TableSortParamsType) => void;\n}\n\nexport const TableCTX = createContext({});\nexport const useTable = () => useContext(TableCTX) as ITableListContext & ITableListProps;\n\nconst TableList: React.FC<ITableListProps> = ({\n  tableData = [],\n  isLoading = false,\n  RowActionsComp,\n  TableActionsComp,\n  tableTitles,\n  tableSearchParams,\n  tableActions,\n  footer = true,\n  ...props\n}) => {\n  const [selectedRows, setSelectedRows] = useState<{ _id: string; amount?: number; type?: string }[] | any[]>([]);\n  const rowRef = useRef<HTMLElement>();\n\n  const rowGrid = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${tableTitles?.length}, min-content)`,\n  };\n\n  function onSelectRow({ rowData }: { ev?: Event; rowData: any }) {\n    setSelectedRows(prev => [rowData, ...prev]);\n  }\n  function onUnselectRow({ rowData }: { ev?: Event; rowData: { _id: string } }) {\n    setSelectedRows(prev => prev.filter(row => row._id !== rowData._id));\n  }\n\n  const CTX = {\n    RowActionsComp,\n    TableActionsComp,\n    tableActions,\n    footer,\n    tableSearchParams,\n    tableTitles,\n    rowGrid,\n    rowRef,\n    selectedRows,\n    onSelectRow,\n    onUnselectRow,\n    tableData,\n    isLoading,\n    ...props,\n  };\n\n  return (\n    <Table>\n      <TableCTX.Provider value={CTX}>\n        <AppLoader isLoading={isLoading} />\n\n        <TableOverHead />\n\n        <TableScroll className=\"TableScroll\">\n          <TableHead />\n\n          {tableData.length !== 0 ? <TableBody /> : <NoData>Дані відсутні</NoData>}\n\n          <MaxToTabletXl>{tableActions ? <QuickActions {...tableActions} footer={footer} /> : null}</MaxToTabletXl>\n        </TableScroll>\n\n        {/* {footer && } */}\n        <TableFooter />\n      </TableCTX.Provider>\n    </Table>\n  );\n};\n\n// import cloneDeep from 'lodash.clonedeep';\n// import { applyFounder } from 'components/BlockWithList/BlockUtils/founder';\n\nconst NoData = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 100%;\n`;\nconst Table = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr min-content;\n\n  position: relative;\n\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n`;\nconst TableScroll = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 40px 1fr min-content;\n\n  /* position: relative; */\n\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n`;\n\nexport default TableList;\n"],"names":["takeFullGridArea","css","_templateObject","_taggedTemplateLiteral","takeFullPlace","_templateObject2","_templateObject3","StCellHead","styled","_ref2","width","Wrapper","Content","Top","_templateObject4","_ref3","align","concat","Bottom","_templateObject5","_ref4","StButtonIcon","ButtonIcon","_templateObject6","_ref5","theme","fillColor","_ref6","_ref7","accentColor","base","_ref8","descending","WidthChanger","_templateObject7","_ref9","trBorderClr","_ref","onClick","idx","top","bottom","props","_objectWithoutProperties","_excluded","_useTable","useTable","handleTableSort","sortParams","_jsxs","_objectSpread","children","className","name","dataKey","sort","_jsx","variant","iconId","iconSize","size","_Fragment","type","StLabel","checked","onChange","_ref$id","id","_ref$checked","_ref$size","icon","htmlFor","SvgIcon","tableData","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","some","setSome","_useState5","_useState6","everyOn","setEveryOn","_useState7","_useState8","everyOff","setEveryOff","useEffect","CheckBox","ev","StCell","title","CheckBoxHead","ThRow","ThRowStickyEl","ThRowData","_useTable$tableTitles","tableTitles","checkBoxes","rowGrid","CellCheckBoxHead","style","map","item","CellTitle","THead","tableBackgroundColor","TableHeadRow","RowCNTXT","createContext","useRow","useContext","value","Provider","args","data","nestedDataKey","def","CellBase","titleInfo","rowData","_titleInfo$width","contentTop","getNestedData","contentBottom","wraped","StDate","StTime","wrap","date","year","month","day","hours","minutes","seconds","dateInfo","Date","getFullYear","toString","padStart","getMonth","getDate","getHours","getMinutes","getSeconds","DateComp","variantsMap","outlined","filled","text","StStatusComp","color","fill","borderColor","Label","_ref$status","_ref$variant","statusData","statusDataMap","descr","label","CellsMap","cell","Cell","cellDbl","CellTextDbl","dateSimple","CellDateSimple","StatusComp","dateDbl","Row","light","RowStickyEl","StRowData","gridRepeat","_props$rowData","isActionsOpen","setIsActionsOpen","ctxValue","handleToggleActions","handleCloseActions","_id","RowContext","length","CellComp","action","Function","console","log","TBody","rowRef","onRowClick","_rowRef$current2","MouseEvent","rowEl","target","HTMLElement","closest","current","classList","remove","_rowEl2","find","el","_rowEl","_rowRef$current","add","toggle","TableRow","ToggleButton","isShown","backgroundColorMain","backgroundColorSecondary","globals","timingFunctionMain","timingFnMui","_ref10","_ref11","Menu","_ref12","footer","List","_ref13","_ref14","_ref15","_ref16","_ref17","_templateObject8","_templateObject9","_templateObject10","Separator","_templateObject11","_ref18","_ref19","setIsShown","onMenuClose","KeyboardEvent","code","document","addEventListener","removeEventListener","disableChek","disabled","tabIndex","_excluded2","Left","Right","MOBILE_END","TABLET_END","TABLET_MAX_START","DESKTOP_START","MaxToTablet","useMediaQuery","maxWidth","MaxToTabletXl","MinTabletXl","minWidth","MinDesktop","Tablet","TabletXL","AllTablets","LiitleMobile","Mobile","NotMobile","NotMobileRoute","redirectTo","Outlet","Navigate","to","MobileRoute","MaxTabletRoute","MinTabletXlRoute","MinDesktopRoute","InputBox","StyledLabel","StyledInput","backgroundColorLight","inputPlaceholderColor","ParamsListContainer","isOpen","ParamsList","fillColorHeader","ListItem","listEmpty","_ref20","defaultValue","selectedItem","onSelect","searchParam","inputValue","setInputValue","filteredData","setFilteredData","setCurrent","setIsOpen","handleToggleList","state","filter","toLowerCase","includes","placeholder","_ev$target","prev","_defineProperty","onSelectItemClick","SearchContainer","SearchInput","inputBorder","hover","tableSearchParams","setSearchParam","SearchParamInput","OverHead","LeftSide","RightSide","tableActions","TabelSearch","DeviceConrol","TableActions","Box","_ref$includes","_ref$selectedRows","selectedRows","rowsAmountSum","setRowsAmountSum","countedSum","reduce","acc","amount","SelectorContainer","StOpenButton","isCurrent","SelectorList","_ref$label","onSelectorClick","selectorName","currentIdx","endIconId","endIconSize","fontColorHeader","NotFound","AcceptButtons","_ref$isOpen","ListComp","onSelectAllClick","_prev","mapedData","AppFilter","useFilterSelectors","selectors","CurrentData","setCurrentData","setCurrentIdx","onFilterStateChange","ModalDefSt","FilterContainer","DatePickers","InputDate","SelectorsList","Selector","SelectorContent","ModalDefault","Side","SelectorErr","fontColor","restProps","Array","isArray","sel","obj","modal","useModalProvider","handleOpenModal","ModalChildren","Filter","modalChildrenProps","settings","pagOptions","DropDownBox","StButton","SelectList","shadowMain","SelectItem","onOpen","opt","onSelectOpt","backdropColor","Title","ListParam","ParamLabel","SetOrderButton","isActive","tableSortParams","handleSetCurrent","onOpenClick","currentEl","setCurrentEl","handleSetCurrentState","param","ListBox","newState","TableSortParamsList","Footer","FooterCounter","TableSort","TablePagination","TableFilter","TableCTX","NoData","Table","TableScroll","_ref$tableData","_ref$isLoading","isLoading","RowActionsComp","TableActionsComp","_ref$footer","setSelectedRows","useRef","display","gridTemplateColumns","CTX","onSelectRow","_toConsumableArray","onUnselectRow","row","AppLoader","TableOverHead","TableHead","TableBody","QuickActions","TableFooter"],"sourceRoot":""}