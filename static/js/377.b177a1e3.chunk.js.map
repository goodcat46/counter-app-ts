{"version":3,"file":"static/js/377.b177a1e3.chunk.js","mappings":"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","sources":["components/Forms/methods/FormDeliveryMethod.tsx"],"sourcesContent":["import ModalForm, { ModalFormProps } from '../../ModalForm';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport styled from 'styled-components';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport { LangKeyEnum, t } from '../../../lang';\nimport React, { useState } from 'react';\nimport { useAppForm } from '../../../hooks';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../components/FormAfterSubmitOptions';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport FlexBox from '../../atoms/FlexBox';\nimport { IDeliveryMethod, IInvoicingMethod, ServiceMethodBase } from '../../../types/integrations.types';\nimport ButtonSwitch from '../../atoms/ButtonSwitch';\nimport { useTranslatedMethodsList } from '../../../hooks/useTranslatedMethodsList.hook';\nimport { useInvoicesSelector } from '../../../redux/selectors.store';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport { Text } from '../../atoms/Text';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { IBaseKeys } from '../../../redux/global.types';\nimport ButtonsGroup from '../../atoms/ButtonsGroup';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\n\nexport interface FormDeliveryMethodProps extends Omit<ModalFormProps<any, any, IDeliveryMethod>, 'onSubmit'> {\n  _id?: string;\n  create?: boolean;\n  edit?: boolean;\n  onSubmit?: AppSubmitHandler<IDeliveryMethodFormData, { logAfterSubmit?: boolean }>;\n}\n\nexport interface IDeliveryMethodFormData\n  extends Omit<IDeliveryMethod, IBaseKeys | 'service' | 'extService' | 'invoicing'> {\n  invoicing?: {\n    method: Pick<IInvoicingMethod, '_id' | 'type' | 'label'>;\n    minCost?: {\n      delivery?: number;\n      return?: number;\n    };\n  };\n}\n\nconst validation = yup.object().shape({\n  // label: yup.string().max(100),\n  disabledForClient: yup.boolean().optional(),\n  description: yup.string().max(250).optional(),\n} as Record<keyof ServiceMethodBase | string, any>);\n\nconst LangButtonsGroup = ({ onChange }: { onChange?: (value: LangKeyEnum) => void }) => {\n  return (\n    <ButtonsGroup\n      disabled\n      options={enumToFilterOptions(LangKeyEnum)}\n      onSelect={info => onChange && onChange(info.value)}\n    />\n  );\n};\n\nconst FormDeliveryMethod: React.FC<FormDeliveryMethodProps> = ({ onSubmit, defaultState, ...props }) => {\n  const submitOptions = useAfterSubmitOptions();\n  const [isLoading, setIsLoading] = useState(false);\n  const invoicingMethods = useTranslatedMethodsList(useInvoicesSelector().methods, { withFullLabel: true });\n\n  const formMethods = useAppForm<IDeliveryMethodFormData>({\n    defaultValues: { ...defaultState },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onChange',\n  });\n  const {\n    formState: { errors, isValid },\n    handleSubmit,\n    registerSelect,\n    register,\n    reset,\n  } = formMethods;\n\n  // useEffect(() => {\n  //   console.log(formValues);\n  // }, [formValues]);\n  const onValid = (fData: IDeliveryMethodFormData) => {\n    onSubmit &&\n      onSubmit(fData, {\n        ...submitOptions.state,\n        onLoading: setIsLoading,\n        onError: () => {\n          reset();\n          if (submitOptions.state.clear) {\n          }\n        },\n      });\n  };\n\n  return (\n    <ModalForm\n      {...props}\n      fillHeight\n      isLoading={isLoading}\n      onSubmit={handleSubmit(onValid)}\n      isValid={isValid}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <Inputs>\n        {defaultState?.isDefault && (\n          <>\n            <InputLabel label={t('label')} error={errors.label} required>\n              <InputText placeholder={t('insertLabel')} {...register('label')} required autoFocus />\n            </InputLabel>\n\n            <InputLabel label={t('Type')} error={errors.label} required>\n              <InputText placeholder={t('Type')} {...register('type')} required />\n            </InputLabel>\n          </>\n        )}\n\n        <InputLabel label={t('Disabled')} error={errors.disabled}>\n          <ButtonSwitch />\n        </InputLabel>\n\n        <InputLabel label={t('Disabled for client')} error={errors.disabledForClient}>\n          <ButtonSwitch />\n        </InputLabel>\n\n        <BorderedBox>\n          <Text $size={13} $weight={600}>\n            {t('Invoicing configs')}\n          </Text>\n        </BorderedBox>\n\n        <CustomSelect\n          {...registerSelect('invoicing.method', {\n            options: invoicingMethods,\n            placeholder: t('Select method'),\n            label: t('Invoicing method'),\n          })}\n        />\n\n        <FlexBox fxDirection={'row'} gap={8}>\n          <InputLabel label={t('Min cost for delivery')} error={errors?.invoicing?.minCost?.delivery}>\n            <InputText\n              placeholder={'Min cost'}\n              type={'number'}\n              align={'center'}\n              {...register('invoicing.minCost.delivery', { valueAsNumber: true })}\n            />\n          </InputLabel>\n\n          <InputLabel label={t('Min cost for return')} error={errors?.invoicing?.minCost?.return}>\n            <InputText\n              placeholder={'Min cost'}\n              type={'number'}\n              align={'center'}\n              {...register('invoicing.minCost.return', { valueAsNumber: true })}\n            />\n          </InputLabel>\n        </FlexBox>\n\n        <BorderedBox>\n          <Text $size={13} $weight={600}>\n            {t('Cms configs')}\n          </Text>\n        </BorderedBox>\n\n        <InputLabel label={t('Cms key')} error={errors?.cmsConfigs?.key}>\n          <InputText placeholder={'Key'} {...register('cmsConfigs.key')} />\n        </InputLabel>\n\n        <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n          <LangButtonsGroup />\n        </InputLabel>\n\n        <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n          <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n        </InputLabel>\n      </Inputs>\n    </ModalForm>\n  );\n};\nconst Inputs = styled(FlexBox)`\n  padding: 0 8px 8px;\n\n  background-color: inherit;\n`;\n\nconst BorderedBox = styled(FlexBox)`\n  padding: 8px;\n\n  margin: 8px 0 0;\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormDeliveryMethod;\n"],"names":["validation","yup","shape","disabledForClient","optional","description","max","LangButtonsGroup","_ref","onChange","_jsx","ButtonsGroup","disabled","options","enumToFilterOptions","LangKeyEnum","onSelect","info","value","Inputs","styled","FlexBox","_templateObject","_taggedTemplateLiteral","BorderedBox","_templateObject2","p","theme","modalBorderColor","_ref2","_errors$invoicing","_errors$invoicing$min","_errors$invoicing2","_errors$invoicing2$mi","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs3","_errors$cmsConfigs3$l","onSubmit","defaultState","props","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","invoicingMethods","useTranslatedMethodsList","useInvoicesSelector","methods","withFullLabel","formMethods","useAppForm","defaultValues","_objectSpread","resolver","yupResolver","reValidateMode","_formMethods$formStat","formState","errors","isValid","handleSubmit","registerSelect","register","reset","ModalForm","fillHeight","fData","state","onLoading","onError","clear","extraFooter","FormAfterSubmitOptions","children","_jsxs","isDefault","_Fragment","InputLabel","label","t","error","required","InputText","placeholder","autoFocus","ButtonSwitch","Text","$size","$weight","CustomSelect","fxDirection","gap","invoicing","minCost","delivery","type","align","valueAsNumber","return","cmsConfigs","key","labels","ua"],"sourceRoot":""}