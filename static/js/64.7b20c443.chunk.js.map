{"version":3,"file":"static/js/64.7b20c443.chunk.js","mappings":"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","sources":["components/AppPages/PageProductOverview/PageCurrentProductProvider.tsx","components/AppPages/PageProductOverview/tabs/PricesTab.tsx","components/AppPages/PageProductOverview/tabs/VariationsTab.tsx","components/AppPages/PageProductOverview/tabs/WarehousingTab.tsx","components/AppPages/pagesStyles.tsx","components/Forms/FormProduct/FormCreateVariationOverlay.tsx","components/Forms/FormProduct/FormSelectPropertiesOverlay.tsx","components/Forms/FormProduct/components/index.tsx","components/Forms/FormProduct/FormProductImagesOverlay.tsx","components/Forms/FormProduct/FormSelectCategoriesOverlay.tsx","components/Forms/FormProduct/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/FormProduct/tabs/WarehousesTab.tsx","components/Forms/FormProduct/FormProductDefaultsOverlay.tsx","components/atoms/Changer.tsx","components/Overviews/components/Cells.tsx","data/products.data.ts","data/warehauses.data.ts"],"sourcesContent":["import React, { createContext, useCallback, useContext, useMemo, useState } from 'react';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { IProduct } from '../../../redux/products/products.types';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\n\nexport interface PageCurrentProductProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageCurrentProductProviderValue {\n  currentProduct?: IProduct;\n  clearCurrent: () => void;\n  getOverlayStack: () => OverlayStackItemData[];\n  overlayStack: OverlayStackItemData[];\n  createOverlayComponent: OverlayHandler;\n  removeStackItem: (id: string) => void;\n  clearStack: () => void;\n  mainPagePath?: string;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => OverlayHandlerReturn;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport type OverlayRenderComponentProps<Props = any> = OverlayHandlerReturn & Props;\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface OverlayHandlerReturn {\n  onClose?: () => void;\n  index?: number;\n  overlayId?: string;\n}\n\nexport const PageCurrentProductCTX = createContext({});\n\nexport const usePageCurrentProduct = () => useContext(PageCurrentProductCTX) as PageCurrentProductProviderValue;\n\nconst PageCurrentProductProvider: React.FC<PageCurrentProductProviderProps> = ({ children }) => {\n  const { currentProduct } = useProductsSelector();\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const clearCurrent = useCallback(() => {\n    service.clearCurrent(undefined);\n  }, [service]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.id !== isExist.id);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: OverlayHandlerReturn = {\n        onClose: () => removeStackItem(id),\n        overlayId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getOverlayStack = useCallback(() => overlayStack, [overlayStack]);\n\n  const CTX = useMemo(\n    (): PageCurrentProductProviderValue => ({\n      currentProduct,\n      createOverlayComponent,\n      overlayStack,\n      removeStackItem,\n      getOverlayStack,\n      clearStack,\n      clearCurrent,\n    }),\n    [currentProduct, createOverlayComponent, overlayStack, removeStackItem, getOverlayStack, clearStack, clearCurrent]\n  );\n\n  return <PageCurrentProductCTX.Provider value={CTX}>{children}</PageCurrentProductCTX.Provider>;\n};\nexport default PageCurrentProductProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { pricesColumnsForProductReview } from 'data/priceManagement.data';\nimport FormCreatePrice from '../../../Forms/FormCreatePrice/FormCreatePrice';\nimport { IPriceListItem } from 'redux/priceManagement/priceManagement.types';\nimport { useProductsSelector } from 'redux/selectors.store';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { getIdRef } from 'utils/dataTransform';\nimport { OnlyUUID } from 'redux/global.types';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n\n      productsS.getAllPricesByProductId({\n        data: { params: { product }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfig = useMemo((): ITableListProps<IPriceListItem> => {\n    return {\n      tableData: currentProduct?.prices,\n      tableTitles: pricesColumnsForProductReview,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: FormCreatePrice,\n                    modalChildrenProps: {\n                      product: currentProduct,\n                      onSubmit: d => {\n                        console.log('FormCreatePrice submit pr overview', d);\n                      },\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [withActions, currentProduct, loadData, modalS, onSelect]);\n\n  useEffect(() => {\n    if ((!currentProduct?.prices || currentProduct?.prices?.length === 0) && currentProduct?._id) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfig} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default PricesTab;\n","import { usePageCurrentProduct } from '../PageCurrentProductProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { createTableTitlesFromTemplate, transformVariationTableData } from '../../../../utils/tables';\nimport FormCreateVariation from '../../../Forms/FormProduct/FormCreateVariationOverlay';\nimport { IVariationTableData } from '../../../../redux/products/variations.types';\nimport { useProductsSelector, usePropertiesSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const page = usePageCurrentProduct();\n  const modalS = useModalProvider();\n  const currentProduct = useProductsSelector().currentProduct;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, product },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const variationsTableTitles = useMemo(() => {\n    const template = templates.find(t => t._id === currentProduct?.template?._id);\n\n    return createTableTitlesFromTemplate(template);\n  }, [currentProduct?.template?._id, templates]);\n\n  const tableConfig = useMemo(() => {\n    return {\n      tableTitles: variationsTableTitles,\n      tableData: currentProduct?.variations,\n      transformData: transformVariationTableData,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n                  const dataForUpdate = currentProduct?.variations?.find(v => v?._id === currentId);\n\n                  modalS.open({\n                    ModalChildren: FormCreateVariation,\n                    modalChildrenProps: {\n                      update: currentId,\n                      defaultState: dataForUpdate,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: FormCreateVariation,\n                    modalChildrenProps: { product: page.currentProduct },\n                  });\n                },\n              },\n            ];\n          },\n    } as ITableListProps<IVariationTableData>;\n  }, [currentProduct?.variations, loadData, modalS, onSelect, page.currentProduct, variationsTableTitles, withActions]);\n\n  useEffect(() => {\n    if ((!currentProduct?.variations || currentProduct?.variations?.length === 0) && currentProduct?._id) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfig} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\nexport default VariationsTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { IProductInventory } from '../../../../redux/warehouses/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventoriesByProductId({\n        data: { refreshCurrent: refresh, params: { product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<IProductInventory> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { useProductsSelector, usePropertiesSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../atoms/Text';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { createVariationFormData, createVariationReqData } from '../../../utils/dataTransform';\nimport { IVariation, IVariationFormData } from '../../../redux/products/variations.types';\nimport { OnlyUUID } from '../../../redux/global.types';\nimport { ToastService } from '../../../services';\nimport { ModalFormProps } from '../../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../components/FormAfterSubmitOptions';\nimport { OverlayFooter, OverlayHeader } from './components';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { IProperty, IPropertyValue } from '../../../redux/products/properties.types';\nimport { useAppForm } from '../../../hooks';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { t } from '../../../lang';\nimport { checks } from '../../../utils';\nimport { Path } from 'react-hook-form';\n\nconst dimensionsInputs: {\n  label?: string;\n  placeholder?: string;\n  name: Path<IVariationFormData>;\n}[] = [\n  { name: 'dimensions.height', label: t('Height'), placeholder: t('Sm') },\n  { name: 'dimensions.width', label: t('Width'), placeholder: t('Sm') },\n  { name: 'dimensions.length', label: t('Length'), placeholder: t('Sm') },\n  { name: 'dimensions.weight', label: t('Weight'), placeholder: t('Kg') },\n];\nexport interface FormVariationProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, IVariation>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  product?: OnlyUUID;\n\n  create?: boolean;\n  update?: string;\n\n  defaultState?: IVariation;\n}\nconst validation = yup.object().shape({\n  label: yup.string().required().min(5).max(50),\n  sku: yup.string().required().min(8).max(36),\n  barCode: yup.string(),\n  propertiesMap: yup.object().shape<{}>({\n    // Ваша схема для propertiesMap\n  }),\n  product: yup.object().shape({\n    label: yup.string(),\n    _id: yup.string(),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n});\n\nconst FormCreateVariationOverlay: React.FC<FormVariationProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const currentProduct = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n  } = useAppForm<IVariationFormData>({\n    defaultValues: createVariationFormData(\n      defaultState ? { ...defaultState, product: currentProduct } : { product: currentProduct }\n    ),\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n\n  const [propLabelsByParentId, setPropLabelsByParentId] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    if (update) return;\n\n    let newLabel = '';\n    console.log(propLabelsByParentId);\n    const labels = Object.values(propLabelsByParentId);\n\n    if (labels.length === 0) {\n      newLabel = `${currentProduct?.label}. {{VARIATION_LABEL}}`;\n      return;\n    } else {\n      const propLabelsString = labels.join('. ');\n      newLabel = currentProduct?.label ? `${currentProduct?.label}. ${propLabelsString}` : propLabelsString;\n    }\n    setValue('label', newLabel);\n  }, [currentProduct?.label, propLabelsByParentId, setValue, update]);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentProduct?.template?._id);\n  }, [currentProduct, templates]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: createVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: setLoading,\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: createVariationReqData(data),\n            onSuccess: data => {\n              submitOptions.state.close && onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: setLoading,\n          })\n          .then();\n      }\n\n      onSubmit && onSubmit(data);\n    },\n    [onClose, onSubmit, service, submitOptions.state.close, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string, label?: string) => {\n      setValue(`propertiesMap.${parentId}`, id);\n      label && setPropLabelsByParentId(p => ({ ...p, [parentId]: label }));\n    },\n    [setValue]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setPropLabelsByParentId({});\n  }, [setValue]);\n\n  const preparedTemplate = useMemo(\n    () => template?.childrenList?.filter(el => el?.isSelectable),\n    [template?.childrenList]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return preparedTemplate?.map(prop => {\n      return (\n        <RenderVariationProperty\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [preparedTemplate, selectedIds, handleSelect]);\n\n  return (\n    <FormContainer onSubmit={handleSubmit(onValid)} onReset={handleClearMap} {...props}>\n      <OverlayHeader onClose={onClose} title={title || template?.label} canSubmit={canSubmit} showSubmitButton />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <Inputs padding={'0 8px'}>\n          <InputLabel label={t('label')} error={errors.label}>\n            <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n          </InputLabel>\n\n          <FlexBox fxDirection={'row'} gap={8} fillWidth>\n            <InputLabel label={t('sku')} error={errors.sku}>\n              <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n            </InputLabel>\n\n            <InputLabel label={t('barCode')} error={errors.barCode}>\n              <InputText {...register('barCode')} placeholder={t('barCode')} />\n            </InputLabel>\n          </FlexBox>\n\n          <FlexBox gap={8} fillWidth style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)' }}>\n            {dimensionsInputs.map(input => {\n              return (\n                <InputLabel key={input.name} label={input.label} error={errors[input.name as never]}>\n                  <InputText\n                    placeholder={input.placeholder}\n                    min={1}\n                    type={'number'}\n                    {...register(input.name, {\n                      valueAsNumber: true,\n                      min: 1,\n                    })}\n                  />\n                </InputLabel>\n              );\n            })}\n          </FlexBox>\n        </Inputs>\n\n        <TemplateBox padding={'0 0 8px'} margin={'8px 0 0'}>\n          {renderTemplate}\n        </TemplateBox>\n      </Content>\n\n      <OverlayFooter\n        loading={loading}\n        resetButtonShown\n        submitButtonText={loading ? 'Loading...' : update ? 'Підтвердити' : 'Додати'}\n        canSubmit={canSubmit}\n        extraFooter={\n          <ExtraFooterBox>\n            <FormAfterSubmitOptions {...submitOptions} />\n          </ExtraFooterBox>\n        }\n      />\n    </FormContainer>\n  );\n};\n\nexport const RenderVariationProperty = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: {\n  item: IProperty;\n  selectedValue?: string;\n  selectedIds?: string[];\n  onSelect?: (propId: string, valueId: string, label?: string) => void;\n}) => {\n  const renderChildren = useMemo(() => {\n    return item.childrenList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, item.childrenList, onSelect, selectedIds]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox\n        fillWidth\n        padding={'8px 0'}\n        gap={6}\n        numColumns={item.label && ['розмір'].includes(item.label.toLowerCase()) ? 4 : 3}\n      >\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ numColumns?: number }>`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(${({ numColumns = 2 }) => numColumns}, 1fr);\n`;\nconst Inputs = styled(FlexBox)``;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: IPropertyValue;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    if (!checks.isUnd(isSelected)) {\n      setIsActive(isSelected);\n    }\n  }, [isSelected]);\n\n  return (\n    <ValueTag\n      variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nexport default FormCreateVariationOverlay;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { useProductsSelector, usePropertiesSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../atoms/Text';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { OnlyUUID } from '../../../redux/global.types';\nimport { ModalFormProps } from '../../ModalForm';\nimport { ToastService } from '../../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './components';\n\nexport interface FormSelectPropertiesProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  product?: OnlyUUID;\n  template?: OnlyUUID;\n\n  update?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  product,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === (template?._id || currentProduct?.template?._id));\n  }, [currentProduct?.template?._id, template?._id, templates]);\n\n  const canSubmit = useMemo(() => {\n    return currentProduct?.properties?.map(p => p._id).join(',') !== selectedIds.join(',');\n  }, [currentProduct?.properties, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = update ?? currentProduct?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentProduct?._id, onClose, onSubmit, selectedIds, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentId?: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n        onChange && onChange(newData);\n        onSelect && onSelect(id);\n\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (currentProduct?.properties) {\n      setSelectedIds(currentProduct?.properties.map(p => p._id));\n    }\n  }, [currentProduct?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader onClose={onClose} canSubmit={canSubmit} title={title || templateData?.label} showSubmitButton />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>`\n  //display: grid;\n  //grid-template-columns: repeat(auto-fill, 25%);\n  //\n  //@media screen and (max-width: 480px) {\n  //  grid-template-columns: repeat(auto-fill, 50%);\n  //}\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  //width: 100%;\n  //min-width: unset;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormSelectPropertiesOverlay;\n","import FlexBox from '../../../atoms/FlexBox';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport * as React from 'react';\n\nexport const OverlayHeader = ({\n  onClose,\n  title,\n  showSubmitButton,\n  canSubmit,\n}: {\n  canSubmit?: boolean;\n  onClose?: () => void;\n  title?: string;\n  showSubmitButton?: boolean;\n}) => {\n  return (\n    <Header padding={'4px 0'}>\n      <FlexBox fillWidth fxDirection={'row'} justifyContent={'space-between'} alignItems={'stretch'} height={'32px'}>\n        <ButtonIcon\n          variant={'textExtraSmall'}\n          icon={'SmallArrowLeft'}\n          iconSize={'22px'}\n          padding={'0 6px'}\n          style={{ minWidth: 'max-content', minHeight: '100%' }}\n          onClick={onClose}\n        >\n          {'Back'}\n        </ButtonIcon>\n\n        <FlexBox justifyContent={'center'} overflow={'hidden'}>\n          <Text\n            $weight={600}\n            $size={14}\n            style={{ textTransform: 'uppercase', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n          >\n            {title}\n          </Text>\n        </FlexBox>\n\n        {showSubmitButton && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            gap={'6px'}\n            type={'submit'}\n            padding={'0 6px'}\n            endIcon={'done'}\n            endIconSize={'22px'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            disabled={!canSubmit}\n          >\n            {'Ok'}\n          </ButtonIcon>\n        )}\n      </FlexBox>\n    </Header>\n  );\n};\nconst Header = styled(FlexBox)`\n  height: 32px;\n`;\n\nexport const OverlayFooter = ({\n  submitButtonText = 'Прийняти',\n  loading,\n  extraFooter,\n  canSubmit,\n  onCreatePress,\n  resetButtonShown,\n}: {\n  canSubmit?: boolean;\n  resetButtonShown?: boolean;\n  extraFooter?: React.ReactNode;\n  loading?: boolean;\n  onCreatePress?: () => void;\n  submitButtonText?: string;\n}) => {\n  return (\n    <Footer fillWidth>\n      {extraFooter}\n\n      <FlexBox padding={'8px 8px'} fxDirection={'row'} gap={8} alignItems={'center'}>\n        {resetButtonShown && (\n          <ButtonIcon variant={'onlyIcon'} icon={'clear'} size={'36px'} iconSize={'80%'} type={'reset'} />\n        )}\n\n        {onCreatePress && (\n          <ButtonIcon variant={'onlyIcon'} icon={'plus'} size={'36px'} iconSize={'80%'} onClick={onCreatePress} />\n        )}\n\n        <ButtonIcon\n          variant={'filledLarge'}\n          flex={1}\n          type={'submit'}\n          style={{ padding: '0 12px' }}\n          textTransform={'uppercase'}\n          fontWeight={600}\n          endIcon={'SmallArrowRight'}\n          endIconSize={'24px'}\n          disabled={loading || !canSubmit}\n        >\n          {submitButtonText}\n        </ButtonIcon>\n      </FlexBox>\n    </Footer>\n  );\n};\n\nconst Footer = styled(FlexBox)``;\n\nexport const OverlayForm = ({\n  children,\n  ...props\n}: { children?: React.ReactNode } & React.HTMLAttributes<HTMLFormElement>) => {\n  return <Form {...props}>{children}</Form>;\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n","import FormProductImagesComponent from './FormProductImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport { IProduct, IProductImage } from '../../../redux/products/products.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../../utils/dataTransform';\nimport { OverlayFooter, OverlayHeader } from './components';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: IProduct;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentProduct;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const theme = useTheme();\n\n  const [state, setState] = useState<Partial<IProductImage>[]>(currentProduct?.images || []);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as IProductImage[] }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormProductImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={<OverlayHeader title={'Зображення'} onClose={onClose} showSubmitButton />}\n        FooterComponent={props => {\n          return <OverlayFooter onCreatePress={props.onAddNewImageSetPress} />;\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import { OverlayHandlerReturn } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useDirectoriesSelector, useProductsSelector } from '../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../../utils/dataTransform';\nimport FormProductCategories from './FormProductCategories';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './components';\n\nexport interface FormSelectCategoriesOverlayProps extends OverlayHandlerReturn {}\n\nconst FormProductCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const { currentProduct } = useProductsSelector();\n  const { directory } = useDirectoriesSelector(ApiDirType.CATEGORIES_PROD);\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<string[]>([]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { categories: state }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  const canSubmit = useMemo(() => {\n    const initialString = currentProduct?.categories?.map(c => c._id)?.toString();\n    const currentString = state.toString();\n\n    return initialString !== currentString;\n  }, [currentProduct?.categories, state]);\n\n  useEffect(() => {\n    if (currentProduct?.categories) {\n      setState(currentProduct?.categories.map(c => c._id));\n    }\n  }, [currentProduct?.categories]);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader title={'Категорії'} onClose={onClose} canSubmit={canSubmit} showSubmitButton />\n\n      <Content padding={'0 0 8px 0'} flex={1}>\n        <FormProductCategories onChange={setState} options={directory} defaultData={state} />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductCategoriesOverlay;\n","import { OnlyUUID } from '../../../../redux/global.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectoriesSelector } from '../../../../redux/selectors.store';\nimport { useMemo } from 'react';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  // const [loading, setLoading] = useState(false);\n\n  const counterparties = useDirectoriesSelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../components/Directories/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../companies/companies.types';\n\nexport interface ICounterpartyBase {\n  name?: string;\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  label?: string;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useMemo } from 'react';\nimport { getIdRef } from '../../../../utils/dataTransform';\nimport { IWarehouse } from '../../../../redux/warehouses/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  // const [loading, setLoading] = useState(false);\n\n  const warehouses = useWarehousesSelector().warehouses;\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [onSelect, warehouses, withActions]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return <TableList isSearch={false} {...tableConfigs} selectedRow={selected} />;\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData } from '../../../redux/products/products.types';\nimport styled from 'styled-components';\nimport { OverlayHandlerReturn } from '../../atoms/PageOverlayProvider';\nimport { ModalHeader, OverlayFooter } from '../../atoms';\nimport FlexBox from '../../atoms/FlexBox';\nimport { useAppForm } from '../../../hooks';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport ModalFilter from '../../ModalForm/ModalFilter';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../../AppPages/PageProductOverview/tabs/PricesTab';\nimport VariationsTab from '../../AppPages/PageProductOverview/tabs/VariationsTab';\nimport WarehousingTab from '../../AppPages/PageProductOverview/tabs/WarehousingTab';\nimport CounterpartyTab from './tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../../redux/directories/counterparties.types';\nimport { t } from '../../../lang';\nimport WarehousesTab from './tabs/WarehousesTab';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport { OnlyUUID } from '../../../redux/global.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { createDataForReq } from '../../../utils/dataTransform';\n\nexport interface FormProductDefaultsOverlayProps extends OverlayHandlerReturn {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n}\n\nexport enum FormProductDefaultsTabs {\n  variation = 'variation',\n  price = 'price',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const currentProduct = useProductsSelector()?.currentProduct;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    productsS.setDefaults({\n      data: { data: { defaults: createDataForReq(fData) as never }, _id: currentProduct?._id, updateCurrent: true },\n      onSuccess: (data, meta) => {\n        console.log(data, meta);\n      },\n    });\n  };\n\n  const renderTab = useMemo(() => {\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.warehouse) {\n      return <WarehousesTab onSelect={handleSelect} selected={formValues?.variation} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.price) {\n      return <PricesTab withActions={false} onSelect={handleSelect} selected={formValues?.price} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.variation) {\n      return <VariationsTab withActions={false} onSelect={handleSelect} selected={formValues?.variation} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.inventory) {\n      return <WarehousingTab withActions={false} onSelect={handleSelect} selected={formValues?.inventory} />;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.supplier) {\n      return (\n        <CounterpartyTab\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          withActions={false}\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      );\n    }\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentProduct?.defaults;\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabs[currentTabIdx].value === FormProductDefaultsTabs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentProduct?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <Form onSubmit={handleSubmit(onValid)}>\n      <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n      <Content flex={1} fillWidth>\n        <ModalFilter filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} /> {renderTab}\n      </Content>\n\n      <OverlayFooter onCreatePress={() => {}} canSubmit={canSubmit} />\n    </Form>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FlexBox from './FlexBox';\nimport ButtonIcon from './ButtonIcon/ButtonIcon';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { Text } from './Text';\nimport { IconIdType } from '../../img/sprite';\nimport { LangPack } from '../../lang';\nimport { checks } from '../../utils';\n\nexport interface ChangerOption<T = any, D = any> {\n  _id?: string;\n  value: T;\n  data?: D;\n  color?: string;\n  icon?: IconIdType;\n  backgroundColor?: string;\n  label?: string;\n  lang?: LangPack;\n}\n\nexport interface StatusChangerProps<V = any, N = any> {\n  name?: N;\n  options?: ChangerOption<V>[];\n  onChange?: (event: ChangerEvent<V, N>) => void;\n  currentIndex?: number;\n  currentOption?: ChangerOption<V>;\n  colorIndicator?: boolean;\n  disabled?: boolean;\n}\n\nexport interface ChangerEvent<V = any, N = any> {\n  index: number;\n  name?: N;\n  value: ChangerOption<V>['value'];\n  option?: ChangerOption<V>;\n}\n\nconst Changer = <V = any,>({\n  options = [],\n  colorIndicator = true,\n  onChange,\n  currentOption,\n  currentIndex,\n  disabled,\n  name,\n}: StatusChangerProps<V>): JSX.Element => {\n  const [current, setCurrent] = useState<number>(0);\n  const currentStatus = useMemo(() => (options ? options[current] : null), [current, options]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    if (checks.isFun(onChange) && checks.isUnd(currentOption ?? currentIndex)) {\n      console.warn('Changer', 'You try to use uncontrolled \"Changer\" component\\n', 'You need to pass option or index');\n    }\n  }, [onChange, currentOption, currentIndex]);\n  const handleChange = (increment: number) => () => {\n    if (checks.isFun(onChange)) {\n      const newIndex = current + increment;\n      onChange({ index: newIndex, value: options[newIndex]?.value, option: options[newIndex] });\n      return;\n    }\n\n    if (current >= 0 && current + 1 <= options?.length) {\n      setCurrent(prev => prev + increment);\n    }\n  };\n  useEffect(() => {\n    if (!checks.isUnd(currentIndex) && current >= 0 && current + 1 <= options.length) {\n      setCurrent(currentIndex);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentIndex]);\n\n  useEffect(() => {\n    if (!checks.isUnd(currentOption)) {\n      const index = options.findIndex(o => {\n        if (currentOption?.value) {\n          return o?.value === currentOption?.value;\n        } else if (currentOption?._id) {\n          return o?._id === currentOption?._id;\n        }\n        return false;\n      });\n\n      index >= 0 && index !== current && setCurrent(index);\n    }\n\n    // eslint-disable-next-line\n  }, [currentOption]);\n\n  return (\n    <FlexBox fxDirection={'row'} fillWidth height={'28px'} alignItems={'center'} gap={8}>\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowLeft'}\n        iconSize={'28px'}\n        disabled={disabled || current === 0}\n        onClick={handleChange(-1)}\n      />\n\n      <FlexBox\n        flex={1}\n        alignItems={'stretch'}\n        justifyContent={'center'}\n        overflow={'hidden'}\n        style={{\n          borderRadius: 2,\n          backgroundColor: theme.fieldBackgroundColor,\n          color: theme.fontColorSidebar,\n          height: '100%',\n        }}\n      >\n        <FlexBox fillWidth fxDirection={'row'} justifyContent={'center'} alignItems={'center'} flex={1}>\n          <Text $size={15} $weight={600} className={'inner'} $ellipsisMode={true}>\n            {currentStatus?.label}\n          </Text>\n        </FlexBox>\n\n        {colorIndicator && currentStatus?.color && (\n          <FlexBox fillWidth height={'4px'} style={{ backgroundColor: currentStatus?.backgroundColor }} />\n        )}\n      </FlexBox>\n\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowRight'}\n        iconSize={'28px'}\n        disabled={disabled || current + 1 === options.length}\n        onClick={handleChange(1)}\n      />\n    </FlexBox>\n  );\n};\nexport default Changer;\n","import FlexBox from '../../atoms/FlexBox';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport FormCreateVariation from '../../Forms/FormProduct/FormCreateVariationOverlay';\nimport { IProperty, IPropertyValue } from '../../../redux/products/properties.types';\nimport styled, { useTheme } from 'styled-components';\nimport { Text } from '../../atoms/Text';\nimport { useDirectoriesSelector, useProductsSelector } from '../../../redux/selectors.store';\nimport FormSelectPropertiesOverlay from '../../Forms/FormProduct/FormSelectPropertiesOverlay';\nimport { IProduct, ProductStatusEnum } from '../../../redux/products/products.types';\nimport { formAddImageSetTabs } from '../../Forms/FormProduct/FormAddImageSet';\nimport FormProductImages from '../../Forms/FormProduct/FormProductImagesOverlay';\nimport ImagePreviewSmall from '../../atoms/ImagePreviewSmall';\nimport { IProductCategoryDirItem } from '../../Directories/dir.types';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport FormProductCategoriesOverlay from '../../Forms/FormProduct/FormSelectCategoriesOverlay';\nimport { OverlayHandler } from '../../AppPages/PageProductOverview/PageCurrentProductProvider';\nimport numberWithSpaces from '../../../utils/numbers';\nimport { t } from '../../../lang';\nimport { checks } from '../../../utils';\nimport FormProductDefaultsOverlay from '../../Forms/FormProduct/FormProductDefaultsOverlay';\nimport Changer from '../../atoms/Changer';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { productStatusesData } from '../../../data/products.data';\nimport { getStatusData } from '../../../data/statuses.data';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { ToastService } from '../../../services';\nimport { IPriceListItem } from '../../../redux/priceManagement/priceManagement.types';\n\nexport type RenderOverviewCellComponent<Data = any> = React.FC<{\n  cell: OverviewCellProps<Data>;\n  setOverlayContent: OverlayHandler;\n  data?: Data;\n}>;\n\nexport interface OverviewCellProps<Data = any> {\n  value?: string | number;\n  title?: string;\n  gridArea?: keyof Data | string;\n  CellComponent?: RenderOverviewCellComponent<Data>;\n  getValue?: (data: Data) => React.ReactNode | undefined | null;\n}\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = cell.getValue ? cell.getValue(data) : null;\n\n  return (\n    <Cell>\n      <CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellText>\n      </FlexBox>\n    </Cell>\n  );\n};\n\nexport const ProductStatusChangerCell: RenderOverviewCellComponent<IProduct> = ({ cell, data }) => {\n  const [canEdit, setCanEdit] = useState(false);\n  const [current, setCurrent] = useState<ProductStatusEnum | undefined>(data?.approved);\n\n  const service = useAppServiceProvider()[ServiceName.products];\n\n  const currentStatusData = useMemo(() => getStatusData(current), [current]);\n\n  const canAccept = useMemo(() => {\n    return current !== data?.approved;\n  }, [current, data?.approved]);\n  const handleCancelPress = () => {\n    setCurrent(data?.approved ?? (productStatusesData[0].value as never));\n    setCanEdit(false);\n  };\n\n  const handleAcceptPress = () => {\n    service.updateById({\n      data: { _id: data?._id, data: { approved: current }, refreshCurrent: true },\n      onSuccess: () => {\n        setCanEdit(false);\n        ToastService.success('Product updated');\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (data?.approved) {\n      setCurrent(data.approved);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Cell style={{ minHeight: 'max-content' }}>\n      <CellHeader\n        title={cell?.title}\n        onCancelPress={handleCancelPress}\n        onEditPress={() => setCanEdit(true)}\n        editMode={canEdit}\n      />\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        justifyContent={'flex-end'}\n        alignItems={'stretch'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n        gap={8}\n      >\n        {canEdit ? (\n          <>\n            <Changer\n              disabled={!canEdit}\n              options={productStatusesData}\n              currentOption={{ value: current }}\n              onChange={e => setCurrent(e?.value as never)}\n            />\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <ButtonIcon variant={'outlinedSmall'} disabled={!canAccept} onClick={handleCancelPress}>\n                {t('Cancel')}\n              </ButtonIcon>\n\n              <ButtonIcon variant={'filledSmall'} disabled={!canAccept} flex={1} onClick={handleAcceptPress}>\n                {t('Ok')}\n              </ButtonIcon>\n            </FlexBox>\n          </>\n        ) : (\n          <Tag\n            style={{\n              alignSelf: 'flex-end',\n              borderColor: currentStatusData?.backgroundColor,\n              backgroundColor: currentStatusData?.backgroundColor,\n            }}\n          >\n            <CellText $isTitle={!current} $weight={600} $align={'right'}>\n              {t(current || 'undefined')}\n            </CellText>\n          </Tag>\n        )}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nexport const ProductDefaultsCell: RenderOverviewCellComponent<IProduct> = ({ data, cell, setOverlayContent }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: number | string }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <DefaultTag key={item?.title}>\n          {`${item?.title}: `}\n          {item?.value || '---'}\n        </DefaultTag>\n      );\n    });\n  }, [data?.variation]);\n\n  const priceInfoCellsData = useMemo(() => createPriceOverviewTagsData(data?.price), [data?.price]);\n\n  const renderPriceInfo = useMemo(() => {\n    return priceInfoCellsData.map((item, index) => {\n      return (\n        <DefaultTag key={item?.title}>\n          {`${item?.title}: `}\n          {numberWithSpaces(item?.amount || 0)}\n          {checks.isNum(item?.percentage) && ` | ${numberWithSpaces(item?.percentage)}%`}\n        </DefaultTag>\n      );\n    });\n  }, [priceInfoCellsData]);\n\n  return (\n    <Cell style={{ minHeight: 'max-content' }}>\n      <CellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          setOverlayContent({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $isTitle $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('warehouse')}\n        </CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          <DefaultTag>{`${t('Label')}: ${warehouse?.label || '---'}`}</DefaultTag>\n          <DefaultTag>{`${t('Code')}: ${warehouse?.code || '---'}`}</DefaultTag>\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $isTitle $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('supplier')}\n        </CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          <DefaultTag>{`${t('Label')}: ${supplier?.label || '---'}`}</DefaultTag>\n          <DefaultTag>{`${t('Code')}: ${supplier?.code || '---'}`}</DefaultTag>\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('variation')}\n        </CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          {renderVariationTags}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellText $isTitle $weight={500} style={{ color: theme?.fontColorHeader, marginInline: 8 }}>\n          {t('price')}\n        </CellText>\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'} gap={8}>\n          {renderPriceInfo}\n        </FlexBox>\n      </FlexBox>\n    </Cell>\n  );\n};\nexport const CategoriesCell: RenderOverviewCellComponent<IProduct> = ({ cell, setOverlayContent, data }) => {\n  const categories = useDirectoriesSelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <Cell style={{ minHeight: 'max-content' }}>\n      <CellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          setOverlayContent({\n            RenderComponent: FormProductCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: IProductCategoryDirItem;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, index = 0, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n\nexport const VariationsTemplateCell: RenderOverviewCellComponent = ({ cell, setOverlayContent, data }) => {\n  return (\n    <Cell padding={'4px'}>\n      <CellHeader\n        title={cell.title}\n        openOverlayButtonTitle={'Перегляд'}\n        onOpenOverlayPress={() => {\n          setOverlayContent({ RenderComponent: FormCreateVariation, props: { create: true } });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        gap={8}\n        height={'24px'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n      >\n        <CellText $disabled={!data?.template?.label} $weight={500}>{`${data?.template?.label}`}</CellText>\n      </FlexBox>\n    </Cell>\n  );\n};\n\ninterface OverviewPropertyComponentProps {\n  item: IProperty;\n  selectedItems?: string[];\n  data?: IProduct;\n  index: number;\n}\n\nexport const ImagesCell: RenderOverviewCellComponent<IProduct> = ({ data, cell, setOverlayContent }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} title={el.label} disabled />\n          ))}\n        </ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <CellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          setOverlayContent({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nexport const StaticProperties: RenderOverviewCellComponent<IProduct> = ({ cell, setOverlayContent, data }) => {\n  const templates = useProductsSelector().properties;\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === data?.template?._id);\n  }, [data?.template?._id, templates]);\n\n  const availableProperties = useMemo(() => {\n    return template?.childrenList?.filter(prop => !prop.isSelectable);\n  }, [template?.childrenList]);\n\n  const selectedItems = useMemo(() => {\n    return data?.properties?.map(p => p._id);\n  }, [data?.properties]);\n\n  const renderProperties = useMemo(() => {\n    return availableProperties?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, setOverlayContent, item: prop, selectedItems }}\n        ></OverviewPropertyComponent>\n      );\n    });\n  }, [availableProperties, setOverlayContent, selectedItems]);\n\n  const renderPropertiesFromVariations = useMemo(() => {\n    const propsFromVariations = data?.variations?.map(vr => vr.properties)?.flat(1);\n    const unicValuesMap: Record<string, IPropertyValue> = {};\n\n    propsFromVariations?.forEach(propVal => {\n      if (propVal?._id) {\n        unicValuesMap[propVal?._id] = propVal;\n      }\n    });\n\n    return Object.values(unicValuesMap).map(el => {\n      return <FlexBox>{el.label}</FlexBox>;\n    });\n  }, [data?.variations]);\n\n  console.log('renderPropertiesFromVariations', renderPropertiesFromVariations);\n  return (\n    <Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <CellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          if (!template) return;\n\n          setOverlayContent({\n            RenderComponent: FormSelectPropertiesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {renderProperties && renderProperties?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellText $weight={500}>{t('undefined')}</CellText>\n        )}\n\n        {renderPropertiesFromVariations}\n      </FlexBox>\n    </Cell>\n  );\n};\n\nconst OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedItems }) => {\n  const renderValues = useMemo(() => {\n    return item.childrenList\n      ?.filter(el => selectedItems?.includes(el._id))\n      ?.map((value, index) => {\n        return (\n          <CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n            {value.label}\n          </CategoryItem>\n        );\n      });\n  }, [item.childrenList, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellText $size={14} $weight={600}>\n          {item?.label}\n        </CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row-reverse'} flexWrap={'wrap'} fillWidth gap={8}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n\nconst CellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox fxDirection={'row'} justifyContent={'space-between'}>\n      <CellText $isTitle $size={12} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellText>\n\n      {onOpenOverlayPress && (\n        <CellHeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellHeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellHeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellHeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellHeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellHeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellHeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellHeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n\nconst CellHeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 12px;\n  padding: 0 6px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  min-height: 50px;\n  height: max-content;\n\n  padding: 4px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 12px;\n\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  background-color: ${p => p.theme.field.backgroundColor};\n  //border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport function createPriceOverviewTagsData(\n  price?: IPriceListItem\n): { title: string; amount?: number; percentage?: number }[] {\n  return [\n    { title: t('Price'), amount: price?.in },\n    { title: t('Cost'), amount: price?.out },\n    {\n      title: t('Commission'),\n      ...price?.commission,\n    },\n    {\n      title: t('Markup'),\n      ...price?.markup,\n    },\n    {\n      title: t('Discount'),\n      ...price?.discount,\n    },\n    {\n      title: t('Bonus'),\n      ...price?.bonus,\n    },\n    {\n      title: t('Cashback'),\n      ...price?.cashback,\n    },\n  ];\n}\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { IProduct, ProductStatusEnum } from '../redux/products/products.types';\nimport { getStatusesByEnum } from './statuses.data';\n\nexport const productStatusesData = getStatusesByEnum(ProductStatusEnum);\n\nexport const productsColumns: CellTittleProps<IProduct>[] = [\n  {\n    top: { name: t('label'), align: 'start', getData: rd => rd?.label },\n    // bottom: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), align: 'start', getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), align: 'start', getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('type'), align: 'start', path: 'type' },\n    bottom: { name: t('status'), align: 'start', getData: d => d.approved as never },\n    width: '100px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('category'),\n      align: 'start',\n      getData: rd => rd.category?.label,\n    },\n    bottom: {\n      name: t('parentCategory'),\n      align: 'start',\n      getData: rd => rd.category?.parent?.label,\n    },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Бренд', align: 'start', path: 'brand.label' },\n    bottom: { name: 'Виробник', align: 'start', path: 'manufacturer.name' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновив', align: 'start', getData: rd => rd?.editor?.email },\n    bottom: { name: 'Автор', align: 'start', getData: rd => rd?.author?.email },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const productsSearchParams: SelectItem[] = [\n  // {\n  //   label: t('type'),\n  //   dataPath: 'type',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('price'),\n  //   dataPath: 'price',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Оновлено',\n  //   dataPath: 'createdAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Створено',\n  //   dataPath: 'updatedAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countIn'),\n  //   dataPath: 'countIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountIn'),\n  //   dataPath: 'subCountIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countOut'),\n  //   dataPath: 'countOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountOut'),\n  //   dataPath: 'subCountOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('category'),\n  //   dataPath: 'category.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCategory'),\n  //   dataPath: 'subCategory.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  //\n  // {\n  //   label: 'Контрагент',\n  //   dataPath: 'contractor.name',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Документ',\n  //   dataPath: 'document',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('project'),\n  //   dataPath: 'project.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  // {\n  //   label: 'Статус',\n  //   dataPath: 'status',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { IProductInventory, IWarehouse } from '../redux/warehouses/warehouses.types';\nimport { t } from '../lang';\nimport numberWithSpaces from '../utils/numbers';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email') },\n    bottom: { name: t('phone') },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<IProductInventory>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.product?.images ? d.product?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<IProductInventory>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<IProductInventory>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["PageCurrentProductCTX","createContext","usePageCurrentProduct","useContext","_ref","children","currentProduct","useProductsSelector","service","useAppServiceProvider","ServiceName","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","clearCurrent","useCallback","undefined","removeStackItem","id","pStack","filter","el","clearStack","createOverlayComponent","params","concat","RenderComponent","name","nanoid","prev","isExist","find","includes","clearedStack","_toConsumableArray","_objectSpread","onClose","overlayId","getOverlayStack","CTX","useMemo","_jsx","Provider","value","onSelect","selected","_ref$withActions","withActions","modalS","useModalProvider","productsS","loading","setLoading","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","refresh","update","product","wrap","_context","next","abrupt","getIdRef","getAllPricesByProductId","data","refreshCurrent","updateCurrent","onLoading","stop","_x","apply","arguments","tableConfig","tableData","prices","tableTitles","pricesColumnsForProductReview","onRowClick","rowData","_id","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","icon","type","onClick","separator","disabled","open","ModalChildren","FormCreatePrice","modalChildrenProps","onSubmit","d","console","log","useEffect","_currentProduct$price","length","TableList","isSearch","isFilter","isLoading","_currentProduct$templ2","page","templates","usePropertiesSelector","getAllVariationsByProductId","variationsTableTitles","template","t","_currentProduct$templ","createTableTitlesFromTemplate","variations","transformData","transformVariationTableData","window","confirm","_currentProduct$varia","dataForUpdate","v","FormCreateVariation","defaultState","_currentProduct$varia2","getAllInventoriesByProductId","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","takeFullGridArea","css","_templateObject","_taggedTemplateLiteral","takeFullPlace","_templateObject2","_templateObject3","dimensionsInputs","label","placeholder","validation","yup","shape","required","min","max","sku","barCode","propertiesMap","timeFrom","timeTo","RenderVariationProperty","item","_ref2$selectedIds","selectedIds","renderChildren","_item$childrenList","childrenList","map","isSelected","RenderPropertyValue","_jsxs","PropertyBox","gap","fillWidth","padding","Text","style","flex","paddingLeft","$weight","PropertyValuesBox","numColumns","toLowerCase","FormContainer","styled","p","theme","fontColorSidebar","tableBackgroundColor","Content","FlexBox","sideBarBorderColor","TemplateBox","_templateObject4","_templateObject5","_ref3$numColumns","Inputs","_templateObject6","ExtraFooterBox","_templateObject7","ValueTag","ButtonIcon","_templateObject8","_ref4","_useState5","_useState6","isActive","setIsActive","checks","variant","fontWeight","title","props","create","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppForm","useAppForm","defaultValues","createVariationFormData","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","_useState3","_useState4","propLabelsByParentId","setPropLabelsByParentId","newLabel","labels","Object","values","propLabelsString","join","canSubmit","onValid","updateVariationById","createVariationReqData","onSuccess","onError","ToastService","then","createVariation","state","close","handleSelect","parentId","_defineProperty","handleClearMap","preparedTemplate","_template$childrenLis","isSelectable","renderTemplate","prop","onReset","OverlayHeader","showSubmitButton","overflow","InputLabel","error","InputText","fxDirection","display","gridTemplateColumns","input","valueAsNumber","margin","OverlayFooter","resetButtonShown","submitButtonText","extraFooter","FormAfterSubmitOptions","PropertyValuesList","accentColor","light","base","onChange","setSelectedIds","templateData","_currentProduct$prope","properties","event","preventDefault","updateById","_meta","debug","newData","_templateData$childre","_prop$childrenList","flexWrap","OverlayForm","Header","justifyContent","alignItems","height","iconSize","minWidth","minHeight","$size","textTransform","textOverflow","whiteSpace","endIcon","endIconSize","_ref2$submitButtonTex","onCreatePress","Footer","size","Form","modalBackgroundColor","sideBarBackgroundColor","useTheme","images","setState","ev","meta","FormProductImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","directory","useDirectoriesSelector","ApiDirType","_currentProduct$categ","_currentProduct$categ2","categories","c","toString","FormProductCategories","options","defaultData","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","warehouses","useWarehousesSelector","warehousesTableColumns","FormProductDefaultsTabs","tabs","enumToFilterOptions","modalBorderColor","_useProductsSelector","currentTabIdx","setCurrentTabIdx","renderTab","warehouse","WarehousesTab","variation","price","PricesTab","VariationsTab","inventory","WarehousingTab","supplier","CounterpartyTab","SUPPLIER","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","fData","setDefaults","createDataForReq","ModalHeader","onBackPress","ModalFilter","filterOptions","currentIndex","onChangeIndex","_ref$options","_ref$colorIndicator","colorIndicator","currentOption","current","setCurrent","currentStatus","warn","handleChange","increment","_options$newIndex","newIndex","index","option","findIndex","o","borderRadius","backgroundColor","fieldBackgroundColor","color","className","$ellipsisMode","OverviewTextCell","cell","getValue","Cell","CellText","$isTitle","ProductStatusChangerCell","canEdit","setCanEdit","approved","currentStatusData","getStatusData","canAccept","handleCancelPress","_data$approved","productStatusesData","CellHeader","onCancelPress","onEditPress","editMode","_Fragment","Changer","e","Tag","alignSelf","borderColor","$align","DefaultTag","ProductDefaultsCell","setOverlayContent","renderVariationTags","priceInfoCellsData","amount","in","out","commission","markup","discount","bonus","cashback","renderPriceInfo","numberWithSpaces","percentage","onOpenOverlayPress","FormProductDefaultsOverlay","fontColorHeader","marginInline","code","CategoriesCell","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","NotActiveTreeDataItem","openOverlayButtonTitle","FormProductCategoriesOverlay","_ref5","_item$parent","_item$parent2","_ref5$lvl","lvl","CategoryItem","parent","VariationsTemplateCell","_ref6","_data$template","_data$template2","$disabled","ImagesCell","_ref7","renderImageSets","_data$images","set","ImagesSetBox","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","StaticProperties","_ref8","_data$template4","_data$template3","availableProperties","selectedItems","_data$properties","renderProperties","OverviewPropertyComponent","renderPropertiesFromVariations","_data$variations","_data$variations$map","propsFromVariations","vr","flat","unicValuesMap","forEach","propVal","FormSelectPropertiesOverlay","_ref9","renderValues","_item$childrenList2","_item$childrenList2$f","maxWidth","_ref10","_ref10$title","_ref10$openOverlayBut","_ref10$editButtonText","editButtonText","_ref10$acceptButtonTe","acceptButtonText","onAcceptPress","_ref10$editMode","_ref10$canAccept","_ref10$cancelButtonTe","cancelButtonText","marginRight","CellHeaderButton","globals","inputPlaceholderColor","field","getStatusesByEnum","ProductStatusEnum","productsColumns","top","align","getData","rd","getImgPreview","pr","_pr$images$","img_preview","width","action","bottom","path","_rd$category","category","_rd$category2","_rd$category2$parent","_rd$editor","editor","email","_rd$author","author","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","user","_rd$manager2","_rd$manager2$user","_rd$variation","_d$product","_d$product2","_d$product2$images$","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}