{"version":3,"file":"static/js/377.f95b38ad.chunk.js","mappings":"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","sources":["components/Forms/methods/FormDeliveryMethod.tsx"],"sourcesContent":["import ModalForm, { ModalFormProps } from '../../ModalForm';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport styled from 'styled-components';\nimport InputLabel from '../../atoms/Inputs/InputLabel';\nimport { t } from '../../../lang';\nimport React, { useState } from 'react';\nimport { useAppForm } from '../../../hooks';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../../atoms/FormAfterSubmitOptions';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport FlexBox from '../../atoms/FlexBox';\nimport { IDeliveryMethod, IInvoicingMethod, ServiceMethodBase } from '../../../types/integrations.types';\nimport ButtonSwitch from '../../atoms/ButtonSwitch';\nimport { useTranslatedMethodsList } from '../../../hooks/useTranslatedMethodsList.hook';\nimport { useInvoicesSelector } from '../../../redux/selectors.store';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect';\nimport { Text } from '../../atoms/Text';\nimport InputText from '../../atoms/Inputs/InputText';\nimport { IBaseKeys } from '../../../redux/app-redux.types';\nimport LangButtonsGroup from '../../atoms/LangButtonsGroup';\nimport { DisabledStates } from '../../../types/utils.types';\n\nexport interface FormDeliveryMethodProps extends Omit<ModalFormProps<any, any, IDeliveryMethod>, 'onSubmit'> {\n  _id?: string;\n  create?: boolean;\n  edit?: boolean;\n  onSubmit?: AppSubmitHandler<IDeliveryMethodFormData, { logAfterSubmit?: boolean }>;\n}\n\nexport interface IDeliveryMethodFormData\n  extends Omit<IDeliveryMethod, IBaseKeys | 'service' | 'extService' | 'invoicing'> {\n  invoicing?: {\n    method: Pick<IInvoicingMethod, '_id' | 'type' | 'label'>;\n    minCost?: {\n      delivery?: number;\n      return?: number;\n    };\n  };\n}\n\nconst validation = yup.object().shape({\n  // label: yup.string().max(100),\n  disabledForClient: yup.boolean().optional(),\n  description: yup.string().max(250).optional(),\n} as Record<keyof ServiceMethodBase | string, any>);\n\nconst FormDeliveryMethod: React.FC<FormDeliveryMethodProps> = ({ onSubmit, defaultState, ...props }) => {\n  const submitOptions = useAfterSubmitOptions();\n  const [isLoading, setIsLoading] = useState(false);\n  const invMethods = useTranslatedMethodsList(useInvoicesSelector().methods, { withFullLabel: true });\n\n  const formMethods = useAppForm<IDeliveryMethodFormData>({\n    defaultValues: { ...defaultState },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n  const {\n    formState: { errors, isValid },\n    handleSubmit,\n    registerSelect,\n    register,\n    reset,\n    formValues,\n    setValue,\n  } = formMethods;\n\n  const registerSwitch = (name: keyof DisabledStates) => {\n    return {\n      name,\n      value: formValues?.disabledFor ? !!formValues?.disabledFor[name] : undefined,\n      onchange: (v: boolean) => {\n        setValue(`disabledFor.${name}`, v, { shouldTouch: true });\n      },\n    };\n  };\n\n  // useEffect(() => {\n  //   console.log(formValues);\n  // }, [formValues]);\n  const onValid = (fData: IDeliveryMethodFormData) => {\n    onSubmit &&\n      onSubmit(fData, {\n        ...submitOptions.state,\n        onLoading: setIsLoading,\n        onError: () => {\n          reset();\n        },\n      });\n  };\n\n  return (\n    <ModalForm\n      {...props}\n      fillHeight\n      isLoading={isLoading}\n      onSubmit={handleSubmit(onValid)}\n      isValid={isValid}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <Inputs>\n        {defaultState?.isDefault && (\n          <>\n            <InputLabel\n              label={t('label')}\n              error={errors.label}\n              disabled={formValues.isDefault}\n              required={!formValues.isDefault}\n            >\n              <InputText\n                placeholder={t('insertLabel')}\n                {...register('label')}\n                disabled={formValues.isDefault}\n                required={!formValues.isDefault}\n                autoFocus={!formValues.isDefault}\n              />\n            </InputLabel>\n\n            <InputLabel\n              label={t('Type')}\n              error={errors.label}\n              disabled={formValues.isDefault}\n              required={!formValues.isDefault}\n            >\n              <InputText\n                placeholder={t('Type')}\n                {...register('type.internal')}\n                disabled={formValues.isDefault}\n                required={!formValues.isDefault}\n              />\n            </InputLabel>\n          </>\n        )}\n\n        <InputLabel label={t('Disabled for all')} error={errors?.disabledFor?.all}>\n          <ButtonSwitch {...registerSwitch('all')} />\n        </InputLabel>\n\n        <InputLabel label={t('Disabled for customer')} error={errors?.disabledFor?.customer}>\n          <ButtonSwitch {...registerSwitch('customer')} />\n        </InputLabel>\n\n        <BorderedBox>\n          <Text $size={13} $weight={600}>\n            {t('Invoicing configs')}\n          </Text>\n        </BorderedBox>\n\n        <CustomSelect\n          {...registerSelect('invoicing.method', {\n            options: invMethods,\n            placeholder: t('Select method'),\n            label: t('Invoicing method'),\n          })}\n        />\n\n        <FlexBox fxDirection={'row'} gap={8}>\n          <InputLabel label={t('Min cost for delivery')} error={errors?.invoicing?.minCost?.delivery}>\n            <InputText\n              placeholder={'Min cost'}\n              type={'number'}\n              align={'center'}\n              {...register('invoicing.minCost.delivery', { valueAsNumber: true })}\n            />\n          </InputLabel>\n\n          <InputLabel label={t('Min cost for return')} error={errors?.invoicing?.minCost?.return}>\n            <InputText\n              placeholder={'Min cost'}\n              type={'number'}\n              align={'center'}\n              {...register('invoicing.minCost.return', { valueAsNumber: true })}\n            />\n          </InputLabel>\n        </FlexBox>\n\n        <BorderedBox>\n          <Text $size={13} $weight={600}>\n            {t('Cms configs')}\n          </Text>\n        </BorderedBox>\n\n        <InputLabel label={t('Cms key')} error={errors?.cmsConfigs?.key}>\n          <InputText placeholder={'Key'} {...register('cmsConfigs.key')} />\n        </InputLabel>\n\n        <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n          <LangButtonsGroup />\n        </InputLabel>\n\n        <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n          <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n        </InputLabel>\n      </Inputs>\n    </ModalForm>\n  );\n};\nconst Inputs = styled(FlexBox)`\n  padding: 0 8px 8px;\n\n  background-color: inherit;\n`;\n\nconst BorderedBox = styled(FlexBox)`\n  padding: 8px;\n\n  margin: 8px 0 0;\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormDeliveryMethod;\n"],"names":["validation","yup","shape","disabledForClient","optional","description","max","Inputs","styled","FlexBox","_templateObject","_taggedTemplateLiteral","BorderedBox","_templateObject2","p","theme","modalBorderColor","_ref","_errors$disabledFor","_errors$disabledFor2","_errors$invoicing","_errors$invoicing$min","_errors$invoicing2","_errors$invoicing2$mi","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs3","_errors$cmsConfigs3$l","onSubmit","defaultState","props","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","invMethods","useTranslatedMethodsList","useInvoicesSelector","methods","withFullLabel","formMethods","useAppForm","defaultValues","_objectSpread","resolver","yupResolver","reValidateMode","_formMethods$formStat","formState","errors","isValid","handleSubmit","registerSelect","register","reset","formValues","setValue","registerSwitch","name","value","disabledFor","undefined","onchange","v","concat","shouldTouch","_jsx","ModalForm","fillHeight","fData","state","onLoading","onError","extraFooter","FormAfterSubmitOptions","children","_jsxs","isDefault","_Fragment","InputLabel","label","t","error","disabled","required","InputText","placeholder","autoFocus","all","ButtonSwitch","customer","Text","$size","$weight","CustomSelect","options","fxDirection","gap","invoicing","minCost","delivery","type","align","valueAsNumber","return","cmsConfigs","key","LangButtonsGroup","labels","ua"],"sourceRoot":""}