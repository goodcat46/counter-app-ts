{"version":3,"file":"static/js/199.ef5a0a27.chunk.js","mappings":"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","sources":["components/Layout/NavMenu/SubNavMenu.tsx","components/Layout/NavMenu/NavMenu.tsx","components/Layout/UserInfo.tsx","components/Layout/UserMenu.tsx","components/SideBarLeft/Actions/ActionToggleSideBar.tsx","components/Layout/Header.tsx","components/atoms/index.tsx","components/SideBarLeft/SideBarOptions.tsx","components/SideBarLeft/Actions/ChangeTheme.tsx","components/SideBarLeft/Actions/ActionAppExit.tsx","components/SideBarLeft/SideBar.tsx","components/Layout/index.tsx","components/AppPages/AppGridPage.tsx","components/Layout/LogoSvg.tsx","components/atoms/ProfileCard/ProfileCard.tsx"],"sourcesContent":["import FlexBox from '../../atoms/FlexBox';\nimport styled from 'styled-components';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { useAppSelector } from '../../../redux/store.store';\nimport { IPermission } from '../../../redux/permissions/permissions.types';\nimport { IWarehouse } from '../../../redux/warehouses/warehouses.types';\nimport { IPriceList } from '../../../redux/priceManagement/priceManagement.types';\nimport { AppPagesEnum } from '../../../redux/APP_CONFIGS';\nimport { usePermissionsSelector } from '../../../hooks/usePermissionsService.hook';\nimport { useEffect, useMemo } from 'react';\n\nexport interface SubNavMenuProps {\n  subMenuKey: AppPagesEnum;\n  onActive?: (key: AppPagesEnum) => void;\n}\nconst getLinkDataMap: Record<AppPagesEnum | string, ((option: any) => { id?: string; label?: string }) | undefined> = {\n  [AppPagesEnum.warehouses]: (warehouse: IWarehouse) => ({\n    id: warehouse._id,\n    label: `${warehouse?.label} | ${warehouse?.code}`,\n  }),\n  [AppPagesEnum.priceLists]: (priceList: IPriceList) => ({ id: priceList._id, label: priceList?.label }),\n  [AppPagesEnum.companies]: (permission: IPermission) => ({\n    id: permission?.company?._id,\n    label: permission?.company?.label,\n  }),\n};\nconst SubNavMenu: React.FC<SubNavMenuProps> = ({ subMenuKey, onActive }) => {\n  const pathname = useLocation().pathname;\n  const { permission } = usePermissionsSelector();\n  const { warehouses, priceLists, permissions } = useAppSelector();\n\n  const renderLinks = useMemo(() => {\n    const map: Record<AppPagesEnum | string, any[] | undefined> = {\n      [AppPagesEnum.warehouses]: warehouses.warehouses,\n      [AppPagesEnum.priceLists]: priceLists.lists,\n      [AppPagesEnum.companies]: permissions.permissions,\n    };\n    return map[subMenuKey]?.map(el => {\n      const getLinkData = getLinkDataMap[subMenuKey];\n\n      const linkData = getLinkData ? getLinkData(el) : undefined;\n\n      return (\n        linkData?.id &&\n        linkData.label && (\n          <StyledNavLink\n            key={`${subMenuKey}-${linkData.id}`}\n            to={`/app/${permission._id}/${subMenuKey}/${linkData.id}`}\n          >\n            {linkData.label}\n          </StyledNavLink>\n        )\n      );\n    });\n  }, [permission._id, permissions.permissions, priceLists.lists, subMenuKey, warehouses.warehouses]);\n\n  useEffect(() => {\n    if (pathname.includes(subMenuKey)) {\n      onActive && onActive(subMenuKey);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <FlexBox fillWidth padding={'0 0 0 16px'}>\n      {renderLinks}\n    </FlexBox>\n  );\n};\n\nconst StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  position: relative;\n\n  width: 100%;\n  min-height: 34px;\n  font-size: 14px;\n  font-weight: 400;\n  height: min-content;\n\n  padding: 4px 8px;\n\n  border-radius: 0;\n  border-style: none;\n  transition: none;\n\n  &.active {\n    color: ${p => p.theme.accentColor.base};\n  }\n\n  // &::before {\n  //   content: '';\n  //   position: absolute;\n  //   top: 50%;\n  //   left: 0;\n  //\n  //   width: 3px;\n  //   height: 0;\n  //\n  //   background-color: transparent;\n  //\n  //   transform: translateY(-50%);\n  //   transition: all ${({ theme }) => theme.globals.timingFunctionLong};\n  // }\n\n  //&:hover {\n  //  background-color: rgba(254, 254, 254, 0.25);\n  //\n  //  &::before {\n  //    height: 100%;\n  //    background-color: var(--darkOrange);\n  //  }\n  //}\n\n  // &.active {\n  //   background-color: rgba(254, 254, 254, 0.05);\n  //   /* color: var(--darkOrange); */\n  //   /* fill: var(--darkOrange); */\n  //\n  //   &::before {\n  //     height: 80%;\n  //     background-color: ${({ theme: { accentColor } }) => accentColor.base};\n  //   }\n  // }\n\n  @media screen and (min-width: 768px) {\n    min-height: 24px;\n    font-size: 12px;\n    height: min-content;\n  }\n`;\n\nexport default SubNavMenu;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { iconId } from 'data';\nimport { IPage } from 'redux/page/pageSlice';\nimport styled from 'styled-components';\n\nimport SvgIcon from 'components/atoms/SvgIcon/SvgIcon';\nimport { Text } from '../../atoms/Text';\nimport { useAppPages, useAppParams, useCloseByEscapeOrClickOnBackdrop } from '../../../hooks';\nimport SubNavMenu from './SubNavMenu';\nimport FlexBox from '../../atoms/FlexBox';\nimport { AppPagesEnum } from '../../../redux/APP_CONFIGS';\n\nconst NavMenu: React.FC = () => {\n  const { permissionId } = useAppParams();\n  const pages = useAppPages({ permissionId });\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [activePage, setActivePage] = useState<IPage>(pages[0]);\n  const location = useLocation();\n  const [isSubMenuOpen, setIsSubMenuOpen] = useState<Record<string, boolean>>({});\n\n  const handleOpenNavMenu = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n\n  function handleSetActivePage(page: IPage) {\n    setActivePage(page);\n  }\n\n  const onNavLinkClick = useCallback(\n    (page: IPage) => {\n      handleSetActivePage(page);\n\n      handleOpenNavMenu();\n    },\n    [handleOpenNavMenu]\n  );\n\n  // TODO need refactoring\n  const onOpenSubMenuStateChange = useCallback((key: AppPagesEnum) => {\n    setIsSubMenuOpen(prev => ({ ...prev, [key]: !prev[key] }));\n  }, []);\n\n  const renderLinks = useMemo(\n    () =>\n      pages.map(item => {\n        return (\n          <React.Fragment key={`nav-item-${item.path}`}>\n            <FlexBox fxDirection={'row'}>\n              <StyledNavLink\n                key={item?.path}\n                to={item.path}\n                onClick={() => {\n                  onNavLinkClick(item);\n                }}\n              >\n                <SvgIcon iconId={item.iconId} size=\"18px\" style={{ display: 'none' }} />\n\n                <Text>{item?.title || '---'}</Text>\n              </StyledNavLink>\n\n              {item.subMenuKey && (\n                <ButtonIcon\n                  variant={'onlyIconNoEffects'}\n                  icon={isSubMenuOpen[item.subMenuKey] ? 'SmallArrowDown' : 'SmallArrowLeft'}\n                  size={'32px'}\n                  onClick={() => item.subMenuKey && onOpenSubMenuStateChange(item.subMenuKey)}\n                />\n              )}\n            </FlexBox>\n\n            {item?.subMenuKey && (\n              <FlexBox height={isSubMenuOpen[item.subMenuKey] ? 'max-content' : '0'} overflow={'hidden'}>\n                <SubNavMenu\n                  key={item?.subMenuKey}\n                  subMenuKey={item.subMenuKey}\n                  onActive={key => {\n                    setIsSubMenuOpen(prev => ({ ...prev, [key]: true }));\n                  }}\n                />\n              </FlexBox>\n            )}\n          </React.Fragment>\n        );\n      }),\n    [isSubMenuOpen, onNavLinkClick, onOpenSubMenuStateChange, pages]\n  );\n\n  useEffect(() => {\n    const currentPageData = pages.find(\n      page => page.path === location.pathname || location.pathname.includes(page.path)\n    );\n\n    setActivePage(currentPageData || pages[0]);\n  }, [location.pathname, pages, permissionId]);\n\n  useCloseByEscapeOrClickOnBackdrop(setIsOpen, 'data-nav-menu', true);\n\n  return (\n    <StyledNavMenu data-nav-menu>\n      <MenuButton\n        variant=\"def\"\n        endIconSize=\"24px\"\n        endIconId={iconId.SmallArrowDown}\n        isOpen={isOpen}\n        onClick={handleOpenNavMenu}\n      >\n        {activePage?.title}\n      </MenuButton>\n\n      <NavMenuContainer isOpen={isOpen}>\n        <NavList>{renderLinks}</NavList>\n      </NavMenuContainer>\n    </StyledNavMenu>\n  );\n};\n\ninterface MenuState {\n  isOpen: boolean;\n}\n\nconst StyledNavMenu = styled.div`\n  position: relative;\n\n  min-width: 150px;\n  max-width: 100%;\n  height: 100%;\n\n  font-size: 12px;\n  font-weight: 600;\n\n  @media screen and (min-width: 768px) {\n    min-width: 250px;\n  }\n`;\nconst MenuButton = styled(ButtonIcon)<{ isOpen: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  min-height: 28px;\n  height: 100%;\n\n  padding: 0 8px 0 16px;\n  border-radius: 0;\n\n  font-size: 12px;\n  font-weight: 600;\n\n  background-color: transparent;\n  border: 0;\n\n  & .endIcon {\n    transform: ${({ isOpen }) => `rotate(${isOpen ? '180' : '0'}deg)`};\n  }\n`;\nconst NavMenuContainer = styled.div<MenuState>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  position: absolute;\n  top: 100%;\n  left: 0;\n\n  overflow: hidden;\n  min-width: 100%;\n  max-width: calc(100% + 30px);\n  height: ${({ isOpen }) => (isOpen ? 'calc(100vh - 50px)' : '80vh')};\n\n  border-radius: 2px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  box-shadow: ${({ isOpen, theme }) =>\n    isOpen ? '0 6px 18px 0px rgba(21, 21, 21, 0.15), 0 6px 18px 0px rgba(211, 211, 211, 0.15)' : ''};\n\n  // box-shadow: ${({ theme }) => theme.globals.shadowSecondary};\n\n  opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n  pointer-events: ${({ isOpen }) => (isOpen ? 'all' : 'none')};\n  visibility: ${({ isOpen }) => (isOpen ? 'visible' : 'hidden')};\n  transform-origin: top center;\n  //transform: scaleY(${({ isOpen, theme }) => (isOpen ? 1 : 0.8)});\n\n  transition: all ${({ theme }) => theme.globals.timingFnMain};\n`;\n\nconst NavList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  align-content: start;\n\n  min-width: 100%;\n  max-height: 100%;\n\n  overflow: auto;\n\n  padding: 8px 0;\n`;\n\nconst StyledNavLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  position: relative;\n\n  width: 100%;\n  min-height: 34px;\n  font-size: 14px;\n  height: min-content;\n\n  padding: 4px 16px;\n\n  border-radius: 0;\n  border-style: none;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    width: 3px;\n    height: 0;\n\n    background-color: transparent;\n\n    transform: translateY(-50%);\n    transition: all ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  &:hover {\n    //background-color: rgba(254, 254, 254, 0.25);\n\n    &::before {\n      height: 100%;\n      background-color: var(--darkOrange);\n    }\n  }\n\n  &.active {\n    //background-color: rgba(254, 254, 254, 0.05);\n    /* color: var(--darkOrange); */\n    /* fill: var(--darkOrange); */\n\n    &::before {\n      height: 80%;\n      background-color: ${({ theme: { accentColor } }) => accentColor.base};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    min-height: 32px;\n    font-size: 12px;\n    height: min-content;\n  }\n`;\n\nexport default NavMenu;\n","import styled, { css } from 'styled-components';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\nimport usePermissionsServiceHook, { usePermissionsSelector } from '../../hooks/usePermissionsService.hook';\nimport FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { Text } from '../atoms/Text';\nimport useAppAuthHook from '../../hooks/useAppAuth.hook';\nimport { useMemo } from 'react';\nimport { useAuthSelector } from '../../redux/selectors.store';\nimport translate from '../../lang';\n\nexport interface IUserInfoProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst UserInfo: React.FC<IUserInfoProps> = ({ isOpen, onClose }) => {\n  const { logOutUser } = useAppAuthHook();\n  const { user } = useAuthSelector();\n  const { permissionLogOut, clearCurrent } = usePermissionsServiceHook();\n  const { permission, permission_token } = usePermissionsSelector();\n\n  function onBackdropClick(ev: React.MouseEvent) {\n    const { target, currentTarget } = ev;\n    target === currentTarget && onClose();\n  }\n\n  const isPermission = useMemo(() => !!permission || !!permission_token, [permission, permission_token]);\n\n  return (\n    <Backdrop isOpen={isOpen} transitionDelay={isOpen ? '' : '250ms'} onClick={onBackdropClick}>\n      <MainList>\n        <MainListItem isOpen={isOpen} transitionDelay={isOpen ? '' : '150ms'}>\n          <ProfileCard {...user} nameFontSize=\"16px\" emailFontSize=\"16px\" />\n\n          <FlexBox fxDirection={'row'} gap={12} fillWidth justifyContent={'flex-end'} alignItems={'center'}>\n            <ButtonIcon\n              variant={'textSmall'}\n              endIcon={'logOut'}\n              onClick={() => {\n                logOutUser({\n                  onSuccess: () => {\n                    clearCurrent();\n                  },\n                  onError() {\n                    clearCurrent();\n                  },\n                });\n              }}\n            >\n              <Text style={{ fontSize: '14px' }}>{translate('logOutUser')}</Text>\n            </ButtonIcon>\n          </FlexBox>\n        </MainListItem>\n\n        {isPermission && (\n          <MainListItem isOpen={isOpen} transitionDelay={isOpen ? '150ms' : ''}>\n            <ProfileCard {...permission?.company} nameFontSize=\"16px\" emailFontSize=\"16px\" />\n\n            <FlexBox fxDirection={'row'} gap={12} fillWidth justifyContent={'flex-end'} alignItems={'center'}>\n              <ButtonIcon\n                variant={'textSmall'}\n                endIcon={'logOut'}\n                onClick={() =>\n                  permissionLogOut({\n                    onSuccess: () => {\n                      clearCurrent();\n                    },\n                    onError() {\n                      clearCurrent();\n                    },\n                  })\n                }\n              >\n                <Text style={{ fontSize: '14px' }}>{translate('logOutPermission')}</Text>\n              </ButtonIcon>\n            </FlexBox>\n          </MainListItem>\n        )}\n      </MainList>\n    </Backdrop>\n  );\n};\nconst Backdrop = styled.div<{ isOpen: boolean; transitionDelay?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: 1051;\n  transform-origin: right;\n\n  overflow: hidden;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  transition-delay: ${({ transitionDelay }) => (transitionDelay ? transitionDelay : '')};\n\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.backdropColor};\n\n  ${({ isOpen }) =>\n    isOpen\n      ? css`\n          opacity: 1;\n          visibility: visible;\n          pointer-events: all;\n        `\n      : css`\n          opacity: 0;\n          visibility: hidden;\n          pointer-events: none;\n        `}\n`;\n\nconst MainList = styled.ul<{ isOpen?: boolean; transitionDelay?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n\n  min-width: 250px;\n  width: 100vw;\n  max-width: 100vw;\n\n  padding: 6px;\n\n  overflow: hidden;\n\n  transition: all ${({ theme }) => theme.globals?.timingFunctionMain};\n  /* transition-delay: ${({ transitionDelay }) => (transitionDelay ? transitionDelay : '')}; */\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  /* ${({ isOpen }) =>\n    isOpen\n      ? css`\n          overflow: auto;\n          transform: translateX(0);\n          pointer-events: all;\n        `\n      : css`\n          transform: translateX(100%);\n          pointer-events: none;\n        `} */\n`;\nconst MainListItem = styled.li<{ isOpen: boolean; transitionDelay?: string }>`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  overflow: hidden;\n  padding: 16px;\n  max-width: 480px;\n  width: 100%;\n\n  border-radius: 4px;\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  box-shadow: var(--header-shadow);\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  transition: all ${({ theme }) => theme.globals?.timingFunctionMain};\n  transition-delay: ${({ transitionDelay }) => (transitionDelay ? transitionDelay : '')};\n\n  ${({ isOpen }) =>\n    isOpen\n      ? css`\n          overflow: auto;\n          transform: translateX(0);\n          pointer-events: all;\n        `\n      : css`\n          transform: translateX(100%);\n          pointer-events: none;\n        `}\n`;\n// const UserAvatarBox = styled.div`\n//   border-radius: 50%;\n//   height: 50px;\n//   min-width: 50px;\n//   width: 50px;\n//   overflow: hidden;\n// `;\n// const UserInfoList = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: flex-start;\n//   gap: 8px;\n\n//   padding: 12px;\n// `;\n// const UserInfoListItem = styled.li<{ flexDierction?: 'row' | 'column' }>`\n//   display: flex;\n//   align-items: center;\n//   flex-direction: column;\n//   gap: 6px;\n//   width: 100%;\n\n//   @media screen and (min-width: 480px) {\n//     flex-direction: ${({ flexDierction }) => flexDierction || 'column'};\n//   }\n// `;\n// const Wrapper = styled.div`\n//   align-self: flex-start;\n\n//   display: flex;\n//   flex-direction: column;\n\n//   justify-content: space-between;\n//   height: 100%;\n// `;\n// const Name = styled.span`\n//   font-size: 12px;\n//   font-weight: 700;\n//   padding: 4px 8px;\n// `;\n// const Email = styled.span`\n//   padding: 4px 8px;\n//   font-size: 10px;\n\n//   & a {\n//     transition: ${({ theme }) => theme.globals?.timingFnMui};\n//     text-decoration: underline;\n//     &:hover {\n//       color: ${({ theme }) => theme.accentColor.base};\n//     }\n//   }\n// `;\n\nexport default UserInfo;\n","import { useEffect, useState } from 'react';\nimport { iconId } from 'data';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\n\nimport styled from 'styled-components';\nimport UserInfo from './UserInfo';\n\nconst UserMenu = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  function handleMenuState(newState?: boolean) {\n    setIsOpen(newState || !isOpen);\n  }\n\n  useEffect(() => {\n    function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n      const { target } = ev;\n      if (target instanceof HTMLElement && !target?.closest('[data-user-menu]')) setIsOpen(false);\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsOpen(false);\n    }\n\n    document.addEventListener('click', onMenuClose);\n    document.addEventListener('keydown', onMenuClose);\n\n    return () => {\n      document.removeEventListener('click', onMenuClose);\n      document.removeEventListener('keydown', onMenuClose);\n    };\n  }, []);\n\n  return (\n    <MenuContainer data-user-menu>\n      <ButtonIcon\n        iconId={iconId.personOutlined}\n        size=\"30px\"\n        iconSize=\"80%\"\n        variant=\"def\"\n        onClick={() => handleMenuState()}\n      />\n\n      <UserInfo isOpen={isOpen} onClose={() => handleMenuState()} />\n    </MenuContainer>\n  );\n};\n\nconst MenuContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport default UserMenu;\n","import React from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { iconId } from 'data';\nimport { useSideBar } from '../SideBarProvider';\nimport styled from 'styled-components';\n\nconst ActionToggleSideBar: React.FC = () => {\n  const { isOpen, onTogglerClick } = useSideBar();\n\n  return (\n    <StButton\n      iconId={isOpen ? iconId.burgerOpen : iconId.burger}\n      iconSize=\"28px\"\n      variant=\"defNoEffects\"\n      onClick={onTogglerClick}\n    />\n  );\n};\nconst StButton = styled(ButtonIcon)`\n  max-height: 100%;\n  width: 100%;\n  height: 100%;\n`;\n\nexport default ActionToggleSideBar;\n","import React, { useMemo } from 'react';\nimport NavMenu from './NavMenu/NavMenu';\nimport LogoSvg from './LogoSvg';\n\nimport UserMenu from './UserMenu';\nimport styled from 'styled-components';\nimport ActionToggleSideBar from 'components/SideBarLeft/Actions/ActionToggleSideBar';\n\ninterface IHeaderComponent {\n  Component: React.FC | null;\n  props?: any;\n  corp?: boolean;\n}\n\nconst HeaderLeftSideItems: IHeaderComponent[] = [\n  { Component: ActionToggleSideBar, corp: false },\n  { Component: LogoSvg, corp: false },\n  { Component: NavMenu, corp: true },\n];\nconst HeaderRightSideItems: IHeaderComponent[] = [{ Component: UserMenu, corp: false }];\n\ntype HeaderProps = {\n  havePermission?: boolean;\n};\nconst Header: React.FC<HeaderProps> = ({ havePermission }) => {\n  const renderLeftSide = useMemo(\n    () =>\n      HeaderLeftSideItems.filter(el => (havePermission ? el : !el.corp)).map(({ Component, corp, props }, idx) => (\n        <StyledBox key={idx} borderRight>\n          {Component && <Component {...props} />}\n        </StyledBox>\n      )),\n    [havePermission]\n  );\n\n  const renderRightSide = useMemo(\n    () =>\n      HeaderRightSideItems.filter(el => (havePermission ? el : !el.corp)).map(({ Component, corp, props }, idx) => (\n        <StyledBox key={idx} borderRight>\n          {Component && <Component {...props} />}\n        </StyledBox>\n      )),\n    [havePermission]\n  );\n\n  return (\n    <StyledHeader>\n      <LeftSide>{renderLeftSide}</LeftSide>\n\n      <RightSide>{renderRightSide}</RightSide>\n    </StyledHeader>\n  );\n};\n\nconst StyledHeader = styled.header`\n  grid-column: 1/3;\n  grid-row: 1/2;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 600;\n\n  height: 100%;\n  width: 100%;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n  color: ${({ theme }) => theme.fontColorHeader};\n\n  background-color: ${({ theme }) => theme.headerBackgroundColor};\n  border-bottom: 1px solid ${({ theme }) => theme.headerBorderColor};\n`;\nconst LeftSide = styled.div`\n  display: grid;\n  grid-template-columns: 40px min-content min-content;\n  align-items: center;\n\n  height: 100%;\n`;\n\nconst StyledBox = styled.div<{ borderRight?: boolean; borderLeft?: boolean }>`\n  display: flex;\n  align-items: center;\n\n  height: 100%;\n\n  border-right: ${({ theme, borderRight = false }) => (borderRight ? `1px solid ${theme.headerBorderColor}` : 'none')};\n  border-left: ${({ theme, borderLeft = false }) => (borderLeft ? `1px solid ${theme.headerBorderColor}` : 'none')};\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport default Header;\n","export const DefaultContent: React.FC<{ content?: string }> = ({ content } = {}) => {\n  return <div>{`Default content: ${content}`}</div>;\n};\nexport const ErrorContent: React.FC<{ error?: string }> = ({ error } = {}) => {\n  return <div>{`Error: ${error}`}</div>;\n};\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { ErrorContent } from 'components/atoms';\nimport { useModalProvider } from 'components/ModalProvider/ModalProvider';\nimport { useSideBar } from './SideBarProvider';\nimport styled, { css } from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\n\nconst SideBarOptions: React.FC = () => {\n  const { RightSideContent, onClose, isOpen } = useSideBar();\n  const modal = useModalProvider();\n  const rootRef = useRef(document.getElementById('root'));\n  function handleCloseMenu() {\n    onClose && onClose();\n  }\n\n  function onBackdropClick(ev: React.MouseEvent<HTMLDivElement>) {\n    const { target, currentTarget } = ev;\n    if (target === currentTarget) handleCloseMenu();\n  }\n\n  const onMenuClose = useCallback(\n    (ev: KeyboardEvent | MouseEvent) => {\n      console.log('onMenuClose useCallback | modal', modal.isOpen());\n      if (modal.isOpen()) return;\n\n      const { target } = ev;\n      if (target instanceof HTMLElement && !target?.closest('[data-sidebar]')) onClose && onClose();\n      if (ev instanceof KeyboardEvent && ev?.code === 'Escape') onClose && onClose();\n    },\n    [modal, onClose]\n  );\n\n  const subscribe = useCallback((listener: (ev: KeyboardEvent | MouseEvent) => void) => {\n    rootRef.current?.addEventListener('click', listener, {});\n    rootRef.current?.addEventListener('keydown', listener);\n\n    return function () {\n      rootRef.current?.removeEventListener('click', listener);\n      rootRef.current?.removeEventListener('keydown', listener);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (modal.isOpen()) return;\n    if (!RightSideContent) return;\n\n    const unsubscribe = subscribe(onMenuClose);\n\n    return unsubscribe;\n  }, [RightSideContent, modal, onMenuClose, subscribe]);\n\n  return (\n    <Backdrop\n      className=\"sidebar-options-backdrop\"\n      isOpen={!!(isOpen && RightSideContent?.RenderComponent)}\n      maxWidth={RightSideContent?.maxWidth}\n      onClick={onBackdropClick}\n    >\n      <Container isOpen={!!(isOpen && RightSideContent?.RenderComponent)} maxWidth={RightSideContent?.maxWidth}>\n        <Header>\n          <Title>{RightSideContent?.title}</Title>\n\n          <ButtonIcon iconSize=\"18px\" size=\"22px\" icon={'close'} variant=\"defNoEffects\" onClick={handleCloseMenu} />\n        </Header>\n\n        <ContentScroll>\n          {typeof RightSideContent?.RenderComponent === 'function' ? (\n            <RightSideContent.RenderComponent options={RightSideContent.options} />\n          ) : (\n            <ErrorContent />\n          )}\n        </ContentScroll>\n      </Container>\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled.div<{ isOpen: boolean; maxWidth?: string }>`\n  position: absolute;\n  top: 0;\n  left: 100%;\n\n  max-height: 100%;\n  height: 100%;\n  overflow: hidden;\n  /* min-width: calc(100vw - 40px); */\n  background-color: ${({ theme }) => theme.backdropColor};\n\n  transition: visibility ${({ theme }) => theme.globals.timingFunctionMain},\n    opacity ${({ theme }) => theme.globals.timingFunctionMain}, width ${({ theme }) => theme.globals.timingFnNull};\n  transition-delay: ${({ isOpen }) => (isOpen ? '' : '250ms')};\n\n  ${({ isOpen }) =>\n    isOpen\n      ? css`\n          width: calc(100vw - 40px);\n          opacity: 1;\n          visibility: visible;\n          pointer-events: all;\n        `\n      : css`\n          width: 0;\n          opacity: 0;\n          visibility: hidden;\n          pointer-events: none;\n        `}\n`;\nconst Container = styled.div<{ isOpen: boolean; maxWidth?: string }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  height: 100%;\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : '250px')};\n  overflow: hidden;\n\n  background-color: ${({ theme }) => theme.sideBarBackgroundColor};\n  border-right: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n\n  transform: ${({ isOpen }) => `translate(${isOpen ? '0' : '-100%'})`};\n  transition: transform ${({ theme }) => theme.globals.timingFunctionMain},\n    max-width ${({ theme }) => theme.globals.timingFunctionMain};\n\n  @media screen and (max-width: 480px) {\n    max-width: 480px;\n  }\n`;\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  /* position: sticky;\n  top: 0;\n  left: 0; */\n\n  padding: 0 8px;\n\n  height: 32px;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.sideBarBackgroundColor};\n  cursor: default;\n`;\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n\n  font-size: 16px;\n  font-weight: 700;\n`;\n\nconst ContentScroll = styled(FlexBox)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n\n  /* padding: 4px; */\n  background-color: ${({ theme }) => theme.sideBarOptionsBackgroundColor};\n  border-top: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n`;\n\nexport default SideBarOptions;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport useAppSettings from 'hooks/useAppSettings.hook';\nimport { iconId } from 'data';\nimport { useAppSettingsSelector } from '../../../redux/selectors.store';\n\nconst ToggleThemeMode = () => {\n  const { toggleAppMode } = useAppSettings();\n  const { isDarkMode } = useAppSettingsSelector();\n\n  return (\n    <ButtonIcon\n      variant=\"defNoEffects\"\n      iconSize=\"20px\"\n      size=\"100%\"\n      iconId={isDarkMode ? iconId.darkMode : iconId.lightMode}\n      onClick={toggleAppMode}\n    />\n  );\n};\n\nexport default ToggleThemeMode;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport useAppSettings from 'hooks/useAppSettings.hook';\n\nimport { iconId } from 'data';\n\nconst ActionAppExit: React.FC = () => {\n  const appSettings = useAppSettings();\n\n  function handleExitApp() {\n    const result = window.confirm('Бажаєте вийти?');\n\n    if (result) {\n      appSettings.resetApp();\n    }\n  }\n\n  return (\n    <ButtonIcon\n      variant=\"def\"\n      iconId={iconId.logOut}\n      iconSize=\"20px\"\n      style={{ width: '100%', height: '32px' }}\n      onClick={handleExitApp}\n    />\n  );\n};\nexport default ActionAppExit;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport SideBarOptions from './SideBarOptions';\nimport ToggleThemeMode from './Actions/ChangeTheme';\nimport ActionAppExit from './Actions/ActionAppExit';\nimport { useSideBar } from './SideBarProvider';\nimport styled, { css } from 'styled-components';\nimport { useMemo } from 'react';\n\ntype SideBarProps = {\n  havePermission?: boolean;\n};\nconst SideBar: React.FC<SideBarProps & React.HTMLAttributes<HTMLDivElement>> = ({ havePermission, ...props }) => {\n  const { isOpen, onTogglerClick, handleOptionsState, sideBarButtons, sideBarButtonsBottom, RightSideContent } =\n    useSideBar();\n\n  const renderMain = useMemo(() => {\n    return (\n      sideBarButtons &&\n      sideBarButtons\n        .filter(el => (havePermission ? el : !el.corp))\n        .map(item => (\n          <StyledButtonIcon\n            key={item?.iconId}\n            iconId={item?.iconId}\n            title={item?.title}\n            iconSize=\"20px\"\n            variant=\"pointerLeft\"\n            isActive={item?.title === RightSideContent?.title}\n            onClick={() => handleOptionsState && handleOptionsState(item)}\n          />\n        ))\n    );\n  }, [RightSideContent?.title, handleOptionsState, havePermission, sideBarButtons]);\n\n  const renderBottom = useMemo(() => {\n    return (\n      sideBarButtonsBottom &&\n      sideBarButtonsBottom\n        .filter(el => (havePermission ? el : !el.corp))\n        .map(item => (\n          <StyledButtonIcon\n            key={item?.iconId}\n            iconId={item?.iconId}\n            title={item?.title}\n            iconSize=\"20px\"\n            variant=\"pointerLeft\"\n            isActive={item?.title === RightSideContent?.title}\n            onClick={() => handleOptionsState && handleOptionsState(item)}\n          />\n        ))\n    );\n  }, [RightSideContent?.title, handleOptionsState, havePermission, sideBarButtonsBottom]);\n  return (\n    <StyledSideBar isOpen={!!isOpen} className=\"SideBar\" {...props} data-sidebar>\n      <MenuToggler isOpen={!!isOpen} onClick={onTogglerClick} />\n\n      <SideBarContainer className=\"SideBarContainer\">\n        <Content isOpen={!!isOpen} className=\"Content\">\n          <Top>\n            <ToggleThemeMode />\n          </Top>\n\n          <Middle className=\"Middle\">\n            {/* <MiddleToggler variant=\"def\" iconId=\"actionsH\" iconSize=\"24px\" onClick={() => handleMiddleOpen()} /> */}\n\n            <MiddleButtons className=\"MiddleButtons\">{renderMain}</MiddleButtons>\n          </Middle>\n\n          <Bottom>\n            {renderBottom}\n            <ActionAppExit />\n          </Bottom>\n        </Content>\n\n        <SideBarOptions />\n      </SideBarContainer>\n    </StyledSideBar>\n  );\n};\n\ninterface SideBarState {\n  isOpen: boolean;\n  options?: any[] | null;\n}\n\nconst sideBarCompWidth = '36px';\nconst sideBarCompWidthMobile = '50px';\n\nconst StyledSideBar = styled.div<SideBarState>`\n  display: grid;\n  grid-template-columns: ${({ isOpen }) => (isOpen ? 'min-content' : '4px')} 1fr;\n\n  width: fit-content;\n  /* max-width: 40px; */\n  height: 100%;\n\n  position: relative;\n  z-index: 500;\n\n  fill: ${({ theme }) => theme.fillColorHeader};\n  color: ${({ theme }) => theme.fontColorHeader};\n  background-color: ${({ theme }) => theme.sideBarBackgroundColor};\n\n  /* max-width: 54px; */\n  /* @media screen and (min-width: 480px) { */\n  max-width: 40px;\n  /* } */\n`;\nconst SideBarContainer = styled.div`\n  display: grid;\n  grid-template-columns: min-content max-content;\n\n  height: 100%;\n  width: 100%;\n\n  max-height: 100%;\n  /* overflow: hidden; */\n`;\nconst Content = styled.div<SideBarState>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 32px 1fr min-content;\n\n  position: relative;\n\n  max-width: 0;\n  height: 100%;\n  max-height: 100%;\n  min-width: ${({ isOpen }) => (isOpen ? sideBarCompWidth : '0')};\n\n  overflow: hidden;\n\n  border-right: ${({ theme, isOpen }) => (isOpen ? `1px solid ${theme.sideBarBorderColor}` : '0 solid transparent')};\n  background-color: ${({ theme }) => theme.sideBarBackgroundColor};\n  transition: min-width ${({ theme }) => theme.globals.timingFunctionLong};\n`;\n\nconst Top = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  /* height: 100%; */\n  /* width: ${sideBarCompWidthMobile};\n  @media screen and (min-width: 480px) { */\n  width: ${sideBarCompWidth};\n  /* } */\n`;\n\nconst Middle = styled.div`\n  height: 100%;\n  max-height: 100%;\n  overflow: auto;\n\n  border-top: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n  border-bottom: 1px solid ${({ theme }) => theme.sideBarBorderColor};\n\n  ::-webkit-scrollbar {\n    width: 2px;\n    height: 2px;\n  }\n\n  /* width: ${sideBarCompWidthMobile};\n  @media screen and (min-width: 480px) { */\n  width: ${sideBarCompWidth};\n  /* } */\n`;\nconst MiddleButtons = styled.div<{ isMiddleOpen?: boolean }>`\n  /* max-height: 0; */\n  overflow: hidden;\n\n  position: relative;\n\n  /* @media screen and (max-height: 480px) {\n    position: absolute;\n    top: 0;\n    left: 50%;\n\n    overflow: auto;\n    max-height: 100%;\n  } */\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding-bottom: 12px;\n\n  /* width: ${sideBarCompWidthMobile};\n  @media screen and (min-width: 480px) { */\n  width: ${sideBarCompWidth};\n  /* } */\n`;\n\nconst MenuToggler = styled.button<SideBarState>`\n  width: 4px;\n  height: 100%;\n  padding: 0;\n\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 100;\n\n  border-style: none;\n\n  background-color: ${({ isOpen, theme }) => (isOpen ? theme.sideBarBorderColor : theme.sideBarTogglerBackgroundColor)};\n  border-right: ${({ theme, isOpen }) => (!isOpen ? `1px solid ${theme.sideBarBorderColor}` : `1px solid transparent`)};\n  //transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n`;\n\nconst isActiveCss = css`\n  color: ${({ theme }) => theme.accentColor.base};\n  background-color: ${({ theme }) => theme.backgroundColorLight};\n\n  &::before {\n    height: 80%;\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n`;\nconst StyledButtonIcon = styled(ButtonIcon)<{ isActive: boolean }>`\n  width: 100%;\n  height: 32px;\n\n  border-radius: 0;\n  border: 0;\n\n  ${({ isActive }) => (isActive ? isActiveCss : null)}\n`;\n\nexport default SideBar;\n","import React, { createContext, useContext, useMemo } from 'react';\nimport Header from './Header';\nimport styled from 'styled-components';\nimport SideBar from 'components/SideBarLeft/SideBar';\nimport { usePermissionsSelector } from '../../hooks/usePermissionsService.hook';\n\ninterface ILayoutCTX {}\n\nexport const LayoutCTX = createContext({});\nexport const useLayout = () => useContext(LayoutCTX) as ILayoutCTX;\n\nconst Layout: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const { permission } = usePermissionsSelector();\n\n  const havePermission = useMemo(() => !!permission._id, [permission._id]);\n\n  const CTX = {};\n\n  return (\n    <LayoutCTX.Provider value={CTX}>\n      <StyledLayout className=\"Layout\">\n        <Header havePermission={havePermission} />\n\n        <StSideBar havePermission={havePermission} />\n\n        <LayoutChildren className=\"LayoutChildren\">{children}</LayoutChildren>\n      </StyledLayout>\n    </LayoutCTX.Provider>\n  );\n};\n\nconst StyledLayout = styled.div`\n  display: grid;\n  grid-template-columns: min-content 1fr;\n\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n\n  overflow: hidden;\n\n  position: relative;\n\n  grid-template-rows: 40px calc(100% - 40px);\n  @media screen and (min-width: 480px) {\n    grid-template-rows: 30px calc(100% - 30px);\n  }\n`;\n\nconst LayoutChildren = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n\n  grid-column: 2/3;\n  grid-row: 2/3;\n\n  position: relative;\n`;\n\nconst StSideBar = styled(SideBar)`\n  grid-column: 1/2;\n  grid-row: 2/3;\n`;\n\nexport default Layout;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actionSetIndexPage } from 'redux/page/pageActions';\n\nimport styled from 'styled-components';\nimport Layout from '../Layout';\nimport { PagePathType } from '../../data/pages.data';\n\nconst AppGridPage: React.FC<{ path?: PagePathType; children?: React.ReactNode }> = ({ path, children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (path) {\n      dispatch(actionSetIndexPage(path));\n    }\n  }, [dispatch, path]);\n\n  return (\n    <Layout>\n      <GridPage>{children}</GridPage>;\n    </Layout>\n  );\n};\n\nconst GridPage = styled.div`\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(12, 1fr);\n\n  height: 100%;\n  max-height: 100%;\n  max-width: 100%;\n\n  // overflow: auto;\n  @media screen and (max-width: 768px) {\n  }\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n  }\n`;\n\nexport default AppGridPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst LogoSvg: React.FC<any> = props => {\n  const styles = {\n    width: '34px',\n    height: '20px',\n    minWidth: '34px',\n  };\n\n  return (\n    <StyledLink to=\"#\" {...props}>\n      <IconBox style={styles} className=\"iconBox\">\n        <svg className=\"svg\" width=\"34\" height=\"20\" viewBox=\"0 0 34 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M22.7894 20H30.6591L11.1643 0H3.29459L22.7894 20Z\" fill=\"#7476ED\" />\n          <path d=\"M15.2073 1.02323e-06L34 19.2796V0H28.9143V6.08693L22.9811 0L15.2073 1.02323e-06Z\" fill=\"#E56F8C\" />\n          <path d=\"M0 0.669434V19.9998H5.08561V13.9128L11.0188 19.9998H18.8422L0 0.669434Z\" fill=\"#64C2DB\" />\n        </svg>\n      </IconBox>\n\n      <LogoName className=\"logoName\">Logoipsum</LogoName>\n    </StyledLink>\n  );\n};\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  width: fit-content;\n  height: 28px;\n  min-width: max-content;\n\n  padding: 0 8px;\n`;\nconst IconBox = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst LogoName = styled.div`\n  text-align: center;\n\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.09em;\n\n  @media screen and (max-width: 480px) {\n    display: none;\n  }\n`;\nexport default LogoSvg;\n","import styled from 'styled-components';\nimport { IUser } from 'redux/auth/auth.types';\n\nexport interface ProfileCardProps extends Omit<IUser, '_id'> {\n  // avatarURL?: string;\n  // name?: string;\n  // email?: string;\n  nameFontSize?: string;\n  emailFontSize?: string;\n  avatarPrpps?: React.HTMLAttributes<HTMLDivElement>;\n  nameProps?: React.HTMLAttributes<HTMLDivElement>;\n  emailProps?: React.HTMLAttributes<HTMLDivElement>;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps & React.HTMLAttributes<HTMLDivElement>> = ({\n                                                                                          avatarURL = '',\n                                                                                          name = 'name',\n                                                                                          email = 'email',\n                                                                                          emailFontSize,\n                                                                                          nameFontSize,\n                                                                                          nameProps,\n                                                                                          emailProps,\n                                                                                          children,\n                                                                                          ...props\n                                                                                        }) => {\n  return (\n    <Card {...props}>\n      <Avatar>\n        <img src={avatarURL} alt='userImage' width={100} height={100} />\n      </Avatar>\n\n      <Wrapper>\n        <ProfileName fontSize={nameFontSize} {...nameProps}>\n          {name}\n        </ProfileName>\n\n        <ProfileEmail fontSize={emailFontSize} {...emailProps}>\n          {email}\n        </ProfileEmail>\n\n        {children}\n      </Wrapper>\n    </Card>\n  );\n};\nconst Card = styled.div`\n  display: flex;\n`;\nconst Avatar = styled.div`\n  min-width: 64px;\n  max-width: 64px;\n  height: 64px;\n  overflow: hidden;\n  border-radius: 50%;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px;\n\n  height: 100%;\n`;\nconst ProfileName = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '12px')};\n  font-weight: 600;\n`;\nconst ProfileEmail = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '10px')};\n  line-height: 16px;\n`;\nexport default ProfileCard;\n"],"names":["getLinkDataMap","_getLinkDataMap","_defineProperty","AppPagesEnum","warehouse","id","_id","label","concat","code","priceList","permission","_permission$company","_permission$company2","company","StyledNavLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","p","theme","accentColor","base","_ref2","globals","timingFunctionLong","_ref3","_ref","subMenuKey","onActive","pathname","useLocation","usePermissionsSelector","_useAppSelector","useAppSelector","warehouses","priceLists","permissions","renderLinks","useMemo","_map","_map$subMenuKey","lists","map","el","getLinkData","linkData","undefined","_jsx","to","children","useEffect","includes","FlexBox","fillWidth","padding","StyledNavMenu","MenuButton","ButtonIcon","_templateObject2","isOpen","NavMenuContainer","_templateObject3","modalBorderColor","modalBackgroundColor","_ref4","_ref5","shadowSecondary","_ref6","_ref7","_ref8","_ref9","_ref10","timingFnMain","NavList","_templateObject4","_templateObject5","_ref11","_ref12","permissionId","useAppParams","pages","useAppPages","_useState","useState","_useState2","_slicedToArray","setIsOpen","_useState3","_useState4","activePage","setActivePage","location","_useState5","_useState6","isSubMenuOpen","setIsSubMenuOpen","handleOpenNavMenu","useCallback","onNavLinkClick","page","handleSetActivePage","onOpenSubMenuStateChange","key","prev","_objectSpread","item","_jsxs","React","fxDirection","path","onClick","SvgIcon","iconId","size","style","display","Text","title","variant","icon","height","overflow","SubNavMenu","currentPageData","find","useCloseByEscapeOrClickOnBackdrop","endIconSize","endIconId","Backdrop","timingFunctionMain","transitionDelay","backdropColor","css","MainList","_theme$globals","_templateObject6","MainListItem","_templateObject7","borderColor","backgroundColorSecondary","_theme$globals2","_ref13","_templateObject8","_templateObject9","onClose","logOutUser","useAppAuthHook","user","useAuthSelector","_usePermissionsServic","usePermissionsServiceHook","permissionLogOut","clearCurrent","_usePermissionsSelect","permission_token","isPermission","ev","target","currentTarget","ProfileCard","nameFontSize","emailFontSize","gap","justifyContent","alignItems","endIcon","onSuccess","onError","fontSize","translate","MenuContainer","handleMenuState","newState","onMenuClose","HTMLElement","closest","KeyboardEvent","document","addEventListener","removeEventListener","iconSize","UserInfo","StButton","HeaderLeftSideItems","Component","_useSideBar","useSideBar","onTogglerClick","corp","LogoSvg","NavMenu","HeaderRightSideItems","UserMenu","StyledHeader","fontColorHeader","headerBackgroundColor","headerBorderColor","LeftSide","StyledBox","_ref8$borderRight","borderRight","_ref9$borderLeft","borderLeft","RightSide","havePermission","renderLeftSide","filter","idx","props","renderRightSide","ErrorContent","error","arguments","length","timingFnNull","Container","maxWidth","sideBarBackgroundColor","sideBarBorderColor","Header","Title","ContentScroll","_ref14","sideBarOptionsBackgroundColor","_ref15","RightSideContent","modal","useModalProvider","rootRef","useRef","getElementById","handleCloseMenu","console","log","subscribe","listener","_rootRef$current","_rootRef$current2","current","_rootRef$current3","_rootRef$current4","className","RenderComponent","options","toggleAppMode","useAppSettings","isDarkMode","useAppSettingsSelector","appSettings","width","window","confirm","resetApp","sideBarCompWidth","sideBarCompWidthMobile","StyledSideBar","fillColorHeader","SideBarContainer","Content","Top","Middle","MiddleButtons","Bottom","MenuToggler","sideBarTogglerBackgroundColor","isActiveCss","_ref16","backgroundColorLight","_ref17","StyledButtonIcon","_templateObject10","_ref18","isActive","_objectWithoutProperties","_excluded","handleOptionsState","sideBarButtons","sideBarButtonsBottom","renderMain","renderBottom","ToggleThemeMode","ActionAppExit","SideBarOptions","LayoutCTX","createContext","StyledLayout","LayoutChildren","StSideBar","SideBar","Provider","value","GridPage","dispatch","useDispatch","actionSetIndexPage","Layout","StyledLink","Link","IconBox","LogoName","minWidth","viewBox","fill","xmlns","d","Card","Avatar","Wrapper","ProfileName","ProfileEmail","_ref$avatarURL","avatarURL","_ref$name","name","_ref$email","email","nameProps","emailProps","src","alt"],"sourceRoot":""}