{"version":3,"file":"static/js/532.7dfd5b9f.chunk.js","mappings":"sXAwBYA,EAAgB,SAAhBA,GAAgB,OAAhBA,EAAgB,QAAhBA,EAAgB,UAAhBA,CAAgB,MAItBC,GAAgBC,EAAAA,EAAAA,IAAoBF,GAyE1C,UArE8D,SAAHG,GASpD,IAADC,EAAAC,EARJC,EAAQH,EAARG,SACAC,EAAOJ,EAAPI,QACAC,EAAUL,EAAVK,WACAC,EAAON,EAAPM,QACAC,EAAYP,EAAZO,aACAC,EAAIR,EAAJQ,KAEGC,GADGT,EAANU,QACQC,EAAAA,EAAAA,GAAAX,EAAAY,IAEFC,GAAgBC,EAAAA,EAAAA,KACtBC,GAA6CC,EAAAA,EAAAA,IAA8B,CACzEC,eAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOX,GAAY,IAAEC,KAAAA,MAD5BW,EAAQJ,EAARI,SAAUC,EAAYL,EAAZK,aAAcC,EAAQN,EAARM,SAWhC,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAASL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRf,SAAUiB,GATE,SAACI,GACfrB,GAAYA,EAASqB,GAAIN,EAAAA,EAAAA,GAAA,GAAOL,EAAcY,OAChD,KAQQhB,GAAK,IACTiB,YAAa,SAACC,EAAQC,EAAOC,GAC3BR,EAAS,OAAQO,EACnB,EACAE,aAAaR,EAAAA,EAAAA,KAACS,EAAAA,GAAsBb,EAAAA,EAAAA,GAAA,GAAKL,IAAkBmB,UAE3DC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,QAAS,cAAeC,KAAM,EAAGC,WAAS,EAAAL,SAAA,EACjDV,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,QAASC,UAAQ,EAAAT,UACpCV,EAAAA,EAAAA,KAACoB,EAAAA,IAASxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACyB,aAAaH,EAAAA,EAAAA,GAAE,SAAarB,EAAS,SAAO,IAAEsB,UAAQ,QAGjEpC,GAAcC,KACdgB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAEnC,EAAa,QAAU,YAAaoC,UAAQ,EAAAT,UAC/DV,EAAAA,EAAAA,KAACoB,EAAAA,GAAS,CACRC,aAAaH,EAAAA,EAAAA,GAAEnC,EAAa,QAAU,YACtCuC,cAA0B,OAAZrC,QAAY,IAAZA,GAAoB,QAARN,EAAZM,EAAcG,cAAM,IAAAT,OAAR,EAAZA,EAAsBsC,SAAqB,OAAZhC,QAAY,IAAZA,GAAoB,QAARL,EAAZK,EAAcG,cAAM,IAAAR,OAAR,EAAZA,EAAsBqC,OACnEE,UAAQ,OAKdnB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,SAAUK,UAAQ,EAAAb,UACrCV,EAAAA,EAAAA,KAACoB,EAAAA,IAASxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACyB,aAAaH,EAAAA,EAAAA,GAAE,gBAAoBrB,EAAS,UAAQ,IAAE2B,WAAS,EAACD,UAAQ,OAGpFzC,IACCkB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,eAAeR,UAClCV,EAAAA,EAAAA,KAACoB,EAAAA,IAASxB,EAAAA,EAAAA,GAAA,CAACyB,aAAaH,EAAAA,EAAAA,GAAE,gBAAoBrB,EAAS,mBAI1Dd,IACCiB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,MAAO,oLAAmCP,UACpDV,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,CACXC,QAASlD,EACTmD,SA1CiE,SAAAC,GAAS,IAADC,EACnF9B,EAAS,eAAwC,SAApB,OAAJ6B,QAAI,IAAJA,GAAY,QAARC,EAAJD,EAAMvB,cAAM,IAAAwB,OAAR,EAAJA,EAAcvB,OACzC,EAyCYwB,aAA0B,OAAZ7C,QAAY,IAAZA,GAAAA,EAAc8C,aAAe,EAAI,WAO7D,C","sources":["components/Forms/FormCreateProperty.tsx"],"sourcesContent":["import ModalForm, { ModalFormProps } from '../ModalForm';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { ProductTypeEnum } from '../../redux/products/products.types';\nimport FlexBox from '../atoms/FlexBox';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport { t } from '../../lang';\nimport InputText from '../atoms/Inputs/InputText';\nimport { useAppForm } from '../../hooks';\nimport { IProperty, IPropertyBase, IPropertyDto } from '../../redux/products/properties.types';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from './components/FormAfterSubmitOptions';\nimport ButtonsGroup, { ButtonGroupSelectHandler } from '../atoms/ButtonsGroup';\nimport { enumToFilterOptions } from '../../utils/fabrics';\n\nexport interface FormCreatePropertyProps extends Omit<ModalFormProps<ProductTypeEnum, any, IPropertyBase>, 'onSubmit'> {\n  onSubmit?: AppSubmitHandler<IPropertyDto, { isGroup?: boolean; isProperty?: boolean; isValue?: boolean }>;\n  type?: ProductTypeEnum;\n  create?: boolean;\n  parent?: IProperty;\n  edit?: boolean;\n\n  isGroup?: boolean;\n  isProperty?: boolean;\n  isValue?: boolean;\n}\nexport enum IsSelectableEnum {\n  No = 'No',\n  Yes = 'Yes',\n}\nconst filterOptions = enumToFilterOptions(IsSelectableEnum);\n\nexport interface IPropertyFormData extends IPropertyDto {}\n\nconst FormCreateProperty: React.FC<FormCreatePropertyProps> = ({\n  onSubmit,\n  isGroup,\n  isProperty,\n  isValue,\n  defaultState,\n  type,\n  parent,\n  ...props\n}) => {\n  const submitOptions = useAfterSubmitOptions();\n  const { register, handleSubmit, setValue } = useAppForm<IPropertyFormData>({\n    defaultValues: { ...defaultState, type },\n  });\n\n  const onValid = (data: IPropertyFormData) => {\n    onSubmit && onSubmit(data, { ...submitOptions.state });\n  };\n  const handleIsSelectableByUser: ButtonGroupSelectHandler<IsSelectableEnum> = info => {\n    setValue('isSelectable', info?.option?.value === 'Yes');\n  };\n\n  return (\n    <ModalForm\n      onSubmit={handleSubmit(onValid)}\n      {...props}\n      onOptSelect={(option, value, index) => {\n        setValue('type', value);\n      }}\n      extraFooter={<FormAfterSubmitOptions {...submitOptions} />}\n    >\n      <FlexBox padding={'4px 8px 8px'} flex={1} fillWidth>\n        <InputLabel label={t('type')} disabled>\n          <InputText placeholder={t('type')} {...register('type')} disabled />\n        </InputLabel>\n\n        {(isProperty || isValue) && (\n          <InputLabel label={t(isProperty ? 'group' : 'property')} disabled>\n            <InputText\n              placeholder={t(isProperty ? 'group' : 'property')}\n              defaultValue={defaultState?.parent?.label || defaultState?.parent?.label}\n              disabled\n            />\n          </InputLabel>\n        )}\n\n        <InputLabel label={t('label')} required>\n          <InputText placeholder={t('insertLabel')} {...register('label')} autoFocus required />\n        </InputLabel>\n\n        {isGroup && (\n          <InputLabel label={t('description')}>\n            <InputText placeholder={t('description')} {...register('description')} />\n          </InputLabel>\n        )}\n\n        {isProperty && (\n          <InputLabel label={'Доступно для формування варіацій'}>\n            <ButtonsGroup\n              options={filterOptions}\n              onSelect={handleIsSelectableByUser}\n              defaultIndex={defaultState?.isSelectable ? 1 : 0}\n            />\n          </InputLabel>\n        )}\n      </FlexBox>\n    </ModalForm>\n  );\n};\nexport default FormCreateProperty;\n"],"names":["IsSelectableEnum","filterOptions","enumToFilterOptions","_ref","_defaultState$parent","_defaultState$parent2","onSubmit","isGroup","isProperty","isValue","defaultState","type","props","parent","_objectWithoutProperties","_excluded","submitOptions","useAfterSubmitOptions","_useAppForm","useAppForm","defaultValues","_objectSpread","register","handleSubmit","setValue","_jsx","ModalForm","data","state","onOptSelect","option","value","index","extraFooter","FormAfterSubmitOptions","children","_jsxs","FlexBox","padding","flex","fillWidth","InputLabel","label","t","disabled","InputText","placeholder","defaultValue","required","autoFocus","ButtonsGroup","options","onSelect","info","_info$option","defaultIndex","isSelectable"],"sourceRoot":""}