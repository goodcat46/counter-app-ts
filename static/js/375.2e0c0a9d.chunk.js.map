{"version":3,"file":"static/js/375.2e0c0a9d.chunk.js","mappings":"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","sources":["hooks/useOrdersActionsCreator.hook.ts","components/AppPages/orders/PageOrders.tsx","components/AppPages/pagesStyles.tsx","data/offers.data.ts","data/orders.data.ts","types/offers/offer-images.types.ts"],"sourcesContent":["import { useModalProvider } from '../components/ModalProvider/ModalProvider';\nimport { useCallback } from 'react';\nimport { ITableListContext, TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { OrderEntity } from '../types/orders/orders.types';\nimport { Modals } from '../components/Modals/Modals';\nimport { useNavigate } from 'react-router-dom';\nimport { ExtractIdString } from '../utils/data-transform';\nimport { t } from '../lang';\nimport { useAppServiceProvider } from './useAppServices.hook';\nimport { AppModuleName } from '../redux/reduxTypes.types';\n\nexport type OrdersActionsCreator = TableActionCreator<OrderEntity>;\nconst useOrdersActionsCreatorHook = (): OrdersActionsCreator => {\n  const modalS = useModalProvider();\n  const navigate = useNavigate();\n  const { getAll } = useAppServiceProvider()[AppModuleName.orders];\n  // const { orders } = useAppServiceProvider();\n\n  return useCallback(\n    (ctx: ITableListContext<OrderEntity>) => {\n      const selected = ctx?.selectedRow;\n      const selectedId = selected ? ExtractIdString(selected) : '';\n\n      return [\n        {\n          icon: 'refresh',\n          onClick: () => {\n            getAll({\n              data: { refresh: true },\n              onLoading: ctx.onRefresh,\n            });\n          },\n        },\n        { separator: true },\n        {\n          name: 'openOrderOverview',\n          icon: 'openInNew',\n          disabled: !selectedId,\n          onClick: () => {\n            selectedId && navigate(selectedId);\n            // modalS.open({\n            //   Modal: Modals.OrderOverview,\n            //   props: {\n            //     order: ctx.tableData?.find(el => el._id === selectedId),\n            //   },\n            // });\n          },\n        },\n        {\n          name: 'archiveOrder',\n          icon: 'archive',\n          disabled: !selectedId,\n          onClick: () => {\n            if (selectedId) window.confirm(`Архівувати замовення: ${selectedId}`);\n          },\n        },\n        {\n          name: 'editOrder',\n          icon: 'edit',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: 'Edit order',\n              },\n            });\n          },\n        },\n        {\n          name: 'copyOrder',\n          icon: 'copy',\n          disabled: !selectedId,\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: `Copy order: ${selectedId}`,\n              },\n            });\n          },\n        },\n        { separator: true },\n        {\n          name: 'createOrder',\n          icon: 'AddToList',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrdersGroup,\n              props: {\n                title: t(`Create orders group`),\n              },\n            });\n          },\n        },\n        {\n          name: 'createOrder',\n          icon: 'plus',\n          type: 'onlyIconFilled',\n          onClick: () => {\n            modalS.open({\n              Modal: Modals.FormCreateOrder,\n              props: {\n                title: t(`Create order`),\n              },\n            });\n          },\n        },\n      ];\n    },\n    [getAll, modalS, navigate]\n  );\n};\nexport default useOrdersActionsCreatorHook;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from '../pagesStyles';\nimport styled from 'styled-components';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../../TableList/tableTypes.types';\nimport AppGridPage from '../AppGridPage';\nimport { useOrdersSelector } from '../../../redux/selectors.store';\nimport { ISortParams } from '../../../api';\nimport { FilterReturnDataType } from '../../Filter/AppFilter';\nimport { ordersSearchParams, ordersTableColumns } from '../../../data';\nimport { OrderEntity, OrderStatusEnum } from '../../../types/orders/orders.types';\nimport useOrdersActionsCreatorHook from '../../../hooks/useOrdersActionsCreator.hook';\nimport { BaseAppPageProps } from '../index';\nimport { enumToFilterOptions } from '../../../utils';\nimport TabSelector, { FilterOption } from '../../atoms/TabSelector';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { AppModuleName } from '../../../redux/reduxTypes.types';\n\ninterface Props extends BaseAppPageProps {}\n\nconst ordersFilterOptions = enumToFilterOptions(OrderStatusEnum);\n\n// const useDynamicFilterOptionsByEnum = <T extends Record<string, any> = any>(\n//   enumObj: T,\n//   builder: (\n//     option: FilterOption<T[keyof T]>,\n//     index: number,\n//     arr: FilterOption<T[keyof T]>[]\n//   ) => Partial<DynamicFilterOption<T[keyof T]>>\n// ) => {\n//   const options = useMemo(() => {\n//     return enumToFilterOptions(enumObj).map((value, index, array) => ({ ...value, ...builder(value, index, array) }));\n//   }, [builder, enumObj]);\n//\n//   return options;\n// };\n\nconst PageOrders: React.FC<any> = (props: Props) => {\n  const { tableConfig, isLoading } = useOrderTableConfigs();\n\n  const [filterButtonResults] = useState<Record<OrderStatusEnum | string, number | string>>({});\n  const renderLabel = useCallback(\n    (info: { option?: FilterOption<OrderStatusEnum>; index: number; isActive: boolean }) => {\n      return (\n        <FlexBox\n          justifyContent={'space-between'}\n          fillHeight\n          fillWidth\n          overflow={'hidden'}\n          padding={'2px 4px'}\n          gap={6}\n          style={{ cursor: 'inherit' }}\n        >\n          <Text $size={11} $weight={500} $textTransform={'none'}>\n            {info?.option?.label ?? null}\n          </Text>\n\n          <Text $size={10} $ellipsisMode>\n            {info?.option?.value ? filterButtonResults[info?.option?.value] : 0}\n          </Text>\n        </FlexBox>\n      );\n    },\n    [filterButtonResults]\n  );\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TabSelector\n          style={{ height: 52 }}\n          filterOptions={ordersFilterOptions}\n          renderLabel={renderLabel}\n          optionProps={{ fitContentH: false }}\n        />\n\n        <FlexBox fillWidth flex={1} overflow={'hidden'}>\n          <TableList {...tableConfig} isLoading={isLoading} />\n        </FlexBox>\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled(FlexBox)`\n  ${takeFullGridArea}\n`;\n\nexport default PageOrders;\n\nexport const useOrderTableConfigs = () => {\n  const { getAll } = useAppServiceProvider()[AppModuleName.orders];\n  const state = useOrdersSelector();\n  const actionsCreator = useOrdersActionsCreatorHook();\n  // const filterSelectors = useProductsFilterSelectorsHook();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<OrderEntity> => ({\n      tableData: state.orders,\n      tableTitles: ordersTableColumns,\n      tableSortParams: ordersSearchParams.filter(el => el.sort),\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, getAll, sortParams, state.orders]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    getAll({\n      data: { refresh: true },\n      onLoading: setIsLoading,\n    });\n\n    // eslint-disable-next-line\n  }, []);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { SelectItem } from 'components/TableList/TableList';\nimport { CellTittleProps } from 'components/TableList/TebleCells/CellTitle';\nimport { t } from '../lang';\nimport { OfferEntity, OfferStatusEnum } from '../types/offers/offers.types';\nimport { getStatusesByEnum } from './statuses.data';\nimport { enumToFilterOptions } from '../utils';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { ImageSetSrcType } from '../types/offers/offer-images.types';\nimport { toPrice } from '../utils/numbers';\n\nexport const offerStatusesData = getStatusesByEnum(OfferStatusEnum);\nexport const OfferStatusFilterOptions = enumToFilterOptions(OfferStatusEnum);\n\nexport const formAddImageSetTabs: FilterOption<ImageSetSrcType>[] = [\n  { label: 'Preview', value: ImageSetSrcType.img_preview, required: true },\n  { label: '1x', value: ImageSetSrcType.img_1x },\n  { label: '2x', value: ImageSetSrcType.img_2x },\n  { label: 'Webp', value: ImageSetSrcType.webp },\n];\nexport const offersTableColumns: CellTittleProps<OfferEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd?.label },\n    // bottom: { name: t('sku'), getData: rd => rd?.sku },\n    getImgPreview: pr => (pr.images ? pr.images?.[0]?.img_preview : undefined),\n    width: '270px',\n    action: 'dataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), getData: d => d.approved as never },\n    width: '100px',\n    action: 'status',\n  },\n\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => toPrice(d.price?.in) },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Variation label'), getData: d => d.variation?.label || '---' },\n    bottom: { name: t('SKU'), getData: d => d.variation?.sku || '---' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Warehouse'), getData: d => d.warehouse?.label },\n    bottom: { name: t('Code'), getData: d => d.warehouse?.code },\n    width: '150px',\n    action: 'valueByPath',\n  },\n\n  // {\n  //   top: { name: t('Price OUT'), align: 'end', getData: d => toPrice(d.price?.out) },\n  //   bottom: { name: t('Price IN'), getData: d => toPrice(d.price?.in) },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n\n  // {\n  //   top: {\n  //     name: t('category'),\n  //\n  //     getData: rd => rd.category?.label,\n  //   },\n  //   bottom: {\n  //     name: t('parentCategory'),\n  //\n  //     getData: rd => rd.category?.parent?.label,\n  //   },\n  //   width: '180px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: 'Бренд', path: 'brand.label' },\n    bottom: { name: 'Виробник', path: 'manufacturer.name' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновив', getData: rd => rd?.editor?.user?.email ?? '---' },\n    bottom: { name: 'Автор', getData: rd => rd?.author?.user?.email ?? '---' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    bottom: { name: 'Створено', align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateDbl',\n  },\n];\n\nexport const productsSearchParams: SelectItem[] = [\n  // {\n  //   label: t('type'),\n  //   dataPath: 'type',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('price'),\n  //   dataPath: 'price',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Оновлено',\n  //   dataPath: 'createdAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Створено',\n  //   dataPath: 'updatedAt',\n  //   filter: false,\n  //   search: false,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countIn'),\n  //   dataPath: 'countIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountIn'),\n  //   dataPath: 'subCountIn.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('countOut'),\n  //   dataPath: 'countOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCountOut'),\n  //   dataPath: 'subCountOut.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('category'),\n  //   dataPath: 'category.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('subCategory'),\n  //   dataPath: 'subCategory.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  //\n  // {\n  //   label: 'Контрагент',\n  //   dataPath: 'contractor.name',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: 'Документ',\n  //   dataPath: 'document',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // {\n  //   label: t('project'),\n  //   dataPath: 'project.label',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n  // { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  // {\n  //   label: 'Статус',\n  //   dataPath: 'status',\n  //   filter: false,\n  //   search: true,\n  //   sort: true,\n  // },\n];\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { OrderEntity, OrderStatusEnum } from '../types/orders/orders.types';\nimport { OrderSlotEntity } from '../types/orders/order-slot.types';\nimport { t } from '../lang';\nimport { SelectItem } from '../components/TableList/tableTypes.types';\nimport { FilterOption } from '../components/atoms/TabSelector';\nimport { getStatusesByEnum } from './statuses.data';\nimport { getBasePriceColumns } from './priceManagement.data';\nimport { toPrice } from '../utils/numbers';\n\nconst createdDateColumn: CellTittleProps = {\n  top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n  bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n  width: '150px',\n  action: 'dateDbl',\n};\n\nexport const orderStatusesData = getStatusesByEnum(OrderStatusEnum);\nexport const orderStatuses: FilterOption<OrderStatusEnum>[] = [\n  { _id: '1', value: OrderStatusEnum.new, label: t(OrderStatusEnum.new), color: 'rgb(136,222,255)' },\n  { _id: '2', value: OrderStatusEnum.inWork, label: t(OrderStatusEnum.inWork), color: 'rgb(239,173,255)' },\n  {\n    _id: '3.1',\n    value: OrderStatusEnum.rejectedByCustomer,\n    label: t(OrderStatusEnum.rejectedByCustomer),\n    color: 'rgb(255,145,2)',\n  },\n  {\n    _id: '3.2',\n    value: OrderStatusEnum.rejectedByManager,\n    label: t(OrderStatusEnum.rejectedByManager),\n    color: 'rgb(255,205,105)',\n  },\n  { _id: '4.1', value: OrderStatusEnum.active, label: t(OrderStatusEnum.active), color: 'rgb(255,236,84)' },\n  { _id: '4.2', value: OrderStatusEnum.fulfilled, label: t(OrderStatusEnum.fulfilled), color: 'rgb(151,255,95)' },\n  {\n    _id: '4.3',\n    value: OrderStatusEnum.fulfilledWithRefund,\n    label: t(OrderStatusEnum.fulfilledWithRefund),\n    color: 'rgb(255,53,53)',\n  },\n  { _id: '5.1', value: OrderStatusEnum.archived, label: t(OrderStatusEnum.archived), color: 'rgb(164,171,182)' },\n  { _id: '5.2', value: OrderStatusEnum.expired, label: t(OrderStatusEnum.expired), color: 'rgb(164,171,182)' },\n];\n\n// export type DataPath =\n//   | 'owner.label'\n//   | 'owner.name'\n//   | 'author.name'\n//   | 'author.email'\n//   | 'editor.name'\n//   | 'editor.email'\n//   | 'auditor.name'\n//   | 'auditor.email'\n//   | 'contractor.name'\n//   | 'contractor.type'\n//   | 'eventDate'\n//   | 'type'\n//   | 'status'\n//   | 'amount'\n//   | 'currency'\n//   | 'comment'\n//   | 'createdAt'\n//   | 'updatedAt'\n//   | 'mark.label'\n//   | 'invoice.label'\n//   | 'invoice.code'\n//   | 'invoice.number'\n//   | 'payment.label'\n//   | 'payment.code'\n//   | 'payment.number'\n//   | 'order.code'\n//   | 'total'\n//   | 'manager.name'\n//   | 'manager.code'\n//   | 'manager.email'\n//   | 'customer.name'\n//   | 'customer.phone'\n//   | 'receiver.name'\n//   | 'receiver.phone'\n//   | 'invoices'\n//   | 'payments'\n//   | 'transporters';\n\nexport const ordersTableColumns: CellTittleProps<OrderEntity>[] = [\n  {\n    top: {\n      name: `${t('Status')}`,\n      getData: rd => rd.status,\n    },\n    bottom: { name: t('Priority'), getData: _rd => t('undefined') },\n\n    // bottom: {\n    //   name: `${t('Status')}/${t('External')}`,\n    //   getData: rd => rd.status?.external,\n    // },\n    width: '150px',\n    action: 'status',\n  },\n\n  {\n    top: {\n      name: t('Total amount'),\n      align: 'end',\n      getData: rd => toPrice(rd.summary?.netto ?? 0),\n    },\n    bottom: { name: t('Slots count'), align: 'end', getData: rd => rd.slots?.length || rd.summary?.slotsCount },\n    width: '120px',\n    action: 'numberWithSpaces',\n  },\n  {\n    top: { name: t('Reference / Internal'), getData: rd => rd?.reference?.internal },\n    bottom: { name: t('Reference / External'), getData: rd => rd?.reference?.external },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Group'), getData: rd => rd?.group?.reference?.internal },\n    bottom: { name: t('Strategy'), getData: rd => rd?.group?.strategy },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Customer'),\n      getData: rd =>\n        (rd.customer?.name && rd.customer?.name?.first + ' ' + rd.customer?.name?.second) ||\n        (rd.customer?.label && rd.customer?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'customer.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Receiver'),\n      getData: rd =>\n        (rd.receiver?.name && rd.receiver?.name?.first + ' ' + rd.receiver?.name?.second) ||\n        (rd.receiver?.label && rd.receiver?.label.base) ||\n        '--- ---',\n    },\n    bottom: { name: t('Phone'), path: 'receiver.phone' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  {\n    top: {\n      name: t('Invoices'),\n\n      // getData: () => ['5651651323213', '6546565165651', '546565165651', '565165132321', '54656516565'],\n    },\n    width: '200px',\n    action: 'tags',\n  },\n  {\n    top: { name: t('Payments') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Deliveries') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('comment'), path: 'comment' },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Refunds') },\n    width: '200px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Manager'), path: 'manager.name' },\n    bottom: { name: t('email'), path: 'manager.email' },\n    width: '180px',\n    action: 'valueByPath',\n  },\n  createdDateColumn,\n];\n\nexport const ordersSearchParams: SelectItem[] = [\n  {\n    label: 'Дата',\n    dataPath: 'eventDate',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  { label: 'Мітка', dataPath: 'mark.label', filter: false, search: true, sort: true },\n  {\n    label: 'Статус',\n    dataPath: 'status',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: t('type'),\n    dataPath: 'type',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: t('amount'),\n    dataPath: 'total',\n    filter: false,\n    search: true,\n    sort: true,\n  },\n  {\n    label: 'Оновлено',\n    dataPath: 'createdAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n  {\n    label: 'Створено',\n    dataPath: 'updatedAt',\n    filter: false,\n    search: false,\n    sort: true,\n  },\n];\n\nexport const orderSlotsTableColumns: CellTittleProps<OrderSlotEntity>[] = [\n  {\n    // top: { name: t('Product label'), getData: rd => rd.offer?.label },\n    top: { name: t('Variation label'), getData: rd => rd.variation?.label },\n    action: 'text',\n    width: '210px',\n  },\n  {\n    top: { name: t('Product sku'), getData: rd => rd.offer?.sku },\n    bottom: { name: t('Variation sku'), getData: rd => rd.variation?.sku },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Product bar-code'), getData: rd => rd.offer?.barCode },\n    bottom: { name: t('Variation bar-code'), getData: rd => rd.variation?.barCode },\n    action: 'valueByPath',\n    width: '150px',\n  },\n  {\n    top: { name: t('Total amount'), getData: rd => rd.netto },\n    bottom: { name: t('Total q-ty'), getData: rd => rd.quantity },\n    action: 'valueByPath',\n    width: '125px',\n  },\n  ...getBasePriceColumns(),\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  { top: { name: t('') }, bottom: { name: t('') }, action: 'valueByPath', width: '125px' },\n  createdDateColumn,\n];\n","import { IBase } from '../../redux/app-redux.types';\n\nexport enum ImageSetSrcType {\n  img_preview = 'img_preview',\n  img_1x = 'img_1x',\n  img_2x = 'img_2x',\n  webp = 'webp',\n}\n\nexport interface OfferImageSlotEntity extends Partial<IBase> {\n  img_preview?: string;\n  img_1x?: string;\n  img_2x?: string;\n  webp?: string;\n  order: number;\n}\n"],"names":["modalS","useModalProvider","navigate","useNavigate","getAll","useAppServiceProvider","AppModuleName","useCallback","ctx","selected","selectedRow","selectedId","ExtractIdString","icon","onClick","data","refresh","onLoading","onRefresh","separator","name","disabled","window","confirm","concat","open","Modal","Modals","props","title","type","t","ordersFilterOptions","enumToFilterOptions","OrderStatusEnum","Page","styled","FlexBox","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_useOrderTableConfigs","useOrderTableConfigs","tableConfig","isLoading","_useState","useState","filterButtonResults","_slicedToArray","renderLabel","info","_info$option$label","_info$option","_info$option2","_info$option3","_jsxs","justifyContent","fillHeight","fillWidth","overflow","padding","gap","style","cursor","children","_jsx","Text","$size","$weight","$textTransform","option","label","$ellipsisMode","value","AppGridPage","path","TabSelector","height","filterOptions","optionProps","fitContentH","flex","TableList","_objectSpread","state","useOrdersSelector","actionsCreator","useOrdersActionsCreatorHook","_useState3","_useState4","setIsLoading","_useState5","_useState6","sortParams","setSortParams","_useState7","_useState8","filterParams","setFilterParams","useMemo","tableData","orders","tableTitles","ordersTableColumns","tableSortParams","ordersSearchParams","el","sort","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","query","then","handleTableSort","param","sortOrder","dataPath","useEffect","css","takeFullPlace","_templateObject2","_templateObject3","OfferStatusFilterOptions","getStatusesByEnum","OfferStatusEnum","formAddImageSetTabs","ImageSetSrcType","required","offersTableColumns","top","getData","rd","getImgPreview","pr","_pr$images","_pr$images$","images","img_preview","undefined","width","action","sku","bottom","barCode","d","approved","align","_d$price","toPrice","price","out","_d$price2","in","_d$variation","variation","_d$variation2","_d$warehouse","warehouse","_d$warehouse2","code","_rd$editor$user$email","_rd$editor","_rd$editor$user","editor","user","email","_rd$author$user$email","_rd$author","_rd$author$user","author","createdDateColumn","status","_rd","_rd$summary$netto","_rd$summary","summary","netto","_rd$slots","_rd$summary2","slots","length","slotsCount","_rd$reference","reference","internal","_rd$reference2","external","_rd$group","_rd$group$reference","group","_rd$group2","strategy","_rd$customer","_rd$customer2","_rd$customer2$name","_rd$customer3","_rd$customer3$name","_rd$customer4","_rd$customer5","customer","first","second","base","_rd$receiver","_rd$receiver2","_rd$receiver2$name","_rd$receiver3","_rd$receiver3$name","_rd$receiver4","_rd$receiver5","receiver","filter","search","orderSlotsTableColumns","_rd$variation","_rd$offer","offer","_rd$variation2","_rd$offer2","_rd$variation3","quantity","_toConsumableArray","getBasePriceColumns"],"sourceRoot":""}