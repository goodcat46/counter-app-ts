{"version":3,"file":"static/js/532.f0f35c5e.chunk.js","mappings":"mTAoFA,UA5D8D,SAAHA,GASpD,IAADC,EAAAC,EARJC,EAAQH,EAARG,SACAC,EAAOJ,EAAPI,QACAC,EAAUL,EAAVK,WACAC,EAAON,EAAPM,QACAC,EAAYP,EAAZO,aACAC,EAAIR,EAAJQ,KAEGC,GADGT,EAANU,QACQC,EAAAA,EAAAA,GAAAX,EAAAY,IAERC,GACEC,EAAAA,EAAAA,IAA8B,CAAEC,eAAaC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOT,GAAY,IAAEC,KAAAA,MAD5DS,EAAQJ,EAARI,SAAUC,EAAYL,EAAZK,aAAcC,EAAQN,EAARM,SAAUC,EAAuBP,EAAvBO,wBAAyBC,EAAcR,EAAdQ,eAAgBC,EAAcT,EAAdS,eAOnF,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAASR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRb,SAAUe,GANE,SAACO,GACftB,GAAYA,EAASsB,EAAM,CAAEJ,eAAAA,EAAgBC,eAAAA,GAC/C,KAKQb,GAAK,IACTiB,YAAa,SAACC,EAAQC,EAAOC,GAC3BV,EAAS,OAAQS,EACnB,EACAE,aACEP,EAAAA,EAAAA,KAACQ,EAAAA,EAAsB,CACrBC,aAAcZ,EACdE,eAAgBA,EAChBD,eAAgBA,IAEnBY,UAEDC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,QAAS,UAAWC,KAAM,EAAGC,WAAS,EAAAL,SAAA,EAC7CV,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,QAASC,UAAQ,EAAAT,UACpCV,EAAAA,EAAAA,KAACoB,EAAAA,IAAS3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAC4B,aAAaH,EAAAA,EAAAA,GAAE,SAAaxB,EAAS,SAAO,IAAEyB,UAAQ,QAGjErC,GAAcC,KACdiB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAEpC,EAAa,QAAU,YAAaqC,UAAQ,EAAAT,UAC/DV,EAAAA,EAAAA,KAACoB,EAAAA,GAAS,CACRC,aAAaH,EAAAA,EAAAA,GAAEpC,EAAa,QAAU,YACtCwC,cAA0B,OAAZtC,QAAY,IAAZA,GAAoB,QAARN,EAAZM,EAAcG,cAAM,IAAAT,OAAR,EAAZA,EAAsBuC,SAAqB,OAAZjC,QAAY,IAAZA,GAAoB,QAARL,EAAZK,EAAcG,cAAM,IAAAR,OAAR,EAAZA,EAAsBsC,OACnEE,UAAQ,OAKdnB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,SAAUK,UAAQ,EAAAb,UACrCV,EAAAA,EAAAA,KAACoB,EAAAA,IAAS3B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAC4B,aAAaH,EAAAA,EAAAA,GAAE,gBAAoBxB,EAAS,UAAQ,IAAE8B,WAAS,EAACD,UAAQ,OAGpF1C,IACCmB,EAAAA,EAAAA,KAACgB,EAAAA,EAAU,CAACC,OAAOC,EAAAA,EAAAA,GAAE,eAAeR,UAClCV,EAAAA,EAAAA,KAACoB,EAAAA,IAAS3B,EAAAA,EAAAA,GAAA,CAAC4B,aAAaH,EAAAA,EAAAA,GAAE,gBAAoBxB,EAAS,wBAMnE,C","sources":["components/Forms/FormCreateProperty.tsx"],"sourcesContent":["import ModalForm, { ModalFormProps } from '../ModalForm';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { ProductTypeEnum } from '../../redux/products/products.types';\nimport FlexBox from '../atoms/FlexBox';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport t from '../../lang';\nimport InputText from '../atoms/Inputs/InputText';\nimport { useAppForm } from '../../hooks';\nimport { IProperty, IPropertyBase, IPropertyDto } from '../../redux/products/properties.types';\nimport FormAfterSubmitOptions from './components/FormAfterSubmitOptions';\n\nexport interface FormCreatePropertyProps extends Omit<ModalFormProps<ProductTypeEnum, any, IPropertyBase>, 'onSubmit'> {\n  onSubmit?: AppSubmitHandler<IPropertyDto, { isGroup?: boolean; isProperty?: boolean; isValue?: boolean }>;\n  type?: ProductTypeEnum;\n  create?: boolean;\n  parent?: IProperty;\n  edit?: boolean;\n  isGroup?: boolean;\n  isProperty?: boolean;\n  isValue?: boolean;\n}\n\nexport interface IPropertyFormData extends IPropertyDto {}\n\nconst FormCreateProperty: React.FC<FormCreatePropertyProps> = ({\n  onSubmit,\n  isGroup,\n  isProperty,\n  isValue,\n  defaultState,\n  type,\n  parent,\n  ...props\n}) => {\n  const { register, handleSubmit, setValue, toggleAfterSubmitOption, closeAfterSave, clearAfterSave } =\n    useAppForm<IPropertyFormData>({ defaultValues: { ...defaultState, type } });\n\n  const onValid = (data: IPropertyFormData) => {\n    onSubmit && onSubmit(data, { closeAfterSave, clearAfterSave });\n  };\n\n  return (\n    <ModalForm\n      onSubmit={handleSubmit(onValid)}\n      {...props}\n      onOptSelect={(option, value, index) => {\n        setValue('type', value);\n      }}\n      extraFooter={\n        <FormAfterSubmitOptions\n          toggleOption={toggleAfterSubmitOption}\n          clearAfterSave={clearAfterSave}\n          closeAfterSave={closeAfterSave}\n        />\n      }\n    >\n      <FlexBox padding={'4px 8px'} flex={1} fillWidth>\n        <InputLabel label={t('type')} disabled>\n          <InputText placeholder={t('type')} {...register('type')} disabled />\n        </InputLabel>\n\n        {(isProperty || isValue) && (\n          <InputLabel label={t(isProperty ? 'group' : 'property')} disabled>\n            <InputText\n              placeholder={t(isProperty ? 'group' : 'property')}\n              defaultValue={defaultState?.parent?.label || defaultState?.parent?.label}\n              disabled\n            />\n          </InputLabel>\n        )}\n\n        <InputLabel label={t('label')} required>\n          <InputText placeholder={t('insertLabel')} {...register('label')} autoFocus required />\n        </InputLabel>\n\n        {isGroup && (\n          <InputLabel label={t('description')}>\n            <InputText placeholder={t('description')} {...register('description')} />\n          </InputLabel>\n        )}\n      </FlexBox>\n    </ModalForm>\n  );\n};\nexport default FormCreateProperty;\n"],"names":["_ref","_defaultState$parent","_defaultState$parent2","onSubmit","isGroup","isProperty","isValue","defaultState","type","props","parent","_objectWithoutProperties","_excluded","_useAppForm","useAppForm","defaultValues","_objectSpread","register","handleSubmit","setValue","toggleAfterSubmitOption","closeAfterSave","clearAfterSave","_jsx","ModalForm","data","onOptSelect","option","value","index","extraFooter","FormAfterSubmitOptions","toggleOption","children","_jsxs","FlexBox","padding","flex","fillWidth","InputLabel","label","t","disabled","InputText","placeholder","defaultValue","required","autoFocus"],"sourceRoot":""}