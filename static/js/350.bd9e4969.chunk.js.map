{"version":3,"file":"static/js/350.bd9e4969.chunk.js","mappings":"kVAgIA,EAjHqC,SACnCA,EACAC,GAEA,IAAMC,GAAQC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOC,EAAAA,EAAAA,cACL,SAAAC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAI,CACL,CACEC,KAAM,mBACNC,MAAO,6CACPC,KAAM,YACNC,WAA0B,QAAhBR,EAACD,EAAIU,mBAAW,IAAAT,GAAfA,EAAiBU,KAC5BC,SAAU,OACVC,KAAM,WACNC,QAAS,WAAO,IAADC,EAAAC,EACPC,EAAUjB,EAAIU,YACpBQ,QAAQC,IAAI,gBAAiBF,GAC7BC,QAAQC,IAAI,cAAe,CAAEzB,YAAAA,KACd,QAAfqB,EAAAf,EAAIU,mBAAW,IAAAK,OAAA,EAAfA,EAAiBJ,MAAOd,EAAS,QAADuB,OAAwB,QAAxBJ,EAAShB,EAAIU,mBAAW,IAAAM,OAAA,EAAfA,EAAiBL,KAC5D,GAEF,CACEL,KAAM,iBACNC,MAAO,+DACPC,KAAM,OACNC,SAAyB,QAAfP,EAAAF,EAAIU,mBAAW,IAAAR,IAAfA,EAAiBS,MAAOjB,IAAe,CAAC,OAAO2B,SAAS3B,GAClEkB,SAAU,OACVC,KAAM,WACNC,QAAS,WACP,IAAMG,EAAUjB,EAAIU,YACpBQ,QAAQC,IAAI,gBAAiBF,GAE7BtB,EAAM2B,gBAAgB,CACpBC,cAAeC,EAAAA,EACfC,mBAAoB,CAClBC,YAAY,EACZnB,MAAO,kHAGb,GAEF,CACED,KAAM,mBACNC,MAAO,mDACPC,KAAM,SACNI,SAAU,OACVH,SAAyB,QAAfN,EAAAH,EAAIU,mBAAW,IAAAP,IAAfA,EAAiBQ,MAAOjB,IAAe,CAAC,OAAO2B,SAAS3B,GAClEmB,KAAM,WACNC,QAAS,WACP,IAAMG,EAAUjB,EAAIU,YACpBQ,QAAQC,IAAI,gBAAiBF,EAC/B,GAEF,CACEX,KAAM,kBACNC,MAAO,mDACPC,KAAM,SACNI,SAAU,OACVH,UAAUT,EAAIU,cAAehB,IAAe,CAAC,WAAW2B,SAAS3B,GACjEmB,KAAM,WACNC,QAAS,WACP,IAAMG,EAAUjB,EAAIU,YACpBQ,QAAQC,IAAI,gBAAiBF,EAC/B,GAEF,CAAEU,WAAW,GACb,CACErB,KAAM,mBACNC,MAAO,yDACPC,KAAM,QACNI,SAAU,OACVC,KAAM,iBACNJ,SAAyB,QAAfL,EAAAJ,EAAIU,mBAAW,IAAAN,IAAfA,EAAiBO,MAAOjB,IAAe,CAAC,WAAW2B,SAAS3B,GACtEoB,QAAS,WACP,IAAMG,EAAUjB,EAAIU,YACpBQ,QAAQC,IAAI,gBAAiBF,EAC/B,GAEF,CACEX,KAAM,mBACNC,MAAO,mDACPC,KAAM,OACNI,SAAU,OACVC,KAAM,iBACNJ,SAAyB,QAAfJ,EAAAL,EAAIU,mBAAW,IAAAL,IAAfA,EAAiBM,MAAOjB,IAAe,CAAC,WAAW2B,SAAS3B,GACtEoB,QAAS,WACP,IAAMG,EAAUjB,EAAIU,YACpBQ,QAAQC,IAAI,gBAAiBF,EAC/B,GAEF,CACEX,KAAM,mBACNC,MAAO,mDACPC,KAAM,OACNI,SAAU,OACVC,KAAM,iBACNC,QAAS,WACPnB,EAAM2B,gBAAgB,CACpBC,cAAeC,EAAAA,EACfC,mBAAoB,CAClBC,YAAY,EACZnB,MAAO,+HAGb,GAEH,GACD,CAACb,EAAaC,EAAOE,GAEzB,E,SC9GM+B,EAAkC,CACtC,CAAErB,MAAO,qBAAOsB,MAAO,OACvB,CAAEtB,MAAO,uCAAUsB,MAAO,WAC1B,CAAEtB,MAAO,+DAAcsB,MAAO,WAC9B,CAAEtB,MAAO,qBAAOsB,MAAO,QAMnBC,EAA0B,SAAHC,GAAUA,EAAJC,KAAmB,IAC5CC,GAASC,EAAAA,EAAAA,MAATD,KACRE,GAAsCC,EAAAA,EAAAA,YAAsDC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArFzC,EAAW2C,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAwCC,EAAAA,EAAAA,IAAgB,CACtD/C,YAAakC,EAAa,GAAGC,QAC7Ba,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAFKG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAG9BG,GAAoBC,EAAAA,EAAAA,KACpBC,EAAiBC,EAA6BH,EAA8B,OAAXnD,QAAW,IAAXA,OAAW,EAAXA,EAAamC,QAEpFoB,EAAAA,EAAAA,YAAU,WACRL,EAAgB,CAAElD,YAAakC,EAAa,GAAGC,QAC/CU,EAAeX,EAAa,GAE9B,GAAG,IAEH,IAAMsB,GAAcC,EAAAA,EAAAA,UAClB,iBAAqC,CACnCC,UAAWP,EAAkBQ,MAAMC,YACnCC,YAAaC,EAAAA,GACbC,kBAAmBC,EAAAA,GACnBC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZd,eAAAA,EACD,GACD,CAACA,EAAgBF,EAAkBQ,MAAMC,cAErCQ,GAAqB/D,EAAAA,EAAAA,cACzB,SAACgE,GACCnB,EAAgB,CAAElD,YAAaqE,EAAKlC,QACpCU,EAAewB,EACjB,GACA,CAACnB,IAEGoB,GAAoBjE,EAAAA,EAAAA,cACxB,SAAC8B,GAAa,OAAMc,EAAasB,IAAI,iBAAmBpC,EAAQ,SAAW,EAAE,GAC7E,CAACc,IAGGuB,GAAsBf,EAAAA,EAAAA,UAAQ,WAClC,OAAOvB,EAAauC,KAAI,SAAAJ,GAAI,OAC1BK,EAAAA,EAAAA,KAACC,EAAY,CAEXC,QAAQ,MACRxD,QAAS,kBAAMgD,EAAmBC,EAAK,EACvCQ,UAAWP,EAAkBD,EAAKlC,OAAO2C,SAExCT,EAAKxD,OALDwD,EAAKlC,MAMG,GAEnB,GAAG,CAACmC,EAAmBF,IAEvB,OACEW,EAAAA,EAAAA,MAACC,EAAI,CAAAF,SAAA,EACHC,EAAAA,EAAAA,MAACE,EAAG,CAAAH,SAAA,EACFJ,EAAAA,EAAAA,KAACQ,EAAW,CAAAJ,UACVJ,EAAAA,EAAAA,KAACS,EAAAA,GAAWC,EAAAA,EAAAA,GAAA,GAAK7C,OAGnBmC,EAAAA,EAAAA,KAACW,EAAa,CAAAP,UACZJ,EAAAA,EAAAA,KAACY,EAAW,CAAAR,SAAEN,UAIlBE,EAAAA,EAAAA,KAACa,EAAM,CAAAT,UACLJ,EAAAA,EAAAA,KAACc,EAAAA,IAASJ,EAAAA,EAAAA,GAAA,GAAK5B,QAIvB,EAEMwB,EAAOS,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAKnBC,EAAAA,IAEEX,EAAMQ,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0KASE,SAAAG,GAAQ,OAAAA,EAALC,MAAkBC,oBAAoB,GAE7DC,EAAAA,IAEEV,EAASE,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uKAQrBM,EAAAA,IAEkB,SAAAE,GAAQ,OAAAA,EAALJ,MAAkBC,oBAAoB,IAGzDd,EAAcO,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,mIAUxBN,EAAgBI,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iHAS1BL,EAAcG,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,wHAQxBhB,GAAec,EAAAA,EAAAA,IAAOc,EAAAA,EAAPd,CAAkBe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,kzBAoBf,SAAAc,GAAQ,OAAAA,EAALV,MAAkBW,WAAW,IAalC,SAAAC,GAAQ,OAAAA,EAALZ,MAAkBa,QAAQC,WAAW,IAEtC,SAAAC,GAAQ,OAAAA,EAALf,MAAkBgB,YAAYC,IAAI,IAmB7D,GAAeC,EAAAA,EAAAA,MAAK7E,E,6GCjNPwD,GAAmBsB,EAAAA,EAAAA,IAAGxB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAItBM,GAAgBiB,EAAAA,EAAAA,IAAGrB,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4CAIVuB,EAAAA,EAAAA,IAAGhB,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,uC,uLCmCnBwB,EAAO1B,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4BAGjByB,EAAS3B,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+GAOnB0B,EAAU5B,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,oIASpB2B,EAAc7B,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kDACf,SAAAG,GAAA,IAAGyB,EAAQzB,EAARyB,SAAQ,OAAQA,GAAsB,MAAM,IAGxDC,EAAe/B,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mDAChB,SAAAQ,GAAA,IAAGoB,EAAQpB,EAARoB,SAAQ,OAAQA,GAAsB,MAAM,IAG9D,IA1DuF,SAAHlF,GAUW,IAADoF,EAAApF,EATJqF,UAAAA,OAAS,IAAAD,EAAG,GAAEA,EAAAE,EAAAtF,EACdzB,KAAAA,OAAI,IAAA+G,EAAG,OAAMA,EAAAC,EAAAvF,EACbwF,MAAAA,OAAK,IAAAD,EAAG,QAAOA,EACfE,EAAazF,EAAbyF,cACAC,EAAY1F,EAAZ0F,aACAC,EAAS3F,EAAT2F,UACAC,EAAU5F,EAAV4F,WACAnD,EAAQzC,EAARyC,SACGoD,GAAKC,EAAAA,EAAAA,GAAA9F,EAAA+F,GAEhG,OACErD,EAAAA,EAAAA,MAACoC,GAAI/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK8C,GAAK,IAAApD,SAAA,EACbJ,EAAAA,EAAAA,KAAC0C,EAAM,CAAAtC,UACLJ,EAAAA,EAAAA,KAAA,OAAK2D,IAAKX,EAAWY,IAAI,YAAYC,MAAO,IAAKC,OAAQ,SAG3DzD,EAAAA,EAAAA,MAACsC,EAAO,CAAAvC,SAAA,EACNJ,EAAAA,EAAAA,KAAC4C,GAAWlC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACmC,SAAUQ,GAAkBC,GAAS,IAAAlD,SAC/ClE,MAGH8D,EAAAA,EAAAA,KAAC8C,GAAYpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACmC,SAAUO,GAAmBG,GAAU,IAAAnD,SAClD+C,KAGF/C,QAIT,C","sources":["redux/permissions/usePermissonsActionsCreator.ts","components/AppPages/PageHome.tsx","components/AppPages/pagesStyles.ts","components/atoms/ProfileCard/ProfileCard.tsx"],"sourcesContent":["import { TableActionCreator } from '../../components/TableList/tableTypes.types';\nimport { IPermission } from './permissions.types';\nimport { useCallback } from 'react';\nimport { PermissionService } from './usePermissionsService.hook';\nimport { useModalProvider } from '../../components/ModalProvider/ModalProvider';\nimport ModalForm from '../../components/ModalForm';\nimport { useNavigate } from 'react-router-dom';\nimport { CompanyQueryType } from '../global.types';\n\nexport type PermissionsActionsCreator = TableActionCreator<IPermission>;\n\nexport const isMyCompany = ({ owner, user }: IPermission) => {\n  return user._id === owner?._id;\n};\n\nconst usePermissionsActionsCreator = (\n  service: PermissionService,\n  companyType?: CompanyQueryType\n): PermissionsActionsCreator => {\n  const modal = useModalProvider();\n  const navigate = useNavigate();\n\n  return useCallback(\n    ctx => [\n      {\n        name: 'selectPermission',\n        title: 'Перейти',\n        icon: 'openInNew',\n        disabled: !ctx.selectedRow?._id,\n        iconSize: '100%',\n        type: 'onlyIcon',\n        onClick: () => {\n          const selPerm = ctx.selectedRow;\n          console.log('selPermission', selPerm);\n          console.log('companyType', { companyType });\n          ctx.selectedRow?._id && navigate(`/app/${ctx.selectedRow?._id}`);\n        },\n      },\n      {\n        name: 'editPermission',\n        title: 'Редагувати',\n        icon: 'edit',\n        disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n        iconSize: '100%',\n        type: 'onlyIcon',\n        onClick: () => {\n          const selPerm = ctx.selectedRow;\n          console.log('selPermission', selPerm);\n\n          modal.handleOpenModal({\n            ModalChildren: ModalForm,\n            modalChildrenProps: {\n              fillHeight: true,\n              title: 'Редагувати компанію',\n            },\n          });\n        },\n      },\n      {\n        name: 'deletePermission',\n        title: 'Видалити',\n        icon: 'delete',\n        iconSize: '100%',\n        disabled: ctx.selectedRow?._id && companyType ? !['own'].includes(companyType) : true,\n        type: 'onlyIcon',\n        onClick: () => {\n          const selPerm = ctx.selectedRow;\n          console.log('selPermission', selPerm);\n        },\n      },\n      {\n        name: 'leavePermission',\n        title: 'Покинути',\n        icon: 'logOut',\n        iconSize: '100%',\n        disabled: ctx.selectedRow && companyType ? !['invited'].includes(companyType) : true,\n        type: 'onlyIcon',\n        onClick: () => {\n          const selPerm = ctx.selectedRow;\n          console.log('selPermission', selPerm);\n        },\n      },\n      { separator: true },\n      {\n        name: 'rejectPermission',\n        title: 'Відхилити',\n        icon: 'clear',\n        iconSize: '100%',\n        type: 'onlyIconFilled',\n        disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n        onClick: () => {\n          const selPerm = ctx.selectedRow;\n          console.log('selPermission', selPerm);\n        },\n      },\n      {\n        name: 'acceptPermission',\n        title: 'Прийняти',\n        icon: 'done',\n        iconSize: '100%',\n        type: 'onlyIconFilled',\n        disabled: ctx.selectedRow?._id && companyType ? !['invites'].includes(companyType) : true,\n        onClick: () => {\n          const selPerm = ctx.selectedRow;\n          console.log('selPermission', selPerm);\n        },\n      },\n      {\n        name: 'createPermission',\n        title: 'Створити',\n        icon: 'plus',\n        iconSize: '100%',\n        type: 'onlyIconFilled',\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: ModalForm,\n            modalChildrenProps: {\n              fillHeight: true,\n              title: 'Створити нову компанію',\n            },\n          });\n        },\n      },\n    ],\n    [companyType, modal, navigate]\n  );\n};\n\nexport default usePermissionsActionsCreator;\n","import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport TableList from 'components/TableList/TableList';\nimport { useSearchParams } from 'react-router-dom';\nimport { memo, useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport { takeFullGridArea, takeFullPlace } from './pagesStyles';\nimport { useAuthSelector } from 'redux/selectors.store';\nimport ProfileCard from 'components/atoms/ProfileCard/ProfileCard';\nimport usePermissionsService from 'redux/permissions/usePermissionsService.hook';\nimport { IPermission } from '../../redux/permissions/permissions.types';\nimport { permissionsSearchParams, permissionsTableColumns } from '../../data';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport usePermissionsActionsCreator from '../../redux/permissions/usePermissonsActionsCreator';\nimport { CompanyQueryType } from '../../redux/global.types';\n\nexport type CompanyTypeItem = { title: string; param: CompanyQueryType };\nconst companyTypes: CompanyTypeItem[] = [\n  { title: 'Мої', param: 'own' },\n  { title: 'Працюю', param: 'invited' },\n  { title: 'Запрошення', param: 'invites' },\n  { title: 'Усі', param: 'all' },\n];\n\ntype Props = {\n  path: string;\n};\nconst PageHome: React.FC<any> = ({ path }: Props) => {\n  const { user } = useAuthSelector();\n  const [companyType, setCompanyType] = useState<{ title: string; param: CompanyQueryType }>();\n  const [searchParams, setSearchParams] = useSearchParams({\n    companyType: companyTypes[0].param,\n  });\n  const permissionService = usePermissionsService();\n  const actionsCreator = usePermissionsActionsCreator(permissionService, companyType?.param);\n\n  useEffect(() => {\n    setSearchParams({ companyType: companyTypes[0].param });\n    setCompanyType(companyTypes[0]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IPermission> => ({\n      tableData: permissionService.state.permissions,\n      tableTitles: permissionsTableColumns,\n      tableSearchParams: permissionsSearchParams,\n      isFilter: false,\n      isSearch: true,\n      checkBoxes: false,\n      actionsCreator,\n    }),\n    [actionsCreator, permissionService.state.permissions]\n  );\n  const onSearchParamClick = useCallback(\n    (item: CompanyTypeItem) => {\n      setSearchParams({ companyType: item.param });\n      setCompanyType(item);\n    },\n    [setSearchParams]\n  );\n  const isActiveClassName = useCallback(\n    (param: string) => (searchParams.get('companyType') === param ? 'active' : ''),\n    [searchParams]\n  );\n\n  const renderFilterButtons = useMemo(() => {\n    return companyTypes.map(item => (\n      <StButtonIcon\n        key={item.param}\n        variant=\"def\"\n        onClick={() => onSearchParamClick(item)}\n        className={isActiveClassName(item.param)}\n      >\n        {item.title}\n      </StButtonIcon>\n    ));\n  }, [isActiveClassName, onSearchParamClick]);\n\n  return (\n    <Page>\n      <Top>\n        <ProfileInfo>\n          <ProfileCard {...user} />\n        </ProfileInfo>\n\n        <FilterButtons>\n          <ButtonsList>{renderFilterButtons}</ButtonsList>\n        </FilterButtons>\n      </Top>\n\n      <Bottom>\n        <TableList {...tableConfig} />\n      </Bottom>\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr;\n\n  ${takeFullGridArea}\n`;\nconst Top = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  position: relative;\n\n  overflow: hidden;\n\n  //background-color: ${({ theme }) => theme.tableBackgroundColor};\n\n  ${takeFullPlace}\n`;\nconst Bottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  overflow: hidden;\n\n  ${takeFullPlace};\n\n  background-color: ${({ theme }) => theme.tableBackgroundColor};\n`;\n\nconst ProfileInfo = styled.div`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  padding: 16px 12px;\n  width: 100%;\n  max-width: 250px;\n`;\nconst FilterButtons = styled.div`\n  max-width: 100%;\n  overflow: auto;\n\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\nconst ButtonsList = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 150px);\n  grid-auto-rows: 32px;\n\n  max-width: 600px;\n`;\n\nconst StButtonIcon = styled(ButtonIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    //height: 1px;\n    //width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\nexport default memo(PageHome);\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport { IUser } from 'redux/auth/auth.types';\n\nexport interface ProfileCardProps extends Omit<IUser, '_id'> {\n  // avatarURL?: string;\n  // name?: string;\n  // email?: string;\n  nameFontSize?: string;\n  emailFontSize?: string;\n  avatarPrpps?: React.HTMLAttributes<HTMLDivElement>;\n  nameProps?: React.HTMLAttributes<HTMLDivElement>;\n  emailProps?: React.HTMLAttributes<HTMLDivElement>;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps & React.HTMLAttributes<HTMLDivElement>> = ({\n                                                                                          avatarURL = '',\n                                                                                          name = 'name',\n                                                                                          email = 'email',\n                                                                                          emailFontSize,\n                                                                                          nameFontSize,\n                                                                                          nameProps,\n                                                                                          emailProps,\n                                                                                          children,\n                                                                                          ...props\n                                                                                        }) => {\n  return (\n    <Card {...props}>\n      <Avatar>\n        <img src={avatarURL} alt='userImage' width={100} height={100} />\n      </Avatar>\n\n      <Wrapper>\n        <ProfileName fontSize={nameFontSize} {...nameProps}>\n          {name}\n        </ProfileName>\n\n        <ProfileEmail fontSize={emailFontSize} {...emailProps}>\n          {email}\n        </ProfileEmail>\n\n        {children}\n      </Wrapper>\n    </Card>\n  );\n};\nconst Card = styled.div`\n  display: flex;\n`;\nconst Avatar = styled.div`\n  min-width: 64px;\n  max-width: 64px;\n  height: 64px;\n  overflow: hidden;\n  border-radius: 50%;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 4px;\n  padding: 8px;\n\n  height: 100%;\n`;\nconst ProfileName = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '12px')};\n  font-weight: 600;\n`;\nconst ProfileEmail = styled.div<{ fontSize?: string }>`\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : '10px')};\n  line-height: 16px;\n`;\nexport default ProfileCard;\n"],"names":["service","companyType","modal","useModalProvider","navigate","useNavigate","useCallback","ctx","_ctx$selectedRow","_ctx$selectedRow4","_ctx$selectedRow5","_ctx$selectedRow6","_ctx$selectedRow7","name","title","icon","disabled","selectedRow","_id","iconSize","type","onClick","_ctx$selectedRow2","_ctx$selectedRow3","selPerm","console","log","concat","includes","handleOpenModal","ModalChildren","ModalForm","modalChildrenProps","fillHeight","separator","companyTypes","param","PageHome","_ref","path","user","useAuthSelector","_useState","useState","_useState2","_slicedToArray","setCompanyType","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","permissionService","usePermissionsService","actionsCreator","usePermissionsActionsCreator","useEffect","tableConfig","useMemo","tableData","state","permissions","tableTitles","permissionsTableColumns","tableSearchParams","permissionsSearchParams","isFilter","isSearch","checkBoxes","onSearchParamClick","item","isActiveClassName","get","renderFilterButtons","map","_jsx","StButtonIcon","variant","className","children","_jsxs","Page","Top","ProfileInfo","ProfileCard","_objectSpread","FilterButtons","ButtonsList","Bottom","TableList","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_templateObject2","_ref2","theme","tableBackgroundColor","takeFullPlace","_templateObject3","_ref3","_templateObject4","_templateObject5","_templateObject6","ButtonIcon","_templateObject7","_ref4","trBorderClr","_ref5","globals","timingFnMui","_ref6","accentColor","base","memo","css","Card","Avatar","Wrapper","ProfileName","fontSize","ProfileEmail","_ref$avatarURL","avatarURL","_ref$name","_ref$email","email","emailFontSize","nameFontSize","nameProps","emailProps","props","_objectWithoutProperties","_excluded","src","alt","width","height"],"sourceRoot":""}