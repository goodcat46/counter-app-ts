{"version":3,"file":"static/js/494.29aeeb71.chunk.js","mappings":"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","sources":["components/Forms/FormArea/FormAreaFooter.tsx","components/Forms/FormArea/FormArea.tsx","components/Forms/offers/components/OfferBaseInfoFormArea.tsx","components/Forms/offers/components/DimensionsInputs.tsx","components/Forms/offers/components/OfferDimensionsFormArea.tsx","components/Forms/offers/components/OfferFormCategoriesArea.tsx","components/Forms/offers/components/OfferFormImagesArea.tsx","components/Forms/offers/components/OfferFormPropertiesArea.tsx","components/Forms/offers/components/MeasuremenInputs.tsx","components/Forms/offers/components/OfferMeasurementFormArea.tsx","components/Modal/ModalHeader.tsx","components/Modal/index.tsx","components/Modals/CreateOfferModal.tsx"],"sourcesContent":["import ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\n\nexport interface FormAreaFooterProps {\n  hasOnSubmit?: boolean;\n  hasOnReset?: boolean;\n  extraFooter?: React.ReactNode;\n  canSubmit?: boolean;\n  isLoading?: boolean;\n  disabled?: boolean;\n}\n\nconst FormAreaFooter: React.FC<FormAreaFooterProps & React.HTMLAttributes<HTMLDivElement>> = ({\n  extraFooter,\n  isLoading = false,\n  disabled,\n  hasOnSubmit = false,\n  hasOnReset,\n  ...props\n}) => {\n  return (\n    <Footer {...props} className=\"modalFooter\">\n      {extraFooter && (\n        <ExtraFooter fillWidth fxDirection={'row'}>\n          {extraFooter}\n        </ExtraFooter>\n      )}\n\n      <FlexBox fillWidth gap={8} fxDirection={'row'} justifyContent={'flex-end'} padding={'8px 0'}>\n        {hasOnReset && (\n          <ButtonIcon type={'reset'} variant={'outlinedSmall'} isLoading={isLoading} disabled={disabled}>\n            {isLoading ? t('Loading...') : t('Clear')}\n          </ButtonIcon>\n        )}\n\n        <ButtonIcon type={'submit'} variant={'filledSmall'} isLoading={isLoading} disabled={disabled}>\n          {isLoading ? t('Loading...') : t('Save')}\n        </ButtonIcon>\n      </FlexBox>\n    </Footer>\n  );\n};\n\nconst Footer = styled.footer`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  flex-wrap: wrap;\n\n  //position: sticky;\n  //bottom: 0;\n  //left: 0;\n  //z-index: 10;\n\n  overflow: hidden;\n\n  width: 100%;\n\n  border-bottom-right-radius: 2px;\n  border-bottom-left-radius: 2px;\n\n  //box-shadow: 0px -3px 32.70000076293945px 0px rgba(0, 0, 0, 0.2);\n\n  border-top: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  color: ${({ theme }) => theme.fontColorHeader};\n  fill: ${({ theme }) => theme.fillColorHeader};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n`;\n\nconst ExtraFooter = styled(FlexBox)`\n  color: ${({ theme }) => theme.fontColorHeader};\n  fill: ${({ theme }) => theme.fillColorHeader};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\nexport default FormAreaFooter;\n","import FlexBox, { FlexForm } from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { AppSubmitHandler } from '../../../hooks/useAppForm.hook';\nimport FormAreaFooter from './FormAreaFooter';\nimport { useEffect, useState } from 'react';\nimport { isUndefined } from 'lodash';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\n\nexport interface FormAreaProps {\n  label?: string;\n  hideLabel?: boolean;\n\n  children?: React.ReactNode;\n  onSubmit?: AppSubmitHandler;\n  onReset?: () => void;\n  renderFooter?: React.ReactNode;\n  renderTitle?: React.ReactNode;\n  isLoading?: boolean;\n  disabled?: boolean;\n  isOpen?: boolean;\n  expandable?: boolean;\n}\n\nexport const FormArea = ({\n  children,\n  renderFooter,\n  renderTitle,\n  disabled,\n  label = 'Form area',\n  onSubmit,\n  isLoading,\n  onReset,\n  hideLabel,\n  expandable = true,\n  isOpen = true,\n}: FormAreaProps) => {\n  const [_isOpen, _setIsOpen] = useState(isOpen ?? true);\n\n  const onToggleIsOpenHandler = () => {\n    _setIsOpen(p => !p);\n  };\n  useEffect(() => {\n    if (!isUndefined(isOpen)) {\n      _setIsOpen(isOpen);\n    }\n  }, [isOpen]);\n\n  return (\n    <FlexForm fillWidth onSubmit={onSubmit} onReset={onReset} style={{ position: 'relative' }}>\n      {!hideLabel && (\n        <Header\n          padding={'8px 6px'}\n          overflow={'hidden'}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={'center'}\n        >\n          {renderTitle || (\n            <Text $size={14} $weight={600}>\n              {label}\n            </Text>\n          )}\n\n          <ButtonIcon\n            variant={'onlyIconNoEffects'}\n            icon={_isOpen ? 'SmallArrowUp' : 'SmallArrowDown'}\n            onClick={onToggleIsOpenHandler}\n          />\n        </Header>\n      )}\n\n      <ExpandableBox isActive={_isOpen}>\n        {children}\n\n        {renderFooter || (\n          <FormAreaFooter hasOnSubmit={!!onSubmit} hasOnReset={!!onReset} isLoading={isLoading} disabled={disabled} />\n        )}\n      </ExpandableBox>\n    </FlexForm>\n  );\n};\nconst Header = styled(FlexBox)`\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 6;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\nconst ExpandableBox = styled(FlexBox)`\n  overflow: hidden;\n  max-height: ${p => (p.isActive ? '100%' : '0')};\n  padding: 0 8px;\n  //transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n","import { FormArea } from '../../FormArea/FormArea';\nimport { OfferFormAreaProps } from '../types';\nimport {\n  IProductFormData,\n  IProductFullFormData,\n  OfferEntity,\n  OfferTypeEnum,\n} from '../../../../types/offers/offers.types';\nimport { useAppForm } from '../../../../hooks';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport { t } from '../../../../lang';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport FlexBox from '../../../atoms/FlexBox';\nimport * as React from 'react';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport TextareaPrimary from '../../../atoms/Inputs/TextareaPrimary';\nimport { toReqData } from '../../../../utils';\nimport useOffersService from '../../../../hooks/useProductsService.hook';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { OfferStatusFilterOptions } from '../../../../data';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\n\nexport interface OfferBaseInfoFormAreaProps extends OfferFormAreaProps<IProductFullFormData> {\n  type?: MaybeNull<OfferTypeEnum>;\n  onSuccess?: (data: OfferEntity) => void;\n  edit?: boolean;\n}\n\nexport const OfferBaseInfoFormArea = ({ defaultValues, edit, type, onSuccess, _id }: OfferBaseInfoFormAreaProps) => {\n  const { isLoading, onLoading } = useOfferLoadersProvider();\n\n  const service = useOffersService();\n\n  const brandsList = useDirectorySelector(ApiDirType.BRANDS).directory;\n\n  const {\n    formState: { errors },\n    register,\n    registerSelect,\n    formValues,\n    ...appForm\n  } = useAppForm<IProductFullFormData>({\n    defaultValues: { ...defaultValues, type },\n  });\n\n  function onValid(sData: IProductFormData) {\n    const productForSubmit = toReqData(sData, { ignorePaths: ['measurement'] });\n\n    !edit\n      ? service.create({\n          data: { data: productForSubmit },\n          onSuccess: onSuccess,\n          onLoading: onLoading('offer_create'),\n        })\n      : service.updateById({\n          data: { data: productForSubmit, _id },\n          onSuccess: onSuccess,\n          onLoading: onLoading('offer_update'),\n        });\n  }\n\n  return (\n    <FormArea\n      label={t('Base info')}\n      isLoading={!edit ? isLoading?.offer_create : isLoading?.offer_update}\n      onSubmit={appForm.handleSubmit(onValid)}\n      onReset={appForm.reset}\n    >\n      <InputLabel label={t('label')} error={errors.label} required>\n        <InputText placeholder={t('label')} {...register('label')} required autoFocus />\n      </InputLabel>\n\n      <FlexBox fxDirection={'row'} gap={6} fillWidth>\n        <InputLabel label={t('sku')} error={errors.sku}>\n          <InputText placeholder={t('sku')} {...register('sku')} />\n        </InputLabel>\n\n        <InputLabel label={'Штрих-код'} error={errors.barCode}>\n          <InputText placeholder={'Штрих-код'} {...register('barCode')} />\n        </InputLabel>\n      </FlexBox>\n\n      <CustomSelect\n        {...registerSelect('brand', {\n          options: brandsList,\n          label: t('brand'),\n          placeholder: t('selectBrand'),\n        })}\n      />\n\n      <CustomSelect\n        {...registerSelect('approved', {\n          options: OfferStatusFilterOptions,\n          label: t('status'),\n          placeholder: t('status'),\n        })}\n      />\n\n      <InputLabel label={t('description')} error={errors.description}>\n        <TextareaPrimary placeholder={t('description')} {...register('description')} />\n      </InputLabel>\n    </FormArea>\n  );\n};\n","import { t } from 'lang';\nimport * as React from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport styled from 'styled-components';\nimport { UseFormReturn } from 'react-hook-form/dist/types';\nimport { DimensionsKeyType, IDimensions } from 'types/utils.types';\n\nexport interface DimensionsFormData {\n  dimensions?: IDimensions;\n}\n\nexport const dimensionsInputsProps: {\n  label?: string;\n  placeholder?: string;\n  name: DimensionsKeyType;\n}[] = [\n  { name: 'height', label: t('Height'), placeholder: t('Sm') },\n  { name: 'width', label: t('Width'), placeholder: t('Sm') },\n  { name: 'length', label: t('Length'), placeholder: t('Sm') },\n  { name: 'weight', label: t('Weight'), placeholder: t('Kg') },\n];\n\nconst DimensionsInputs = <TContext = any,>({\n  form,\n  disabled,\n}: {\n  disabled?: boolean;\n  form: UseFormReturn<DimensionsFormData, TContext>;\n}) => {\n  const errors = form?.formState?.errors?.dimensions;\n\n  return (\n    <Box fillWidth>\n      {dimensionsInputsProps.map(input => {\n        return (\n          <InputLabel key={input.name} label={input.label} error={errors && errors[input.name]}>\n            <InputText\n              placeholder={input.placeholder}\n              min={1}\n              type={'number'}\n              {...form.register(`dimensions.${input.name}`, {\n                valueAsNumber: true,\n                min: 1,\n              })}\n              disabled={disabled}\n            />\n          </InputLabel>\n        );\n      })}\n    </Box>\n  );\n};\n\nconst Box = styled(FlexBox)`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  column-gap: 8px;\n\n  @media screen and (min-width: 480px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nexport default DimensionsInputs;\n","import DimensionsInputs, { DimensionsFormData } from './DimensionsInputs';\nimport { useAppForm } from '../../../../hooks';\nimport { FormArea } from '../../FormArea/FormArea';\nimport useOffersService from '../../../../hooks/useProductsService.hook';\nimport { ToastService } from '../../../../services';\nimport { IDimensions } from '../../../../types/utils.types';\nimport { useState } from 'react';\nimport { OfferFormAreaProps } from '../types';\nimport { t } from '../../../../lang';\n\nexport interface OfferDimensionsFormSectionProps extends OfferFormAreaProps<IDimensions> {}\n\nexport const OfferDimensionsFormArea = ({\n  defaultValues,\n  _id,\n  disabled,\n  ...props\n}: OfferDimensionsFormSectionProps) => {\n  const service = useOffersService();\n  const [isLoading, setIsLoading] = useState(false);\n  const form = useAppForm<DimensionsFormData>({\n    defaultValues: { dimensions: defaultValues ?? {} },\n  });\n\n  const onValid = (sData: DimensionsFormData) => {\n    service.updateById({\n      data: { data: sData, _id },\n      onSuccess(d) {\n        ToastService.success(`Product updated`);\n      },\n      onError: e => {\n        console.error('Product update action', e);\n      },\n      onLoading: setIsLoading,\n    });\n  };\n\n  const canSubmit = form.formState.touchedFields?.dimensions\n    ? Object.values(form.formState.touchedFields?.dimensions)?.some(fd => fd)\n    : false;\n\n  return (\n    <FormArea\n      onSubmit={form.handleSubmit(onValid)}\n      label={t('Package size')}\n      isLoading={isLoading}\n      {...props}\n      disabled={!canSubmit || disabled}\n    >\n      <DimensionsInputs form={form} disabled={disabled} />\n    </FormArea>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport { FormArea } from '../../FormArea/FormArea';\nimport styled from 'styled-components';\nimport FlexBox, { FlexLi, FlexUl } from '../../../atoms/FlexBox';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { OfferFormAreaProps } from '../types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { t } from '../../../../lang';\nimport { IProductFullFormData, OfferEntity } from '../../../../types/offers/offers.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport { IDirItemBase } from '../../../../types/dir.types';\nimport CheckBox from '../../../TableList/TebleCells/CellComponents/CheckBox';\n\nexport interface OfferFormCategoriesAreaProps extends OfferFormAreaProps<IProductFullFormData['categories']> {\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n  onSuccess?: (data: OfferEntity) => void;\n}\n\nexport const OfferFormCategoriesArea = ({\n  onSubmit,\n  onSuccess,\n  disabled,\n  offer,\n  defaultValues,\n}: OfferFormCategoriesAreaProps) => {\n  const loaders = useOfferLoadersProvider();\n  const offerCategories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const [parentIdsMap, setParentIdsMap] = useState<Record<string, { selected: boolean; parentIds: string[] }>>({});\n  const service = useAppServiceProvider()[ServiceName.products];\n\n  const selectedIds = useMemo(\n    () =>\n      Object.keys(parentIdsMap).filter(idKey => {\n        return parentIdsMap?.[idKey]?.selected;\n      }),\n    [parentIdsMap]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentIds?: string[]) => {\n      if (parentIds?.length) {\n        const newData = {\n          ...parentIdsMap,\n          [id]: { selected: true, parentIds: parentIdsMap?.[id]?.parentIds || parentIds },\n        };\n        parentIds?.forEach(parentId => {\n          if (newData?.[parentId]) {\n            newData[parentId] = {\n              ...newData[parentId],\n              selected: true,\n            };\n          } else {\n            newData[parentId] = {\n              parentIds: [],\n              selected: true,\n            };\n          }\n        });\n        setParentIdsMap(newData);\n      } else {\n        setParentIdsMap(prev => {\n          return { ...prev, [id]: { selected: true, parentIds: parentIds ?? [] } };\n        });\n      }\n    },\n    [parentIdsMap]\n  );\n  const handleRemove = useCallback(\n    (id: string) => {\n      const getChildIds = () => {\n        return selectedIds.filter(key => parentIdsMap?.[key]?.parentIds?.includes(id));\n      };\n      const childIds = getChildIds();\n      if (childIds?.length) {\n        const newData = { ...parentIdsMap, [id]: { selected: false, parentIds: parentIdsMap?.[id]?.parentIds } };\n\n        childIds.forEach(idKey => {\n          newData[idKey] = {\n            ...newData[idKey],\n            selected: false,\n          };\n        });\n\n        setParentIdsMap(newData);\n      } else {\n        setParentIdsMap(p => ({ ...p, [id]: { selected: false, parentIds: p?.[id]?.parentIds } }));\n      }\n    },\n    [parentIdsMap, selectedIds]\n  );\n  const handleReset = () => {\n    setParentIdsMap({});\n  };\n  const handleSubmit = (ev: React.FormEvent) => {\n    ev.preventDefault();\n\n    if (onSubmit) {\n      onSubmit(selectedIds);\n    } else if (offer) {\n      service.updateById({\n        data: { _id: offer?._id, updateCurrent: true, data: { categories: selectedIds } },\n        onLoading: loaders.onLoading('properties'),\n        onSuccess: onSuccess,\n      });\n    }\n  };\n\n  const canSubmit = useMemo(() => {\n    if (disabled) return false;\n    if (offer?.categories?.length) {\n      return (\n        offer?.categories\n          ?.map(p => p._id)\n          .sort((a, b) => a.localeCompare(b))\n          .join(',') !== selectedIds.sort((a, b) => a.localeCompare(b)).join(',')\n      );\n    }\n    return !!selectedIds.length;\n  }, [offer?.categories, disabled, selectedIds]);\n\n  useEffect(() => {\n    if (defaultValues?.length) {\n      setParentIdsMap(prev =>\n        Object.assign(\n          prev,\n          ...defaultValues.map(item => {\n            return {\n              [item]: {\n                parentIds: [],\n                selected: true,\n              },\n            };\n          })\n        )\n      );\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const renderCategories = useMemo(() => {\n    return offerCategories.map(parent => {\n      const getIsActive = (id: string, checkChildren: boolean) =>\n        (checkChildren &&\n          selectedIds.some(\n            idKey => parentIdsMap?.[idKey]?.parentIds?.includes(id) && parentIdsMap?.[idKey]?.selected\n          )) ||\n        parentIdsMap?.[id]?.selected;\n\n      return (\n        <CategoryBox key={`property-${parent._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n          <FlexBox fxDirection={'row'} justifyContent={'space-between'} alignItems={'center'} gap={12}>\n            <CheckBox\n              checked={getIsActive(parent._id, !!parent?.childrenList?.length)}\n              onChange={ev => {\n                if (ev.checked) {\n                  handleSelect(parent._id);\n                } else {\n                  handleRemove(parent._id);\n                }\n              }}\n            />\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {parent.label}\n            </Text>\n          </FlexBox>\n\n          <CategoriesList fillWidth padding={'8px 0'}>\n            {parent?.childrenList?.map(item => {\n              return (\n                <RenderItem\n                  key={item._id}\n                  item={item}\n                  parentIds={[parent._id]}\n                  getIsSelected={getIsActive}\n                  onChange={(checked, id, parentIds) => {\n                    if (checked) {\n                      handleSelect(id, parentIds ?? []);\n                    } else {\n                      handleRemove(id);\n                    }\n                  }}\n                />\n              );\n            })}\n          </CategoriesList>\n        </CategoryBox>\n      );\n    });\n  }, [handleRemove, handleSelect, offerCategories, parentIdsMap, selectedIds]);\n\n  return (\n    <FormArea\n      label={t('Categories')}\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n      isLoading={loaders.isLoading?.properties}\n      disabled={!canSubmit}\n    >\n      <ListBox flex={1} overflow={'auto'}>\n        {renderCategories}\n      </ListBox>\n    </FormArea>\n  );\n};\nconst ListBox = styled(FlexUl)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\nconst CategoryBox = styled(FlexLi)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst CategoriesList = styled(FlexUl)<{ numColumns?: number }>``;\n\nconst CategoryItem = styled(FlexLi)``;\n\nconst RenderItem = ({\n  item,\n  onChange,\n  getIsSelected,\n  parentIds,\n}: {\n  parentIds?: string[];\n  item: IDirItemBase<ApiDirType.CATEGORIES_PROD>;\n  onChange?: (checked: boolean, id: string, parentIds?: string[]) => void;\n  getIsSelected?: (id: string, checkChildren: boolean) => boolean;\n}) => {\n  const isActive = getIsSelected && getIsSelected(item._id, !!item?.childrenList?.length);\n  return (\n    <CategoryItem key={`cate-value-${item._id}`} padding={'0 8px 0px 12px'} gap={12}>\n      <FlexBox fxDirection={'row'} alignItems={'center'} gap={12}>\n        <CheckBox\n          checked={isActive}\n          onChange={ev => {\n            onChange && onChange(ev.checked, item._id, parentIds);\n          }}\n        />\n\n        <Text $size={14} $weight={500}>\n          {item.label}\n        </Text>\n      </FlexBox>\n\n      <CategoriesList>\n        {!!item.childrenList?.length &&\n          item.childrenList.map(child => {\n            return (\n              <RenderItem\n                key={child._id}\n                item={child}\n                onChange={onChange}\n                getIsSelected={getIsSelected}\n                parentIds={[...(parentIds ?? []), item._id]}\n              />\n            );\n          })}\n      </CategoriesList>\n    </CategoryItem>\n  );\n};\n","import { OfferFormAreaProps } from '../types';\nimport { AppSubmitHandler } from '../../../../hooks/useAppForm.hook';\nimport { OfferEntity, OfferImageSlotEntity } from '../../../../types/offers/offers.types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useMemo, useState } from 'react';\nimport { FormArea } from '../../FormArea/FormArea';\nimport FormOfferImagesComponent from './FormOfferImagesComponent';\nimport { getIdRef } from '../../../../utils';\nimport { t } from '../../../../lang';\n\nexport interface OfferFormImagesAreaProps extends OfferFormAreaProps<OfferImageSlotEntity[]> {\n  onSubmit?: AppSubmitHandler<Partial<OfferImageSlotEntity>[]>;\n  onSuccess?: (data: OfferEntity) => void;\n  update?: string;\n}\n\nexport const OfferFormImagesArea = ({\n  offer,\n  onSubmit,\n  onSuccess,\n  disabled,\n  defaultValues,\n}: OfferFormImagesAreaProps) => {\n  const loaders = useOfferLoadersProvider();\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(defaultValues || loaders?.state?.images || []);\n\n  const service = useAppServiceProvider()[ServiceName.products];\n  const handleSubmit = (ev: React.FormEvent) => {\n    ev.preventDefault();\n\n    if (onSubmit) {\n      onSubmit(state);\n    } else if (offer) {\n      service.updateById({\n        data: { ...getIdRef(offer), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: onSuccess,\n        onLoading: loaders.onLoading('images'),\n      });\n    } else {\n      console.warn('Offer not passed');\n    }\n  };\n  const canSubmit = useMemo(() => {\n    return true;\n  }, []);\n\n  return (\n    <FormArea\n      label={t('Images')}\n      onSubmit={handleSubmit}\n      disabled={disabled || !canSubmit}\n      isLoading={loaders.isLoading?.images}\n    >\n      <FormOfferImagesComponent\n        hideLabel\n        initialData={state}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          // borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          // borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n      />\n    </FormArea>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport { FormArea } from '../../FormArea/FormArea';\nimport styled from 'styled-components';\nimport FlexBox from '../../../atoms/FlexBox';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport { usePropertiesSelector } from '../../../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { AppSubmitHandler } from '../../../../hooks/useAppForm.hook';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport { OfferFormAreaProps } from '../types';\nimport { useOfferLoadersProvider } from '../../../Modals/CreateOfferModal';\nimport { ArrayOfUUID } from '../../../../redux/global.types';\nimport { t } from '../../../../lang';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\n\nexport interface OfferFormPropertiesAreaProps extends OfferFormAreaProps<ArrayOfUUID> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n  onSuccess?: (data: OfferEntity) => void;\n  update?: string;\n}\n\nexport const OfferFormPropertiesArea = ({ onSubmit, onSuccess, disabled, offer }: OfferFormPropertiesAreaProps) => {\n  const loaders = useOfferLoadersProvider();\n  const templates = usePropertiesSelector();\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const [templateId, setTemplateId] = useState<string>(templates[0]?._id);\n\n  const handleSubmit = (ev: React.FormEvent) => {\n    ev.preventDefault();\n\n    if (onSubmit) {\n      onSubmit(selectedIds);\n    } else if (offer) {\n      service.updateById({\n        data: { _id: offer?._id, updateCurrent: true, data: { properties: selectedIds } },\n        onLoading: loaders.onLoading('properties'),\n        onSuccess: onSuccess,\n      });\n    }\n  };\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === templateId);\n  }, [templateId, templates]);\n\n  const canSubmit = useMemo(() => {\n    if (disabled) return false;\n    if (offer?.properties?.length) {\n      return (\n        offer?.properties\n          ?.map(p => p._id)\n          .sort((a, b) => a.localeCompare(b))\n          .join(',') !== selectedIds.sort((a, b) => a.localeCompare(b)).join(',')\n      );\n    }\n    return !!selectedIds.length;\n  }, [offer?.properties, disabled, selectedIds]);\n\n  const handleSelect = useCallback((id: string, _parentId?: string) => {\n    setSelectedIds(prev => {\n      const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n      return newData;\n    });\n  }, []);\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (offer?.properties) {\n      setSelectedIds(offer?.properties.map(p => p._id));\n    }\n  }, [offer?.properties]);\n\n  return (\n    <FormArea\n      label={t('Properties')}\n      onSubmit={handleSubmit}\n      isLoading={loaders.isLoading?.properties}\n      disabled={!canSubmit}\n    >\n      <CustomSelect\n        label={t('Available templates')}\n        options={templates}\n        selectedValue={templateId}\n        onSelect={option => {\n          setTemplateId(option?._id);\n        }}\n      />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n    </FormArea>\n  );\n};\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>``;\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n`;\n","import { Path } from 'react-hook-form';\nimport { MeasurementUnit } from 'types/offers/offers.types';\nimport { FilterOption } from '../../../atoms/TabSelector';\nimport { enumToFilterOptions } from 'utils/fabrics';\nimport CustomSelect from '../../../atoms/Inputs/CustomSelect/CustomSelect';\nimport InputLabel from '../../../atoms/Inputs/InputLabel';\nimport InputText from '../../../atoms/Inputs/InputText';\nimport FlexBox from '../../../atoms/FlexBox';\nimport * as React from 'react';\nimport { UseAppFormReturn } from 'hooks/useAppForm.hook';\nimport { t } from 'lang';\nimport { HasMeasurement } from 'types/utils.types';\n\nexport interface MeasurementInputsFormData extends HasMeasurement {}\n\nconst productsMeasurementUnitOptions = enumToFilterOptions(MeasurementUnit);\n\nconst measurementInputs: {\n  label?: string;\n  placeholder?: string;\n  name: Path<MeasurementInputsFormData>;\n  type?: HTMLInputElement['type'];\n  options?: FilterOption[];\n}[] = [\n  { name: 'measurement.unit', label: t('unit'), placeholder: t('unit'), options: productsMeasurementUnitOptions },\n  { name: 'measurement.min', label: t('min'), placeholder: t('min'), type: 'number' },\n  { name: 'measurement.max', label: t('max'), placeholder: t('max'), type: 'number' },\n  // { name: 'measurement.step', label: t('step'), placeholder: t('step'), type: 'number' },\n];\n\nconst MeasurementInputs = ({\n  appForm,\n  disabled,\n}: {\n  disabled?: boolean;\n  appForm: UseAppFormReturn<MeasurementInputsFormData>;\n}) => {\n  return (\n    <FlexBox fillWidth style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr', columnGap: 8 }}>\n      {measurementInputs.map(input => {\n        return input.options ? (\n          <CustomSelect\n            key={input.name}\n            {...appForm.registerSelect(input?.name, {\n              options: input?.options,\n              label: input?.label,\n              placeholder: input?.label,\n              dropDownIsAbsolute: true,\n              onlyValue: true,\n            })}\n            disabled={disabled}\n          />\n        ) : (\n          <InputLabel key={input.name} label={input.label} error={appForm?.formState?.errors[input.name as never]}>\n            <InputText\n              placeholder={input.placeholder}\n              min={input?.type === 'number' ? 1 : undefined}\n              type={input?.type}\n              {...appForm.register(input.name, {\n                valueAsNumber: input?.type === 'number',\n                min: input?.type === 'number' ? 1 : undefined,\n              })}\n              disabled={disabled}\n            />\n          </InputLabel>\n        );\n      })}\n    </FlexBox>\n  );\n};\n\nexport default MeasurementInputs;\n","import MeasurementInputs, { MeasurementInputsFormData } from './MeasuremenInputs';\nimport { useAppForm } from '../../../../hooks';\nimport { FormArea } from '../../FormArea/FormArea';\nimport useOffersService from '../../../../hooks/useProductsService.hook';\nimport { ToastService } from '../../../../services';\nimport { IMeasurement } from '../../../../types/utils.types';\nimport { useState } from 'react';\nimport { OfferFormAreaProps } from '../types';\nimport { t } from '../../../../lang';\n\nexport interface OfferMeasurementFormProps extends OfferFormAreaProps<IMeasurement> {}\n\nexport const OfferMeasurementFormArea = ({ defaultValues, _id, disabled, ...props }: OfferMeasurementFormProps) => {\n  const service = useOffersService();\n  const [isLoading, setIsLoading] = useState(false);\n  const form = useAppForm<MeasurementInputsFormData>({ defaultValues: { measurement: defaultValues } });\n\n  const onValid = (sData: MeasurementInputsFormData) => {\n    service.updateById({\n      data: { data: sData, _id },\n      onSuccess(d) {\n        ToastService.success(`Product updated`);\n      },\n      onError: e => {\n        console.error('Product update action', e);\n      },\n      onLoading: setIsLoading,\n    });\n  };\n  const canSubmit = form.formState.touchedFields?.measurement\n    ? Object.values(form.formState.touchedFields?.measurement)?.some(fd => fd)\n    : false;\n  return (\n    <FormArea\n      onSubmit={form.handleSubmit(onValid)}\n      label={t('Measurement info')}\n      isLoading={isLoading}\n      disabled={!canSubmit || disabled}\n      {...props}\n    >\n      <MeasurementInputs appForm={form} disabled={disabled} />\n    </FormArea>\n  );\n};\n","import FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { t } from '../../lang';\nimport { Text } from '../atoms/Text';\nimport styled from 'styled-components';\n\nexport interface ModalHeaderProps {\n  canSubmit?: boolean;\n  onBackPress?: () => void;\n  onClose?: () => void;\n  title?: string;\n  showSubmitButton?: boolean;\n  renderTitle?: React.ReactNode;\n  children?: React.ReactNode;\n}\nexport const ModalHeader = ({\n  onClose,\n  onBackPress,\n  title,\n  showSubmitButton,\n  canSubmit,\n  renderTitle,\n  children,\n  ...props\n}: ModalHeaderProps) => {\n  return (\n    <Header {...props} padding={'4px 0'}>\n      <FlexBox fillWidth fxDirection={'row'} justifyContent={'space-between'} alignItems={'stretch'} height={'32px'}>\n        {onBackPress && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            icon={'SmallArrowLeft'}\n            iconSize={'22px'}\n            padding={'0'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            onClick={onBackPress}\n          >\n            {t('Back')}\n          </ButtonIcon>\n        )}\n\n        {renderTitle || (\n          <FlexBox justifyContent={'center'} overflow={'hidden'}>\n            <Text\n              $weight={600}\n              $size={14}\n              style={{ textTransform: 'uppercase', textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' }}\n            >\n              {title}\n            </Text>\n          </FlexBox>\n        )}\n\n        {showSubmitButton && (\n          <ButtonIcon\n            variant={'textExtraSmall'}\n            gap={'6px'}\n            type={showSubmitButton ? 'submit' : 'button'}\n            padding={'0 6px'}\n            endIcon={'done'}\n            endIconSize={'22px'}\n            style={{ minWidth: 'max-content', minHeight: '100%' }}\n            disabled={!canSubmit}\n          >\n            {'Ok'}\n          </ButtonIcon>\n        )}\n\n        {onClose && (\n          <ButtonIcon\n            variant={'onlyIconNoEffects'}\n            icon={'close'}\n            iconSize={'95%'}\n            size={'24px'}\n            padding={'0'}\n            onClick={onClose}\n          ></ButtonIcon>\n        )}\n      </FlexBox>\n\n      {children && <ExtraHeader>{children}</ExtraHeader>}\n    </Header>\n  );\n};\nconst Header = styled(FlexBox)`\n  min-height: 32px;\n`;\nconst ExtraHeader = styled.div`\n  width: 100%;\n  height: min-content;\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\nimport React, { memo } from 'react';\nimport { ModalHeader } from './ModalHeader';\n\nexport interface ModalBaseProps extends Omit<React.FormHTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onReset'> {\n  footer?: boolean;\n  onClose?: () => void;\n  onBackPress?: () => void;\n  isLoading?: boolean;\n  extraFooter?: React.ReactNode;\n  extraHeader?: React.ReactNode;\n  fillWidth?: boolean;\n  fillHeight?: boolean;\n  fitContentV?: boolean;\n  fitContentH?: boolean;\n  height?: string;\n  width?: string;\n}\n\nconst ModalBase: React.FC<ModalBaseProps> = ({\n  title = 'default modal title',\n  footer = true,\n  children,\n  extraFooter,\n  extraHeader,\n  isLoading = false,\n  onClose,\n  onBackPress,\n  ...props\n}) => {\n  return (\n    <ModalContainer className=\"modal_base\" {...props}>\n      <ModalHeader title={title} onClose={onClose} onBackPress={onBackPress}>\n        {extraHeader}\n      </ModalHeader>\n\n      <ModalMain className=\"main\">{children}</ModalMain>\n    </ModalContainer>\n  );\n};\n\nconst ModalContainer = styled.div<\n  Pick<ModalBaseProps, 'fillHeight' | 'fillWidth' | 'fitContentH' | 'fitContentV' | 'width' | 'height'>\n>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr max-content;\n\n  position: relative;\n  padding: 0 8px;\n\n  min-height: 200px;\n  max-height: 90vh;\n\n  color: ${p => p.theme.fontColorSidebar};\n  width: ${({ width = '480px', fillWidth, fitContentH }) =>\n    (fillWidth && '100vw') || (fitContentH && 'max-content') || width};\n  height: ${({ height = '', fillHeight, fitContentV }) =>\n    (fillHeight && '90vh') || (fitContentV && 'max-content') || height};\n\n  min-width: 250px;\n  max-width: 100%;\n\n  //overflow: hidden;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  border-radius: 2px;\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: ${p => (p.fillWidth ? '98vw' : '450px')};\n  }\n`;\n\nconst ModalMain = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  overflow: auto;\n  position: relative;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\n\nexport default memo(ModalBase);\n","import { ModalFormProps } from '../ModalForm';\nimport { OfferDimensionsFormArea } from '../Forms/offers/components/OfferDimensionsFormArea';\nimport ModalBase from '../Modal';\nimport { t } from '../../lang';\nimport { toOfferFormData } from '../../utils';\nimport { useEffect } from 'react';\nimport { OfferTypeEnum } from '../../types/offers/offers.types';\nimport { OfferMeasurementFormArea } from 'components/Forms/offers/components/OfferMeasurementFormArea';\nimport { OfferBaseInfoFormArea } from '../Forms/offers/components/OfferBaseInfoFormArea';\nimport FlexBox from '../atoms/FlexBox';\nimport TabSelector from '../atoms/TabSelector';\nimport { productsFilterOptions } from '../../data/modalFilterOptions.data';\nimport { OfferFormPropertiesArea } from '../Forms/offers/components/OfferFormPropertiesArea';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { LoadersProvider, useLoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { OfferFormImagesArea } from '../Forms/offers/components/OfferFormImagesArea';\nimport { useAppRouter, useCurrentOffer } from '../../hooks';\nimport { OfferFormCategoriesArea } from '../Forms/offers/components/OfferFormCategoriesArea';\nimport { OfferLoadersData, OfferLoadersKey } from '../Forms/offers/types';\n\nexport interface CreateOfferModalProps extends ModalFormProps {\n  _id: string;\n}\n\nexport const useOfferLoadersProvider = () => useLoadersProvider<OfferLoadersKey, OfferLoadersData>();\n\nconst CreateOfferModal: React.FC<CreateOfferModalProps> = ({ onClose, _id }) => {\n  const loaders = useLoaders<OfferLoadersKey, OfferLoadersData>();\n  const {\n    state: { formData },\n    setData,\n  } = loaders;\n  const router = useAppRouter();\n  const currenOffer = useCurrentOffer({ id: router.query?.offerId });\n\n  useEffect(() => {\n    router.push({ query: {} });\n\n    return () => {\n      router.push({ query: {} });\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ModalBase\n      title={t('Create offer')}\n      onClose={onClose}\n      extraHeader={\n        <TabSelector\n          defaultValue={formData?.type ?? OfferTypeEnum.GOODS}\n          filterOptions={productsFilterOptions}\n          onOptSelect={o => setData('formData', prev => ({ ...prev, type: o.value }))}\n        />\n      }\n    >\n      <LoadersProvider value={loaders}>\n        <FlexBox padding={'0 8px 16px'}>\n          <OfferBaseInfoFormArea\n            defaultValues={formData}\n            onSuccess={data => {\n              setData('formData', toOfferFormData(data));\n\n              router.push({ query: { offerId: data?._id } });\n            }}\n            type={formData?.type}\n          />\n\n          {currenOffer && (\n            <>\n              <OfferFormCategoriesArea offer={currenOffer} defaultValues={formData?.categories} disabled={!formData} />\n\n              <OfferFormPropertiesArea offer={currenOffer} defaultValues={formData?.properties} disabled={!formData} />\n\n              <OfferDimensionsFormArea offer={currenOffer} defaultValues={formData?.dimensions} disabled={!formData} />\n\n              <OfferMeasurementFormArea\n                offer={currenOffer}\n                defaultValues={formData?.measurement}\n                disabled={!formData}\n              />\n\n              <OfferFormImagesArea offer={currenOffer} defaultValues={formData?.images} disabled={!formData} />\n            </>\n          )}\n        </FlexBox>\n      </LoadersProvider>\n    </ModalBase>\n  );\n};\n\nexport default CreateOfferModal;\n"],"names":["Footer","styled","_templateObject","_taggedTemplateLiteral","_ref2","theme","modalBorderColor","_ref3","_ref4","_ref5","fontColorHeader","_ref6","fillColorHeader","_ref7","modalBackgroundColor","ExtraFooter","FlexBox","_templateObject2","_ref8","_ref9","_ref10","_ref11","_ref","extraFooter","_ref$isLoading","isLoading","disabled","hasOnReset","hasOnSubmit","props","_objectWithoutProperties","_excluded","_jsxs","_objectSpread","className","children","_jsx","fillWidth","fxDirection","gap","justifyContent","padding","ButtonIcon","type","variant","t","FormArea","renderFooter","renderTitle","_ref$label","label","onSubmit","onReset","hideLabel","_ref$isOpen","expandable","isOpen","_useState","useState","_useState2","_slicedToArray","_isOpen","_setIsOpen","useEffect","isUndefined","FlexForm","style","position","Header","overflow","alignItems","Text","$size","$weight","icon","onClick","p","ExpandableBox","isActive","FormAreaFooter","globals","timingFunctionMain","OfferBaseInfoFormArea","defaultValues","edit","onSuccess","_id","_useOfferLoadersProvi","useOfferLoadersProvider","onLoading","service","useOffersService","brandsList","useDirectorySelector","ApiDirType","directory","_useAppForm","useAppForm","errors","formState","register","registerSelect","appForm","formValues","offer_update","offer_create","handleSubmit","sData","productForSubmit","toReqData","ignorePaths","updateById","data","create","reset","InputLabel","error","required","InputText","placeholder","autoFocus","sku","barCode","CustomSelect","options","OfferStatusFilterOptions","description","TextareaPrimary","dimensionsInputsProps","name","Box","_form$formState","_form$formState$error","form","dimensions","map","input","min","concat","valueAsNumber","OfferDimensionsFormArea","_form$formState$touch","_Object$values","_form$formState$touch2","setIsLoading","canSubmit","touchedFields","Object","values","some","fd","d","ToastService","onError","e","console","DimensionsInputs","OfferFormCategoriesArea","_loaders$isLoading","offer","loaders","offerCategories","parentIdsMap","setParentIdsMap","useAppServiceProvider","ServiceName","selectedIds","useMemo","keys","filter","idKey","_parentIdsMap$idKey","selected","handleSelect","useCallback","id","parentIds","length","_parentIdsMap$id","newData","_defineProperty","forEach","parentId","prev","handleRemove","childIds","key","_parentIdsMap$key","_parentIdsMap$key$par","includes","_parentIdsMap$id2","_p$id","_offer$categories","_offer$categories2","categories","sort","a","b","localeCompare","join","assign","apply","_toConsumableArray","item","renderCategories","parent","_parent$childrenList","_parent$childrenList2","getIsActive","checkChildren","_parentIdsMap$id3","_parentIdsMap$idKey2","_parentIdsMap$idKey2$","_parentIdsMap$idKey3","CategoryBox","CheckBox","checked","childrenList","onChange","ev","flex","paddingLeft","CategoriesList","RenderItem","getIsSelected","preventDefault","updateCurrent","properties","ListBox","FlexUl","sideBarBorderColor","FlexLi","_templateObject3","CategoryItem","_templateObject4","_item$childrenList","_item$childrenList2","child","OfferFormImagesArea","_loaders$state","state","images","setState","getIdRef","refreshCurrent","warn","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","OfferFormPropertiesArea","_templates$","templates","usePropertiesSelector","setSelectedIds","_useState3","_useState4","templateId","setTemplateId","templateData","find","_offer$properties","_offer$properties2","_parentId","el","renderTemplate","_templateData$childre","isSelectable","prop","_prop$childrenList","PropertyBox","PropertyValuesList","flexWrap","value","ValueTag","fontWeight","selectedValue","onSelect","option","TemplateBox","productsMeasurementUnitOptions","enumToFilterOptions","MeasurementUnit","measurementInputs","display","gridTemplateColumns","columnGap","_appForm$formState","dropDownIsAbsolute","onlyValue","undefined","OfferMeasurementFormArea","measurement","MeasurementInputs","ModalHeader","onClose","onBackPress","title","showSubmitButton","height","iconSize","minWidth","minHeight","textTransform","textOverflow","whiteSpace","endIcon","endIconSize","size","ExtraHeader","ModalBase","_ref$title","footer","extraHeader","ModalContainer","ModalMain","fontColorSidebar","_ref2$width","width","fitContentH","_ref3$height","fillHeight","fitContentV","shadowMain","fillColor","fontColor","memo","useLoadersProvider","_router$query","_formData$type","useLoaders","formData","setData","router","useAppRouter","currenOffer","useCurrentOffer","query","offerId","push","TabSelector","defaultValue","OfferTypeEnum","filterOptions","productsFilterOptions","onOptSelect","o","LoadersProvider","toOfferFormData","_Fragment"],"sourceRoot":""}