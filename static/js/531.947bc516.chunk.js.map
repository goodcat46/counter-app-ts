{"version":3,"file":"static/js/531.947bc516.chunk.js","mappings":"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","sources":["components/Forms/AuthFormInput.tsx","components/atoms/LinkIcon/NavLinkIcon.tsx","redux/auth/useAppAuth.hook.ts","components/Forms/AuthForm.tsx","components/atoms/LinkIcon/LinkIcon.tsx","components/Forms/RecoveryPasswordForm.tsx","components/AppPages/PageAuth.tsx"],"sourcesContent":["import React from 'react';\nimport InputTextPrimary, { InputPrimaryProps } from 'components/atoms/Inputs/InputTextPrimary';\nimport { iconId } from 'data';\nimport styled from 'styled-components';\nimport SvgIcon from 'components/atoms/SvgIcon/SvgIcon';\nimport { IconIdType } from 'img/sprite/iconId.data';\n\nexport interface AuthFormInputProps {\n  icon: IconIdType;\n  error?: boolean;\n  helperText?: string;\n  success?: boolean;\n}\n\nconst AuthFormInput: React.FC<AuthFormInputProps & InputPrimaryProps> = ({ icon, error, success, ...props }) => {\n\n\n  return (\n    <InputBox>\n      <SvgIcon size='26px' iconId={icon} />\n\n      <InputTextPrimary\n        placeholder=\"Ім'я\"\n        name='name'\n        helperText={(error && 'error') || (success && 'success') || ''}\n        error={error}\n        success={success}\n        {...props}\n      />\n\n      <StSvgIcon size='26px' iconId={error ? iconId.error : iconId.success} error={error} success={success} />\n    </InputBox>\n  );\n};\nconst InputBox = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 4px;\n`;\nconst StSvgIcon = styled(SvgIcon)<{ error?: boolean; success?: boolean }>`\n  fill: transparent;\n  fill: ${({ error, theme }) => (error ? 'tomato' : '')};\n  fill: ${({ success, theme }) => (success ? 'green' : '')};\n`;\nexport default AuthFormInput;\n","import React from 'react';\nimport sprite from 'img/sprite';\nimport styled, { css, DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components';\nimport { LinkProps, NavLink } from 'react-router-dom';\n\n\ntype TextTransform = 'uppercase' | 'lowercase' | 'capitalize' | 'none';\n\ninterface Props {\n  size?: string;\n  variant: LinkIconVariant;\n  iconId?: string;\n  iconSize?: string;\n  isActive?: boolean;\n  iconStyles?: {};\n  endIconId?: string;\n  endIconSize?: string;\n  endIconStyles?: {};\n  textTransform?: TextTransform;\n  fontWeight?: 400 | 500 | 600 | 700 | 900;\n}\n\nexport type LinkIconProps = Props & LinkProps;\n\nconst NavLinkIcon: React.FC<LinkIconProps> = ({\n                                                children,\n                                                isActive,\n                                                size = '',\n                                                variant = 'def',\n                                                iconId,\n                                                iconSize = '18px',\n                                                iconStyles = {},\n                                                endIconId = '',\n                                                endIconSize = '18px',\n                                                endIconStyles = {},\n                                                textTransform,\n                                                onClick = () => {\n                                                  console.log('LinkIcon click');\n                                                },\n                                                ...props\n                                              }) => {\n  let styles = {\n    width: size,\n    height: size,\n    minWidth: size,\n    miHeight: size,\n  };\n  let iconStyle = {\n    width: iconSize,\n    height: iconSize,\n    minWidth: iconSize,\n    minHeight: iconSize,\n    ...iconStyles,\n  };\n  let endIconStyle = {\n    width: endIconSize,\n    height: endIconSize,\n    minWidth: endIconSize,\n    minHeight: endIconSize,\n    ...endIconStyles,\n  };\n\n  return (\n    <StyledLinkIcon\n      {...{\n        style: styles,\n        variant,\n        onClick,\n        className: 'linkIcon',\n        ...props,\n      }}\n    >\n      {iconId && (\n        <SvgIcon className='icon' style={iconStyle}>\n          <use href={`${sprite}#icon-${String(iconId)}`} />\n        </SvgIcon>\n      )}\n\n      {children}\n\n      {endIconId && (\n        <SvgIcon className='endIcon' style={endIconStyle}>\n          <use href={`${sprite}#icon-${endIconId}`}></use>\n        </SvgIcon>\n      )}\n    </StyledLinkIcon>\n  );\n};\n\nconst StyledLinkIcon = styled(NavLink)<LinkIconProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  text-align: center;\n  font-size: inherit;\n  font-family: inherit;\n  letter-spacing: 0.05em;\n  color: inherit;\n  fill: inherit;\n\n  text-transform: ${({ textTransform }) => textTransform || 'none'};\n  font-size: ${({ fontWeight }) => fontWeight || 400};\n  padding: 0;\n\n  font-size: 12px;\n\n  overflow: hidden;\n  border-style: none;\n  border-radius: 2px;\n  border: 1px solid transparent;\n  background-color: transparent;\n\n  ${({ variant }) => (variant ? getVariant(variant) : getVariant())}\n  &:disabled {\n    pointer-events: none;\n    opacity: 0.7;\n  }\n`;\n\nconst SvgIcon = styled.svg`\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n`;\n\nconst def = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n  /* transition: all var(--timing-function__main); */\n\n  &:hover {\n    background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.hover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.pressed};\n  }\n`;\nconst defNoEffects = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n`;\n// const pointer = css`\n//   background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n//   position: relative;\n//   fill: ${({ theme }) => theme.colorLight};\n\n//   border-radius: 0;\n//   border-width: 0;\n//   transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 0;\n\n//     transform: translateY(-50%);\n\n//     width: 3px;\n//     height: 50%;\n\n//     background-color: transparent;\n//     transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n//   }\n//   ${def}\n//   &:hover {\n//     &::before {\n//       height: 100%;\n//       background-color: ${({ theme }) => theme.accentColor.base};\n//     }\n//   }\n//   &:active {\n//   }\n// `;\nconst pointerLeft = css`\n  background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n\n  &:active {\n  }\n`;\nconst pointerBottom = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n\n  &:active {\n  }\n`;\nconst small = css`\n  padding: 0 22px;\n\n  min-width: 115px;\n  min-height: 28px;\n`;\nconst large = css`\n  padding: 0 22px;\n\n  min-width: 150px;\n  min-height: 36px;\n`;\nconst icon = css`\n  min-width: 26px;\n  height: 26px;\n`;\nconst outlined = css`\n  color: ${({ theme }) => theme.accentColor.base};\n  fill: ${({ theme }) => theme.accentColor.base};\n  border: 1px solid ${({ theme }) => theme.accentColor.base};\n  /* background-color: transparent; */\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.accentColor.hover};\n    color: ${({ theme }) => theme.accentColor.hover};\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n    fill: ${({ theme }) => theme.accentColor.pressed};\n    border: 1px solid ${({ theme }) => theme.accentColor.pressed};\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst outlinedSmall = css`\n  ${small}\n  ${outlined}\n`;\nconst outlinedLarge = css`\n  ${outlined}\n  ${large}\n`;\nconst filled = css`\n  color: ${({ theme }) => theme.colorLight};\n  fill: ${({ theme }) => theme.colorLight};\n  background-color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.colorLight};\n    fill: ${({ theme }) => theme.colorLight};\n    background-color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst filledSmall = css`\n  ${small}\n  ${filled}\n`;\nconst filledLarge = css`\n  ${large}\n  ${filled}\n`;\nconst onlyIconFilled = css`\n  ${filled}\n  ${icon}\n`;\nconst onlyIcon = css`\n  ${def}\n  ${icon}\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst onlyIconNoEffects = css`\n  ${defNoEffects}\n  ${icon}\n  fill: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst underlinedText = css`\n  text-decoration: underline;\n  cursor: pointer;\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst text = css`\n  ${def}\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst textSmall = css`\n  ${text}\n  ${small}\n`;\nconst textLarge = css`\n  ${text}\n  ${large}\n`;\nconst defOutlined = css`\n  ${def}\n  color: ${({ theme }) => theme.fontColor};\n  fill: ${({ theme }) => theme.fillColor};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.trBorderClr};\n  }\n\n  &:active {\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst defOutlinedSmall = css`\n  ${defOutlined}\n  ${small}\n`;\nconst defOutlinedLarge = css`\n  ${defOutlined}\n  ${large}\n`;\n\nconst variants = {\n  def,\n  defNoEffects,\n  pointerLeft,\n  outlinedLarge,\n  filledLarge,\n  outlinedSmall,\n  filledSmall,\n  underlinedText,\n  textSmall,\n  textLarge,\n  onlyIcon,\n  onlyIconNoEffects,\n  onlyIconFilled,\n  defOutlinedSmall,\n  defOutlinedLarge,\n  pointerBottom,\n};\n\nexport type LinkIconVariant = keyof typeof variants;\n\nfunction getVariant(variant?: LinkIconVariant): FlattenInterpolation<ThemeProps<DefaultTheme>> {\n  return variant ? variants[variant] : variants.def;\n}\n\nexport default NavLinkIcon;\n","import { useAuthSelector } from 'redux/selectors.store';\nimport { AppDispatch, useAppDispatch } from 'redux/store.store';\nimport { IAuthState } from './auth.types';\nimport {\n  ILoginUserData,\n  IRegistrationData,\n  logInUserThunk,\n  registerUserThunk,\n} from './auth.thunks';\nimport { toast } from 'react-toastify';\n\nconst registration = (dispatch: AppDispatch, authState: IAuthState) => {\n  function registerUser({\n    name,\n    secondName,\n    email,\n    password,\n  }: IRegistrationData) {\n    const payload = {\n      submitData: { name, secondName, email, password },\n      onSuccess: () => {},\n      onError: () => {},\n    };\n    dispatch(registerUserThunk(payload));\n    return;\n  }\n\n  return registerUser as typeof registerUser;\n};\n\nconst loginUser = (dispatch: AppDispatch, authState: IAuthState) => {\n  function login({ email, password }: Partial<ILoginUserData>) {\n    const payload = {\n      submitData: { email, password },\n      onSuccess: () => {\n        console.log(email, password);\n        toast.success(`Wellcome: ${email}`);\n      },\n      onError: () => {},\n    };\n    dispatch(logInUserThunk(payload));\n    return;\n  }\n\n  return login as typeof login;\n};\nconst useAuthService = () => {\n  const dispatch = useAppDispatch();\n  const state = useAuthSelector();\n\n  return {\n    dispatch,\n    ...state,\n    registerUser: registration(dispatch, state),\n    loginUser: loginUser(dispatch, state),\n  };\n};\nexport type AuthService = ReturnType<typeof useAuthService>;\nexport default useAuthService;\n","import React, { FormEvent, useState } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport LogoSvg from 'components/Layout/Header/LogoSvg/LogoSvg';\nimport AuthFormInput from './AuthFormInput';\nimport NavLinkIcon from 'components/atoms/LinkIcon/NavLinkIcon';\nimport { Link } from 'react-router-dom';\nimport useAuthService from '../../redux/auth/useAppAuth.hook';\n\nexport interface Props {\n  helloTitle?: string;\n  title: string;\n  register?: boolean;\n  recovery?: boolean;\n}\n\nexport interface IRegistrationFormData {\n  name: string;\n  secondName: string;\n  email: string;\n  password: string;\n  approvePassword: string;\n}\n\nconst initialFormDataLogin: Partial<\n  Pick<IRegistrationFormData, 'email' | 'password'>\n> = { email: '', password: '' };\n\nconst initialFormDataRegister: IRegistrationFormData = {\n  name: '',\n  secondName: '',\n  email: '',\n  password: '',\n  approvePassword: '',\n};\nexport type AuthFormProps = Props & React.HTMLAttributes<HTMLFormElement>;\nconst AuthForm: React.FC<AuthFormProps> = ({\n  title,\n  register,\n  recovery,\n  ...props\n}) => {\n  const authService = useAuthService();\n  const [formData, setFormData] = useState<Partial<IRegistrationFormData>>(\n    register ? initialFormDataRegister : initialFormDataLogin\n  );\n\n  function onFormDataChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = ev.target;\n\n    setFormData(prev => ({ ...prev, [name]: value }));\n  }\n\n  function onFormSubmit(ev: FormEvent) {\n    ev.preventDefault();\n\n    console.log('formDAta', formData);\n    !register && authService.loginUser(formData);\n  }\n\n  return (\n    <Form {...props} onSubmit={onFormSubmit}>\n      <StLogo />\n\n      <Title>{title}</Title>\n\n      <Links>\n        <StNavLink textTransform=\"uppercase\" variant=\"def\" to={'/auth/login'}>\n          {'Вхід'}\n        </StNavLink>\n\n        <StNavLink\n          textTransform=\"uppercase\"\n          variant=\"def\"\n          to={'/auth/register'}\n        >\n          {'Реєстрація'}\n        </StNavLink>\n      </Links>\n\n      <Inputs>\n        {register && (\n          <>\n            <AuthFormInput\n              icon=\"personOutlined\"\n              placeholder=\"І'мя\"\n              name=\"name\"\n              value={formData.name}\n              onChange={onFormDataChange}\n            />\n            <AuthFormInput\n              icon=\"personOutlined\"\n              placeholder=\"Прізвище\"\n              name=\"secondName\"\n              value={formData.secondName}\n              onChange={onFormDataChange}\n            />\n\n            <AuthFormInput\n              icon=\"email\"\n              placeholder=\"Електронна адреса\"\n              name=\"email\"\n              value={formData.email}\n              onChange={onFormDataChange}\n            />\n\n            <AuthFormInput\n              icon=\"lock_O\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              type=\"password\"\n              value={formData.password}\n              onChange={onFormDataChange}\n            />\n            <AuthFormInput\n              icon=\"lock_O\"\n              placeholder=\"Повторіть пароль\"\n              name=\"approvePassword\"\n              type=\"password\"\n              success={\n                formData.approvePassword\n                  ? formData.approvePassword === formData.password\n                  : false\n              }\n              error={\n                formData.approvePassword\n                  ? formData.approvePassword !== formData.password\n                  : false\n              }\n              value={formData.approvePassword}\n              onChange={onFormDataChange}\n            />\n          </>\n        )}\n\n        {!register && (\n          <>\n            <AuthFormInput\n              icon=\"email\"\n              placeholder=\"Електронна адреса\"\n              name=\"email\"\n              value={formData.email}\n              onChange={onFormDataChange}\n            />\n\n            <AuthFormInput\n              icon=\"lock_O\"\n              placeholder=\"Пароль\"\n              name=\"password\"\n              value={formData.password}\n              onChange={onFormDataChange}\n            />\n          </>\n        )}\n      </Inputs>\n\n      <Buttons>\n        <StButtonIcon\n          type=\"submit\"\n          textTransform=\"uppercase\"\n          variant=\"filledSmall\"\n        >\n          {register ? 'Зареєструватись' : 'Увійти'}\n        </StButtonIcon>\n\n        {!register && (\n          <StLink to={'/auth/sendRecoveryPasswordMail'}>\n            {'Забули пароль?'}\n          </StLink>\n        )}\n      </Buttons>\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  min-width: 250px;\n  width: 100%;\n  height: max-content;\n  /* min-height: max-content; */\n  max-width: 480px;\n  max-height: 98vh;\n\n  overflow: auto;\n\n  padding: 20px 16px;\n\n  border-radius: 2px;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n  /* background-color: #1c1c1e; */\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  @media screen and (max-width: 480px) {\n    max-width: 95vw;\n  }\n`;\nconst StLogo = styled(LogoSvg)`\n  min-width: 150px;\n  height: 64px;\n\n  & .logoName {\n    font-size: 18px;\n    @media screen and (max-width: 480px) {\n      display: block;\n    }\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 16px;\n  line-height: 1.4;\n  text-align: center;\n\n  margin-bottom: 20px;\n\n  max-width: 280px;\n`;\n\nconst Links = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  width: 100%;\n  height: 36px;\n\n  margin-bottom: 16px;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 280px;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n\n  width: 100%;\n  max-width: 230px;\n`;\nconst StButtonIcon = styled(ButtonIcon)`\n  font-weight: 600;\n\n  min-width: 165px;\n  width: 100%;\n`;\nconst StLink = styled(Link)`\n  font-size: 11px;\n  line-height: 1.45;\n\n  text-decoration: underline;\n\n  color: ${({ theme }) => theme.accentColor.base};\n\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\n\nconst StNavLink = styled(NavLinkIcon)`\n  position: relative;\n\n  font-weight: 700;\n  font-size: 12px;\n  text-transform: uppercase;\n  text-align: center;\n\n  border-radius: 0;\n  border-style: none;\n  border-width: 0;\n\n  &::before {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 1px;\n    background-color: ${({ theme }) => theme.trBorderClr};\n  }\n\n  &::after {\n    display: block;\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    height: 1px;\n    width: 100%;\n    height: 3px;\n    width: 0;\n    transition: all ${({ theme }) => theme.globals.timingFnMui};\n    transform: translate(-50%);\n    background-color: ${({ theme }) => theme.accentColor.base};\n  }\n\n  &.active {\n    &::after {\n      width: 80%;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    outline-style: none;\n\n    &::after {\n      width: 100%;\n    }\n  }\n`;\n\n\nexport default AuthForm;\n","import React from 'react';\nimport sprite from 'img/sprite';\nimport styled, { css, DefaultTheme, FlattenInterpolation, ThemeProps } from 'styled-components';\nimport { LinkProps } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\ntype TextTransform = 'uppercase' | 'lowercase' | 'capitalize' | 'none';\n\ninterface Props {\n  size?: string;\n  variant: LinkIconVariant;\n  iconId?: string;\n  iconSize?: string;\n  isActive?: boolean;\n  iconStyles?: {};\n  endIconId?: string;\n  endIconSize?: string;\n  endIconStyles?: {};\n  textTransform?: TextTransform;\n  fontWeight?: 400 | 500 | 600 | 700 | 900;\n}\nexport type LinkIconProps = Props & LinkProps;\n\nconst LinkIcon: React.FC<LinkIconProps> = ({\n  children,\n  isActive,\n  size = '',\n  variant = 'def',\n  iconId,\n  iconSize = '18px',\n  iconStyles = {},\n  endIconId = '',\n  endIconSize = '18px',\n  endIconStyles = {},\n  onClick = () => {\n    console.log('LinkIcon click');\n  },\n  ...props\n}) => {\n  let styles = {\n    width: size,\n    height: size,\n    minWidth: size,\n    miHeight: size,\n  };\n  let iconStyle = {\n    width: iconSize,\n    height: iconSize,\n    minWidth: iconSize,\n    minHeight: iconSize,\n    ...iconStyles,\n  };\n  let endIconStyle = {\n    width: endIconSize,\n    height: endIconSize,\n    minWidth: endIconSize,\n    minHeight: endIconSize,\n    ...endIconStyles,\n  };\n\n  return (\n    <StyledLinkIcon\n      {...{\n        style: styles,\n        variant,\n        onClick,\n        className: 'linkIcon',\n        ...props,\n      }}\n    >\n      {iconId && (\n        <SvgIcon className=\"icon\" style={iconStyle}>\n          <use href={`${sprite}#icon-${String(iconId)}`} />\n        </SvgIcon>\n      )}\n\n      {children}\n\n      {endIconId && (\n        <SvgIcon className=\"endIcon\" style={endIconStyle}>\n          <use href={`${sprite}#icon-${endIconId}`}></use>\n        </SvgIcon>\n      )}\n    </StyledLinkIcon>\n  );\n};\n\nconst StyledLinkIcon = styled(Link)<LinkIconProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n\n  text-align: center;\n  font-size: inherit;\n  font-family: inherit;\n  letter-spacing: 0.05em;\n  color: inherit;\n  fill: inherit;\n\n  text-transform: ${({ textTransform }) => textTransform || 'none'};\n  font-size: ${({ fontWeight }) => fontWeight || 400};\n  padding: 0;\n\n  font-size: 12px;\n\n  overflow: hidden;\n  border-style: none;\n  border-radius: 2px;\n  border: 1px solid transparent;\n  background-color: transparent;\n\n  ${({ variant }) => (variant ? getVariant(variant) : getVariant())}\n\n  &:disabled {\n    pointer-events: none;\n    opacity: 0.7;\n  }\n`;\n\nconst SvgIcon = styled.svg`\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n`;\n\nconst def = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n  /* transition: all var(--timing-function__main); */\n  &:hover {\n    background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.hover};\n  }\n  &:active {\n    background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.pressed};\n  }\n`;\nconst defNoEffects = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n`;\n// const pointer = css`\n//   background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n//   position: relative;\n//   fill: ${({ theme }) => theme.colorLight};\n\n//   border-radius: 0;\n//   border-width: 0;\n//   transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n//   &::before {\n//     content: '';\n//     position: absolute;\n//     top: 50%;\n//     left: 0;\n\n//     transform: translateY(-50%);\n\n//     width: 3px;\n//     height: 50%;\n\n//     background-color: transparent;\n//     transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n//   }\n//   ${def}\n//   &:hover {\n//     &::before {\n//       height: 100%;\n//       background-color: ${({ theme }) => theme.accentColor.base};\n//     }\n//   }\n//   &:active {\n//   }\n// `;\nconst pointerLeft = css`\n  background-color: ${({ theme }) => theme.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n  &:active {\n  }\n`;\nconst pointerBottom = css`\n  background-color: ${({ theme }) => theme.globals.defaultBtnBckgrndColor.def};\n\n  border: 0;\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n  position: relative;\n  fill: ${({ theme }) => theme.colorLight};\n  border-radius: 0;\n\n  border-width: 0;\n  transition: none;\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n\n    transform: translateY(-50%);\n\n    width: 3px;\n    height: 50%;\n\n    background-color: transparent;\n    transition: height ${({ theme }) => theme.globals.timingFunctionLong};\n  }\n  ${def}\n  &:hover {\n    &::before {\n      height: 100%;\n      background-color: ${({ theme }) => theme.accentColor.base};\n    }\n  }\n  &:active {\n  }\n`;\nconst small = css`\n  padding: 0 22px;\n\n  min-width: 115px;\n  min-height: 28px;\n`;\nconst large = css`\n  padding: 0 22px;\n\n  min-width: 150px;\n  min-height: 36px;\n`;\nconst icon = css`\n  min-width: 26px;\n  height: 26px;\n`;\nconst outlined = css`\n  color: ${({ theme }) => theme.accentColor.base};\n  fill: ${({ theme }) => theme.accentColor.base};\n  border: 1px solid ${({ theme }) => theme.accentColor.base};\n  /* background-color: transparent; */\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.accentColor.hover};\n    color: ${({ theme }) => theme.accentColor.hover};\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n    fill: ${({ theme }) => theme.accentColor.pressed};\n    border: 1px solid ${({ theme }) => theme.accentColor.pressed};\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst outlinedSmall = css`\n  ${small}\n  ${outlined}\n`;\nconst outlinedLarge = css`\n  ${outlined}\n  ${large}\n`;\nconst filled = css`\n  color: ${({ theme }) => theme.colorLight};\n  fill: ${({ theme }) => theme.colorLight};\n  background-color: ${({ theme }) => theme.accentColor.base};\n  &:hover {\n    color: ${({ theme }) => theme.colorLight};\n    fill: ${({ theme }) => theme.colorLight};\n    background-color: ${({ theme }) => theme.accentColor.hover};\n  }\n  &:active {\n    background-color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst filledSmall = css`\n  ${small}\n  ${filled}\n`;\nconst filledLarge = css`\n  ${large}\n  ${filled}\n`;\nconst onlyIconFilled = css`\n  ${filled}\n  ${icon}\n`;\nconst onlyIcon = css`\n  ${def}\n  ${icon}\n  fill: ${({ theme }) => theme.accentColor.base};\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst onlyIconNoEffects = css`\n  ${defNoEffects}\n  ${icon}\nfill: ${({ theme }) => theme.accentColor.base};\n  &:hover {\n    fill: ${({ theme }) => theme.accentColor.hover};\n  }\n  &:active {\n    fill: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst underlinedText = css`\n  text-decoration: underline;\n  cursor: pointer;\n  color: ${({ theme }) => theme.accentColor.base};\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst text = css`\n  ${def}\n  color: ${({ theme }) => theme.accentColor.base};\n  &:hover {\n    color: ${({ theme }) => theme.accentColor.hover};\n  }\n  &:active {\n    color: ${({ theme }) => theme.accentColor.pressed};\n  }\n`;\nconst textSmall = css`\n  ${text}\n  ${small}\n`;\nconst textLarge = css`\n  ${text}\n  ${large}\n`;\nconst defOutlined = css`\n  ${def}\n  color: ${({ theme }) => theme.fontColor};\n  fill: ${({ theme }) => theme.fillColor};\n  border: 1px solid ${({ theme }) => theme.borderColor};\n  &:hover {\n    border: 1px solid ${({ theme }) => theme.trBorderClr};\n  }\n  &:active {\n    background-color: var(--ligthOrange);\n    box-shadow: var(--btnShadow_active);\n  }\n`;\nconst defOutlinedSmall = css`\n  ${defOutlined}\n  ${small}\n`;\nconst defOutlinedLarge = css`\n  ${defOutlined}\n  ${large}\n`;\n\nconst variants = {\n  def,\n  defNoEffects,\n  pointerLeft,\n  outlinedLarge,\n  filledLarge,\n  outlinedSmall,\n  filledSmall,\n  underlinedText,\n  textSmall,\n  textLarge,\n  onlyIcon,\n  onlyIconNoEffects,\n  onlyIconFilled,\n  defOutlinedSmall,\n  defOutlinedLarge,\n  pointerBottom,\n};\n\nexport type LinkIconVariant = keyof typeof variants;\n\nfunction getVariant(variant?: LinkIconVariant): FlattenInterpolation<ThemeProps<DefaultTheme>> {\n  return variant ? variants[variant] : variants.def;\n}\n\nexport default LinkIcon;\n","import React, { useState } from 'react';\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport LogoSvg from 'components/Layout/Header/LogoSvg/LogoSvg';\nimport AuthFormInput from './AuthFormInput';\nimport LinkIcon from 'components/atoms/LinkIcon/LinkIcon';\n\nexport interface RecoveryPasswordFormProps {\n  helloTitle?: string;\n  title: string;\n  recovery?: boolean;\n}\n\nexport interface IRecoveryPasswordFormData {\n  email?: string;\n  password?: string;\n  approvePassword?: string;\n}\n\nconst initialFormDataRecoveryPassword: IRecoveryPasswordFormData = { email: '', password: '', approvePassword: '' };\n\nconst RecoveryPasswordForm: React.FC<RecoveryPasswordFormProps & React.HTMLAttributes<HTMLFormElement>> = ({\n                                                                                                             title,\n                                                                                                             recovery,\n                                                                                                             ...props\n                                                                                                           }) => {\n  const [formData, setFormData] = useState<Partial<IRecoveryPasswordFormData>>(initialFormDataRecoveryPassword);\n\n  function onFormDataChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    const { name, value } = ev.target;\n\n    setFormData(prev => ({ ...prev, [name]: value }));\n  }\n\n  return (\n    <Form {...props}>\n      <StLogo />\n\n      <Title>{title}</Title>\n\n      <Inputs>\n        {recovery ? (\n          <>\n            <AuthFormInput\n              icon='lock_O'\n              placeholder='Новий пароль'\n              name='password'\n              type='password'\n              value={formData.password}\n              onChange={onFormDataChange}\n            />\n            <AuthFormInput\n              icon='lock_O'\n              placeholder='Повторіть пароль'\n              name='approvePassword'\n              type='password'\n              success={formData.approvePassword ? formData.approvePassword === formData.password : false}\n              error={formData.approvePassword ? formData.approvePassword !== formData.password : false}\n              value={formData.approvePassword}\n              onChange={onFormDataChange}\n            />\n          </>\n        ) : (\n          <AuthFormInput\n            icon='email'\n            placeholder='Електронна адреса'\n            name='email'\n            value={formData.email}\n            onChange={onFormDataChange}\n          />\n        )}\n      </Inputs>\n\n      <Buttons>\n        <StButtonIcon textTransform='uppercase' variant='filledSmall'>\n          {recovery ? 'Прийняти' : 'Відновити'}\n        </StButtonIcon>\n\n        {/* <StLink to={'/auth/login'}>{'Увійти'}</StLink> */}\n\n        <StLinkIcon textTransform='uppercase' variant='outlinedSmall' to={'/auth/login'}>\n          {'Увійти'}\n        </StLinkIcon>\n      </Buttons>\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  min-width: 250px;\n  width: 100%;\n  height: max-content;\n  max-width: 480px;\n  max-height: 98vh;\n\n  overflow: auto;\n\n  padding: 20px 16px;\n\n  border-radius: 2px;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  border: 1px solid ${({ theme }) => theme.trBorderClr};\n  background-color: ${({ theme }) => theme.backgroundColorSecondary};\n\n  @media screen and (max-width: 480px) {\n    max-width: 95vw;\n  }\n`;\nconst StLogo = styled(LogoSvg)`\n  min-width: 150px;\n  height: 64px;\n\n  & .logoName {\n    font-size: 18px;\n    @media screen and (max-width: 480px) {\n      display: block;\n    }\n  }\n`;\n\nconst Title = styled.p`\n  font-size: 16px;\n  line-height: 1.4;\n  text-align: center;\n\n  margin-bottom: 20px;\n\n  max-width: 280px;\n`;\n\nconst Inputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 280px;\n\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 12px;\n`;\nconst StButtonIcon = styled(ButtonIcon)`\n  min-width: 165px;\n  font-weight: 600;\n`;\nconst StLinkIcon = styled(LinkIcon)`\n  min-width: 165px;\n  font-weight: 600;\n`;\n\nexport default RecoveryPasswordForm;\n","import AuthForm from 'components/Forms/AuthForm';\nimport RecoveryPasswordForm from 'components/Forms/RecoveryPasswordForm';\nimport styled from 'styled-components';\n\nexport interface PageAuthProps {\n  register?: boolean;\n  login?: boolean;\n  recovery?: boolean;\n  sendRecoveryMail?: boolean;\n}\n\nconst PageAuth: React.FC<PageAuthProps> = ({ register, recovery, login, sendRecoveryMail }) => {\n\n\n  return (\n    <Page className='PageAuth'>\n      {(register || login) && (\n        <AuthForm\n          title={register ? 'Реєстрація нового користувача' : 'Для початку роботи, будь ласка, авторизуйтесь.'}\n          register={register}\n        />\n      )}\n\n      {(recovery || sendRecoveryMail) && (\n        <RecoveryPasswordForm\n          title={recovery ? 'Відновлення паролю' : 'Для відновлення паролю введіть ваш e-mail'}\n          recovery={recovery}\n        />\n      )}\n    </Page>\n  );\n};\n\nconst Page = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: ${({ theme }) => theme.backgroundColorMain};\n`;\n\nexport default PageAuth;\n"],"names":["InputBox","styled","_templateObject","_taggedTemplateLiteral","StSvgIcon","SvgIcon","_templateObject2","_ref2","error","theme","_ref3","success","_ref","icon","props","_objectWithoutProperties","_excluded","_jsxs","children","_jsx","size","iconId","InputTextPrimary","_objectSpread","placeholder","name","helperText","StyledLinkIcon","NavLink","textTransform","fontWeight","_ref4","variant","getVariant","def","css","_templateObject3","_ref5","globals","defaultBtnBckgrndColor","_ref6","hover","_ref7","pressed","defNoEffects","_templateObject4","_ref8","pointerLeft","_templateObject5","_ref9","_ref10","timingFunctionMain","_ref11","colorLight","_ref12","timingFunctionLong","_ref13","accentColor","base","pointerBottom","_templateObject6","_ref14","_ref15","_ref16","_ref17","_ref18","small","_templateObject7","large","_templateObject8","_templateObject9","outlined","_templateObject10","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","outlinedSmall","_templateObject11","outlinedLarge","_templateObject12","filled","_templateObject13","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","filledSmall","_templateObject14","filledLarge","_templateObject15","onlyIconFilled","_templateObject16","onlyIcon","_templateObject17","_ref35","_ref36","_ref37","onlyIconNoEffects","_templateObject18","_ref38","_ref39","_ref40","underlinedText","_templateObject19","_ref41","_ref42","_ref43","text","_templateObject20","_ref44","_ref45","_ref46","textSmall","_templateObject21","textLarge","_templateObject22","defOutlined","_templateObject23","_ref47","fontColor","_ref48","fillColor","_ref49","borderColor","_ref50","trBorderClr","variants","defOutlinedSmall","_templateObject24","defOutlinedLarge","_templateObject25","_ref$size","isActive","_ref$variant","_ref$iconSize","iconSize","_ref$iconStyles","iconStyles","_ref$endIconId","endIconId","_ref$endIconSize","endIconSize","_ref$endIconStyles","endIconStyles","_ref$onClick","onClick","console","log","styles","width","height","minWidth","miHeight","iconStyle","minHeight","endIconStyle","style","className","href","concat","sprite","String","registration","dispatch","authState","payload","submitData","secondName","email","password","onSuccess","onError","registerUserThunk","loginUser","toast","logInUserThunk","useAppDispatch","state","useAuthSelector","registerUser","initialFormDataLogin","initialFormDataRegister","approvePassword","Form","shadowMain","backgroundColorSecondary","StLogo","LogoSvg","Title","Links","Inputs","Buttons","StButtonIcon","ButtonIcon","StLink","Link","StNavLink","NavLinkIcon","timingFnMui","title","register","recovery","authService","useAuthService","_useState","useState","_useState2","_slicedToArray","formData","setFormData","onFormDataChange","ev","_ev$target","target","value","prev","_defineProperty","onSubmit","preventDefault","to","_Fragment","AuthFormInput","onChange","type","initialFormDataRecoveryPassword","StLinkIcon","LinkIcon","Page","backgroundColorMain","login","sendRecoveryMail","AuthForm","RecoveryPasswordForm"],"sourceRoot":""}