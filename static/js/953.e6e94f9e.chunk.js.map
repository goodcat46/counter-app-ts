{"version":3,"file":"static/js/953.e6e94f9e.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/PageProductOverview/OfferOverviewPageRightSide.tsx","components/Overviews/ProductOverviewXL.tsx","Providers/Overlay/OverlayStack.tsx","components/AppPages/PageProductOverview/OfferOverviewPageLeftSide.tsx","components/AppPages/PageProductOverview/PageOfferOverview.tsx","components/AppPages/PageProductOverview/PageOfferProvider.tsx","components/AppPages/PageProductOverview/tabs/PricesTab.tsx","components/Forms/offers/variations/OfferVariationPropertySelector.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/PageProductOverview/tabs/VariationsTab.tsx","components/AppPages/PageProductOverview/tabs/WarehousingTab.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormProductDefaultsOverlay.tsx","components/Overlays/FormProductImagesOverlay.tsx","components/Forms/offers/FormProductCategories.tsx","components/Overlays/FormSelectCategoriesOverlay.tsx","components/Overviews/components/OfferOverviewCategoriesCell.tsx","components/atoms/Changer.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Overviews/components/Cells.tsx","components/Overviews/components/OverviewTextCell.tsx","components/Overviews/components/OfferOverviewStatusChangerCell.tsx","components/Overviews/components/OfferOverviewDefaultsCell.tsx","components/Overviews/components/OfferOverviewImagesCell.tsx","components/Overviews/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/components/OrderOverviewGroupInfo.tsx","components/Overviews/components/OrderOverviewCustomerInfo.tsx","components/Overviews/components/OrderOverviewInvoicing.tsx","components/Overviews/components/OrderOverviewDelivery.tsx","components/Overviews/components/OrderOverviewTotals.tsx","components/atoms/LangButtonsGroup.tsx","data/warehauses.data.ts"],"sourcesContent":["import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { usePageCurrentProduct } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\n\nenum RightSideOptionEnum {\n  Variations = 'Variations',\n  Prices = 'Prices',\n  Warehousing = 'Warehousing',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentProduct();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(RightSideOptionEnum.Variations);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n    };\n    return tabs?.[currentTab] ?? null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      {isVisible && (\n        <ModalHeader\n          onBackPress={toggleVisibility}\n          renderTitle={\n            <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n              <Text $weight={600} $size={14}>\n                {page?.currentOffer?.label}\n              </Text>\n\n              <Text $size={14}>{page?.currentOffer?.sku}</Text>\n            </FlexBox>\n          }\n        />\n      )}\n\n      <TabBox overflow={'hidden'} fillWidth flex={1}>\n        <TabSelector filterOptions={TabsList} defaultValue={currentTab} onOptSelect={filterHandler} preventFilter />\n\n        {renderTab}\n      </TabBox>\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import { OfferEntity } from '../../types/offers/offers.types';\nimport FlexBox from '../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../lang';\nimport { usePageCurrentProduct } from '../AppPages/PageProductOverview/PageOfferProvider';\nimport { OverlayHeader } from '../Overlays';\nimport { checks, enumToFilterOptions, toAppDateFormat } from '../../utils';\nimport { IMeasurement } from '../../types/utils.types';\nimport TabSelector from '../atoms/TabSelector';\nimport { OverviewCellProps } from './components/overview-types';\nimport { OverviewCells } from './components/Cells';\nimport { useOverlayService } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../hooks';\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nexport enum ProductOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\nexport const ProductOverviewTabsList = enumToFilterOptions(ProductOverviewTabsEnum);\nconst ProductOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentProduct();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n\n  const [currentTab, setCurrentTab] = useState<ProductOverviewTabsEnum>(ProductOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      offerOverviewCellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n        if (CellComponent) {\n          return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n        }\n        return <OverviewCells.Text key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n      }),\n    [currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        filterOptions={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport default ProductOverviewXL;\n\nconst productOverviewCells: OverviewCellProps<OfferEntity, ProductOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    CellComponent: OverviewCells.OfferStatusChanger,\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: OverviewCells.OfferCategories,\n    gridArea: 'categories',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Brand'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    CellComponent: OverviewCells.Text,\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    CellComponent: OverviewCells.Text,\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    CellComponent: OverviewCells.Text,\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: ProductOverviewTabsEnum.Futures,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Properties'),\n    CellComponent: OverviewCells.OfferStaticProperties,\n    gridArea: 'properties',\n    tab: ProductOverviewTabsEnum.Properties,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OverviewCells.OfferDefaults,\n    gridArea: 'defaults',\n    tab: ProductOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    CellComponent: OverviewCells.Text,\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.email} / ${\n            product?.createdAt && checks.isStr(product?.createdAt)\n              ? toAppDateFormat(Date.parse(product?.createdAt))\n              : ''\n          }`\n        : null,\n    gridArea: 'created',\n    tab: ProductOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    CellComponent: OverviewCells.Text,\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.email} / ${\n            product?.updatedAt && checks.isStr(product?.updatedAt)\n              ? toAppDateFormat(Date.parse(product?.updatedAt))\n              : ''\n          }`\n        : null,\n    gridArea: 'updated',\n    tab: ProductOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OverviewCells.OfferImages,\n    gridArea: 'images',\n    tab: ProductOverviewTabsEnum.Images,\n  },\n];\n\nconst offerOverviewCellsMap: Record<\n  ProductOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, ProductOverviewTabsEnum>[]\n> = {};\nproductOverviewCells.forEach(item => {\n  const tab = item.tab;\n  if (tab) {\n    if (offerOverviewCellsMap[tab]) {\n      offerOverviewCellsMap[tab].push(item);\n    } else {\n      offerOverviewCellsMap[tab] = [item];\n    }\n  }\n});\n","import { useOverlayService } from './OverlayStackProvider';\nimport React, { MouseEventHandler, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              overlaySrv.remove(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { usePageCurrentProduct } from './PageOfferProvider';\nimport ProductOverviewXL from '../../Overviews/ProductOverviewXL';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { Modals } from '../../Modals/Modals';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { t } from '../../../lang';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentProduct();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { products: productsS } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <ProductOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              _id: page?.currentOffer?._id,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          productsS.getProductFullInfo({\n            data: { _id: page.currentOffer?._id },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({ offer: { content: t('Loading product info') } });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentProductCTX = createContext({});\n\nexport const usePageCurrentProduct = () => useContext(PageCurrentProductCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      service\n        .getProductFullInfo({\n          data: { _id: offerId },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .finally();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    service.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      service.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentProductCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentProductCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { pricesColumnsForProductReview } from 'data/priceManagement.data';\nimport FormCreatePrice from '../../../Forms/pricing/FormCreatePrice/FormCreatePrice';\nimport { OfferPriceEntity } from 'types/price-management/priceManagement.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { getIdRef } from 'utils/data-transform';\nimport { OnlyUUID } from 'redux/global.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  // const updateDefaults = ({}: { price?: OnlyUUID }) => {};\n\n  const tableConfig = useMemo((): ITableListProps<OfferPriceEntity> => {\n    return {\n      tableData: currentOffer?.prices,\n      tableTitles: pricesColumnsForProductReview,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: FormCreatePrice,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                      // onSubmit: (d, o) => {\n                      //   pricesS.addPriceToList({\n                      //     data: { updateCurrent: true, data: { data: d } },\n                      //     onSuccess: data => {\n                      //       updateDefaults({ price: { _id: data._id } });\n                      //\n                      //       o?.close && m?.onClose();\n                      //     },\n                      //   });\n                      // },\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentOffer, withActions, onSelect, loadData, modalS]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n    />\n  );\n};\n\nexport default PricesTab;\n","import { IProperty, IPropertyValue } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { PropertyItemStylesByCmsKey } from '../../../Directories/DirProperties/components/PropertyItem';\n\nexport interface OfferVariationPropertySelectorProps {\n  item: IProperty;\n  selectedValue?: string;\n  selectedIds?: string[];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n}\nexport const OfferVariationPropertySelector = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: OfferVariationPropertySelectorProps) => {\n  const renderChildren = useMemo(() => {\n    return item.childrenList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, item.childrenList, onSelect, selectedIds]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox fillWidth padding={'8px 0'} gap={6} cmsKey={item.cmsConfigs?.key}>\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ cmsKey?: MaybeNull<string> }>`\n  width: 100%;\n  display: grid;\n\n  grid-template-columns: repeat(${p => (p.cmsKey ? PropertyItemStylesByCmsKey[p.cmsKey]?.numColumns ?? 2 : 2)}, 1fr);\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: IPropertyValue;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  return (\n    <ValueTag\n      variant={isSelected ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nexport default OfferVariationPropertySelector;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { toVariationFormData, toVariationReqData } from '../../utils';\nimport { IVariationFormData, VariationEntity } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../Forms/components/FormAfterSubmitOptions';\nimport { OverlayFooter, OverlayHeader } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport LangButtonsGroup from '../atoms/LangButtonsGroup';\nimport { MaybeNull, UUID } from '../../types/utils.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { IProperiesGroup, IProperty, IPropertyValue } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  update?: UUID;\n\n  create?: boolean;\n\n  defaultState?: VariationEntity;\n}\nconst validation = yup.object().shape({\n  label: yup.string().required().min(5).max(64),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\n\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const loaders = useLoaders<'create'>();\n  const currentOffer = useCurrentOffer({ id: update || offerId || offer?._id });\n  const submitOptions = useAfterSubmitOptions();\n  // _setCurrentTemplate\n  const [currentTemplate] = useState<IProperiesGroup>(templates?.[0]);\n  const [selectedPropsMap, setSelectedPropsMap] = useState<Record<string, IPropertyValue>>({});\n\n  const { propertiesList, propValuesDataMap } = useMemo(() => {\n    const list = currentTemplate?.childrenList?.filter(el => el?.isSelectable);\n    const _propValuesMap: Record<string, IPropertyValue> = {};\n\n    const map: Record<string, IProperty> = Object.assign(\n      {},\n      ...(list ?? []).map(pr => {\n        if (pr?.childrenList?.length) {\n          pr?.childrenList.forEach(val => {\n            _propValuesMap[val._id] = val;\n          });\n        }\n\n        return { [pr._id]: pr };\n      })\n    );\n\n    return { propertiesList: list, propertiesDataMap: map, propValuesDataMap: _propValuesMap };\n  }, [currentTemplate?.childrenList]);\n\n  const formMethods = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      defaultState ? { ...defaultState, offer: currentOffer } : { offer: currentOffer }\n    ),\n    resolver: yupResolver(validation as never),\n    reValidateMode: 'onSubmit',\n  });\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  useEffect(() => {\n    console.log({ formValues });\n  }, [formValues]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const { label } = useMemo(() => {\n    // const _sortedIds = Object.keys(selectedPropsMap ?? {}).sort((prev, next) => prev.localeCompare(next));\n\n    const _sorted = Object.entries(selectedPropsMap).sort((prev, next) => {\n      return prev[0].localeCompare(next[0]);\n    });\n    const _labels: string[] = currentOffer?.label ? [currentOffer?.label] : [];\n\n    for (const entry of _sorted) {\n      const value = entry[1];\n      value?.label && _labels.push(value?.label);\n    }\n    const _base = !_sorted?.length ? `${currentOffer?.label}. {{VARIATION_LABEL}}` : _labels.join('. ');\n\n    return { label: _base };\n  }, [currentOffer?.label, selectedPropsMap]);\n\n  useEffect(() => {\n    setValue('label', label);\n  }, [label, setValue]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: toVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: toVariationReqData(data),\n            onSuccess: data => {\n              submitOptions.state.close && onClose && onClose();\n              submitOptions.state.clear && reset();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [loaders, onClose, reset, service, submitOptions.state.clear, submitOptions.state.close, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string, label?: MaybeNull<string>) => {\n      setValue(`propertiesMap.${parentId}`, id);\n\n      setSelectedPropsMap(p => ({ ...p, [parentId]: propValuesDataMap?.[id] }));\n    },\n    [propValuesDataMap, setValue]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setSelectedPropsMap({});\n  }, [setValue]);\n\n  const renderTemplate = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  return (\n    <FormContainer\n      onSubmit={handleSubmit(onValid, errors => {\n        console.error('[SUBMIT ERROR]', errors);\n      })}\n      onReset={handleClearMap}\n      {...props}\n    >\n      <OverlayHeader\n        onBackPress={onClose}\n        title={(title || currentTemplate?.label) ?? ''}\n        canSubmit={canSubmit}\n        okButton\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <Inputs>\n          <InputLabel label={t('label')} error={errors.label}>\n            <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n          </InputLabel>\n\n          <FlexBox fxDirection={'row'} gap={8} fillWidth>\n            <InputLabel label={t('sku')} error={errors.sku}>\n              <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n            </InputLabel>\n\n            <InputLabel label={t('barCode')} error={errors.barCode}>\n              <InputText {...register('barCode')} placeholder={t('barCode')} />\n            </InputLabel>\n          </FlexBox>\n\n          {/*<DimensionsInputs form={formMethods} />*/}\n        </Inputs>\n\n        <TemplateBox padding={'0 0 8px'} margin={'8px 0 0'}>\n          {renderTemplate}\n        </TemplateBox>\n\n        {!currentOffer && (\n          <CmsConfigs padding={'8px 0'} fillWidth>\n            <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n              <Text $size={13} $weight={500}>\n                {t('Cms configs')}\n              </Text>\n            </CmsConfigsHeader>\n\n            <Inputs>\n              <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n                <LangButtonsGroup disabled />\n              </InputLabel>\n\n              <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n                <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n              </InputLabel>\n            </Inputs>\n          </CmsConfigs>\n        )}\n      </Content>\n\n      <OverlayFooter\n        loading={loaders.isLoading?.create}\n        resetButtonShown\n        submitButtonText={loaders.isLoading?.create ? 'Loading...' : update ? 'Підтвердити' : 'Додати'}\n        canSubmit={canSubmit}\n        extraFooter={\n          <ExtraFooterBox>\n            <FormAfterSubmitOptions {...submitOptions} />\n          </ExtraFooterBox>\n        }\n      />\n    </FormContainer>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst Inputs = styled(FlexBox)`\n  padding: 0 4px;\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentProduct } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { IVariationTableData } from '../../../../types/offers/variations.types';\nimport { getIdRef } from '../../../../utils';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\nimport { IProperty } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const page = usePageCurrentProduct();\n  const modalS = useModalProvider();\n  const currentOffer = page.currentOffer;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, offerId: currentOffer._id },\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, IProperty> = {};\n    for (const variation of currentOffer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [currentOffer?.variations]);\n\n  const tableConfig = useMemo(() => {\n    return {\n      tableTitles: variationsTableTitles,\n      tableData: currentOffer?.variations,\n      transformData: transformVariationTableData,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n                  const dataForUpdate = currentOffer?.variations?.find(v => v?._id === currentId);\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: {\n                      update: currentId,\n                      defaultState: dataForUpdate,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: { offer: page.currentOffer },\n                  });\n                },\n              },\n            ];\n          },\n    } as ITableListProps<IVariationTableData>;\n  }, [currentOffer?.variations, loadData, modalS, onSelect, page.currentOffer, variationsTableTitles, withActions]);\n\n  useEffect(() => {\n    if (currentOffer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n    />\n  );\n};\nexport default VariationsTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px;\n\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox fxDirection={'row'} justifyContent={'space-between'} height={'max-content'} alignItems={'center'}>\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/global.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IWarehouse } from '../../../../types/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList isSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/PageProductOverview/tabs/PricesTab';\nimport VariationsTab from '../AppPages/PageProductOverview/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/PageProductOverview/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nexport interface FormProductDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum FormProductDefaultsTabs {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\nexport type OfferOverlayLoaderKey =\n  | keyof typeof FormProductDefaultsTabs\n  | `${keyof typeof FormProductDefaultsTabs}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    currentOffer?._id &&\n      productsS.setDefaults({\n        data: { _id: currentOffer?._id, defaults: toReqData(fData) as never, updateCurrent: true },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n\n  const renderTab = useMemo(() => {\n    const tabsMap: Record<FormProductDefaultsTabs, React.ReactNode> = {\n      [FormProductDefaultsTabs.warehouse]: <WarehousesTab onSelect={handleSelect} selected={formValues?.warehouse} />,\n      [FormProductDefaultsTabs.price]: <PricesTab withActions onSelect={handleSelect} selected={formValues?.price} />,\n      [FormProductDefaultsTabs.variation]: (\n        <VariationsTab withActions onSelect={handleSelect} selected={formValues?.variation} />\n      ),\n      [FormProductDefaultsTabs.inventory]: (\n        <WarehousingTab withActions onSelect={handleSelect} selected={formValues?.inventory} />\n      ),\n      [FormProductDefaultsTabs.supplier]: (\n        <CounterpartyTab\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          withActions\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      ),\n    };\n\n    return tabsMap[tabs[currentTabIdx]?.value] ?? null;\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    formValues?.warehouse,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentOffer?.defaults;\n\n    const tabIs: Record<FormProductDefaultsTabs | string, boolean> = {\n      [tabs?.[currentTabIdx]?.value ?? '']: true,\n    };\n\n    if (tabIs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabIs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabIs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabIs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabIs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentOffer?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} onCreatePress={() => {}} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FormOfferImagesComponent from '../Forms/offers/components/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils/data-transform';\nimport { OverlayFooter, OverlayHeader } from './index';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: OfferEntity;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(currentProduct?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={\n          <OverlayHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />\n        }\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport translate from '../../../lang';\nimport { IDirItemBase, IProductCategoryDirItem } from '../../../types/dir.types';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport styled from 'styled-components';\n\nexport interface FormProductCategoriesProps {\n  onSelect?: (id: string, option?: IProductCategoryDirItem) => void;\n  onChange?: (ids: string[]) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  options?: IProductCategoryDirItem[];\n}\n\nconst FormProductCategories: React.FC<FormProductCategoriesProps> = ({ options, onSelect, onChange, defaultData }) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const handleSelect = useCallback(\n    (option?: IProductCategoryDirItem) => {\n      setSelectedIds(prev => {\n        const newData = option\n          ? prev.includes(option?._id)\n            ? prev.filter(el => el !== option?._id)\n            : [...prev, option._id]\n          : prev;\n        onSelect && option?._id && onSelect(option?._id);\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n  const handleRemove = useCallback(\n    (id: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.filter(el => el !== id);\n\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange]\n  );\n\n  const renderTreeData = useMemo(() => {\n    return options?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_0_${item._id}`}\n          item={item}\n          index={index}\n          selectedIds={selectedIds}\n          onRemove={handleRemove}\n        />\n      );\n    });\n  }, [handleRemove, options, selectedIds]);\n\n  useEffect(() => {\n    if (defaultData) {\n      setSelectedIds(defaultData);\n    }\n  }, [defaultData]);\n\n  return (\n    <FlexBox fillWidth gap={6}>\n      <CustomSelect\n        treeMode\n        dropDownIsAbsolute\n        defaultValue={defaultData}\n        {...{\n          label: translate('categories'),\n          placeholder: translate('categories'),\n          required: true,\n          options,\n        }}\n        onSelect={handleSelect}\n      />\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} gap={8}>\n        {renderTreeData}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n\nconst ListItem: React.FC<{\n  item: IDirItemBase;\n  lvl?: number;\n  index?: number;\n  onRemove?: (id: string) => void;\n  selectedIds: string[];\n}> = ({\n  item,\n  index = 0,\n  lvl = 0,\n  selectedIds,\n  onRemove = () => {\n    console.log('onRemove not passed', lvl);\n  },\n}) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          onRemove={onRemove}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, onRemove, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <TagItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n          <ButtonIcon\n            variant={'onlyIcon'}\n            endIcon={'close'}\n            size={'24px'}\n            endIconSize={'80%'}\n            onClick={() => onRemove && onRemove(item._id)}\n          />\n        </TagItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n\nconst TagItem = styled(FlexBox)`\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.accentColor.base};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\nexport default FormProductCategories;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector, useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../utils/data-transform';\nimport FormProductCategories from '../Forms/offers/FormProductCategories';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\n\nexport interface FormSelectCategoriesOverlayProps extends OverlayHandlerReturn {}\n\nconst FormProductCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const { currentOffer } = useProductsSelector();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<string[]>([]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentOffer &&\n      service.updateById({\n        data: { ...getIdRef(currentOffer), data: { categories: state }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  const canSubmit = useMemo(() => {\n    const initialString = currentOffer?.categories?.map(c => c._id)?.toString();\n    const currentString = state.toString();\n\n    return initialString !== currentString;\n  }, [currentOffer?.categories, state]);\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setState(currentOffer?.categories.map(c => c._id));\n    }\n  }, [currentOffer?.categories]);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader title={'Категорії'} onBackPress={onClose} canSubmit={canSubmit} okButton />\n\n      <Content padding={'0 0 8px 0'} flex={1}>\n        <FormProductCategories onChange={setState} options={directory} defaultData={state} />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductCategoriesOverlay;\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../redux/selectors.store';\nimport { ApiDirType } from '../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport FormProductCategoriesOverlay from '../../Overlays/FormSelectCategoriesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { IProductCategoryDirItem } from '../../../types/dir.types';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: IProductCategoryDirItem;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import FlexBox from './FlexBox';\nimport ButtonIcon from './ButtonIcon/ButtonIcon';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useTheme } from 'styled-components';\nimport { Text } from './Text';\nimport { IconIdType } from '../../img/sprite';\nimport { LangPack } from '../../lang';\nimport { checks } from '../../utils';\n\nexport interface ChangerOption<T = any, D = any> {\n  _id?: string;\n  value: T;\n  data?: D;\n  color?: string;\n  icon?: IconIdType;\n  backgroundColor?: string;\n  label?: string;\n  lang?: LangPack;\n}\n\nexport interface StatusChangerProps<V = any, N = any> {\n  name?: N;\n  options?: ChangerOption<V>[];\n  onChange?: (event: ChangerEvent<V, N>) => void;\n  currentIndex?: number;\n  currentOption?: ChangerOption<V>;\n  colorIndicator?: boolean;\n  disabled?: boolean;\n}\n\nexport interface ChangerEvent<V = any, N = any> {\n  index: number;\n  name?: N;\n  value: ChangerOption<V>['value'];\n  option?: ChangerOption<V>;\n}\n\nconst Changer = <V = any,>({\n  options = [],\n  colorIndicator = true,\n  onChange,\n  currentOption,\n  currentIndex,\n  disabled,\n  name,\n}: StatusChangerProps<V>): JSX.Element => {\n  const [current, setCurrent] = useState<number>(0);\n  const currentStatus = useMemo(() => (options ? options[current] : null), [current, options]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    if (checks.isFun(onChange) && checks.isUnd(currentOption ?? currentIndex)) {\n      console.warn('Changer', 'You try to use uncontrolled \"Changer\" component\\n', 'You need to pass option or index');\n    }\n  }, [onChange, currentOption, currentIndex]);\n  const handleChange = (increment: number) => () => {\n    if (checks.isFun(onChange)) {\n      const newIndex = current + increment;\n      onChange({ index: newIndex, value: options[newIndex]?.value, option: options[newIndex] });\n      return;\n    }\n\n    if (current >= 0 && current + 1 <= options?.length) {\n      setCurrent(prev => prev + increment);\n    }\n  };\n  useEffect(() => {\n    if (!checks.isUnd(currentIndex) && current >= 0 && current + 1 <= options.length) {\n      setCurrent(currentIndex);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentIndex]);\n\n  useEffect(() => {\n    if (!checks.isUnd(currentOption)) {\n      const index = options.findIndex(o => {\n        if (currentOption?.value) {\n          return o?.value === currentOption?.value;\n        } else if (currentOption?._id) {\n          return o?._id === currentOption?._id;\n        }\n        return false;\n      });\n\n      index >= 0 && index !== current && setCurrent(index);\n    }\n\n    // eslint-disable-next-line\n  }, [currentOption]);\n\n  return (\n    <FlexBox fxDirection={'row'} fillWidth height={'28px'} alignItems={'center'} gap={8}>\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowLeft'}\n        iconSize={'28px'}\n        disabled={disabled || current === 0}\n        onClick={handleChange(-1)}\n      />\n\n      <FlexBox\n        flex={1}\n        alignItems={'stretch'}\n        justifyContent={'center'}\n        overflow={'hidden'}\n        style={{\n          borderRadius: 2,\n          backgroundColor: theme.fieldBackgroundColor,\n          color: theme.fontColorSidebar,\n          height: '100%',\n        }}\n      >\n        <FlexBox fillWidth fxDirection={'row'} justifyContent={'center'} alignItems={'center'} flex={1}>\n          <Text $size={15} $weight={600} className={'inner'} $ellipsisMode={true}>\n            {currentStatus?.label}\n          </Text>\n        </FlexBox>\n\n        {colorIndicator && currentStatus?.color && (\n          <FlexBox fillWidth height={'4px'} style={{ backgroundColor: currentStatus?.backgroundColor }} />\n        )}\n      </FlexBox>\n\n      <ButtonIcon\n        variant={'onlyIconNoEffects'}\n        icon={'SmallArrowRight'}\n        iconSize={'28px'}\n        disabled={disabled || current + 1 === options.length}\n        onClick={handleChange(1)}\n      />\n    </FlexBox>\n  );\n};\nexport default Changer;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport CustomSelect from '../atoms/Inputs/CustomSelect/CustomSelect';\nimport { t } from '../../lang';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface FormSelectPropertiesProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  update?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentOffer = offer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [currentId, setCurrentId] = useState<string>(templates[0]?._id);\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const canSubmit = useMemo(() => {\n    return currentOffer?.properties?.map(p => p._id).join(',') !== selectedIds.join(',');\n  }, [currentOffer?.properties, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = update ?? currentOffer?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentOffer?._id, onClose, onSubmit, selectedIds, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentId?: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n        onChange && onChange(newData);\n        onSelect && onSelect(id);\n\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (currentOffer?.properties) {\n      setSelectedIds(currentOffer?.properties.map(p => p._id));\n    }\n  }, [currentOffer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        title={(title || templateData?.label) ?? ''}\n        okButton\n      />\n\n      <CustomSelect\n        label={t('Available templates')}\n        options={templates}\n        selectedValue={currentId}\n        onSelect={option => {\n          setCurrentId(option?._id);\n        }}\n      />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>`\n  //display: grid;\n  //grid-template-columns: repeat(auto-fill, 25%);\n  //\n  //@media screen and (max-width: 480px) {\n  //  grid-template-columns: repeat(auto-fill, 50%);\n  //}\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  //width: 100%;\n  //min-width: unset;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { IProperty } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: IProperty;\n  selectedItems?: string[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedItems }) => {\n  const renderValues = useMemo(() => {\n    return item.childrenList\n      ?.filter(el => selectedItems?.includes(el._id))\n      ?.map((value, index) => {\n        return (\n          <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n            {value.label}\n          </CellStyledComp.CategoryItem>\n        );\n      });\n  }, [item.childrenList, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OfferOverviewDefaultsCell } from './OfferOverviewDefaultsCell';\nimport { OfferOverviewImagesCell } from './OfferOverviewImagesCell';\nimport { OfferOverviewCategoriesCell } from './OfferOverviewCategoriesCell';\nimport { OfferOverviewStatusChangerCell } from './OfferOverviewStatusChangerCell';\nimport { OverviewTextCell } from './OverviewTextCell';\nimport { OfferOverviewStaticProperties } from './OfferOverviewStaticPropertiesCell';\nimport { OrderOverviewGroupInfo } from './OrderOverviewGroupInfo';\nimport { OrderOverviewInvoicing } from './OrderOverviewInvoicing';\nimport { OrderOverviewDelivery } from './OrderOverviewDelivery';\nimport { OrderOverviewCustomerInfo } from './OrderOverviewCustomerInfo';\nimport { OrderOverviewTotals } from './OrderOverviewTotals';\n\nexport const OverviewCells = {\n  Text: OverviewTextCell,\n  OfferStatusChanger: OfferOverviewStatusChangerCell,\n  OfferDefaults: OfferOverviewDefaultsCell,\n  OfferImages: OfferOverviewImagesCell,\n  OfferCategories: OfferOverviewCategoriesCell,\n  OfferStaticProperties: OfferOverviewStaticProperties,\n  OrderGroupInfo: OrderOverviewGroupInfo,\n  OrderCustomerInfo: OrderOverviewCustomerInfo,\n  OrderInvoicing: OrderOverviewInvoicing,\n  OrderDelivery: OrderOverviewDelivery,\n  OrderTotals: OrderOverviewTotals,\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity, OfferStatusEnum } from '../../../types/offers/offers.types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { getStatusData } from '../../../data/statuses.data';\nimport { offerStatusesData } from '../../../data/offers.data';\nimport { ToastService } from '../../../services';\nimport FlexBox from '../../atoms/FlexBox';\nimport Changer from '../../atoms/Changer';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport { t } from '../../../lang';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { CellStyledComp } from './CellStyles';\nimport { useOfferOverviewLoaders } from '../../AppPages/PageProductOverview/PageOfferOverview';\n\nexport const OfferOverviewStatusChangerCell: RenderOverviewCellComponent<OfferEntity> = ({ cell, data }) => {\n  const loaders = useOfferOverviewLoaders();\n\n  const [canEdit, setCanEdit] = useState(false);\n  const [current, setCurrent] = useState<OfferStatusEnum | undefined>(data?.approved);\n\n  const service = useAppServiceProvider()[ServiceName.products];\n\n  const currentStatusData = useMemo(() => getStatusData(current), [current]);\n\n  const canAccept = useMemo(() => {\n    return current !== data?.approved;\n  }, [current, data?.approved]);\n  const handleCancelPress = () => {\n    setCurrent(data?.approved ?? (offerStatusesData[0].value as never));\n    setCanEdit(false);\n  };\n\n  const handleAcceptPress = () => {\n    service.updateById({\n      data: { _id: data?._id, data: { approved: current }, refreshCurrent: true },\n      onSuccess: () => {\n        setCanEdit(false);\n        ToastService.success('Product updated');\n      },\n      onLoading: loaders?.onLoading('offer'),\n    });\n  };\n\n  useEffect(() => {\n    if (data?.approved) {\n      setCurrent(data.approved);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader\n        title={cell?.title}\n        onCancelPress={handleCancelPress}\n        onEditPress={() => setCanEdit(true)}\n        editMode={canEdit}\n      />\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        justifyContent={'flex-end'}\n        alignItems={'stretch'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n        gap={8}\n      >\n        {canEdit ? (\n          <>\n            <Changer\n              disabled={!canEdit}\n              options={offerStatusesData}\n              currentOption={{ value: current }}\n              onChange={e => setCurrent(e?.value as never)}\n            />\n\n            <FlexBox fxDirection={'row'} gap={8} fillWidth>\n              <ButtonIcon variant={'outlinedSmall'} disabled={!canAccept} onClick={handleCancelPress}>\n                {t('Cancel')}\n              </ButtonIcon>\n\n              <ButtonIcon variant={'filledSmall'} disabled={!canAccept} onClick={handleAcceptPress}>\n                {t('Ok')}\n              </ButtonIcon>\n            </FlexBox>\n          </>\n        ) : (\n          <CellStyledComp.Tag\n            style={{\n              alignSelf: 'flex-end',\n              borderColor: currentStatusData?.colorSecondary,\n              backgroundColor: currentStatusData?.colorSecondary,\n            }}\n          >\n            <CellStyledComp.CellText $isTitle={!current} $weight={600} $align={'right'}>\n              {t(current || 'undefined')}\n            </CellStyledComp.CellText>\n          </CellStyledComp.Tag>\n        )}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport FormProductDefaultsOverlay from '../../Overlays/FormProductDefaultsOverlay';\n\nimport { OfferPriceEntity } from '../../../types/price-management/priceManagement.types';\nimport { MaybeNull } from '../../../types/utils.types';\nimport { toPrice } from '../../../utils/numbers';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: OfferPriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../Overlays/FormProductImagesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} disabled />\n          ))}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { useProductsSelector } from '../../../redux/selectors.store';\nimport React, { useMemo, useState } from 'react';\nimport FormSelectPropertiesOverlay from '../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { OverviewPropertyComponent } from './OverviewPropertyComponent';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const templates = useProductsSelector().properties;\n  // ! setCurrentId\n  const [currentId] = useState<string>(templates[0]?._id);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const availableProperties = useMemo(() => {\n    return template?.childrenList?.filter(prop => !prop.isSelectable);\n  }, [template?.childrenList]);\n\n  const selectedItems = useMemo(() => {\n    return data?.properties?.map(p => p._id);\n  }, [data?.properties]);\n\n  const renderProperties = useMemo(() => {\n    return availableProperties?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, selectedItems, data }}\n        />\n      );\n    });\n  }, [availableProperties, overlayHandler, selectedItems, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {renderProperties && renderProperties?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n\n        {/*{renderPropertiesFromVariations}*/}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { Text } from '../../atoms/Text';\nimport { t } from '../../../lang';\n\nexport const OrderOverviewGroupInfo: RenderOverviewCellComponent<OrderEntity> = ({ cell, overlayHandler, data }) => {\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={cell?.title} />\n\n      {data?.group?.magicLink ? (\n        <Text>{data?.group?.magicLink}</Text>\n      ) : (\n        <CellStyledComp.CellText>{t('undefined')}</CellStyledComp.CellText>\n      )}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { t } from '../../../lang';\nimport { useMemo } from 'react';\nimport { OverviewCellHeader } from './OverviewCellHeader';\n\nexport const OrderOverviewCustomerInfo: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const customer = data?.customer;\n\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      {\n        label: t('First name'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Second name'),\n        value: customer?.name?.second,\n        visible: customer?.businessType !== 'company',\n      },\n      {\n        label: t('Middle name'),\n        value: customer?.name?.middle,\n        visible: customer?.businessType !== 'company',\n      },\n\n      {\n        label: t('Base label'),\n        value: customer?.name?.first,\n        visible: customer?.businessType !== 'person',\n      },\n      { label: t('Print'), value: customer?.name?.second, visible: customer?.businessType !== 'person' },\n\n      { label: t('Email'), value: customer?.email, visible: true },\n      { label: t('Phone'), value: customer?.phone, visible: true },\n\n      { label: t('Business type'), value: customer?.businessType, visible: true },\n      { label: t('Sex type'), value: customer?.sexType, visible: true },\n\n      { label: t('Engagement type'), value: customer?.engagementSource, visible: true },\n\n      { label: t('Age'), value: customer?.age, visible: true },\n\n      { label: t('Tags'), value: null, visible: true },\n    ];\n\n    return cells.map(cell => {\n      return (\n        cell.visible && (\n          <FlexBox\n            key={cell.label}\n            fxDirection={'row'}\n            padding={'6px'}\n            gap={8}\n            alignItems={'center'}\n            justifyContent={'space-between'}\n          >\n            <Text $size={11}>{cell?.label}</Text>\n            <Text $size={13} $weight={500}>\n              {cell?.value ?? t('undefined')}\n            </Text>\n          </FlexBox>\n        )\n      );\n    });\n  }, [data?.customer]);\n\n  return (\n    <CellStyledComp.Cell>\n      {cell?.title && <OverviewCellHeader title={cell?.title} />}\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { useMemo } from 'react';\nimport { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { OverviewCellHeader } from './OverviewCellHeader';\n\nexport const OrderOverviewInvoicing: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { t } from '../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { OverviewCellHeader } from './OverviewCellHeader';\n\nexport const OrderOverviewDelivery: RenderOverviewCellComponent<OrderEntity> = ({ cell, data }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Count'), value: data?.deliveries?.length },\n    ];\n    return cells.map(cell => {\n      return (\n        <FlexBox\n          key={cell.label}\n          fxDirection={'row'}\n          padding={'6px'}\n          gap={8}\n          alignItems={'center'}\n          justifyContent={'space-between'}\n        >\n          <Text $size={11}>{cell?.label}</Text>\n          <Text $size={13} $weight={500}>\n            {cell?.value ?? t('undefined')}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.deliveries?.length]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={t('General info')} />\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport { OrderEntity } from '../../../types/orders/orders.types';\nimport { CellStyledComp } from './CellStyles';\nimport { OverviewCellHeader } from './OverviewCellHeader';\nimport { t } from '../../../lang';\nimport { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { numberWithSpaces } from '../../../utils';\nimport { Text } from '../../atoms/Text';\n\nexport const OrderOverviewTotals: RenderOverviewCellComponent<OrderEntity> = ({ data, cell }) => {\n  const renderCells = useMemo(() => {\n    const cells: { label: string; value?: React.ReactNode; visible?: boolean }[] = [\n      { label: t('Amount'), value: numberWithSpaces(data?.total?.amount) },\n      { label: t('Items count'), value: data?.total?.items },\n    ];\n    return cells.map(cell => (\n      <FlexBox fxDirection={'row'} padding={'6px'} justifyContent={'space-between'} fillWidth gap={8}>\n        <Text $size={11}>{cell.label}</Text>\n        <CellStyledComp.CellText $weight={600}>{cell?.value}</CellStyledComp.CellText>\n      </FlexBox>\n    ));\n  }, [data?.total?.amount, data?.total?.items]);\n\n  return (\n    <CellStyledComp.Cell>\n      <OverviewCellHeader title={cell.title} />\n\n      {renderCells}\n    </CellStyledComp.Cell>\n  );\n};\n","import { LangKeyEnum } from '../../lang';\nimport React, { useMemo } from 'react';\nimport { enumToFilterOptions } from '../../utils/fabrics';\nimport ButtonsGroup from './ButtonsGroup';\n\nconst LangButtonsGroup = ({ onChange, disabled }: { onChange?: (value: LangKeyEnum) => void; disabled?: boolean }) => {\n  const options = useMemo(() => enumToFilterOptions(LangKeyEnum), []);\n\n  return <ButtonsGroup disabled={disabled} options={options} onSelect={info => onChange && onChange(info.value)} />;\n};\n\nexport default LangButtonsGroup;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseItemEntity, IWarehouse } from '../types/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email') },\n    bottom: { name: t('phone') },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["PageCurrentOrderCTX","createContext","useOverlayService","useContext","_ref","children","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","useCallback","id","pStack","filter","el","clearStack","createOverlayComponent","params","concat","RenderComponent","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","_objectSpread","onClose","compId","value","getStack","remove","open","_jsx","Provider","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","globals","timingFunctionMain","backgroundColorLight","isVisible","TabBox","_templateObject2","modalBorderColor","_page$currentOffer","_page$currentOffer2","toggleVisibility","page","usePageCurrentProduct","Variations","currentTab","setCurrentTab","renderTab","useMemo","_tabs","_tabs$currentTab","currentOffer","tabs","_defineProperty","VariationsTab","withActions","Warehousing","WarehousingTab","Prices","PricesTab","_jsxs","overflow","fillHeight","ModalHeader","onBackPress","renderTitle","padding","fxDirection","alignItems","justifyContent","gap","Text","$weight","$size","label","sku","fillWidth","flex","TabSelector","filterOptions","defaultValue","onOptSelect","_","index","preventFilter","ProductOverviewTabsEnum","ProductOverviewTabsList","Container","sideBarBackgroundColor","Content","sideBarBorderColor","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","_p$product","className","_objectWithoutProperties","_excluded","router","useAppRouter","offer","overlaySrv","General","renderCells","_offerOverviewCellsMa","offerOverviewCellsMap","map","_ref2","CellComponent","cell","_excluded2","overlayHandler","data","title","OverviewCells","OverlayHeader","t","goBack","optionProps","fitContentH","option","replace","hash","size","variant","iconSize","icon","disabled","onEdit","onClick","product","visible","onHide","onDelete","margin","onRefresh","onOpenRightSide","productOverviewCells","getValue","gridArea","tab","approved","type","barCode","_data$brand","brand","measurement","JSON","parse","unit","min","max","step","join","e","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","Properties","Defaults","_product$author","author","email","createdAt","checks","toAppDateFormat","Date","_product$editor","editor","updatedAt","Images","forEach","item","push","OverlayStack","onOverlayBackdropClick","ev","target","currentTarget","renderOverlayStack","props","OverlayBox","style","zIndex","overlayId","Backdrop","isActive","length","backdropColor","LeftSide","toggleRightSideVisibility","loaders","useOfferOverviewLoaders","modalS","useModalProvider","productsS","useAppServiceProvider","products","ProductOverviewXL","openModal","Modal","Modals","_id","_page$currentOffer3","getProductFullInfo","onLoading","useLoadersProvider","Page","takeFullGridArea","path","useLoaders","content","isRightSideVisible","setIsRightSideVisible","toggleRightSide","LoadersProvider","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","PageCurrentProductCTX","service","ServiceName","useAppParams","offerId","useCurrentOffer","useEffect","_loaders$isLoading","isLoading","finally","clearCurrent","undefined","onSelect","selected","_ref$withActions","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","refresh","update","wrap","_context","next","abrupt","getAllPrices","refreshCurrent","updateCurrent","stop","_x","apply","arguments","tableConfig","tableData","prices","tableTitles","pricesColumnsForProductReview","onRowClick","rowData","getIdRef","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","separator","ModalChildren","FormCreatePrice","modalChildrenProps","TableList","isSearch","isFilter","PropertyBox","PropertyValuesBox","_PropertyItemStylesBy","_PropertyItemStylesBy2","cmsKey","PropertyItemStylesByCmsKey","numColumns","RenderPropertyValue","isSelected","ValueTag","fontWeight","_item$cmsConfigs","_ref$selectedIds","selectedIds","renderChildren","_item$childrenList","childrenList","paddingLeft","cmsConfigs","key","validation","yup","shape","required","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","price","out","FormContainer","fontColorSidebar","tableBackgroundColor","TemplateBox","Inputs","ExtraFooterBox","CmsConfigs","_templateObject6","CmsConfigsHeader","_templateObject7","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs2$l","_loaders$isLoading2","defaultState","onSubmit","create","templates","usePropertiesSelector","submitOptions","useAfterSubmitOptions","currentTemplate","_useState3","_useState4","selectedPropsMap","setSelectedPropsMap","_useMemo","_currentTemplate$chil","list","isSelectable","_propValuesMap","propertiesList","propertiesDataMap","Object","assign","pr","_pr$childrenList","val","propValuesDataMap","formMethods","useAppForm","defaultValues","toVariationFormData","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","reset","console","log","values","canSubmit","_step","_sorted","entries","sort","localeCompare","_labels","_iterator","_createForOfIteratorHelper","s","n","done","err","f","onValid","updateVariationById","toVariationReqData","onSuccess","onError","ToastService","then","createVariation","state","close","clear","handleSelect","parentId","handleClearMap","renderTemplate","prop","OfferVariationPropertySelector","onReset","okButton","InputLabel","InputText","placeholder","LangButtonsGroup","OverlayFooter","loading","resetButtonShown","submitButtonText","extraFooter","FormAfterSubmitOptions","getAllVariationsByProductId","variationsTableTitles","_currentOffer$variati","variations","_step2","propsList","properties","_iterator2","_prop$parent","propId","parent","createTableTitlesFromProperties","transformData","transformVariationTableData","window","confirm","_currentOffer$variati2","dataForUpdate","v","CreateVariationOverlay","currentProduct","useProductsSelector","setLoading","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","CellStyledComp","CategoryItem","field","backgroundColor","OverviewCellHeader","_ref$title","_ref$openOverlayButto","openOverlayButtonTitle","onOpenOverlayPress","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","height","marginRight","types","counterparties","useDirectorySelector","ApiDirType","directory","filteredData","c","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","FormProductDefaultsTabs","Form","modalBackgroundColor","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","_tabsMap","_tabsMap$tabs$current","_tabs$currentTabIdx","warehouse","WarehousesTab","variation","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx$v","_tabs$currentTabIdx2","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","tabIs","fData","setDefaults","toReqData","meta","currentIndex","onChangeIndex","hasLoading","onCreatePress","images","setState","useTheme","preventDefault","updateById","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","ListItem","_item$parent","_item$parent2","_ref2$lvl","lvl","_ref2$onRemove","onRemove","_Fragment","TagItem","endIcon","endIconSize","options","onChange","defaultData","setSelectedIds","newData","handleRemove","renderTreeData","CustomSelect","treeMode","dropDownIsAbsolute","translate","flexWrap","_currentOffer$categor","_currentOffer$categor2","categories","toString","OverlayForm","FormProductCategories","NotActiveTreeDataItem","_ref$options","_ref$colorIndicator","colorIndicator","currentOption","current","setCurrent","currentStatus","warn","handleChange","increment","_options$newIndex","newIndex","findIndex","o","borderRadius","color","$ellipsisMode","PropertyValuesList","light","_templates$","template","setCurrentId","_useState5","_useState6","templateData","_currentOffer$propert","event","_meta","debug","_templateData$childre","_prop$childrenList","selectedValue","OverviewPropertyComponent","selectedItems","renderValues","_item$childrenList$fi","maxWidth","minHeight","OfferStatusChanger","canEdit","setCanEdit","currentStatusData","getStatusData","handleCancelPress","_data$approved","offerStatusesData","Changer","alignSelf","borderColor","colorSecondary","$align","OfferDefaults","renderVariationTags","_variation$properties","_item$value","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","commission","percentage","markup","createPriceOverviewTagsData","FormProductDefaultsOverlay","fontColorHeader","code","info","OfferImages","renderImageSets","_data$images","set","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","OfferCategories","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","FormProductCategoriesOverlay","OfferStaticProperties","availableProperties","_template$childrenLis","_data$properties","renderProperties","FormSelectPropertiesOverlay","OrderGroupInfo","_data$group","_data$group2","group","magicLink","OrderCustomerInfo","_customer$name","_customer$name2","_customer$name3","_customer$name4","_customer$name5","customer","first","businessType","second","middle","phone","sexType","engagementSource","age","_cell$value","OrderInvoicing","_data$deliveries2","_data$deliveries","deliveries","OrderDelivery","OrderTotals","_data$total3","_data$total4","_data$total","_data$total2","numberWithSpaces","total","items","LangKeyEnum","ButtonsGroup","top","getData","rd","bottom","width","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","user","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}