{"version":3,"file":"static/js/226.1fa06f17.chunk.js","mappings":"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","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/offers/tabs/SalesTab.tsx","components/AppPages/offers/tabs/LinksTab.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Overlays/FromSelectCategoriesOverlay.tsx","components/Overviews/offer/components/OfferOverviewCategoriesArea.tsx","components/Overlays/FormSelectPropertiesDrawer.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormOfferDefaultsDrawer.tsx","components/Overlays/FormOfferImagesOverlay.tsx","components/Overlays/FormSelectOfferTagsDrawer.tsx","components/Overviews/offer/OfferOverviewXL.tsx","components/Overviews/offer/components/OfferOverviewStaticPropertiesArea.tsx","components/Overviews/offer/components/OfferOverviewTagsArea.tsx","components/Overviews/offer/components/OfferOverviewDefaultsArea.tsx","components/Overviews/offer/components/OfferOverviewImagesArea.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewAreaHeader.tsx","components/Overviews/components/OverviewTextArea.tsx","components/atoms/OverlayBase.tsx","data/warehauses.data.ts"],"sourcesContent":["import { CreatedOverlay, useOverlayService } from './OverlayStackProvider';\nimport React, { createContext, MouseEventHandler, useCallback, useContext, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport interface OverlayLocalValue extends CreatedOverlay {}\nexport const OverlayLocalCTX = createContext<OverlayLocalValue>({});\nexport const useOverlay = () => useContext(OverlayLocalCTX);\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <OverlayLocalCTX.Provider\n            value={{\n              onClose: () => {\n                overlaySrv.remove(id);\n              },\n              compId: id,\n              index: index,\n            }}\n          >\n            <RenderComponent\n              key={`overlay-${id}`}\n              {...props}\n              onClose={() => {\n                overlaySrv.remove(id);\n              }}\n              compId={id}\n              index={index}\n            />\n          </OverlayLocalCTX.Provider>\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 200;\n\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  background-color: ${p => p.theme.backdropColorDark};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  height: 100%;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  create: OverlayCreator;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\n\nexport type OverlayCreator = <Props = any>(\n  Component: React.FC<OverlayRenderComponentProps<Props>>,\n  props?: OverlayRenderComponentProps<Props>\n) => CreatedOverlay;\n\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n    create: (Component, props) => createOverlayComponent({ RenderComponent: Component, props }),\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { PriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { OnlyUUID } from 'redux/app-redux.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport CreatePriceModal from '../../../Modals/CreatePriceModal';\nimport { pricesColumnsForProductReview } from '../../../../data/priceManagement.data';\nimport { IBase } from '../../../../types/utils.types';\nimport { useAppDispatch } from '../../../../redux/store.store';\nimport { getPriceThunk } from '../../../../redux/priceManagement/priceManagement.thunks';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ _id: offerId });\n  const [selectedRow, setSelectedRoe] = useState<IBase>();\n  const loaders = useLoadersProvider<'prices' | 'price' | 'discounts' | 'discount'>();\n  const dispatch = useAppDispatch();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  const tableConfig = useMemo((): ITableListProps<PriceEntity> => {\n    return {\n      onRowClick: data => {\n        setSelectedRoe(data?.rowData);\n\n        if (onSelect) {\n          onSelect({ _id: data?.rowId || data?.rowData?._id || '' });\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id || selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: true },\n              { icon: 'copy', type: 'onlyIcon', disabled: true },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  dispatch(\n                    getPriceThunk({\n                      data: { params: { _id: currentId } },\n                      onLoading: loaders.onLoading('price', undefined, { content: 'Refreshing price info...' }),\n                      onSuccess: () => {\n                        modalS.open({\n                          ModalChildren: CreatePriceModal,\n                          modalChildrenProps: {\n                            offer: currentOffer,\n                            updateId: currentId,\n                          },\n                        });\n                      },\n                    })\n                  );\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: CreatePriceModal,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [withActions, onSelect, selectedRow?._id, loadData, dispatch, loaders, modalS, currentOffer]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n      tableData={currentOffer?.prices}\n      tableTitles={pricesColumnsForProductReview}\n    />\n  );\n};\n\nexport default PricesTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useOffersSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} hasSearch={false} hasFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import FlexBox from '../../../atoms/FlexBox';\nimport { OfferOverviewAddsTabProps } from './types';\nimport { Text } from '../../../atoms/Text';\n\ninterface OfferSalesTabProps extends OfferOverviewAddsTabProps {}\nexport const SalesTab = (props: OfferSalesTabProps) => {\n  return (\n    <FlexBox padding={'16px'}>\n      <Text $size={16} $weight={600}>\n        In work\n      </Text>\n    </FlexBox>\n  );\n};\n","import { useLinksSelector } from '../../../../redux/selectors.store';\nimport TableList from '../../../TableList/TableList';\nimport { createAuthorColumn, createDateColumn, createEditorColumn } from '../../../../utils';\nimport { OfferOverviewAddsTabProps } from './types';\nimport { useAppDispatch } from '../../../../redux/store.store';\nimport { useEffect } from 'react';\nimport { getAllLinksThunk } from '../../../../redux/tracking/links/links.thunks';\nimport { t } from '../../../../lang';\n\nexport const LinksTab = ({ selected }: OfferOverviewAddsTabProps) => {\n  const dispatch = useAppDispatch();\n  const state = useLinksSelector();\n  const _offerId = selected?._id;\n\n  useEffect(() => {\n    dispatch(\n      getAllLinksThunk({\n        params: { offerId: _offerId },\n      })\n    );\n  }, [_offerId, dispatch]);\n\n  return (\n    <TableList\n      actionsCreator={() => {\n        return [\n          {\n            title: 'refresh',\n            icon: 'refresh',\n            type: 'onlyIcon',\n            onClick: () => {\n              dispatch(\n                getAllLinksThunk({\n                  params: { offerId: _offerId },\n                })\n              );\n            },\n          },\n        ];\n      }}\n      tableData={state.list}\n      tableTitles={[\n        {\n          top: { name: 'Offer label', getData: rd => rd.offer?.label },\n          bottom: { name: 'SKU', getData: rd => rd.offer?.sku },\n          action: 'valueByPath',\n          width: '250px',\n        },\n\n        {\n          top: { name: 'Slash tag', getData: rd => rd.slashTag },\n          bottom: { name: 'Unic code', getData: rd => rd.code },\n          action: 'valueByPath',\n          width: '150px',\n        },\n\n        {\n          top: { name: 'Sales', getData: rd => rd.stats?.sales, align: 'end' },\n          bottom: { name: 'Refunds', getData: rd => rd.stats?.refunds, align: 'end' },\n          action: 'valueByPath',\n          width: '100px',\n        },\n\n        {\n          top: { name: 'Clicks', getData: rd => rd.stats?.clicks, align: 'end' },\n          bottom: { name: 'Errors', getData: rd => rd.stats?.errors, align: 'end' },\n          action: 'valueByPath',\n          width: '100px',\n        },\n\n        {\n          top: { name: 'Status', getData: rd => (rd.isActive ? 'Active' : 'Not active') },\n          bottom: { name: 'Is deleted', getData: rd => (rd.deletedAt ? t('Yes') : t('No')) },\n          action: 'valueByPath',\n          width: '125px',\n        },\n\n        {\n          top: { name: 'Device ID', getData: rd => rd.deviceId },\n          bottom: { name: 'Cookies ID', getData: rd => rd.cookiesId },\n          action: 'valueByPath',\n          width: '250px',\n        },\n\n        {\n          top: { name: 'Domain', getData: rd => rd.referer },\n          bottom: { name: 'Url referer', getData: rd => rd.domain },\n          action: 'valueByPath',\n          width: '210px',\n        },\n        {\n          top: { name: 'Ip address', getData: rd => rd.ip },\n          bottom: { name: 'User agent', getData: rd => rd.userAgent },\n          action: 'valueByPath',\n          width: '450px',\n        },\n\n        {\n          top: { name: 'Url', getData: rd => rd.url },\n          bottom: { name: 'Destination Url', getData: rd => rd.destinationUrl },\n          action: 'valueByPath',\n          width: '450px',\n        },\n\n        createAuthorColumn(),\n        createEditorColumn(),\n        createDateColumn(),\n      ]}\n    ></TableList>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { SalesTab } from './tabs/SalesTab';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { OfferOverlayLoaderKey } from '../../Overlays/FormOfferDefaultsDrawer';\nimport { LoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { DrawerHeader } from '../../Overlays';\nimport { LinksTab } from './tabs/LinksTab';\n\nenum RightSideOptionEnum {\n  Prices = 'Prices',\n  Variations = 'Variations',\n  Warehousing = 'Warehousing',\n  Sales = 'Sales',\n  Links = 'Links',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(TabsList[0].value);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n      [RightSideOptionEnum.Sales]: <SalesTab withActions />,\n      [RightSideOptionEnum.Links]: <LinksTab withActions />,\n    };\n    return currentTab ? tabs?.[currentTab] ?? null : null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    value && setCurrentTab(value);\n  };\n\n  return (\n    <LoadersProvider value={loaders}>\n      <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n        {isVisible && (\n          <DrawerHeader\n            onBackPress={toggleVisibility}\n            renderTitle={\n              <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n                <Text $weight={600} $size={14}>\n                  {page?.currentOffer?.label}\n                </Text>\n\n                <Text $size={14} $weight={400}>\n                  {page?.currentOffer?.sku}\n                </Text>\n              </FlexBox>\n            }\n          />\n        )}\n\n        <TabSelector options={TabsList} onOptSelect={filterHandler} preventDefault />\n\n        <TabBox overflow={'hidden'} fillWidth flex={1}>\n          {renderTab}\n        </TabBox>\n      </RightSide>\n    </LoadersProvider>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  padding: 0 8px;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: ${p => (p.isVisible ? '0 12px 26px rgba(0, 0, 0, 0.25)' : '')};\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  //border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef, sortIds } from '../../utils';\nimport OfferCategoriesSelector from '../Forms/offers/categories/OfferCategoriesSelector';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { DrawerHeader, OverlayFooter, OverlayForm } from './index';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { useCurrentOffer } from '../../hooks';\n\nexport interface FormSelectCategoriesOverlayProps extends CreatedOverlay {}\n\nconst OfferCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const currentOffer = useCurrentOffer();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const loaders = useLoaders<'update'>({ update: { content: 'Loadings...' } });\n  const initIds = sortIds(currentOffer?.categories?.map(p => p._id));\n\n  const [categoriesIds, setCategoriesIds] = useState<string[]>(initIds);\n\n  const canSubmit = useMemo(() => {\n    return initIds?.join(',') !== sortIds(categoriesIds).join(',');\n  }, [initIds, categoriesIds]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    currentOffer &&\n      service.updateById({\n        onLoading: loaders.onLoading('update'),\n        data: { data: { ...getIdRef(currentOffer), data: { categories: categoriesIds } } },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setCategoriesIds(currentOffer?.categories.map(c => c._id));\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <DrawerHeader\n        title={'Категорії'}\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        okButton\n        isLoading={loaders.isLoading?.update}\n      />\n\n      <Content padding={'0 0 8px 0'} flex={1} overflow={'auto'}>\n        <OfferCategoriesSelector\n          onChangeIds={setCategoriesIds}\n          options={directory}\n          defaultData={categoriesIds}\n          offer={currentOffer}\n        />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} loading={loaders.isLoading?.update} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default OfferCategoriesOverlay;\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\nimport OfferCategoriesOverlay from '../../../Overlays/FromSelectCategoriesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { OfferCategoryEntity } from '../../../../types/dir.types';\nimport { useOverlayService } from '../../../../Providers/Overlay/OverlayStackProvider';\nimport { useModalService } from '../../../../Providers/ModalProvider/ModalProvider';\n\nexport const OfferOverviewCategoriesArea: RenderOverviewAreaComponent<OfferEntity> = ({ cell, data }) => {\n  const overlaySrv = useOverlayService();\n  const modalSrv = useModalService();\n\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map(c => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <AreaStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewAreaHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          if (overlaySrv.create) {\n            overlaySrv.create(OfferCategoriesOverlay);\n          } else {\n            modalSrv.create(OfferCategoriesOverlay);\n          }\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </AreaStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: OfferCategoryEntity;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <AreaStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </AreaStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { DrawerHeader, OverlayFooter, OverlayForm } from './index';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport { PropertiesGroupEntity, PropertyEntity } from '../../types/offers/properties.types';\nimport OfferPropertySelector from '../Forms/offers/variations/OfferPropertySelector';\nimport { PropertiesFilterData, PropertiesGroupSelector } from '../atoms/PropertiesGroupSelector';\nimport { useCurrentOffer } from '../../hooks';\nimport { sortIds } from '../../utils';\nimport { t } from '../../lang';\nimport { CreatedDrawer } from '../../Providers/Drawer';\n\nexport interface FormSelectPropertiesProps\n  extends CreatedDrawer,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  updateId?: string;\n\n  filterValue?: Partial<PropertiesFilterData>;\n}\n\nconst FormSelectPropertiesDrawer: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  updateId,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const Offer = useCurrentOffer(offer);\n  const state = useOffersSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n\n  const initialTemplate = useMemo(() => {\n    if (!Offer?.template) {\n      const id = Offer?.properties?.[0]?.path?.split('.')?.[0];\n\n      return id ? { _id: id } : undefined;\n    }\n\n    // return undefined;\n    return Offer?.template;\n  }, [Offer?.properties, Offer?.template]);\n\n  const [currentTemplate, setCurrentTemplate] = useState<PropertiesGroupEntity | undefined>();\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const initState = useMemo(() => {\n    return sortIds(Offer?.properties?.map(prop => prop._id));\n  }, [Offer?.properties]);\n\n  useEffect(() => {\n    if (initState?.length) {\n      setSelectedIds(initState);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const propertiesList = useMemo(() => {\n    if (currentTemplate?.childrenList?.length) {\n      return currentTemplate?.childrenList.filter(item => !item.isSelectable);\n    }\n\n    const _rootId = currentTemplate?._id;\n    if (!_rootId) return undefined;\n    const _propertiesList: PropertyEntity[] = [];\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId];\n    if (!_propertiesIds) return undefined;\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop && !prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, currentTemplate?.childrenList, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const canSubmit = useMemo(() => {\n    return sortIds(initState)?.join(',') !== sortIds(selectedIds).join(',');\n  }, [initState, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      const id = updateId ?? Offer?._id;\n      if (id) {\n        service.updateById({\n          data: { data: { _id: id, data: { propertiesIds: selectedIds, templateId: currentTemplate?._id } } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Offer updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [Offer?._id, currentTemplate?._id, onClose, onSubmit, selectedIds, service, updateId]\n  );\n\n  const handleSelect = useCallback((_parentId?: string, valueId: string = '') => {\n    setSelectedIds(prev => {\n      return prev.includes(valueId) ? prev.filter(el => el !== valueId) : [...prev, valueId];\n    });\n  }, []);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferPropertySelector key={`prop_${prop._id}`} item={prop} selectedIds={selectedIds} onSelect={handleSelect} />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  useEffect(() => {\n    if (Offer?.properties) {\n      setSelectedIds(Offer?.properties.map(p => p._id));\n    }\n  }, [Offer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <DrawerHeader onBackPress={onClose} canSubmit={canSubmit} title={t('Properties')} okButton />\n\n      <PropertiesGroupSelector\n        onSelect={setCurrentTemplate}\n        filterValue={{ isSelectable: false }}\n        selected={currentTemplate}\n        defaultValue={initialTemplate}\n      />\n\n      <PropertiesBox flex={1} padding={'0 8px'} overflow={'auto'}>\n        {renderPropertiesList}\n      </PropertiesBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst PropertiesBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nexport default FormSelectPropertiesDrawer;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { PropertyEntity, PropertyValueEntity } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { AreaStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: PropertyEntity;\n  selectedIds?: string[];\n  items?: PropertyValueEntity[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedIds, items }) => {\n  const renderValues = useMemo(() => {\n    const _list = items?.length ? items : item.childrenList?.filter(el => selectedIds?.includes(el._id));\n\n    return _list?.map((value, index) => {\n      return (\n        <AreaStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n          {value.label}\n        </AreaStyledComp.CategoryItem>\n      );\n    });\n  }, [item.childrenList, selectedIds, items]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <AreaStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </AreaStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/app-redux.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList hasSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { WarehouseEntity } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormOfferDefaultsDrawer';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseEntity> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?.rowId) {\n            onSelect({ _id: data?.rowId });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList hasSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OfferDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { DrawerFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, getIdRef, ObjectFromEntries, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { Keys } from '../../types/utils.types';\nimport _ from 'lodash';\nimport { DrawerHeader } from './index';\n\nexport interface FormOfferDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<OfferDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum OfferDefaultFieldKeyEnum {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\n\nexport type OfferOverlayLoaderKey =\n  | keyof typeof OfferDefaultFieldKeyEnum\n  | `${keyof typeof OfferDefaultFieldKeyEnum}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(OfferDefaultFieldKeyEnum);\nfunction getFormDefaultValues(offer: OfferEntity) {\n  const map = new Map<OfferDefaultFieldKeyEnum, OnlyUUID>();\n\n  tabs.forEach(tab => {\n    const key = tab.value;\n    if (key) {\n      const field = key ? offer?.[key] : undefined;\n      if (field) map.set(key, getIdRef(field));\n    }\n  });\n\n  return ObjectFromEntries(map.entries());\n}\nconst FormOfferDefaultsDrawer: React.FC<FormOfferDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const Offer = useCurrentOffer({ _id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.offers];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, getValues, formValues, handleSubmit } = useAppForm<OfferDefaultsFormData>({\n    defaultValues: !Offer ? undefined : getFormDefaultValues(Offer),\n  });\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      const key = tabs[currentTabIdx].value;\n\n      key && setValue(key, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: OfferDefaultsFormData) => {\n    Offer?._id &&\n      productsS.updateById({\n        data: { data: { _id: Offer?._id, ...toReqData(fData) } },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n  const tabsMap = useMemo(() => {\n    const _tabsMap: Record<OfferDefaultFieldKeyEnum, React.FC> = {\n      [OfferDefaultFieldKeyEnum.warehouse]: () => (\n        <WarehousesTab withActions onSelect={handleSelect} selected={getValues('warehouse')} />\n      ),\n      [OfferDefaultFieldKeyEnum.price]: () => {\n        console.log(\"getValues('price')\", getValues('price'));\n        return <PricesTab withActions onSelect={handleSelect} selected={getValues('price')} />;\n      },\n      [OfferDefaultFieldKeyEnum.variation]: () => (\n        <VariationsTab withActions onSelect={handleSelect} selected={getValues('variation')} />\n      ),\n      [OfferDefaultFieldKeyEnum.inventory]: () => (\n        <WarehousingTab withActions onSelect={handleSelect} selected={getValues('inventory')} />\n      ),\n      [OfferDefaultFieldKeyEnum.supplier]: () => (\n        <CounterpartyTab\n          withActions\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          onSelect={handleSelect}\n          selected={getValues('supplier')}\n        />\n      ),\n    };\n    return _tabsMap;\n  }, [getValues, handleSelect]);\n\n  const renderTab = useMemo(() => {\n    const currentKey = tabs?.[currentTabIdx]?.value;\n    const Tab = currentKey ? tabsMap[currentKey] ?? null : null;\n\n    return Tab ? <Tab /> : null;\n  }, [currentTabIdx, tabsMap]);\n\n  const canSubmit = useMemo(() => {\n    const currentKey = tabs?.[currentTabIdx]?.value;\n    const compareIdsByPath = (key: Keys<typeof OfferDefaultFieldKeyEnum>) => {\n      const dataKey = `${key}._id` as const;\n      const id_a = _.get(formValues, dataKey);\n\n      return !!id_a && id_a !== _.get(Offer, dataKey);\n    };\n\n    return !currentKey ? false : compareIdsByPath(currentKey);\n  }, [currentTabIdx, formValues, Offer]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <DrawerHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector\n          optionProps={{ fitContentH: true }}\n          options={tabs}\n          currentIndex={currentTabIdx}\n          onChangeIndex={setCurrentTabIdx}\n        />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <DrawerFooter loading={loaders.hasLoading} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormOfferDefaultsDrawer;\n","import FormOfferImagesComponent from '../Forms/offers/images/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils';\nimport { DrawerHeader, OverlayFooter } from './index';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { useCurrentOffer } from '../../hooks';\nimport { FlexForm } from '../atoms/FlexBox';\n\nexport interface FormProductImagesOverlayProps extends CreatedOverlay {\n  offer?: OfferEntity;\n}\n\nconst FormOfferImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose, offer }) => {\n  const Offer = useCurrentOffer(offer);\n\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(Offer?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    Offer &&\n      service.updateById({\n        data: { data: { ...getIdRef(Offer), data: { images: state as OfferImageSlotEntity[] } } },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onlyPreviews={false}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={<DrawerHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />}\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled(FlexForm)`\n  flex: 1;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormOfferImagesOverlay;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useTagsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/app-redux.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { DrawerHeader, OverlayFooter, OverlayForm } from './index';\nimport { OfferEntity } from '../../types/offers/offers.types';\nimport { useCurrentOffer } from '../../hooks';\nimport { sortIds } from '../../utils';\nimport { t } from '../../lang';\nimport { CreatedDrawer } from '../../Providers/Drawer';\nimport TagButtonsFilter from '../atoms/TagButtonsFilter';\nimport { isArray } from 'lodash';\nimport { useAppDispatch } from '../../redux/store.store';\nimport { getAllTagsThunk } from '../../redux/tags/tags.thunks';\nimport { TagTypeEnum } from '../../types/directories.types';\nimport { ToastService } from 'services';\n\nexport interface FormSelectPropertiesProps\n  extends CreatedDrawer,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  updateId?: string;\n}\n\nconst FormSelectPropertiesDrawer: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  updateId,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const Offer = useCurrentOffer(offer);\n  const state = useTagsSelector();\n  const dispatch = useAppDispatch();\n\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const initState = useMemo(() => {\n    return sortIds(Offer?.tags?.map(prop => prop._id));\n  }, [Offer?.tags]);\n  console.log('Offer?.tags', Offer?.tags);\n  console.log('initState', initState);\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>(initState);\n  console.log('selectedIds', selectedIds);\n\n  // useEffect(() => {\n  //   if (initState?.length) {\n  //     setSelectedIds(initState);\n  //   }\n  //   // eslint-disable-next-line\n  // }, []);\n\n  const canSubmit = useMemo(() => {\n    return initState?.join(',') !== sortIds(selectedIds).join(',');\n  }, [initState, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      const id = updateId ?? Offer?._id;\n      if (id) {\n        service.updateById({\n          data: { data: { _id: id, data: { tagsIds: selectedIds } } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Offer updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [Offer?._id, onClose, onSubmit, selectedIds, service, updateId]\n  );\n\n  useEffect(() => {\n    if (!state.listsMap.OFFER?.length) {\n      dispatch(getAllTagsThunk({ params: { type: TagTypeEnum.OFFER } }));\n    }\n  }, [dispatch, state.list.length, state.listsMap.OFFER?.length]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <DrawerHeader onBackPress={onClose} canSubmit={canSubmit} title={t('Tags')} okButton />\n\n      <Content flex={1} padding={'0 8px'} overflow={'auto'}>\n        <TagButtonsFilter\n          options={state.listsMap.OFFER}\n          value={selectedIds}\n          multiple\n          onChangeIds={info => {\n            isArray(info.value) && setSelectedIds(info.value);\n          }}\n        />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} loading={loading} submitButtonText={t('Confirm')} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  padding-bottom: 8px;\n  padding: 16px 0;\n`;\n\nexport default FormSelectPropertiesDrawer;\n","import { OfferEntity } from '../../../types/offers/offers.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../../atoms/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../../lang';\nimport { usePageCurrentOffer } from '../../AppPages/offers/PageOfferProvider';\nimport { DrawerHeader } from '../../Overlays';\nimport TabSelector from '../../atoms/TabSelector';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../../hooks';\nimport { OverviewTextArea } from '../components/OverviewTextArea';\nimport { enumToFilterOptions, toAppDateFormat } from '../../../utils';\nimport { OverviewCellProps } from '../components/overview-types';\nimport { IMeasurement, PartialRecord } from '../../../types/utils.types';\nimport { isString } from 'lodash';\nimport { OfferOverviewCategoriesArea } from './components/OfferOverviewCategoriesArea';\nimport { OfferOverviewStaticPropertiesArea } from './components/OfferOverviewStaticPropertiesArea';\nimport { OfferOverviewDefaultsArea } from './components/OfferOverviewDefaultsArea';\nimport { OfferOverviewImagesArea } from './components/OfferOverviewImagesArea';\nimport { Text } from '../../atoms/Text';\nimport { OfferOverviewTagsArea } from './components/OfferOverviewTagsArea';\n\nexport enum OfferOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nexport const ProductOverviewTabsList = enumToFilterOptions(OfferOverviewTabsEnum);\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n  const cellsMap = getOfferOverviewCellsMap();\n\n  const [currentTab, setCurrentTab] = useState<OfferOverviewTabsEnum>(OfferOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n            }\n            return <OverviewTextArea key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n          }),\n    [cellsMap, currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <DrawerHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        options={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          option?.value && setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nconst offerOverviewCells: OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Categories'),\n    CellComponent: OfferOverviewCategoriesArea,\n    gridArea: 'categories',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n  {\n    title: t('Properties'),\n    CellComponent: OfferOverviewStaticPropertiesArea,\n    gridArea: 'properties',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n  {\n    title: t('Tags'),\n    CellComponent: OfferOverviewTagsArea,\n    gridArea: 'tags',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  {\n    title: t('Brand'),\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = isString(product?.measurement)\n          ? JSON.parse(product?.measurement as string)\n          : product?.measurement;\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  // {\n  //   title: t('Is promo'),\n  //   getValue: data => data?.futures?.isPromo,\n  //   gridArea: 'isPromo',\n  //   tab: OfferOverviewTabsEnum.Futures,\n  // },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OfferOverviewDefaultsArea,\n    gridArea: 'defaults',\n    tab: OfferOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    getValue: product => {\n      return [\n        { title: 'Created by', value: product?.author?.user?.email },\n        {\n          title: 'Created at',\n          value:\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : '',\n        },\n      ].map(item => {\n        return (\n          <FlexBox key={item.title} gap={4} fillWidth justifyContent={'space-between'} fxDirection={'row'}>\n            <Text>{item.title ?? t('undefined')}</Text>\n            <Text>{item.value ?? t('undefined')}</Text>\n          </FlexBox>\n        );\n      });\n    },\n    gridArea: 'created',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    getValue: product => {\n      return [\n        { title: 'Updated by', value: product?.editor?.user?.email },\n        {\n          title: 'Updated at',\n          value:\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : '',\n        },\n      ].map(item => {\n        return (\n          <FlexBox key={item.title} gap={4} fillWidth justifyContent={'space-between'} fxDirection={'row'}>\n            <Text>{item.title ?? t('undefined')}</Text>\n            <Text>{item.value ?? t('undefined')}</Text>\n          </FlexBox>\n        );\n      });\n    },\n    gridArea: 'updated',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OfferOverviewImagesArea,\n    gridArea: 'images',\n    tab: OfferOverviewTabsEnum.Images,\n  },\n];\n\nfunction getOfferOverviewCellsMap(): PartialRecord<\n  OfferOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n> {\n  const offerOverviewCellsMap: PartialRecord<\n    OfferOverviewTabsEnum | string,\n    OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n  > = {};\n  offerOverviewCells.forEach(item => {\n    const tab = item.tab;\n    if (tab) {\n      if (offerOverviewCellsMap[tab]) {\n        offerOverviewCellsMap[tab]?.push(item);\n      } else {\n        offerOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return offerOverviewCellsMap;\n}\n\nexport default OfferOverviewXL;\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useOffersSelector } from '../../../../redux/selectors.store';\nimport React, { useMemo } from 'react';\nimport FormSelectPropertiesDrawer from '../../../Overlays/FormSelectPropertiesDrawer';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\nimport { OverviewPropertyComponent } from '../../components/OverviewPropertyComponent';\nimport { PropertyValueEntity } from '../../../../types/offers/properties.types';\nimport { useCurrentOffer } from '../../../../hooks';\n\nexport const OfferOverviewStaticPropertiesArea: RenderOverviewAreaComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const state = useOffersSelector();\n  const Offer = useCurrentOffer(data);\n\n  const { propertiesList, valuesListMap, ...idsSet } = useMemo(() => {\n    const _propertiesMap: Record<string, PropertyValueEntity> = {};\n    const _propertiesIdsSet = new Set<string>([]);\n\n    const _valuesListMap: Record<string, PropertyValueEntity[]> = {};\n    const _valuesIdsSet = new Set<string>([]);\n\n    for (const value of Offer?.properties ?? []) {\n      const propId = value.parent?._id;\n\n      if (propId) {\n        const parent = propId ? state.propertiesDataMap?.[propId] : undefined;\n        _propertiesIdsSet.add(propId);\n\n        if (parent) {\n          _propertiesMap[propId] = parent;\n        }\n\n        const valueId = value._id;\n        _valuesIdsSet.add(valueId);\n\n        const _value = valueId ? state.propertiesDataMap?.[valueId] || value : value;\n        if (!_valuesListMap[propId]) {\n          _valuesListMap[propId] = [];\n        }\n        _valuesListMap[propId].push(_value);\n      }\n    }\n\n    return {\n      properties: _propertiesIdsSet,\n      values: _valuesIdsSet,\n      propertiesList: Object.values(_propertiesMap),\n      valuesListMap: _valuesListMap,\n    };\n  }, [Offer?.properties, state.propertiesDataMap]);\n\n  const renderProperties = useMemo(() => {\n    return propertiesList?.map((prop, index) => {\n      const list = valuesListMap[prop._id];\n\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, items: list, data }}\n        />\n      );\n    });\n  }, [propertiesList, overlayHandler, valuesListMap, data]);\n\n  return (\n    <AreaStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewAreaHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesDrawer,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {idsSet.properties?.size ? (\n          renderProperties\n        ) : (\n          <AreaStyledComp.CellText $weight={500}>{t('undefined')}</AreaStyledComp.CellText>\n        )}\n      </FlexBox>\n    </AreaStyledComp.Cell>\n  );\n};\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\nimport { useCurrentOffer } from '../../../../hooks';\nimport FormSelectOfferTagsDrawer from '../../../Overlays/FormSelectOfferTagsDrawer';\n\nexport const OfferOverviewTagsArea: RenderOverviewAreaComponent<OfferEntity> = ({ cell, overlayHandler, data }) => {\n  const Offer = useCurrentOffer(data);\n\n  const renderValues = useMemo(() => {\n    return Offer?.tags?.map((value, index) => {\n      return (\n        <AreaStyledComp.CategoryItem\n          key={`prop-v-${value._id}`}\n          className={'TagItem'}\n          width={'fit-content'}\n          maxWidth={'130px'}\n        >\n          {value.label}\n        </AreaStyledComp.CategoryItem>\n      );\n    });\n  }, [Offer?.tags]);\n\n  return (\n    <AreaStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'TAGS_LIST_CELL'}\n      style={{ minHeight: 'max-content' }}\n    >\n      <OverviewAreaHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectOfferTagsDrawer,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} fxDirection={'row'} alignItems={'stretch'}>\n        {Offer?.tags?.length ? (\n          renderValues\n        ) : (\n          <AreaStyledComp.CellText $weight={500}>{t('undefined')}</AreaStyledComp.CellText>\n        )}\n      </FlexBox>\n    </AreaStyledComp.Cell>\n  );\n};\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\nimport FormOfferDefaultsDrawer from '../../../Overlays/FormOfferDefaultsDrawer';\n\nimport { PriceEntity } from '../../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { toPrice } from '../../../../utils/numbers';\nimport { useOverlayService } from '../../../../Providers/Overlay/OverlayStackProvider';\nimport { useModalService } from '../../../../Providers/ModalProvider/ModalProvider';\n\nexport const OfferOverviewDefaultsArea: RenderOverviewAreaComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n  const overlaySrv = useOverlayService();\n  const modalSrv = useModalService();\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <AreaStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewAreaHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          if (overlaySrv.create) {\n            overlaySrv.create(FormOfferDefaultsDrawer);\n          } else {\n            modalSrv.create(FormOfferDefaultsDrawer);\n          }\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <AreaStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </AreaStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <AreaStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </AreaStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <AreaStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </AreaStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <AreaStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </AreaStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </AreaStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: PriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewAreaComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../../Overlays/FormOfferImagesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { AreaStyledComp } from '../../components/CellStyles';\nimport { OverviewAreaHeader } from '../../components/OverviewAreaHeader';\nimport { formAddImageSetTabs } from '../../../../data';\n\nexport const OfferOverviewImagesArea: RenderOverviewAreaComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((imgsSet, index) => {\n      return (\n        <AreaStyledComp.ImagesSetBox\n          key={`set_${imgsSet?._id || index}`}\n          minHeight={'max-content'}\n          fxDirection={'row'}\n          gap={8}\n          overflow={'auto'}\n        >\n          {formAddImageSetTabs.map(\n            el =>\n              el.value && (\n                <ImagePreviewSmall key={`img_${el.value}`} title={el.label} src={imgsSet[el.value] || ''} disabled />\n              )\n          )}\n        </AreaStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <AreaStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewAreaHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages, props: { offer: data } });\n        }}\n      />\n\n      <FlexBox gap={8} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </AreaStyledComp.Cell>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../../Providers/ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/offer/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { offers: offersSrv } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              offer: page?.currentOffer,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          offersSrv.getOne({\n            data: { params: { _id: page.currentOffer?._id, getPrices: false, getVariations: false } },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({\n    offer: { content: t('Loading product info') },\n    prices: { content: 'Loading prices' },\n    variations: { content: 'Loading variations' },\n  });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const offersSrv = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ _id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      offersSrv\n        .getOne({\n          data: {\n            params: {\n              _id: offerId,\n              getVariations: false,\n              getPrices: false,\n            },\n          },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .catch();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    offersSrv.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      offersSrv.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import styled from 'styled-components';\nimport FlexBox, { FlexForm } from '../atoms/FlexBox';\nimport { useOffersSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { sortIds, toVariationFormData, toVariationReqData } from '../../utils';\nimport { VariationEntity, VariationFormData } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../atoms/FormAfterSubmitOptions';\nimport { OverlayFooter } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer, useCurrentVariation } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport { UUID } from '../../types/utils.types';\nimport OfferPropertySelector from '../Forms/offers/variations/OfferPropertySelector';\nimport { PropertiesGroupEntity, PropertyEntity } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity, PropertyValuesMap } from '../../types/offers/offers.types';\nimport DrawerBase from '../atoms/OverlayBase';\nimport { PropertiesGroupSelector } from '../atoms/PropertiesGroupSelector';\nimport { AccordionFormArea } from '../atoms/FormArea/AccordionForm';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport _ from 'lodash';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Text } from '../atoms/Text';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<VariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  updateId?: UUID;\n\n  create?: boolean;\n\n  defaultState?: Partial<VariationEntity>;\n}\n\nconst _schema = yup.object().shape({\n  label: yup.string().required().min(5).max(128),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\nconst mainInputsProps = [\n  { title: t('Offer label'), name: 'label', required: true, flex: '2 0 100%' },\n  { title: t('SKU'), name: 'sku', required: true, flex: '1 1 40%' },\n  { title: t('Bar-code'), name: 'barCode', required: false, flex: '1 1 40%' },\n] as const;\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  onSubmit,\n  updateId,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const state = useOffersSelector();\n  const service = useAppServiceProvider()[ServiceName.offers];\n  const loaders = useLoaders<'create' | 'update' | 'refresh'>();\n  const Variation = useCurrentVariation({ _id: updateId });\n  const Offer = useCurrentOffer({ _id: Variation?.offer?._id || offerId || offer?._id });\n\n  const submitOptions = useAfterSubmitOptions();\n  const [currentTemplate, setCurrentTemplate] = useState<PropertiesGroupEntity | undefined>(Variation.template);\n\n  const formMethods = useAppForm<VariationFormData>({\n    defaultValues: toVariationFormData(\n      Variation\n        ? { ...Variation, offer: Offer, template: currentTemplate }\n        : { offer: Offer, template: currentTemplate },\n      Offer\n    ),\n    resolver: yupResolver(_schema),\n    reValidateMode: 'onSubmit',\n  });\n\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  const propertiesList = useMemo(() => {\n    if (currentTemplate?.childrenList?.length) {\n      return currentTemplate?.childrenList.filter(item => item.isSelectable && item?.childrenList?.length);\n    }\n\n    const _rootId = currentTemplate?._id;\n    const _propertiesList: PropertyEntity[] = [];\n    // const _sortedPropertiesIds=sortIds(ObjectKeys(state.propertiesKeysMap))\n\n    const _propertiesIds = state.propertiesKeysMap?.[_rootId ?? 'def'] ?? [];\n\n    for (const propId of _propertiesIds) {\n      const prop = state.propertiesDataMap?.[propId];\n      if (prop?.isSelectable) {\n        const childrenIds = state.propertiesKeysMap[prop?._id];\n        if (childrenIds?.length) {\n          _propertiesList.push(prop);\n        }\n      }\n    }\n\n    return _propertiesList;\n  }, [currentTemplate?._id, currentTemplate?.childrenList, state.propertiesDataMap, state.propertiesKeysMap]);\n\n  const compileLabel = useCallback(\n    (valuesMap: PropertyValuesMap) => {\n      if (!valuesMap) {\n        return `${Offer?.label}. {{VARIATION_LABEL}}`;\n      }\n\n      const _sortedIds = !valuesMap ? [] : sortIds(Object.keys(valuesMap));\n\n      const _labels: string[] = Offer?.label ? [Offer?.label] : [];\n\n      for (const propId of _sortedIds) {\n        const value = valuesMap[propId];\n\n        value?.label && _labels.push(value?.label);\n      }\n      const _compiled = !_labels?.length\n        ? Variation?.label || `${Offer?.label}. {{VARIATION_LABEL}}`\n        : _labels.join('. ');\n\n      setValue('label', _compiled);\n      return _compiled;\n    },\n    [Offer?.label, Variation?.label, setValue]\n  );\n\n  const onValid = useCallback(\n    (data: VariationFormData) => {\n      if (updateId) {\n        service.updateVariationById({\n          onSuccess: loaders.onSuccess('update', onClose),\n          onLoading: loaders.onLoading('update'),\n          onError: ToastService.toastAxiosError,\n          data: { data: toVariationReqData(data) },\n        });\n      } else {\n        service.createVariation({\n          onError: ToastService.toastAxiosError,\n          onLoading: loaders.onLoading('create'),\n          onSuccess: data => {\n            if (submitOptions.state.close) {\n              onClose && onClose();\n            } else {\n              submitOptions.state.clear && reset();\n              setValue('sku', (Offer?.sku ?? '') + nanoid(12));\n            }\n          },\n          data: { data: toVariationReqData(data) },\n        });\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [\n      Offer?.sku,\n      loaders,\n      onClose,\n      reset,\n      service,\n      setValue,\n      submitOptions.state.clear,\n      submitOptions.state.close,\n      updateId,\n    ]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, valueId: string) => {\n      const exist = formValues.propertiesMap?.[parentId];\n      if (exist && exist._id === valueId) {\n        const newMap = _.omit(formValues.propertiesMap, parentId);\n        setValue('propertiesMap', newMap);\n        compileLabel(newMap);\n      } else {\n        const value = state.propertiesDataMap?.[valueId];\n        if (value) {\n          const newMap = { ...formValues.propertiesMap, [parentId]: value };\n          setValue('propertiesMap', newMap);\n          compileLabel(newMap);\n        }\n      }\n    },\n    [compileLabel, formValues.propertiesMap, setValue, state.propertiesDataMap]\n  );\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap).map(item => item._id) : [];\n  }, [formValues]);\n\n  const canSubmit = useMemo(() => {\n    const _sortedInit = !Variation.propValuesIdsSet ? undefined : sortIds(Variation.propValuesIdsSet)?.join('.');\n\n    const _sortedCurrent = !selectedIds ? undefined : sortIds(selectedIds)?.join('.');\n\n    return !!_sortedCurrent && _sortedCurrent !== _sortedInit;\n  }, [Variation.propValuesIdsSet, selectedIds]);\n\n  const propValuesIds = useMemo((): Record<string, string | undefined> => {\n    return formValues?.propertiesMap\n      ? Object.fromEntries(\n          Object.entries(formValues?.propertiesMap).map(([propId, item]) => {\n            return [propId, item?._id];\n          })\n        )\n      : {};\n  }, [formValues?.propertiesMap]);\n\n  const renderPropertiesList = useMemo(() => {\n    return propertiesList?.map(prop => {\n      const selectedId = propValuesIds[prop._id];\n\n      return (\n        <OfferPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedId ? [selectedId] : []}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, propValuesIds, handleSelect]);\n\n  return (\n    <DrawerBase fillHeight onBackPress={onClose} okButton={false} title={title || 'Create variation'}>\n      <LoadersProvider value={loaders}>\n        <FormContainer\n          onSubmit={handleSubmit(onValid, errors => {\n            console.error('[SUBMIT ERROR]', errors);\n          })}\n          {...props}\n        >\n          <Content flex={1} fillWidth overflow={'auto'}>\n            <AccordionFormArea label={'Offer'} hideFooter isOpen={false}>\n              <FlexBox\n                className={'Variation_Main_Offer_Info'}\n                flexWrap={'wrap'}\n                fxDirection={'row'}\n                alignItems={'flex-end'}\n                style={{ columnGap: 12 }}\n              >\n                {mainInputsProps.map(({ name, title, flex }) => {\n                  return (\n                    <InputLabel key={name} className={name} flex={flex} label={title} disabled>\n                      {/*<InputText value={Offer?.[name] ?? undefined} placeholder={title} disabled />*/}\n                      <FlexBox padding={'4px 8px'} minHeight={'32px'}>\n                        <Text $weight={600} $size={14}>\n                          {Offer?.[name] ?? undefined}\n                        </Text>\n                      </FlexBox>\n                    </InputLabel>\n                  );\n                })}\n              </FlexBox>\n            </AccordionFormArea>\n\n            <AccordionFormArea label={'Main info'} expandable={false} hideFooter>\n              <FlexBox\n                className={'Variation_Main_info'}\n                flexWrap={'wrap'}\n                fxDirection={'row'}\n                alignItems={'flex-end'}\n                style={{ columnGap: 12 }}\n              >\n                {mainInputsProps.map(({ name, title, flex, required }) => {\n                  return (\n                    <InputLabel\n                      key={name}\n                      className={name}\n                      label={title}\n                      error={errors?.[name]}\n                      required={required}\n                      flex={flex}\n                    >\n                      <InputText {...register(name, { required })} placeholder={t('label')} />\n                    </InputLabel>\n                  );\n                })}\n              </FlexBox>\n            </AccordionFormArea>\n\n            <AccordionFormArea label={t('Properties')} expandable={false} hideFooter>\n              <PropertiesGroupSelector\n                onSelect={opt => {\n                  setValue('template', opt);\n                  setCurrentTemplate(opt);\n                }}\n                selected={currentTemplate}\n              />\n\n              <FlexBox padding={'0 8px'}>{renderPropertiesList}</FlexBox>\n            </AccordionFormArea>\n          </Content>\n\n          <OverlayFooter\n            loading={loaders.isLoading?.create}\n            onGoBackPress={onClose}\n            submitButtonText={t('Accept')}\n            canSubmit={canSubmit}\n            extraFooter={\n              <ExtraFooterBox>\n                <FormAfterSubmitOptions {...submitOptions} />\n              </ExtraFooterBox>\n            }\n          />\n        </FormContainer>\n      </LoadersProvider>\n    </DrawerBase>\n  );\n};\n\nconst FormContainer = styled(FlexForm)`\n  flex: 1;\n  max-height: 100%;\n  height: 100vh;\n\n  width: 100%;\n  //padding: 0 12px;\n\n  overflow: hidden;\n\n  //max-width: 380px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../../Providers/ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { OnlyUUID } from '../../../../redux/app-redux.types';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormOfferDefaultsDrawer';\nimport { PropertyEntity } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\nimport { VariationEntity } from '../../../../types/offers/variations.types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useCurrentOffer } from '../../../../hooks';\nimport { useLoaders } from '../../../../Providers/Loaders/useLoaders.hook';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: VariationEntity) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  offer?: OfferEntity;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true, offer }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n\n  const page = usePageCurrentOffer();\n  const Offer = useCurrentOffer(offer || page?.currentOffer);\n\n  const modalS = useModalProvider();\n  const offerSrv = useAppServiceProvider()[ServiceName.offers];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!Offer) return;\n\n      offerSrv.getAllVariations({\n        data: {},\n        params: {\n          offerId: Offer._id,\n        },\n        update,\n        refresh,\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [Offer, loaders, offerSrv]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, PropertyEntity> = {};\n    for (const variation of Offer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [Offer?.variations]);\n\n  const tableConfig = useMemo((): ITableListProps<VariationEntity> => {\n    return {\n      onRowClick: data => {\n        if (onSelect && data?.rowData) {\n          onSelect(data?.rowData);\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { icon: 'done', type: 'onlyIconOutlined', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n\n                  modalS.create(CreateVariationOverlay, {\n                    updateId: currentId,\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.create(CreateVariationOverlay, { offer: Offer });\n                },\n              },\n            ];\n          },\n    };\n  }, [Offer, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    if (Offer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      hasSearch={false}\n      hasFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n      tableData={Offer?.variations}\n      tableTitles={variationsTableTitles}\n      transformData={transformVariationTableData as never}\n    />\n  );\n};\nexport default VariationsTab;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n        ? p.theme.globals.inputPlaceholderColor\n        : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px 8px;\n\n  font-weight: 500;\n  font-size: 13px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const AreaStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { AreaStyledComp } from './CellStyles';\n\nexport const OverviewAreaHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox\n      fxDirection={'row'}\n      justifyContent={'space-between'}\n      height={'max-content'}\n      alignItems={'center'}\n      minHeight={'36px'}\n      padding={'4px 0'}\n    >\n      <AreaStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </AreaStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <AreaStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </AreaStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <AreaStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </AreaStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <AreaStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </AreaStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <AreaStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </AreaStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewAreaComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { AreaStyledComp } from './CellStyles';\n\nexport const OverviewTextArea: RenderOverviewAreaComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <AreaStyledComp.Cell>\n      <AreaStyledComp.CellText $isTitle $size={13} $padding={'6px 8px'}>\n        {cell?.title}\n      </AreaStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'column'}\n        gap={8}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 32 }}\n      >\n        {!value || ['string', 'number'].includes(typeof value) ? (\n          <AreaStyledComp.CellText $isTitle={!value} $weight={500}>\n            {value || t('undefined')}\n          </AreaStyledComp.CellText>\n        ) : (\n          value\n        )}\n      </FlexBox>\n    </AreaStyledComp.Cell>\n  );\n};\n","import styled from 'styled-components';\nimport React, { memo } from 'react';\nimport { DrawerHeader } from '../Overlays';\n\nexport interface DrawerBaseProps extends Omit<React.FormHTMLAttributes<HTMLDivElement>, 'onSubmit' | 'onReset'> {\n  footer?: boolean;\n  onClosePress?: () => void;\n  onBackPress?: () => void;\n  isLoading?: boolean;\n  extraFooter?: React.ReactNode;\n  extraHeader?: React.ReactNode;\n  fillWidth?: boolean;\n  fillHeight?: boolean;\n  fitContentV?: boolean;\n  fitContentH?: boolean;\n  height?: string;\n  width?: string;\n  canSubmit?: boolean;\n  okButton?: boolean;\n}\n\nconst DrawerBase: React.FC<DrawerBaseProps> = ({\n  title,\n  footer = false,\n  children,\n  extraFooter,\n  extraHeader,\n  isLoading = false,\n  onClosePress,\n  onBackPress,\n  okButton,\n  canSubmit,\n  ...props\n}) => {\n  return (\n    <DrawerContainer className=\"modal_base\" {...props}>\n      <DrawerHeader\n        onBackPress={onBackPress}\n        onClosePress={onClosePress}\n        title={title}\n        canSubmit={canSubmit}\n        okButton={okButton}\n      >\n        {extraHeader}\n      </DrawerHeader>\n\n      <Content className=\"main\">{children}</Content>\n    </DrawerContainer>\n  );\n};\n\nconst DrawerContainer = styled.div<\n  Pick<DrawerBaseProps, 'fillHeight' | 'fillWidth' | 'fitContentH' | 'fitContentV' | 'width' | 'height'>\n>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: min-content 1fr max-content;\n\n  position: relative;\n  padding: 0 8px;\n\n  min-height: 200px;\n  max-height: 90vh;\n\n  color: ${p => p.theme.fontColorSidebar};\n  width: ${({ width = '480px', fillWidth, fitContentH }) =>\n    (fillWidth && '100vw') || (fitContentH && 'max-content') || width};\n  height: ${({ height = '', fillHeight, fitContentV }) =>\n    (fillHeight && '90vh') || (fitContentV && 'max-content') || height};\n\n  min-width: 250px;\n  max-width: 100%;\n\n  //overflow: hidden;\n\n  box-shadow: ${({ theme }) => theme.globals.shadowMain};\n  fill: ${({ theme }) => theme.fillColor};\n  color: ${({ theme }) => theme.fontColor};\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  border-radius: 2px;\n  border-bottom: 1px solid ${({ theme }) => theme.modalBorderColor};\n  /* resize: both; */\n\n  @media screen and (max-width: 480px) {\n    width: 98vw;\n  }\n\n  @media screen and (min-width: 480px) {\n    width: ${p => (p.fillWidth ? '98vw' : '450px')};\n  }\n`;\n\nconst Content = styled.main`\n  display: flex;\n  flex-direction: column;\n\n  overflow: auto;\n  position: relative;\n  height: 100%;\n  max-width: 100%;\n  max-height: 100%;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.modalBackgroundColor};\n\n  ::-webkit-scrollbar {\n    width: 4px;\n    height: 4px;\n  }\n  //border-right: 1px solid ${({ theme }) => theme.modalBorderColor};\n  //border-left: 1px solid ${({ theme }) => theme.modalBorderColor};\n`;\n\nexport default memo(DrawerBase);\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseEntity, WarehouseItemEntity } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<WarehouseEntity>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email'), path: 'email' },\n    bottom: { name: t('phone'), path: 'phone' },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayLocalCTX","createContext","OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","Provider","value","onClose","compId","_objectSpread","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColorDark","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","open","create","Component","_loaders$isLoading","onSelect","selected","_ref$withActions","withActions","modalS","useModalProvider","productsS","useAppServiceProvider","ServiceName","offerId","useAppParams","currentOffer","useCurrentOffer","_id","selectedRow","setSelectedRoe","loaders","useLoadersProvider","dispatch","useAppDispatch","loadData","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","refresh","update","wrap","_context","next","abrupt","getAllPrices","data","refreshCurrent","onLoading","stop","_x","apply","arguments","tableConfig","onRowClick","_data$rowData","rowData","rowId","actionsCreator","ctx","_ctx$selectedRow","currentId","icon","type","separator","disabled","getPriceThunk","undefined","content","onSuccess","ModalChildren","CreatePriceModal","modalChildrenProps","offer","updateId","useEffect","TableList","hasSearch","hasFilter","isLoading","prices","tableData","tableTitles","pricesColumnsForProductReview","currentProduct","useOffersSelector","loading","setLoading","product","getIdRef","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","SalesTab","padding","Text","$size","$weight","LinksTab","state","useLinksSelector","_offerId","getAllLinksThunk","title","list","top","getData","rd","_rd$offer","label","bottom","_rd$offer2","sku","action","width","slashTag","code","_rd$stats","stats","sales","align","_rd$stats2","refunds","_rd$stats3","clicks","_rd$stats4","errors","deletedAt","t","deviceId","cookiesId","referer","domain","ip","userAgent","url","destinationUrl","createAuthorColumn","createEditorColumn","createDateColumn","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","modalBorderColor","_page$currentOffer","_page$currentOffer2","toggleVisibility","page","usePageCurrentOffer","useLoaders","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","tabs","_defineProperty","Variations","VariationsTab","Warehousing","WarehousingTab","Prices","PricesTab","Sales","Links","LoadersProvider","_jsxs","DrawerHeader","onBackPress","renderTitle","fxDirection","justifyContent","gap","TabSelector","options","onOptSelect","preventDefault","flex","Content","sideBarBorderColor","_currentOffer$categor","_loaders$isLoading2","service","directory","useDirectorySelector","ApiDirType","initIds","sortIds","categories","categoriesIds","setCategoriesIds","canSubmit","join","c","OverlayForm","onSubmit","stopPropagation","updateById","meta","okButton","OfferCategoriesSelector","onChangeIds","defaultData","OverlayFooter","NotActiveTreeDataItem","_item$parent","_item$parent2","item","_ref2$lvl","lvl","selectedIds","renderChildren","_item$childrenList","childrenList","isSelected","_Fragment","AreaStyledComp","parent","PropertiesBox","defaultState","template","onChange","_objectWithoutProperties","_excluded","Offer","initialTemplate","_Offer$properties","_Offer$properties$","_Offer$properties$$pa","_Offer$properties$$pa2","properties","path","split","currentTemplate","setCurrentTemplate","_useState3","_useState4","_useState5","_useState6","setSelectedIds","initState","_Offer$properties2","prop","propertiesList","_currentTemplate$chil","_state$propertiesKeys","isSelectable","_rootId","_propertiesList","_propertiesIds","propertiesKeysMap","_step","_iterator","_createForOfIteratorHelper","s","n","done","_state$propertiesData","propId","propertiesDataMap","childrenIds","push","err","e","f","_sortIds","handleSubmit","event","propertiesIds","templateId","_meta","ToastService","console","debug","handleSelect","_parentId","valueId","renderPropertiesList","OfferPropertySelector","PropertiesGroupSelector","filterValue","defaultValue","submitButtonText","OverviewPropertyComponent","items","renderValues","_list","maxWidth","flexWrap","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","OfferDefaultFieldKeyEnum","getFormDefaultValues","Map","forEach","tab","key","field","set","ObjectFromEntries","entries","Form","modalBackgroundColor","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","useAppForm","defaultValues","setValue","getValues","formValues","tabsMap","_tabsMap2","warehouse","WarehousesTab","price","log","variation","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx","_tabsMap$currentKey","currentKey","Tab","_tabs$currentTabIdx2","dataKey","id_a","compareIdsByPath","fData","toReqData","optionProps","fitContentH","currentIndex","onChangeIndex","DrawerFooter","hasLoading","FlexForm","sideBarBackgroundColor","images","setState","useTheme","FormOfferImagesComponent","initialData","onlyPreviews","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onCreatePress","onAddNewImageSetPress","_state$listsMap$OFFER2","useTagsSelector","_Offer$tags","tags","tagsIds","_state$listsMap$OFFER","listsMap","OFFER","getAllTagsThunk","TagTypeEnum","TagButtonsFilter","multiple","info","isArray","OfferOverviewTabsEnum","ProductOverviewTabsList","Container","Footer","_templateObject3","DeleteBtn","ButtonIcon","_templateObject4","colors","error","OpenBtn","_templateObject5","offerOverviewCells","getValue","gridArea","General","approved","barCode","CellComponent","cell","modalSrv","useModalService","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","minHeight","OverviewAreaHeader","openOverlayButtonTitle","onOpenOverlayPress","OfferCategoriesOverlay","height","Properties","_idsSet$properties","overlayHandler","_useMemo","_propertiesMap","_propertiesIdsSet","Set","_valuesListMap","_valuesIdsSet","_value$parent","_state$propertiesData2","add","_value","values","Object","valuesListMap","idsSet","renderProperties","FormSelectPropertiesDrawer","size","_Offer$tags2","FormSelectOfferTagsDrawer","_data$brand","brand","isString","measurement","JSON","parse","unit","min","max","step","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","renderVariationTags","_variation$properties","_item$value","$align","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","out","commission","percentage","markup","createPriceOverviewTagsData","FormOfferDefaultsDrawer","color","fontColorHeader","Defaults","_product$author","_product$author$user","author","user","email","createdAt","toAppDateFormat","Date","_item$title","_product$editor","_product$editor$user","editor","updatedAt","_item$title2","_item$value2","renderImageSets","_data$images","imgsSet","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","Images","_p$product","router","useAppRouter","cellsMap","offerOverviewCellsMap","_offerOverviewCellsMa","getOfferOverviewCellsMap","renderCells","_cellsMap$currentTab","_excluded2","OverviewTextArea","goBack","option","replace","hash","variant","iconSize","onEdit","visible","onHide","onDelete","margin","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","useOfferOverviewLoaders","offersSrv","offers","OfferOverviewXL","openModal","Modal","Modals","getOne","getPrices","getVariations","Page","takeFullGridArea","variations","isRightSideVisible","setIsRightSideVisible","toggleRightSide","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","PageCurrentOfferCTX","catch","clearCurrent","_schema","yup","shape","required","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","mainInputsProps","FormContainer","fontColorSidebar","tableBackgroundColor","ExtraFooterBox","_Variation$offer","Variation","useCurrentVariation","submitOptions","useAfterSubmitOptions","formMethods","toVariationFormData","resolver","yupResolver","reValidateMode","register","formState","reset","_state$propertiesKeys2","compileLabel","valuesMap","_step2","_sortedIds","keys","_labels","_iterator2","_compiled","onValid","updateVariationById","onError","toVariationReqData","createVariation","_Offer$sku","close","clear","parentId","_formValues$propertie","exist","newMap","_sortIds2","_sortedInit","propValuesIdsSet","_sortedCurrent","propValuesIds","fromEntries","selectedId","DrawerBase","AccordionFormArea","hideFooter","isOpen","columnGap","_ref4","_Offer$name","InputLabel","expandable","_ref5","InputText","placeholder","opt","onGoBackPress","extraFooter","FormAfterSubmitOptions","offerSrv","getAllVariations","variationsTableTitles","_Offer$variations","propsList","_prop$parent","createTableTitlesFromProperties","window","confirm","CreateVariationOverlay","transformData","transformVariationTableData","css","takeFullPlace","HeaderButton","accentColor","base","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","_templateObject6","CategoryItem","_templateObject7","backgroundColor","_ref$title","_ref$openOverlayButto","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","marginRight","$padding","footer","extraHeader","onClosePress","DrawerContainer","_ref2$width","_ref3$height","fitContentV","shadowMain","fillColor","_ref6","fontColor","_ref7","_ref8","_ref9","_ref10","_ref11","memo","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}