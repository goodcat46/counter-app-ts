{"version":3,"file":"static/js/273.a1641342.chunk.js","mappings":"kOAKaA,EAAe,SAACC,GAC3B,IAAMC,GAAaC,EAAAA,EAAAA,MAEbC,GAAyBC,EAAAA,EAAAA,cAC7B,SAACC,GAAU,OACT,SAAAC,GACMA,EAAGC,SAAWD,EAAGE,eACnBP,EAAWQ,OAAOJ,EAEtB,CAAC,GACH,CAACJ,IAEGS,GAAqBC,EAAAA,EAAAA,UAAQ,WAGjC,OAFcV,EAAWW,WAEZC,KAAI,SAAAC,EAAiCC,GAAW,IAAzCC,EAAeF,EAAfE,gBAAiBC,EAAKH,EAALG,MAAOZ,EAAES,EAAFT,GAC1C,OACEa,EAAAA,EAAAA,KAACC,EAAU,CAETC,UAAS,WAAAC,OAAahB,GACtBiB,MAAO,CAAEC,OAAQ,GAAKR,GACtBS,YAAU,EACVC,WAAS,EACTC,WAAY,WACZC,QAASxB,EAAuBE,GAAIuB,UAEpCV,EAAAA,EAAAA,KAACF,GAAea,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEVZ,GAAK,IACTa,QAAS,WACP7B,EAAWQ,OAAOJ,EACpB,EACA0B,UAAW1B,EACXU,MAAOA,IAAM,WAAAM,OANGhB,KAOhB,WAAAgB,OAhBchB,GAmBtB,GACF,GAAG,CAACF,EAAwBF,IAE5B,OACEiB,EAAAA,EAAAA,KAACc,EAAQ,CAACP,WAAS,EAACD,YAAU,EAACS,SAAUvB,EAAmBwB,OAAS,EAAGC,SAAU,SAASP,SACxFlB,GAGP,EAEMsB,GAAWI,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iPAOtB,SAAAC,GAAC,OAAKA,EAAEP,SAAW,EAAI,MAAM,IAE1B,SAAAO,GAAC,OAAKA,EAAEP,SAAW,EAAI,CAAC,IACrB,SAAAO,GAAC,OAAKA,EAAEP,SAAW,UAAY,QAAQ,IACnC,SAAAO,GAAC,OAAKA,EAAEP,SAAW,MAAQ,MAAM,IAI/B,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,aAAa,IAE5B,SAAAF,GAAC,OAAIA,EAAEC,MAAME,QAAQC,kBAAkB,IAGrDzB,GAAaiB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2M,wHCzCrBO,GAAsBC,EAAAA,EAAAA,eAAc,CAAC,GAErC7C,EAAoB,WAAH,OAAS8C,EAAAA,EAAAA,YAAWF,EAAoB,EA+DtE,KA7DuE,SAAHhC,GAAsB,IAAhBc,EAAQd,EAARc,SACxEqB,GAAwCC,EAAAA,EAAAA,UAAiC,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArEI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,GAAkBnD,EAAAA,EAAAA,cAAY,SAACC,GACnCiD,GAAgB,SAAAE,GAAM,OAAIA,EAAOC,QAAO,SAAAC,GAAE,OAAIA,EAAGrD,KAAOA,CAAE,GAAC,GAC7D,GAAG,IAEGsD,GAAavD,EAAAA,EAAAA,cAAY,WAC7BkD,EAAgB,GAClB,GAAG,IAEGM,GAAyCxD,EAAAA,EAAAA,cAC7C,SAAAyD,GACE,IAAMxD,EAAE,GAAAgB,OAAMwC,EAAO7C,gBAAgB8C,KAAI,KAAAzC,QAAI0C,EAAAA,EAAAA,IAAO,IAgCpD,MA9BsC,oBAA3BF,EAAO7C,iBAChBsC,GAAgB,SAAAU,GACd,IAAMC,EAAUD,EAAKE,MAAK,SAAAR,GAAE,OAAIA,EAAGrD,GAAG8D,SAASN,EAAO7C,gBAAgB8C,KAAK,IAE3E,GAAIG,EAAS,CACX,IAAMG,EAAeJ,EAAKP,QAAO,SAAAC,GAAE,IAAAW,EAAAC,EAAA,OAAsB,QAAlBD,EAAAX,EAAG1C,uBAAe,IAAAqD,OAAA,EAAlBA,EAAoBP,SAAgC,QAA5BQ,EAAKL,EAAQjD,uBAAe,IAAAsD,OAAA,EAAvBA,EAAyBR,KAAM,IAEnG,MAAM,GAANzC,QAAAkD,EAAAA,EAAAA,GACKH,GAAY,EAAAvC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEVgC,GAAM,IACTxD,GAAAA,KAGN,CAEA,MAAM,GAANgB,QAAAkD,EAAAA,EAAAA,GACKP,GAAI,EAAAnC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEFgC,GAAM,IACTxD,GAAAA,KAGN,IAGiC,CACjCyB,QAAS,kBAAMyB,EAAgBlD,EAAG,EAClCmE,OAAQnE,EAGZ,GACA,CAACkD,IAKGkB,EAAmC,CACvC7D,SAHe,WAAH,OAASyC,CAAa,EAIlC5C,OAAQ8C,EACRI,WAAAA,EACAe,KAAMd,GAGR,OAAO1C,EAAAA,EAAAA,KAAC4B,EAAoB6B,SAAQ,CAACF,MAAOA,EAAM7C,SAAEA,GACtD,C,uPC/EagD,GAAsB7B,EAAAA,EAAAA,eAAc,CAAC,GAErC8B,EAAsB,WAAH,OAAS7B,EAAAA,EAAAA,YAAW4B,EAAoB,EAiDxE,EA/C4D,SAAH9D,GAAsB,IAAhBc,EAAQd,EAARc,SACvDkD,GAAUC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UAClCC,EAAUC,KACVrB,GAASsB,EAAAA,EAAAA,MACTC,EAAgB,OAANvB,QAAM,IAANA,OAAM,EAANA,EAAQuB,QAElBC,GAAeC,EAAAA,EAAAA,IAAgB,CAAEjF,GAAI+E,KAE3CG,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACH,OAAPP,QAAO,IAAPA,GAAkB,QAAXO,EAAPP,EAASQ,iBAAS,IAAAD,GAAlBA,EAAoBE,OAEpBN,GACFN,EACGa,mBAAmB,CAClBC,KAAM,CAAEC,IAAKT,GACbU,UAAWb,EAAQa,UAAU,WAE9BC,SAGP,GAAG,CAACX,IAgBJ,OARAG,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLT,EAAQkB,kBAAaC,EACvB,CAGF,GAAG,KAGD/E,EAAAA,EAAAA,KAAC0D,EAAoBD,SAAQ,CAC3BF,MAAO,CACLuB,aAfe,WACnBlB,EAAQkB,kBAAaC,EACvB,EAcMZ,aAAAA,GACAzD,SAEDA,GAGP,E,wQClBMsE,IAAc9D,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kGACT,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAE1B,SAAA3D,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAIxDC,IAAoBhE,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0FAIP,SAAAC,GAAC,IAAA6D,EAAAC,EAAA,OAAK9D,EAAE+D,QAAyD,QAAnDF,EAAuC,QAAvCC,EAAGE,GAAAA,EAA2BhE,EAAE+D,eAAO,IAAAD,OAAA,EAApCA,EAAsCG,kBAAU,IAAAJ,EAAAA,EAAQ,CAAC,IAGtGK,GAAsB,SAAHC,GAQlB,IAPLC,EAAID,EAAJC,KACAC,EAAUF,EAAVE,WACAC,EAAQH,EAARG,SAMA,OACE5F,EAAAA,EAAAA,KAAC6F,GAAQ,CACPC,QAASH,EAAa,cAAgB,gBACtCI,QAAS,UACTC,WAAY,IACZvF,QAAS,WACPmF,GAAYA,EAASF,EAAKf,IAC5B,EAAEjE,SAEDgF,EAAKO,OAGZ,EAEMJ,IAAW3E,EAAAA,EAAAA,IAAOgF,GAAAA,EAAPhF,CAAkBiF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,kEAMnC,GA3E8C,SAAHzB,GAIC,IAADwG,EAHzCV,EAAI9F,EAAJ8F,KAAIW,EAAAzG,EACJ0G,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAChBT,EAAQhG,EAARgG,SAEMW,GAAiB9G,EAAAA,EAAAA,UAAQ,WAAO,IAAD+G,EACnC,OAAwB,QAAxBA,EAAOd,EAAKe,oBAAY,IAAAD,OAAA,EAAjBA,EAAmB7G,KAAI,SAAA4D,GAC5B,IAAMoC,EAAaW,EAAYrD,SAASM,EAAMoB,KAE9C,OACE3E,EAAAA,EAAAA,KAACwF,GAAmB,CAElBE,KAAMnC,EACNoC,WAAYA,EACZC,SAAU,SAAAzG,GAAE,OAAIyG,GAAYA,EAASF,EAAKf,IAAKxF,EAAS,OAALoE,QAAK,IAALA,OAAK,EAALA,EAAO0C,MAAM,GAAC,cAAA9F,OAH9CoD,EAAMoB,KAM/B,GACF,GAAG,CAACe,EAAKf,IAAKe,EAAKe,aAAcb,EAAUU,IAE3C,OACEI,EAAAA,EAAAA,MAAC1B,GAAW,CAAkC2B,IAAK,EAAGpG,WAAS,EAACwF,QAAS,UAAUrF,SAAA,EACjFV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAACxG,MAAO,CAAEyG,KAAM,EAAGC,YAAa,IAAMC,QAAS,IAAIrG,SACrDgF,EAAKO,SAGRjG,EAAAA,EAAAA,KAACkF,GAAiB,CAAC3E,WAAS,EAACwF,QAAS,QAASY,IAAK,EAAGtB,OAAuB,QAAjBe,EAAEV,EAAKsB,kBAAU,IAAAZ,OAAA,EAAfA,EAAiBa,IAAIvG,SACjF6F,MACiB,gBAAApG,OAPYuF,EAAKf,KAU3C,E,gGCPMuC,GAAaC,EAAAA,KAAaC,MAAM,CACpCnB,MAAOkB,EAAAA,KAAaE,WAAWC,IAAI,GAAGC,IAAI,IAC1CC,IAAKL,EAAAA,KAAaE,WAAWC,IAAI,GAAGC,IAAI,IACxCE,QAASN,EAAAA,KAAaI,IAAI,IAC1BG,IAAKP,EAAAA,KAAaC,MAAM,CACtBO,OAAQR,EAAAA,KAAaC,MAAM,CACzBQ,GAAIT,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAC5BM,GAAIV,EAAAA,KAAaG,IAAI,GAAGC,IAAI,QAGhCO,cAAeX,EAAAA,KAEZC,MAAM,CACL,GAEDW,cACAV,WACH7C,MAAO2C,EAAAA,KAAaC,MAAM,CACxBzC,IAAKwC,EAAAA,KAAaE,WAClBpB,MAAOkB,EAAAA,KACPQ,OAAQR,EAAAA,KAAaC,MAAM,CACzBQ,GAAIT,EAAAA,KAAaG,IAAI,GAAGC,IAAI,IAC5BM,GAAIV,EAAAA,KAAaG,IAAI,GAAGC,IAAI,QAGhCS,SAAUb,EAAAA,KACVc,OAAQd,EAAAA,KACRe,MAAOf,EAAAA,KAAaC,MAAM,CACxBe,IAAKhB,EAAAA,SAqOHiB,GAAgBlH,EAAAA,GAAAA,KAAWE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+LAWtB,SAAAC,GAAC,OAAIA,EAAEC,MAAM8G,gBAAgB,IAClB,SAAA/G,GAAC,OAAIA,EAAEC,MAAM+G,oBAAoB,IAEjDC,IAAUrH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAC5B,SAAA3D,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAEtDuD,IAActH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeiF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,kCAI7BoH,IAASvH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAewH,IAAAA,GAAArH,EAAAA,EAAAA,GAAA,6BAIxBsH,IAAiBzH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAe0H,IAAAA,GAAAvH,EAAAA,EAAAA,GAAA,2CACT,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAGtD4D,IAAa3H,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAe4H,IAAAA,GAAAzH,EAAAA,EAAAA,GAAA,QAE5B0H,IAAmB7H,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAe8H,IAAAA,GAAA3H,EAAAA,EAAAA,GAAA,yEACd,SAAAC,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAC1B,SAAA3H,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAG1D,GAtQoE,SAAHrJ,GAU1D,IAADsJ,EAAAC,EAAAC,EAAAC,EAAA/E,EAAAgF,EATJ1I,EAAOhB,EAAPgB,QACA2I,EAAK3J,EAAL2J,MACAC,EAAY5J,EAAZ4J,aAEAC,GADQ7J,EAAR8J,SACM9J,EAAN6J,QAEAvF,GADMtE,EAAN+J,OACO/J,EAAPsE,SACAM,EAAK5E,EAAL4E,MACGzE,GAAK6J,EAAAA,EAAAA,GAAAhK,EAAAiK,IAEFjG,GAAUC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UAClCgG,GAAYC,EAAAA,EAAAA,MACZhG,GAAUiG,EAAAA,GAAAA,KACV7F,GAAeC,EAAAA,EAAAA,IAAgB,CAAEjF,GAAIsK,GAAUvF,IAAgB,OAALM,QAAK,IAALA,OAAK,EAALA,EAAOG,OACjEsF,GAAgBC,EAAAA,EAAAA,KAEtBnI,GAA0BC,EAAAA,EAAAA,UAAmC,OAAT8H,QAAS,IAATA,OAAS,EAATA,EAAY,IAAzDK,GAA4DjI,EAAAA,EAAAA,GAAAH,EAAA,GAA7C,GACtBqI,GAAgDpI,EAAAA,EAAAA,UAAyC,CAAC,GAAEqI,GAAAnI,EAAAA,EAAAA,GAAAkI,EAAA,GAArFE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAE5CG,GAA8C/K,EAAAA,EAAAA,UAAQ,WAAO,IAADgL,EACpDC,EAAsB,OAAfP,QAAe,IAAfA,GAA6B,QAAdM,EAAfN,EAAiB1D,oBAAY,IAAAgE,OAAd,EAAfA,EAA+BlI,QAAO,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAImI,YAAY,IACnEC,EAAiD,CAAC,EAexD,MAAO,CAAEC,eAAgBH,EAAMI,kBAbQC,OAAOC,OAAMC,MAAbF,OAAM,CAC3C,CAAC,GAAC5K,QAAAkD,EAAAA,EAAAA,IACM,OAAJqH,QAAI,IAAJA,EAAAA,EAAQ,IAAI/K,KAAI,SAAAuL,GAAO,IAADC,EAOxB,OANM,OAAFD,QAAE,IAAFA,GAAgB,QAAdC,EAAFD,EAAIzE,oBAAY,IAAA0E,GAAhBA,EAAkBnK,SAClB,OAAFkK,QAAE,IAAFA,GAAAA,EAAIzE,aAAa2E,SAAQ,SAAAC,GACvBT,EAAeS,EAAI1G,KAAO0G,CAC5B,MAGFC,EAAAA,EAAAA,GAAA,GAAUJ,EAAGvG,IAAMuG,EACrB,OAGqDK,kBAAmBX,EAC5E,GAAG,CAAgB,OAAfT,QAAe,IAAfA,OAAe,EAAfA,EAAiB1D,eAlBboE,EAAcL,EAAdK,eAAgBU,EAAiBf,EAAjBe,kBAoBlBC,GAAcC,EAAAA,EAAAA,IAA+B,CACjDC,eAAeC,EAAAA,EAAAA,IACbnC,GAAY7I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ6I,GAAY,IAAEhF,MAAOL,IAAiB,CAAEK,MAAOL,IAErEyH,UAAUC,EAAAA,GAAAA,GAAY3E,IACtB4E,eAAgB,aAGhBC,EAMEP,EANFO,SACAC,EAKER,EALFQ,aACAC,EAIET,EAJFS,SACaC,EAGXV,EAHFW,UAAaD,OACbE,EAEEZ,EAFFY,WACAC,EACEb,EADFa,OAGFhI,EAAAA,EAAAA,YAAU,WACRiI,QAAQC,IAAI,CAAEH,WAAAA,GAChB,GAAG,CAACA,IAEJ,IAAM9F,GAAc7G,EAAAA,EAAAA,UAAQ,WAC1B,OAAiB,OAAV2M,QAAU,IAAVA,GAAAA,EAAYtE,cAAgBiD,OAAOyB,OAAiB,OAAVJ,QAAU,IAAVA,OAAU,EAAVA,EAAYtE,eAAiB,EAEhF,GAAG,CAAW,OAAVsE,QAAU,IAAVA,OAAU,EAAVA,EAAYtE,cAAesE,IAEzBK,GAAYhN,EAAAA,EAAAA,UAAQ,WACxB,OAAO6G,EAAYtF,OAAS,CAC9B,GAAG,CAACsF,EAAYtF,SAERiF,IAAUxG,EAAAA,EAAAA,UAAQ,WAGxB,IAK2BiN,EALrBC,EAAU5B,OAAO6B,QAAQtC,GAAkBuC,MAAK,SAAC/J,EAAMgK,GAC3D,OAAOhK,EAAK,GAAGiK,cAAcD,EAAK,GACpC,IACME,EAAgC,OAAZ7I,QAAY,IAAZA,GAAAA,EAAc8B,MAAQ,CAAa,OAAZ9B,QAAY,IAAZA,OAAY,EAAZA,EAAc8B,OAAS,GAAGgH,GAAAC,EAAAA,EAAAA,GAEvDP,GAAO,IAA3B,IAAAM,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAA6B,CAAC,IACtB9J,EADQmJ,EAAAnJ,MACM,IACf,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO0C,QAAS+G,EAAQM,KAAU,OAAL/J,QAAK,IAALA,OAAK,EAALA,EAAO0C,MACtC,CAAC,OAAAsH,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CAGD,MAAO,CAAExH,MAFa,OAAP0G,QAAO,IAAPA,GAAAA,EAAS3L,OAAyDgM,EAAQU,KAAK,MAAhE,GAAAvN,OAAkB,OAAZgE,QAAY,IAAZA,OAAY,EAAZA,EAAc8B,MAAK,yBAGzD,GAAG,CAAa,OAAZ9B,QAAY,IAAZA,OAAY,EAAZA,EAAc8B,MAAOqE,IAfjBrE,OAiBR5B,EAAAA,EAAAA,YAAU,WACR0H,EAAS,QAAS9F,GACpB,GAAG,CAACA,GAAO8F,IAEX,IAAM4B,IAAUzO,EAAAA,EAAAA,cACd,SAACwF,GACK+E,EACF7F,EACGgK,oBAAoB,CACnBlJ,MAAMmJ,EAAAA,EAAAA,IAAmBnJ,EAAM+E,GAC/BqE,UAAW,SAAApJ,GACT4H,QAAQC,IAAI,gCAAiC7H,GAE7C9D,GAAWA,GACb,EACAmN,QAASC,EAAAA,GAAAA,gBACTpJ,UAAWb,EAAQa,UAAU,YAE9BqJ,OAEHrK,EACGsK,gBAAgB,CACfxJ,MAAMmJ,EAAAA,EAAAA,IAAmBnJ,GACzBoJ,UAAW,SAAApJ,GACTuF,EAAckE,MAAMC,OAASxN,GAAWA,IACxCqJ,EAAckE,MAAME,OAAShC,GAC/B,EACA0B,QAASC,EAAAA,GAAAA,gBACTpJ,UAAWb,EAAQa,UAAU,YAE9BqJ,MAIP,GACA,CAAClK,EAASnD,EAASyL,EAAOzI,EAASqG,EAAckE,MAAME,MAAOpE,EAAckE,MAAMC,MAAO3E,IAGrF6E,IAAepP,EAAAA,EAAAA,cACnB,SAACqP,EAAkBpP,EAAY8G,GAC7B8F,EAAS,iBAAD5L,OAAkBoO,GAAYpP,GAEtCoL,GAAoB,SAAAjJ,GAAC,OAAAX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUW,GAAC,IAAAgK,EAAAA,EAAAA,GAAA,GAAGiD,EAA4B,OAAjBhD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAoBpM,IAAG,GACvE,GACA,CAACoM,EAAmBQ,IAGhByC,IAAiBtP,EAAAA,EAAAA,cAAY,WACjC6M,EAAS,gBAAiB,CAAC,GAC3BxB,EAAoB,CAAC,EACvB,GAAG,CAACwB,IAEE0C,IAAiBhP,EAAAA,EAAAA,UAAQ,WAC7B,OAAqB,OAAdoL,QAAc,IAAdA,OAAc,EAAdA,EAAgBlL,KAAI,SAAA+O,GACzB,OACE1O,EAAAA,EAAAA,KAAC2O,GAA8B,CAE7BjJ,KAAMgJ,EACNpI,YAAaA,EACbV,SAAU0I,IAAa,QAAAnO,OAHVuO,EAAK/J,KAMxB,GACF,GAAG,CAACkG,EAAgBvE,EAAagI,KAEjC,OACE5H,EAAAA,EAAAA,MAAC0B,IAAazH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACZ+I,SAAUsC,EAAa2B,IAAS,SAAAzB,GAC9BI,QAAQsC,MAAM,iBAAkB1C,EAClC,IACA2C,QAASL,IACLzO,GAAK,IAAAW,SAAA,EAETV,EAAAA,EAAAA,KAAC8O,EAAAA,GAAa,CACZC,YAAanO,EACb2I,MAAuC,QAAlCL,EAAGK,IAAwB,OAAfY,QAAe,IAAfA,OAAe,EAAfA,EAAiBlE,cAAK,IAAAiD,EAAAA,EAAK,GAC5CuD,UAAWA,EACXuC,UAAQ,KAGVtI,EAAAA,EAAAA,MAAC6B,GAAO,CAAC1B,KAAM,EAAGtG,WAAS,EAACU,SAAU,OAAOP,SAAA,EAC3CgG,EAAAA,EAAAA,MAAC+B,GAAM,CAAA/H,SAAA,EACLV,EAAAA,EAAAA,KAACiP,GAAAA,EAAU,CAAChJ,OAAOiJ,EAAAA,GAAAA,GAAE,SAAUN,MAAO1C,EAAOjG,MAAMvF,UACjDV,EAAAA,EAAAA,KAACmP,GAAAA,IAASxO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKsL,EAAS,QAAS,CAAE5E,UAAU,KAAO,IAAE+H,aAAaF,EAAAA,GAAAA,GAAE,SAAU7H,UAAQ,QAGzFX,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACkO,YAAa,MAAO1I,IAAK,EAAGpG,WAAS,EAAAG,SAAA,EAC5CV,EAAAA,EAAAA,KAACiP,GAAAA,EAAU,CAAChJ,OAAOiJ,EAAAA,GAAAA,GAAE,OAAQN,MAAO1C,EAAO1E,IAAI9G,UAC7CV,EAAAA,EAAAA,KAACmP,GAAAA,IAASxO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKsL,EAAS,MAAO,CAAE5E,UAAU,KAAO,IAAE+H,aAAaF,EAAAA,GAAAA,GAAE,OAAQ7H,UAAQ,QAGrFrH,EAAAA,EAAAA,KAACiP,GAAAA,EAAU,CAAChJ,OAAOiJ,EAAAA,GAAAA,GAAE,WAAYN,MAAO1C,EAAOzE,QAAQ/G,UACrDV,EAAAA,EAAAA,KAACmP,GAAAA,IAASxO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKsL,EAAS,YAAU,IAAEmD,aAAaF,EAAAA,GAAAA,GAAE,uBAOzDlP,EAAAA,EAAAA,KAACwI,GAAW,CAACzC,QAAS,UAAWuJ,OAAQ,UAAU5O,SAChD+N,MAGDtK,IACAuC,EAAAA,EAAAA,MAACmC,GAAU,CAAC9C,QAAS,QAASxF,WAAS,EAAAG,SAAA,EACrCV,EAAAA,EAAAA,KAAC+I,GAAgB,CAAChD,QAAS,MAAOwJ,eAAgB,WAAYF,YAAa,MAAO9O,WAAS,EAAAG,UACzFV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAC4I,MAAO,GAAIzI,QAAS,IAAIrG,UAC3BwO,EAAAA,GAAAA,GAAE,oBAIPxI,EAAAA,EAAAA,MAAC+B,GAAM,CAAA/H,SAAA,EACLV,EAAAA,EAAAA,KAACiP,GAAAA,EAAU,CAAChJ,OAAOiJ,EAAAA,GAAAA,GAAE,gBAAiBN,MAAa,OAAN1C,QAAM,IAANA,GAAkB,QAAZ/C,EAAN+C,EAAQlF,kBAAU,IAAAmC,OAAZ,EAANA,EAAoBlC,IAAIvG,UACnEV,EAAAA,EAAAA,KAACyP,GAAAA,EAAgB,CAACC,UAAQ,OAG5B1P,EAAAA,EAAAA,KAACiP,GAAAA,EAAU,CAAChJ,OAAOiJ,EAAAA,GAAAA,GAAE,qBAAsBN,MAAa,OAAN1C,QAAM,IAANA,GAAkB,QAAZ9C,EAAN8C,EAAQlF,kBAAU,IAAAoC,GAAQ,QAARC,EAAlBD,EAAoBzB,cAAM,IAAA0B,OAApB,EAANA,EAA4BzB,GAAGlH,UAC/EV,EAAAA,EAAAA,KAACmP,GAAAA,IAASxO,EAAAA,EAAAA,GAAA,CAACyO,YAAa,SAAanD,EAAS,sCAOxDjM,EAAAA,EAAAA,KAAC2P,EAAAA,GAAa,CACZC,QAA0B,QAAnBtL,EAAEP,EAAQQ,iBAAS,IAAAD,OAAA,EAAjBA,EAAmBqF,OAC5BkG,kBAAgB,EAChBC,iBAAmC,QAAjBxG,EAAAvF,EAAQQ,iBAAS,IAAA+E,GAAjBA,EAAmBK,OAAS,aAAeF,EAAS,qEAAgB,uCACtFgD,UAAWA,EACXsD,aACE/P,EAAAA,EAAAA,KAAC2I,GAAc,CAAAjI,UACbV,EAAAA,EAAAA,KAACgQ,EAAAA,GAAsBrP,EAAAA,EAAAA,GAAA,GAAKsJ,WAMxC,EC7JA,GAtHoD,SAAHrK,GAAoD,IAAD0E,EAA7CsB,EAAQhG,EAARgG,SAAUqK,EAAQrQ,EAARqQ,SAAQC,EAAAtQ,EAAEuQ,YAAAA,OAAW,IAAAD,GAAOA,EACrFnM,GAAUqM,EAAAA,EAAAA,MACVC,EAAO1M,IACP2M,GAASC,EAAAA,EAAAA,MACTpM,EAAekM,EAAKlM,aACpBqM,GAAY3M,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UAGpC2M,GAAWvR,EAAAA,EAAAA,cACf,SAAAuG,GAAmE,IAAhEiL,EAAOjL,EAAPiL,QAASjH,EAAMhE,EAANgE,OACLtF,GAELqM,EAAUG,4BAA4B,CACpCjM,KAAM,CAAEkM,eAAgBF,EAASG,cAAepH,EAAQvF,QAASC,EAAaQ,KAC9EC,UAAWb,EAAQa,UAAU,eAEjC,GACA,CAACT,EAAcJ,EAASyM,IAEpBM,GAAwBrR,EAAAA,EAAAA,UAAQ,WAAO,IAADsR,EAEYrE,EADhD5E,EAA2C,CAAC,EAAEmF,GAAAC,EAAAA,EAAAA,GACJ,QADI6D,EAChB,OAAZ5M,QAAY,IAAZA,OAAY,EAAZA,EAAc6M,kBAAU,IAAAD,EAAAA,EAAI,IAAE,IAAtD,IAAA9D,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAAwD,CAAC,IAGrB4D,EAF5BC,EADYxE,EAAAnJ,MACU4N,WAAWC,GAAAlE,EAAAA,EAAAA,GAEX,OAATgE,QAAS,IAATA,EAAAA,EAAa,IAAE,IAAlC,IAAAE,EAAAjE,MAAA8D,EAAAG,EAAAhE,KAAAC,MAAoC,CAAC,IAADgE,EAAzB3C,EAAIuC,EAAA1N,MACP+N,EAAa,OAAJ5C,QAAI,IAAJA,GAAY,QAAR2C,EAAJ3C,EAAM6C,cAAM,IAAAF,OAAR,EAAJA,EAAc1M,IACzB2M,GAAU5C,EAAK6C,SACjBzJ,EAAcwJ,GAAU5C,EAAK6C,OAEjC,CAAC,OAAAhE,GAAA6D,EAAA5D,EAAAD,EAAA,SAAA6D,EAAA3D,GAAA,CACH,CAAC,OAAAF,GAAAN,EAAAO,EAAAD,EAAA,SAAAN,EAAAQ,GAAA,CACD,OAAO+D,EAAAA,EAAAA,IAAgCzG,OAAOyB,OAAO1E,GACvD,GAAG,CAAa,OAAZ3D,QAAY,IAAZA,OAAY,EAAZA,EAAc6M,aAEZS,GAAchS,EAAAA,EAAAA,UAAQ,WAC1B,MAAO,CACLiS,YAAaZ,EACba,UAAuB,OAAZxN,QAAY,IAAZA,OAAY,EAAZA,EAAc6M,WACzBY,cAAeC,EAAAA,GACfC,WAAY,SAAApN,GACV,GAAIkB,EAAU,CACZ,GAAQ,OAAJlB,QAAI,IAAJA,GAAAA,EAAMqN,QAER,YADAnM,GAASoM,EAAAA,EAAAA,IAAa,OAAJtN,QAAI,IAAJA,OAAI,EAAJA,EAAMqN,UAEX,OAAJrN,QAAI,IAAJA,GAAAA,EAAMC,KACfiB,EAAS,CAAEjB,IAAS,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,KAE1B,CACF,EACAsN,eAAiB9B,EAEb,SAAA+B,GAAQ,IAADC,EACCC,EAA2B,QAAlBD,EAAGD,EAAIG,mBAAW,IAAAF,OAAA,EAAfA,EAAiBxN,IAEnC,MAAO,CACL,CAAE2N,KAAM,UAAWC,KAAM,WAAY9R,QAAS,kBAAMgQ,EAAS,CAAEC,SAAS,GAAO,GAC/E,CAAE8B,WAAW,GACb,CACEF,KAAM,SACNC,KAAM,WACN7C,UAAW0C,EACX3R,QAAS,WACPgS,OAAOC,QAAQ,wGAADvS,OAAyBiS,GACzC,GAEF,CAAEE,KAAM,OAAQC,KAAM,WAAY7C,UAAW0C,GAC7C,CACEE,KAAM,OACNC,KAAM,WACN7C,UAAW0C,EACX3R,QAAS,WAAO,IAADkS,EACb,GAAKP,GAAcF,EAAIG,YAAvB,CACA,IAAMO,EAA4B,OAAZzO,QAAY,IAAZA,GAAwB,QAAZwO,EAAZxO,EAAc6M,kBAAU,IAAA2B,OAAZ,EAAZA,EAA0B3P,MAAK,SAAA6P,GAAC,OAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGlO,OAAQyN,CAAS,IAE9E9B,EAAO9M,KAAK,CACVsP,cAAeC,GACfC,mBAAoB,CAClBvJ,OAAQ2I,EACR5I,aAAcoJ,IAPwB,CAU5C,GAEF,CAAEJ,WAAW,GACb,CACEF,KAAM,OACNC,KAAM,iBACN9R,QAAS,WAGP6P,EAAO9M,KAAK,CACVsP,cAAeC,GACfC,mBAAoB,CAAExO,MAAO6L,EAAKlM,eAEtC,GAGN,OA/CAY,EAiDR,GAAG,CAAa,OAAZZ,QAAY,IAAZA,OAAY,EAAZA,EAAc6M,WAAYP,EAAUH,EAAQ1K,EAAUyK,EAAKlM,aAAc2M,EAAuBX,IASpG,OAPA9L,EAAAA,EAAAA,YAAU,WACJF,GACFsM,EAAS,CAAEC,SAAS,GAGxB,GAAG,KAGD1Q,EAAAA,EAAAA,KAACiT,EAAAA,IAAStS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ8Q,GAAW,IACfyB,UAAU,EACVC,UAAU,EACV5O,UAAkB,OAAPR,QAAO,IAAPA,GAAkB,QAAXO,EAAPP,EAASQ,iBAAS,IAAAD,OAAX,EAAPA,EAAoB0M,WAC/BqB,YAAapC,IAGnB,E,sDCxBA,GA/F4C,SAAHrQ,GAAoD,IAAD0E,EAA7CsB,EAAQhG,EAARgG,SAAUqK,EAAQrQ,EAARqQ,SAAQC,EAAAtQ,EAAEuQ,YAAAA,OAAW,IAAAD,GAAOA,EAC7EI,GAASC,EAAAA,EAAAA,MAETC,GAAY3M,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UACpCI,GAAUD,EAAAA,EAAAA,MAAeC,QACzBC,GAAeC,EAAAA,EAAAA,IAAgB,CAAEjF,GAAI+E,IAErCH,GAAUqM,EAAAA,EAAAA,MAIVK,GAAWvR,EAAAA,EAAAA,aAAW,eAAAgK,GAAAkK,EAAAA,GAAAA,IAAAC,EAAAA,GAAAA,KAAAC,MAC1B,SAAAC,EAAA9N,GAAA,IAAAiL,EAAAjH,EAAA,OAAA4J,EAAAA,GAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAA3Q,KAAA2Q,EAAA3G,MAAA,OAAwB,GAAf4D,EAAOjL,EAAPiL,QAASjH,EAAMhE,EAANgE,OACXtF,EAAa,CAADsP,EAAA3G,KAAA,eAAA2G,EAAAC,OAAA,iBACjBlD,EAAUmD,aAAa,CACrBjP,KAAM,CAAE/B,OAAQ,CAAEuB,QAAqB,OAAZC,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,KAAOiM,eAAgBF,EAASG,cAAepH,GACxF7E,UAAkB,OAAPb,QAAO,IAAPA,OAAO,EAAPA,EAASa,UAAU,YAC7B,wBAAA6O,EAAAG,OAAA,GAAAL,EAAA,KACJ,gBAAAM,GAAA,OAAA3K,EAAA+B,MAAA,KAAA6I,UAAA,EAPyB,GAQ1B,CAAC3P,EAAcJ,EAASyM,IAKpBiB,GAAchS,EAAAA,EAAAA,UAAQ,WAC1B,MAAO,CACLkS,UAAuB,OAAZxN,QAAY,IAAZA,OAAY,EAAZA,EAAc4P,OACzBrC,YAAasC,GAAAA,GACblC,WAAY,SAAApN,GACV,GAAIkB,EAAU,CACZ,GAAQ,OAAJlB,QAAI,IAAJA,GAAAA,EAAMqN,QAER,YADAnM,GAASoM,EAAAA,GAAAA,IAAa,OAAJtN,QAAI,IAAJA,OAAI,EAAJA,EAAMqN,UAEX,OAAJrN,QAAI,IAAJA,GAAAA,EAAMC,KACfiB,EAAS,CAAEjB,IAAS,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,KAE1B,CACF,EACAsN,eAAiB9B,EAEb,SAAA+B,GAAQ,IAADC,EACCC,EAA2B,QAAlBD,EAAGD,EAAIG,mBAAW,IAAAF,OAAA,EAAfA,EAAiBxN,IAEnC,MAAO,CACL,CAAE2N,KAAM,UAAWC,KAAM,WAAY9R,QAAS,kBAAMgQ,EAAS,CAAEC,SAAS,GAAO,GAC/E,CAAE8B,WAAW,GACb,CAAEF,KAAM,SAAUC,KAAM,WAAY7C,UAAW0C,GAC/C,CAAEE,KAAM,OAAQC,KAAM,WAAY7C,UAAW0C,GAC7C,CAAEE,KAAM,OAAQC,KAAM,WAAY7C,UAAW0C,GAC7C,CAAEI,WAAW,GACb,CACEF,KAAM,OACNC,KAAM,iBACN9R,QAAS,WACP6P,EAAO9M,KAAK,CACVsP,cAAemB,GAAAA,QACfjB,mBAAoB,CAClBxO,MAAOL,IAab,GAGN,OAlCAY,EAoCR,GAAG,CAACZ,EAAcgM,EAAavK,EAAU6K,EAAUH,IASnD,OAPAjM,EAAAA,EAAAA,YAAU,WAERoM,EAAS,CAAEC,SAAS,GAGtB,GAAG,KAGD1Q,EAAAA,EAAAA,KAACiT,EAAAA,IAAStS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ8Q,GAAW,IACfyB,UAAU,EACVC,UAAU,EACV5O,UAAkB,OAAPR,QAAO,IAAPA,GAAkB,QAAXO,EAAPP,EAASQ,iBAAS,IAAAD,OAAX,EAAPA,EAAoByP,OAC/B1B,YAAapC,IAGnB,E,qBC5BA,GAlEuB,SAAHrQ,GAAkE,IAA5DgG,EAAQhG,EAARgG,SAAUqK,EAAQrQ,EAARqQ,SAAUE,EAAWvQ,EAAXuQ,YACtC+D,GAAiBC,EAAAA,EAAAA,MAAsBhQ,aACvCmM,GAASC,EAAAA,EAAAA,MACTC,GAAY3M,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UAC1C/B,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtC6N,EAAO3N,EAAA,GAAEmS,EAAUnS,EAAA,GAEpBwO,GAAWvR,EAAAA,EAAAA,cACf,SAAAuG,GAAmE,IAAhEiL,EAAOjL,EAAPiL,QAAejL,EAANgE,OACV,GAAKyK,EAAL,CACA,IAAMG,GAAUrC,EAAAA,GAAAA,IAASkC,GACzB1D,EAAU8D,kBAAkB,CAC1B5P,KAAM,CAAEkM,eAAgBF,EAAS/N,OAAQ,CAAE6B,MAAO6P,IAClDzP,UAAWwP,GAJc,CAM7B,GACA,CAACF,EAAgB1D,IAGb+D,GAAe9U,EAAAA,EAAAA,UAAQ,WAC3B,MAAO,CACLkS,UAAyB,OAAduC,QAAc,IAAdA,OAAc,EAAdA,EAAgBM,YAC3B9C,YAAa+C,GAAAA,GACb3C,WAAY,SAAApN,GACV,GAAIkB,EAAU,CACZ,GAAQ,OAAJlB,QAAI,IAAJA,GAAAA,EAAMqN,QAER,YADAnM,GAASoM,EAAAA,GAAAA,IAAa,OAAJtN,QAAI,IAAJA,OAAI,EAAJA,EAAMqN,UAEX,OAAJrN,QAAI,IAAJA,GAAAA,EAAMC,KACfiB,EAAS,CAAEjB,IAAS,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,KAE1B,CACF,EACAsN,eAAiB9B,EAEb,SAAA+B,GAGE,MAAO,CACL,CAAEI,KAAM,UAAWC,KAAM,WAAY9R,QAAS,kBAAMgQ,EAAS,CAAEC,SAAS,GAAO,GAE/E,CAAE8B,WAAW,GACb,CACEF,KAAM,OACNC,KAAM,iBACN9R,QAAS,WACP6P,EAAO9M,KAAK,CACVsP,cAAe4B,GAAAA,EAAAA,wBACf1B,mBAAoB,CAAC,GAEzB,GAGN,OAnBAjO,EAqBR,GAAG,CAAe,OAAdmP,QAAc,IAAdA,OAAc,EAAdA,EAAgBM,YAAa/D,EAAUH,EAAQ1K,EAAUuK,IAS7D,OAPA9L,EAAAA,EAAAA,YAAU,WAGRoM,EAAS,CAAEC,SAAS,GAEtB,GAAG,KAEI1Q,EAAAA,EAAAA,KAACiT,EAAAA,IAAStS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK4T,GAAY,IAAErB,UAAU,EAAOC,UAAU,EAAO5O,UAAWqL,EAASyC,YAAapC,IACzG,E,WCrEK0E,GAAmB,SAAnBA,GAAmB,OAAnBA,EAAmB,wBAAnBA,EAAmB,gBAAnBA,EAAmB,0BAAnBA,CAAmB,EAAnBA,IAAmB,IAKlBC,IAAWC,EAAAA,EAAAA,IAAoBF,IAqD/BG,IAAY5T,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2XAKjB,SAAAC,GAAC,OAAIA,EAAEC,MAAME,QAAQC,kBAAkB,IACjC,SAAAJ,GAAC,OAAIA,EAAEC,MAAMwT,oBAAoB,IAY3B,SAAAzT,GAAC,OAAKA,EAAE0T,UAAY,EAAI,GAAG,IAMjDC,IAAS/T,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2EACJ,SAAAC,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IACxB,SAAA3H,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAG5D,GA3E8E,SAAHrJ,GAAyC,IAADsV,EAAAC,EAAlCH,EAASpV,EAAToV,UAAWI,EAAgBxV,EAAhBwV,iBACpF/E,EAAO1M,IAEb5B,GAAoCC,EAAAA,EAAAA,UAA8B2S,GAAoBU,YAAWpT,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1FuT,EAAUrT,EAAA,GAAEsT,EAAatT,EAAA,GAE1BuT,GAAY/V,EAAAA,EAAAA,UAAQ,WAAO,IAADgW,EAAAC,EAC9B,IAAKrF,EAAKlM,aACR,OAAO,KAET,IAAMwR,GAAkDF,EAAA,IAAAnK,EAAAA,EAAAA,GAAAmK,EACrDd,GAAoBU,YAAarV,EAAAA,EAAAA,KAAC4V,GAAa,CAACzF,aAAW,MAAG7E,EAAAA,EAAAA,GAAAmK,EAC9Dd,GAAoBkB,aAAc7V,EAAAA,EAAAA,KAAC8V,GAAc,CAAC3F,aAAW,MAAG7E,EAAAA,EAAAA,GAAAmK,EAChEd,GAAoBoB,QAAS/V,EAAAA,EAAAA,KAACgW,GAAS,CAAC7F,aAAW,KAAGsF,GAEzD,OAAyB,QAAzBC,EAAW,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAOL,UAAW,IAAAI,EAAAA,EAAI,IAC/B,GAAG,CAACJ,EAAYjF,EAAKlM,eAMrB,OACEuC,EAAAA,EAAAA,MAACoO,GAAS,CAAC7T,SAAU,SAAUX,YAAU,EAAC0U,UAAWA,EAAUtU,SAAA,CAC5DsU,IACChV,EAAAA,EAAAA,KAACiW,GAAAA,GAAW,CACVlH,YAAaqG,EACbc,aACExP,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAAC4E,QAAS,QAASsJ,YAAa,MAAO7O,WAAY,SAAU+O,eAAgB,SAAU5I,IAAK,EAAEjG,SAAA,EACpGV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAACG,QAAS,IAAKyI,MAAO,GAAG9O,SACvB,OAAJ2P,QAAI,IAAJA,GAAkB,QAAd6E,EAAJ7E,EAAMlM,oBAAY,IAAA+Q,OAAd,EAAJA,EAAoBjP,SAGvBjG,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAC4I,MAAO,GAAG9O,SAAM,OAAJ2P,QAAI,IAAJA,GAAkB,QAAd8E,EAAJ9E,EAAMlM,oBAAY,IAAAgR,OAAd,EAAJA,EAAoB3N,YAM9Cd,EAAAA,EAAAA,MAACuO,GAAM,CAAChU,SAAU,SAAUV,WAAS,EAACsG,KAAM,EAAEnG,SAAA,EAC5CV,EAAAA,EAAAA,KAACmW,EAAAA,EAAW,CAACC,cAAexB,GAAUyB,aAAcf,EAAYgB,YAtBN,SAACxX,EAAGyE,EAAO1D,GACzE0V,EAAchS,EAChB,EAoBkGgT,eAAa,IAExGf,OAIT,E,sFCoBMgB,GAMD,SANCA,EAMJ/Q,GAQK,IAADgR,EAAAC,EAPJhR,EAAID,EAAJC,KACSiR,GADLlR,EACJ5F,MAAS4F,EACTmR,KAAAA,OAAG,IAAAD,EAAG,EAACA,EACPrQ,EAAWb,EAAXa,YAAWuQ,EAAApR,EACXqR,SAAAA,OAAQ,IAAAD,EAAG,WACTvK,QAAQC,IAAI,sBAAuBqK,EACrC,EAACC,EAEKtQ,GAAiB9G,EAAAA,EAAAA,UAAQ,WAAO,IAAD+G,EACnC,OAAW,OAAJd,QAAI,IAAJA,GAAkB,QAAdc,EAAJd,EAAMe,oBAAY,IAAAD,OAAd,EAAJA,EAAoB7G,KAAI,SAAC+F,EAAM7F,GACpC,OACEG,EAAAA,EAAAA,KAACwW,EAAQ,CAEP9Q,KAAMA,EACN7F,MAAOA,EACPiX,SAAUA,EACVF,IAAKA,EAAM,EACXtQ,YAAaA,GAAY,YAAAnG,OALRyW,EAAG,KAAAzW,OAAIuF,EAAKf,KAQnC,GACF,GAAG,CAAK,OAAJe,QAAI,IAAJA,OAAI,EAAJA,EAAMe,aAAcmQ,EAAKE,EAAUxQ,IAEjCX,GAAalG,EAAAA,EAAAA,UAAQ,WACzB,OAAO6G,EAAYrD,SAASyC,EAAKf,IACnC,GAAG,CAACe,EAAKf,IAAK2B,IACd,OACEI,EAAAA,EAAAA,MAAAqQ,EAAAA,SAAA,CAAArW,SAAA,CACGiF,IACCe,EAAAA,EAAAA,MAACsQ,GAAO,CAAC3H,YAAa,MAAO7O,WAAY,SAAUuF,QAAS,eAAgBY,IAAK,EAAEjG,SAAA,EAC5E,OAAJgF,QAAI,IAAJA,GAAY,QAAR+Q,EAAJ/Q,EAAM6L,cAAM,IAAAkF,OAAR,EAAJA,EAAcxQ,QAAK,GAAA9F,OAAW,OAAJuF,QAAI,IAAJA,GAAY,QAARgR,EAAJhR,EAAM6L,cAAM,IAAAmF,OAAR,EAAJA,EAAczQ,MAAK,KAAG,GAAA9F,OACzC,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAMO,QACVjG,EAAAA,EAAAA,KAACkG,GAAAA,EAAU,CACTJ,QAAS,WACTmR,QAAS,QACTC,KAAM,OACNC,YAAa,MACb1W,QAAS,kBAAMqW,GAAYA,EAASpR,EAAKf,IAAI,OAIlD4B,IAGP,EAEMyQ,IAAU9V,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4IAGpB,SAAAC,GAAC,OAAIA,EAAEC,MAAM6V,YAAYC,IAAI,IAKlB,SAAA/V,GAAC,OAAIA,EAAEC,MAAM6V,YAAYC,IAAI,IAEnD,GAvIoE,SAAHzX,GAAsD,IAAhD0X,EAAO1X,EAAP0X,QAAS1R,EAAQhG,EAARgG,SAAU2R,EAAQ3X,EAAR2X,SAAUC,EAAW5X,EAAX4X,YAClGzV,GAAsCC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDuE,EAAWrE,EAAA,GAAEwV,EAAcxV,EAAA,GAE5BqM,GAAepP,EAAAA,EAAAA,cACnB,SAACwY,GACCD,GAAe,SAAA3U,GACb,IAAM6U,EAAUD,EACZ5U,EAAKG,SAAe,OAANyU,QAAM,IAANA,OAAM,EAANA,EAAQ/S,KACpB7B,EAAKP,QAAO,SAAAC,GAAE,OAAIA,KAAa,OAANkV,QAAM,IAANA,OAAM,EAANA,EAAQ/S,IAAG,IAAC,GAAAxE,QAAAkD,EAAAA,EAAAA,GACjCP,GAAI,CAAE4U,EAAO/S,MACnB7B,EAGJ,OAFA8C,IAAkB,OAAN8R,QAAM,IAANA,OAAM,EAANA,EAAQ/S,MAAOiB,EAAe,OAAN8R,QAAM,IAANA,OAAM,EAANA,EAAQ/S,KAC5C4S,GAAYA,EAASI,GACdA,CACT,GACF,GACA,CAACJ,EAAU3R,IAEPgS,GAAe1Y,EAAAA,EAAAA,cACnB,SAACC,GACCsY,GAAe,SAAA3U,GACb,IAAM6U,EAAU7U,EAAKP,QAAO,SAAAC,GAAE,OAAIA,IAAOrD,CAAE,IAG3C,OADAoY,GAAYA,EAASI,GACdA,CACT,GACF,GACA,CAACJ,IAGGM,GAAiBpY,EAAAA,EAAAA,UAAQ,WAC7B,OAAc,OAAP6X,QAAO,IAAPA,OAAO,EAAPA,EAAS3X,KAAI,SAAC+F,EAAM7F,GACzB,OACEG,EAAAA,EAAAA,KAACwW,GAAQ,CAEP9Q,KAAMA,EACN7F,MAAOA,EACPyG,YAAaA,EACbwQ,SAAUc,GAAa,cAAAzX,OAJJuF,EAAKf,KAO9B,GACF,GAAG,CAACiT,EAAcN,EAAShR,IAQ3B,OANAjC,EAAAA,EAAAA,YAAU,WACJmT,GACFC,EAAeD,EAEnB,GAAG,CAACA,KAGF9Q,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACZ,WAAS,EAACoG,IAAK,EAAEjG,SAAA,EACxBV,EAAAA,EAAAA,KAAC8X,GAAAA,EAAY,CACXC,UAAQ,EACRC,oBAAkB,EAClB3B,aAAcmB,EAEZvR,OAAOgS,EAAAA,GAAAA,IAAU,cACjB7I,aAAa6I,EAAAA,GAAAA,IAAU,cACvB5Q,UAAU,EACViQ,QAAAA,EAEF1R,SAAU0I,KAGZtO,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACkO,YAAa,MAAO6I,SAAU,OAAQvR,IAAK,EAAEjG,SACnDmX,MAIT,EC/BMtP,IAAUrH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAC5B,SAAA3D,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAE5D,GAhDqC,SAAHrF,GAAuD,IAAjDgB,EAAOhB,EAAPgB,QAC9BuD,GAAiBgQ,EAAAA,EAAAA,MAAjBhQ,aACAgU,GAAcC,EAAAA,EAAAA,IAAqBC,GAAAA,GAAAA,iBAAnCF,UACFvU,GAAUC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UACxC/B,GAA0BC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCoM,EAAKlM,EAAA,GAAEqW,EAAQrW,EAAA,GAchBwK,GAAYhN,EAAAA,EAAAA,UAAQ,WAAO,IAAD8Y,EAAAC,EAI9B,OAHkC,OAAZrU,QAAY,IAAZA,GAAwB,QAAZoU,EAAZpU,EAAcsU,kBAAU,IAAAF,GAAiB,QAAjBC,EAAxBD,EAA0B5Y,KAAI,SAAA+Y,GAAC,OAAIA,EAAE/T,GAAG,WAAC,IAAA6T,OAA7B,EAAZA,EAA2CG,cAC3CxK,EAAMwK,UAG9B,GAAG,CAAa,OAAZxU,QAAY,IAAZA,OAAY,EAAZA,EAAcsU,WAAYtK,IAQ9B,OANA9J,EAAAA,EAAAA,YAAU,WACQ,OAAZF,QAAY,IAAZA,GAAAA,EAAcsU,YAChBH,EAAqB,OAAZnU,QAAY,IAAZA,OAAY,EAAZA,EAAcsU,WAAW9Y,KAAI,SAAA+Y,GAAC,OAAIA,EAAE/T,GAAG,IAEpD,GAAG,CAAa,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcsU,cAGhB/R,EAAAA,EAAAA,MAACkS,EAAAA,GAAW,CAAClP,SA1B4B,SAAAtK,GACzCA,EAAGyZ,iBAEH1U,GACEP,EAAQkV,WAAW,CACjBpU,MAAI/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IAAOqR,EAAAA,GAAAA,IAAS7N,IAAa,IAAEO,KAAM,CAAE+T,WAAYtK,GAASyC,gBAAgB,IAChF9C,UAAW,SAACpJ,EAAMqU,GAChBnY,GAAWA,GACb,GAEN,EAgB0CF,SAAA,EACtCV,EAAAA,EAAAA,KAAC8O,EAAAA,GAAa,CAACvF,MAAO,yDAAawF,YAAanO,EAAS6L,UAAWA,EAAWuC,UAAQ,KAEvFhP,EAAAA,EAAAA,KAACuI,GAAO,CAACxC,QAAS,YAAac,KAAM,EAAEnG,UACrCV,EAAAA,EAAAA,KAACgZ,GAAqB,CAACzB,SAAUe,EAAUhB,QAASa,EAAWX,YAAarJ,OAG9EnO,EAAAA,EAAAA,KAAC2P,EAAAA,GAAa,CAAClD,UAAWA,MAGhC,ECAMwM,GAKD,SALCA,EAKJxT,GAAwC,IAADgR,EAAAC,EAAjChR,EAAID,EAAJC,KAAIiR,EAAAlR,EAAEmR,IAAAA,OAAG,IAAAD,EAAG,EAACA,EAAErQ,EAAWb,EAAXa,YACfC,GAAiB9G,EAAAA,EAAAA,UAAQ,WAAO,IAAD+G,EACnC,OAAW,OAAJd,QAAI,IAAJA,GAAkB,QAAdc,EAAJd,EAAMe,oBAAY,IAAAD,OAAd,EAAJA,EAAoB7G,KAAI,SAAC+F,EAAM7F,GACpC,OACEG,EAAAA,EAAAA,KAACiZ,EAAqB,CAEpBvT,KAAMA,EACN7F,MAAOA,EACP+W,IAAKA,EAAM,EACXtQ,YAAaA,GAAY,YAAAnG,OAJRyW,EAAG,KAAAzW,OAAIuF,EAAKf,KAOnC,GACF,GAAG,CAAK,OAAJe,QAAI,IAAJA,OAAI,EAAJA,EAAMe,aAAcmQ,EAAKtQ,IAEvBX,GAAalG,EAAAA,EAAAA,UAAQ,WACzB,OAAO6G,EAAYrD,SAASyC,EAAKf,IACnC,GAAG,CAACe,EAAKf,IAAK2B,IACd,OACEI,EAAAA,EAAAA,MAAAqQ,EAAAA,SAAA,CAAArW,SAAA,CACGiF,IACCe,EAAAA,EAAAA,MAACwS,GAAAA,EAAAA,aAA2B,CAAC7J,YAAa,MAAO7O,WAAY,SAAUuF,QAAS,eAAgBY,IAAK,EAAEjG,SAAA,EAChG,OAAJgF,QAAI,IAAJA,GAAY,QAAR+Q,EAAJ/Q,EAAM6L,cAAM,IAAAkF,OAAR,EAAJA,EAAcxQ,QAAK,GAAA9F,OAAW,OAAJuF,QAAI,IAAJA,GAAY,QAARgR,EAAJhR,EAAM6L,cAAM,IAAAmF,OAAR,EAAJA,EAAczQ,MAAK,KAAG,GAAA9F,OACzC,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAMO,UAGbM,IAGP,E,mGC2EMiC,IAActH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iGACT,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAC5B,SAAA3D,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAItDD,IAAc9D,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wEAEP,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAGrDkU,IAAqBjY,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeiF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,iMASpCwE,IAAW3E,EAAAA,EAAAA,IAAOgF,GAAAA,EAAPhF,CAAkBwH,IAAAA,GAAArH,EAAAA,EAAAA,GAAA,4NAQV,SAAAC,GAAC,OAAIA,EAAEC,MAAM6V,YAAYgC,KAAK,IAG5B,SAAA9X,GAAC,OAAIA,EAAEC,MAAM6V,YAAYC,IAAI,IAGxD,GAxKyE,SAAHzX,GAW/D,IAADyZ,EAAA5T,EAVJ7E,EAAOhB,EAAPgB,QACA2I,EAAK3J,EAAL2J,MAEAG,GADY9J,EAAZ4J,aACQ5J,EAAR8J,UACAD,EAAM7J,EAAN6J,OACAjF,EAAK5E,EAAL4E,MAEAoB,GADQhG,EAAR0Z,SACQ1Z,EAARgG,UACA2R,EAAQ3X,EAAR2X,SACGxX,GAAK6J,EAAAA,EAAAA,GAAAhK,EAAAiK,IAEF1F,EAAeK,EACfZ,GAAUC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UAClCgG,GAAYC,EAAAA,EAAAA,MAClBhI,GAAkCC,EAAAA,EAAAA,UAA6B,QAArBqX,EAASvP,EAAU,UAAE,IAAAuP,OAAA,EAAZA,EAAc1U,KAAI1C,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9DqQ,EAASnQ,EAAA,GAAEsX,EAAYtX,EAAA,GAE9BmI,GAA8BpI,EAAAA,EAAAA,WAAS,GAAMqI,GAAAnI,EAAAA,EAAAA,GAAAkI,EAAA,GAAtCwF,EAAOvF,EAAA,GAAE+J,EAAU/J,EAAA,GAC1BmP,GAAsCxX,EAAAA,EAAAA,UAAmB,IAAGyX,GAAAvX,EAAAA,EAAAA,GAAAsX,EAAA,GAArDlT,EAAWmT,EAAA,GAAEhC,EAAcgC,EAAA,GAE5BC,GAAeja,EAAAA,EAAAA,UAAQ,WAC3B,OAAOqK,EAAU9G,MAAK,SAAAkM,GAAC,OAAIA,EAAEvK,MAAQyN,CAAS,GAChD,GAAG,CAACA,EAAWtI,IAET2C,GAAYhN,EAAAA,EAAAA,UAAQ,WAAO,IAADka,EAC9B,OAAmB,OAAZxV,QAAY,IAAZA,GAAwB,QAAZwV,EAAZxV,EAAcgN,kBAAU,IAAAwI,OAAZ,EAAZA,EAA0Bha,KAAI,SAAA2B,GAAC,OAAIA,EAAEqD,GAAG,IAAE+I,KAAK,QAASpH,EAAYoH,KAAK,IAClF,GAAG,CAAa,OAAZvJ,QAAY,IAAZA,OAAY,EAAZA,EAAcgN,WAAY7K,IAExB0F,GAAiC9M,EAAAA,EAAAA,cACrC,SAAA0a,GACEA,EAAMf,iBAEN,IAAM1Z,EAAW,OAANsK,QAAM,IAANA,EAAAA,EAAsB,OAAZtF,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,IAC/BxF,EACFyE,EAAQkV,WAAW,CACjBpU,KAAM,CAAEC,IAAKxF,EAAIuF,KAAM,CAAEyM,WAAY7K,IACrC1B,UAAWwP,EACXtG,UAAW,SAACpJ,EAAMmV,GAChB7L,EAAAA,GAAAA,QAAqB,mBACrBpN,GAAWA,GACb,IAGF0L,QAAQwN,MAAM,cAAexT,GAG/BoD,GAAYA,EAASpD,EACvB,GACA,CAAa,OAAZnC,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,IAAK/D,EAAS8I,EAAUpD,EAAa1C,EAAS6F,IAGzD6E,GAAepP,EAAAA,EAAAA,cACnB,SAACC,EAAYoP,GACXkJ,GAAe,SAAA3U,GACb,IAAM6U,EAAU7U,EAAKG,SAAS9D,GAAM2D,EAAKP,QAAO,SAAAC,GAAE,OAAIA,IAAOrD,CAAE,IAAC,GAAAgB,QAAAkD,EAAAA,EAAAA,GAAOP,GAAI,CAAE3D,IAK7E,OAHAoY,GAAYA,EAASI,GACrB/R,GAAYA,EAASzG,GAEdwY,CACT,GACF,GACA,CAACJ,EAAU3R,IAGP6I,GAAiBhP,EAAAA,EAAAA,UAAQ,WAAO,IAADsa,EACnC,OAAmB,OAAZL,QAAY,IAAZA,GAA0B,QAAdK,EAAZL,EAAcjT,oBAAY,IAAAsT,OAAd,EAAZA,EACHxX,QAAO,SAAAC,GAAE,QAAO,OAAFA,QAAE,IAAFA,GAAAA,EAAImI,aAAY,IAC/BhL,KAAI,SAAA+O,GAAS,IAADsL,EACX,OACEtT,EAAAA,EAAAA,MAAC1B,GAAW,CAA8B2B,IAAK,EAAGpG,WAAS,EAACwF,QAAS,UAAUrF,SAAA,EAC7EV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAACxG,MAAO,CAAEyG,KAAM,EAAGC,YAAa,IAAMC,QAAS,IAAIrG,SACrDgO,EAAKzI,SAGRjG,EAAAA,EAAAA,KAACmZ,GAAkB,CAAC5Y,WAAS,EAACwF,QAAS,QAASY,IAAK,EAAGuR,SAAU,OAAQ7I,YAAa,MAAM3O,SACzE,QADyEsZ,EAC1FtL,EAAKjI,oBAAY,IAAAuT,OAAA,EAAjBA,EAAmBra,KAAI,SAAA4D,GACtB,IAAMxC,EAAWuF,EAAYrD,SAASM,EAAMoB,KAE5C,OACE3E,EAAAA,EAAAA,KAAC6F,GAAQ,CAEPC,QAAS/E,EAAW,cAAgB,gBACpCgF,QAAS,UACTC,WAAY,IACZvF,QAAS,kBAAM6N,EAAa/K,EAAMoB,IAAK+J,EAAK/J,IAAI,EAACjE,SAEhD6C,EAAM0C,OAAK,cAAA9F,OANOoD,EAAMoB,KAS/B,QACmB,YAAAxE,OArBOuO,EAAK/J,KAwBvC,GACJ,GAAG,CAAC2J,EAAchI,EAAyB,OAAZoT,QAAY,IAAZA,OAAY,EAAZA,EAAcjT,eAQ7C,OANApC,EAAAA,EAAAA,YAAU,WACQ,OAAZF,QAAY,IAAZA,GAAAA,EAAcgN,YAChBsG,EAA2B,OAAZtT,QAAY,IAAZA,OAAY,EAAZA,EAAcgN,WAAWxR,KAAI,SAAA2B,GAAC,OAAIA,EAAEqD,GAAG,IAE1D,GAAG,CAAa,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcgN,cAGhBzK,EAAAA,EAAAA,MAACkS,EAAAA,IAAWjY,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAC+I,SAAUsC,GAAkBjM,GAAK,IAAAW,SAAA,EAC5CV,EAAAA,EAAAA,KAAC8O,EAAAA,GAAa,CACZC,YAAanO,EACb6L,UAAWA,EACXlD,MAAoC,QAA/B9D,EAAG8D,IAAqB,OAAZmQ,QAAY,IAAZA,OAAY,EAAZA,EAAczT,cAAK,IAAAR,EAAAA,EAAK,GACzCuJ,UAAQ,KAGVhP,EAAAA,EAAAA,KAAC8X,GAAAA,EAAY,CACX7R,OAAOiJ,EAAAA,GAAAA,GAAE,uBACToI,QAASxN,EACTmQ,cAAe7H,EACfxM,SAAU,SAAA8R,GACR6B,EAAmB,OAAN7B,QAAM,IAANA,OAAM,EAANA,EAAQ/S,IACvB,KAGF3E,EAAAA,EAAAA,KAACwI,GAAW,CAAC3B,KAAM,EAAG5F,SAAU,OAAOP,SACpC+N,KAGHzO,EAAAA,EAAAA,KAAC2P,EAAAA,GAAa,CACZlD,UAAWA,EACXmD,QAASA,EACTE,iBAAkBF,EAAU,aAAe,0EAInD,ECpJasK,GAAsE,SAAHta,GAAiC,IAA3B8F,EAAI9F,EAAJ8F,KAAMyU,EAAava,EAAbua,cACpFC,GAAe3a,EAAAA,EAAAA,UAAQ,WAAO,IAAD+G,EAAA6T,EACjC,OAAwB,QAAxB7T,EAAOd,EAAKe,oBAAY,IAAAD,GACyB,QADzB6T,EAAjB7T,EACHjE,QAAO,SAAAC,GAAE,OAAiB,OAAb2X,QAAa,IAAbA,OAAa,EAAbA,EAAelX,SAAST,EAAGmC,IAAI,WAAC,IAAA0V,OADzB,EAAjBA,EAEH1a,KAAI,SAAC4D,EAAO1D,GACZ,OACEG,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,aAA2B,CAA6BhZ,UAAW,aAAcoa,SAAU,QAAQ5Z,SACjG6C,EAAM0C,OAAK,UAAA9F,OAD8BoD,EAAMoB,KAItD,GACJ,GAAG,CAACe,EAAKe,aAAc0T,IAEvB,OACEzT,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACjB,UAAW,WAAYyG,IAAK,EAAGnG,WAAY,WAAWE,SAAA,EAC7DV,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACX,WAAY,SAAU6O,YAAa,MAAO9O,WAAS,EAACoG,IAAK,EAAEjG,UAClEV,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,SAAuB,CAAC1J,MAAO,GAAIzI,QAAS,IAAIrG,SAC1C,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAMO,WAIXjG,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACkO,YAAa,MAAO6I,SAAU,OAAQ3X,WAAS,EAACoG,IAAK,EAAEjG,SAC7D0Z,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcpZ,QAAS,EAAIoZ,GAAepa,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAC4I,MAAO,GAAG9O,SAAE,YAIrF,E,WCkCA,GA1DwD,SAAHd,GAAoD,IAA9CgG,EAAQhG,EAARgG,SAAUuK,EAAWvQ,EAAXuQ,YAAuBoK,GAAF3a,EAARqQ,SAAerQ,EAAL2a,OAI1FxY,GAAkBC,EAAAA,EAAAA,WAAS,GAApB4N,GAA0B1N,EAAAA,EAAAA,GAAAH,EAAA,GAAnB,GAERyY,GAAiBpC,EAAAA,EAAAA,IAAqBC,GAAAA,GAAAA,aAAwBF,UAE9DsC,GAAehb,EAAAA,EAAAA,UAAQ,WAC3B,OAAO+a,EAAejY,QAAO,SAAAmW,GAAC,OAAI6B,GAASA,EAAMtX,SAASyV,EAAEnG,KAAc,GAC5E,GAAG,CAACiI,EAAgBD,IAcdhG,GAAe9U,EAAAA,EAAAA,UAAQ,WAC3B,MAAO,CACLkS,UAAW8I,EACX/I,YAAagJ,GAAAA,GACb5I,WAAY,SAAApN,GACV,GAAIkB,EAAU,CACZ,GAAQ,OAAJlB,QAAI,IAAJA,GAAAA,EAAMqN,QAER,YADAnM,GAASoM,EAAAA,GAAAA,IAAa,OAAJtN,QAAI,IAAJA,OAAI,EAAJA,EAAMqN,UAEX,OAAJrN,QAAI,IAAJA,GAAAA,EAAMC,KACfiB,EAAS,CAAEjB,IAAS,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,KAE1B,CACF,EACAsN,eAAiB9B,EAEb,SAAA+B,GAGE,MAAO,EAQT,OAZAnN,EAcR,GAAG,CAAC0V,EAAc7U,EAAUuK,IAE5B,OAAOnQ,EAAAA,EAAAA,KAACiT,EAAAA,IAAStS,EAAAA,EAAAA,GAAA,CAACuS,UAAU,EAAO3O,UAAWqL,GAAa2E,GAC7D,EC/CYoG,GAAqB,SAArBA,GAAqB,OAArBA,EAAqB,oBAArBA,EAAqB,oBAArBA,EAAqB,oBAArBA,EAAqB,wBAArBA,EAAqB,gCAArBA,EAAqB,oCAArBA,EAAqB,sBAArBA,EAAqB,0BAArBA,EAAqB,kBAArBA,CAAqB,MCiDjC,GAxDoD,SAAH/a,GAA6C,IAAD0E,EAAtCsB,EAAQhG,EAARgG,SAAUqK,EAAQrQ,EAARqQ,SAC3C2K,GADgEhb,EAAXuQ,aACzCtM,EAAAA,EAAAA,MAAxBgX,YACF9W,GAAUqM,EAAAA,EAAAA,MACVyK,GAAaC,EAAAA,EAAAA,MAAwBD,WAErCpK,GAAWvR,EAAAA,EAAAA,cAAY,WAC3B0b,EAAQG,OAAO,CAAEnW,UAAWb,EAAQa,UAAU,cAAeF,KAAM,CAAEgM,SAAS,IAChF,GAAG,CAAC3M,EAAS6W,KAEbvW,EAAAA,EAAAA,YAAU,WACRoM,GAEF,GAAG,IAEH,IAAM8D,GAAe9U,EAAAA,EAAAA,UAAQ,WAC3B,MAAO,CACLkS,UAAWkJ,EACXnJ,YAAasJ,GAAAA,GACblJ,WAAY,SAAApN,GACV,GAAIkB,EAAU,CACZ,GAAQ,OAAJlB,QAAI,IAAJA,GAAAA,EAAMqN,QAER,YADAnM,GAASoM,EAAAA,EAAAA,IAAa,OAAJtN,QAAI,IAAJA,OAAI,EAAJA,EAAMqN,UAEX,OAAJrN,QAAI,IAAJA,GAAAA,EAAMC,KACfiB,EAAS,CAAEjB,IAAS,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,KAE1B,CACF,EACAsN,eAAgB,SAAAC,GAGd,MAAO,CACL,CAAEI,KAAM,UAAW7R,QAASgQ,GAQhC,EAEJ,GAAG,CAACA,EAAU7K,EAAUiV,IASxB,OACE7a,EAAAA,EAAAA,KAACiT,EAAAA,IAAStS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACuS,UAAU,GAAWqB,GAAY,IAAEhQ,UAA4B,QAAnBD,EAAEP,EAAQQ,iBAAS,IAAAD,OAAA,EAAjBA,EAAmBuW,WAAYxI,YAAapC,IAEzG,EC3CYgL,GAAuB,SAAvBA,GAAuB,OAAvBA,EAAuB,cAAvBA,EAAuB,sBAAvBA,EAAuB,sBAAvBA,EAAuB,sBAAvBA,EAAuB,oBAAvBA,CAAuB,MAY7BtF,IAAOd,EAAAA,EAAAA,IAAoBoG,IA8G3BC,GAAOha,EAAAA,GAAAA,KAAWE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gLAaF,SAAAC,GAAC,OAAIA,EAAEC,MAAM4Z,oBAAoB,IAGjD5S,IAAUrH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2EACL,SAAAC,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAE1B,SAAA3H,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAE1D,GAlI8E,SAAHrJ,GAA+B,IAADwb,EAAxBxa,EAAOhB,EAAPgB,QACzEmD,GAD0FnE,EAAR8J,UACxEM,EAAAA,GAAAA,MACV9F,EAAwB,QAAjBkX,GAAGnX,EAAAA,EAAAA,aAAc,IAAAmX,OAAA,EAAdA,EAAgBlX,QAC1BC,GAAeC,EAAAA,EAAAA,IAAgB,CAAEjF,GAAI+E,IAErCsM,GAAY3M,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UAE1C/B,GAA0CC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CsZ,EAAapZ,EAAA,GAAEqZ,EAAgBrZ,EAAA,GAEtCsZ,GAA+C9P,EAAAA,EAAAA,MAAvCM,EAAQwP,EAARxP,SAAUK,EAAUmP,EAAVnP,WAAYJ,EAAYuP,EAAZvP,aAExBsC,GAAepP,EAAAA,EAAAA,cACnB,SAACwF,GACCqH,EAAS4J,GAAK0F,GAAe9X,MAAOmB,EACtC,GACA,CAAC2W,EAAetP,IAcZyJ,GAAY/V,EAAAA,EAAAA,UAAQ,WAAO,IAAD+b,EAAAC,EAAAC,EAoB9B,OAA0C,QAA1CD,GAnB+DD,EAAA,IAAAlQ,EAAAA,EAAAA,GAAAkQ,EAC5DP,GAAwBU,WAAY3b,EAAAA,EAAAA,KAAC4b,GAAa,CAAChW,SAAU0I,EAAc2B,SAAoB,OAAV7D,QAAU,IAAVA,OAAU,EAAVA,EAAYuP,cAAarQ,EAAAA,EAAAA,GAAAkQ,EAC9GP,GAAwB/S,OAAQlI,EAAAA,EAAAA,KAACgW,GAAS,CAAC7F,aAAW,EAACvK,SAAU0I,EAAc2B,SAAoB,OAAV7D,QAAU,IAAVA,OAAU,EAAVA,EAAYlE,UAASoD,EAAAA,EAAAA,GAAAkQ,EAC9GP,GAAwBY,WACvB7b,EAAAA,EAAAA,KAAC4V,GAAa,CAACzF,aAAW,EAACvK,SAAU0I,EAAc2B,SAAoB,OAAV7D,QAAU,IAAVA,OAAU,EAAVA,EAAYyP,cAAavQ,EAAAA,EAAAA,GAAAkQ,EAEvFP,GAAwBa,WACvB9b,EAAAA,EAAAA,KAAC8V,GAAc,CAAC3F,aAAW,EAACvK,SAAU0I,EAAc2B,SAAoB,OAAV7D,QAAU,IAAVA,OAAU,EAAVA,EAAY0P,cAAaxQ,EAAAA,EAAAA,GAAAkQ,EAExFP,GAAwBc,UACvB/b,EAAAA,EAAAA,KAACgc,GAAe,CACdzB,MAAO,CAACI,GAAsBsB,UAC9B9L,aAAW,EACXvK,SAAU0I,EACV2B,SAAoB,OAAV7D,QAAU,IAAVA,OAAU,EAAVA,EAAY2P,YACtBP,GAI4B,QAApBE,EAAC/F,GAAK0F,UAAc,IAAAK,OAAA,EAAnBA,EAAqBnY,cAAM,IAAAkY,EAAAA,EAAI,IAChD,GAAG,CACDJ,EACU,OAAVjP,QAAU,IAAVA,OAAU,EAAVA,EAAY0P,UACF,OAAV1P,QAAU,IAAVA,OAAU,EAAVA,EAAYlE,MACF,OAAVkE,QAAU,IAAVA,OAAU,EAAVA,EAAY2P,SACF,OAAV3P,QAAU,IAAVA,OAAU,EAAVA,EAAYyP,UACF,OAAVzP,QAAU,IAAVA,OAAU,EAAVA,EAAYuP,UACZrN,IAGI7B,GAAYhN,EAAAA,EAAAA,UAAQ,WAAO,IAADyc,EAAAC,EAOTC,EAGJC,EAGIC,EAGAC,EAGDC,EAlBdC,EAAuB,OAAZtY,QAAY,IAAZA,OAAY,EAAZA,EAAcsY,SAEzBC,GAAwDpR,EAAAA,EAAAA,GAAA,GAC/B,QAD+B4Q,EACvD,OAAJvG,SAAI,IAAJA,IAAqB,QAAjBwG,EAAJxG,GAAO0F,UAAc,IAAAc,OAAjB,EAAJA,EAAuB5Y,aAAK,IAAA2Y,EAAAA,EAAI,IAAK,GAGxC,OAAIQ,EAAMb,UACDzP,EAAWyP,WAAazP,EAAWyP,UAAUlX,OAAgB,OAAR8X,QAAQ,IAARA,GAAmB,QAAXL,EAARK,EAAUZ,iBAAS,IAAAO,OAAX,EAARA,EAAqBzX,KAE/E+X,EAAMxU,MACDkE,EAAWlE,OAASkE,EAAWlE,MAAMvD,OAAgB,OAAR8X,QAAQ,IAARA,GAAe,QAAPJ,EAARI,EAAUvU,aAAK,IAAAmU,OAAP,EAARA,EAAiB1X,KAEnE+X,EAAMf,UACDvP,EAAWuP,WAAavP,EAAWuP,UAAUhX,OAAgB,OAAR8X,QAAQ,IAARA,GAAmB,QAAXH,EAARG,EAAUd,iBAAS,IAAAW,OAAX,EAARA,EAAqB3X,KAE/E+X,EAAMZ,UACD1P,EAAW0P,WAAa1P,EAAW0P,UAAUnX,OAAgB,OAAR8X,QAAQ,IAARA,GAAmB,QAAXF,EAARE,EAAUX,iBAAS,IAAAS,OAAX,EAARA,EAAqB5X,KAE/E+X,EAAMX,SACD3P,EAAW2P,UAAY3P,EAAW2P,SAASpX,OAAgB,OAAR8X,QAAQ,IAARA,GAAkB,QAAVD,EAARC,EAAUV,gBAAQ,IAAAS,OAAV,EAARA,EAAoB7X,UADhF,CAIF,GAAG,CACW,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcsY,SACdpB,EACAjP,EAAW0P,UACX1P,EAAWlE,MACXkE,EAAW2P,SACX3P,EAAWyP,UACXzP,EAAWuP,YAGb,OACE3b,EAAAA,EAAAA,KAAC2c,EAAAA,GAAe,CAACpZ,MAAOQ,EAAQrD,UAC9BgG,EAAAA,EAAAA,MAACwU,GAAI,CAACxR,SAAUsC,GA7EJ,SAAC4Q,IACH,OAAZzY,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,MACZ6L,EAAUqM,YAAY,CACpBnY,KAAM,CAAEC,IAAiB,OAAZR,QAAY,IAAZA,OAAY,EAAZA,EAAcQ,IAAK8X,UAAUK,EAAAA,EAAAA,IAAUF,GAAiB/L,eAAe,GACpF/C,UAAW,SAACpJ,EAAMqU,GAChBzM,QAAQC,IAAI7H,EAAMqU,EACpB,EACAnU,UAAWb,EAAQa,UAAU,cAEnC,IAoE0ClE,SAAA,EACpCV,EAAAA,EAAAA,KAACiW,GAAAA,GAAW,CAAClH,YAAanO,EAAS2I,OAAO2F,EAAAA,GAAAA,GAAE,kBAAmBzC,UAAWA,KAE1EzM,EAAAA,EAAAA,KAACmW,EAAAA,EAAW,CAACC,cAAeT,GAAMoH,aAAc1B,EAAe2B,cAAe1B,KAE9Etb,EAAAA,EAAAA,KAACuI,GAAO,CAAC1B,KAAM,EAAGtG,WAAS,EAACU,SAAU,SAASP,SAC5C8U,KAGHxV,EAAAA,EAAAA,KAAC2P,GAAAA,GAAa,CAACC,QAAS7L,EAAQkZ,WAAYC,cAAe,WAAO,EAAGzQ,UAAWA,QAIxF,E,uDC3FMyO,GAAOha,EAAAA,GAAAA,KAAWE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,6JAWF,SAAAC,GAAC,OAAIA,EAAEC,MAAM4b,sBAAsB,IAMzD,GA9D0E,SAAHvd,GAAqB,IAAfgB,EAAOhB,EAAPgB,QACrEsT,GAAiBC,EAAAA,EAAAA,MAAsBhQ,aACvCP,GAAUC,EAAAA,EAAAA,MAAwBC,EAAAA,GAAAA,UACxC/B,GAA0BC,EAAAA,EAAAA,WAAwD,OAAdkS,QAAc,IAAdA,OAAc,EAAdA,EAAgBkJ,SAAU,IAAGnb,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1FoM,EAAKlM,EAAA,GAAEqW,EAAQrW,EAAA,GACtBmI,GAA8BpI,EAAAA,EAAAA,WAAS,GAAMqI,GAAAnI,EAAAA,EAAAA,GAAAkI,EAAA,GAAtCwF,EAAOvF,EAAA,GAAE+J,EAAU/J,EAAA,GAEpB9I,GAAQ8b,EAAAA,EAAAA,MAed,OACErd,EAAAA,EAAAA,KAACkb,GAAI,CAACxR,SAdmC,SAAAtK,GACzCA,EAAGyZ,iBAEH3E,GACEtQ,EAAQkV,WAAW,CACjBpU,MAAI/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IAAOqR,EAAAA,GAAAA,IAASkC,IAAe,IAAExP,KAAM,CAAE0Y,OAAQjP,GAAmCyC,gBAAgB,IACxG9C,UAAW,WACTlN,GAAWA,GACb,EACAgE,UAAWwP,GAEjB,EAGmC1T,UAC/BV,EAAAA,EAAAA,KAACsd,GAAAA,EAAwB,CACvBC,YAAapP,EACbvN,QAASA,EACT4c,cAAelF,EACfmF,sBAAuB,CACrB5W,KAAM,EACN6W,UAAU,aAADvd,OAAeoB,EAAM0D,oBAC9B0Y,aAAa,aAADxd,OAAeoB,EAAM0D,qBAEnC2Y,cACE5d,EAAAA,EAAAA,KAAC8O,EAAAA,GAAa,CAACvF,MAAO,+DAAcwF,YAAanO,EAASoO,UAAQ,EAACvC,UAAW0B,EAAMnN,OAAS,IAE/F6c,gBAAiB,SAAA9d,GACf,OACEC,EAAAA,EAAAA,KAAC2P,EAAAA,GAAa,CAACuN,cAAend,EAAM+d,sBAAuBlO,QAASA,EAASnD,UAAW0B,EAAMnN,OAAS,GAE3G,KAIR,E,iDCnCY+c,GAAqB,SAArBA,GAAqB,OAArBA,EAAqB,kBAArBA,EAAqB,wBAArBA,EAAqB,oBAArBA,EAAqB,gBAArBA,EAAqB,kBAArBA,EAAqB,UAArBA,CAAqB,MASpBC,IAA0BnJ,EAAAA,EAAAA,IAAoBkJ,IAyGrDE,IAAY/c,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,kFAIX,SAAAC,GAAC,OAAIA,EAAEC,MAAM4b,sBAAsB,IAGnD5U,IAAUrH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,KAAAA,IAAAN,EAAAA,EAAAA,GAAA,yEACL,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAC5B,SAAA3D,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAEtDiZ,IAAShd,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeiF,KAAAA,IAAA9E,EAAAA,EAAAA,GAAA,QACxB8c,IAAYjd,EAAAA,EAAAA,IAAOgF,GAAAA,EAAPhF,CAAkBwH,KAAAA,IAAArH,EAAAA,EAAAA,GAAA,wBAC1B,SAAAC,GAAC,OAAIA,EAAEC,MAAME,QAAQ2c,OAAOxP,KAAK,IAErCyP,IAAUnd,EAAAA,EAAAA,IAAOgF,GAAAA,EAAPhF,CAAkB0H,KAAAA,IAAAvH,EAAAA,EAAAA,GAAA,6EAK5Bid,GAA8E,CAClF,CACE/U,OAAO2F,EAAAA,GAAAA,GAAE,SACTqP,SAAU,SAAA7Z,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMuB,KAAK,EAC7BuY,SAAU,QACVC,IAAKV,GAAsBW,SAE7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,UACTqP,SAAU,SAAA7Z,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMia,QAAQ,EAChCH,SAAU,WACVC,IAAKV,GAAsBW,SAE7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,QACTqP,SAAU,SAAA7Z,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6N,IAAI,EAC5BiM,SAAU,OACVC,IAAKV,GAAsBW,SAE7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,OACTqP,SAAU,SAAA7Z,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,GAAG,EAC3BgX,SAAU,MACVC,IAAKV,GAAsBW,SAE7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,YACTqP,SAAU,SAAA7Z,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM+C,OAAO,EAC/B+W,SAAU,UACVC,IAAKV,GAAsBW,SAG7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,cACT0P,cRlLiF,SAAHhf,GAI3E,IAHLif,EAAIjf,EAAJif,KACAC,EAAclf,EAAdkf,eACApa,EAAI9E,EAAJ8E,KAEM+T,GAAaL,EAAAA,EAAAA,IAAqBC,GAAAA,GAAAA,iBAA4BF,UAC9D4G,GAAsBtf,EAAAA,EAAAA,UAAQ,WAAO,IAADuf,EAAAC,EACxC,OAA0C,QAA1CD,EAAW,OAAJta,QAAI,IAAJA,GAAgB,QAAZua,EAAJva,EAAM+T,kBAAU,IAAAwG,OAAZ,EAAJA,EAAkBtf,KAAI,SAAA6C,GAAE,OAAIA,EAAGmC,GAAG,WAAC,IAAAqa,EAAAA,EAAI,EAChD,GAAG,CAAK,OAAJta,QAAI,IAAJA,OAAI,EAAJA,EAAM+T,aAEJyG,GAAczf,EAAAA,EAAAA,UAAQ,WAC1B,OAAOgZ,EAAW9Y,KAAI,SAAC+Y,EAAG7Y,GACxB,OAAOG,EAAAA,EAAAA,KAACiZ,GAAqB,CAAsB3S,YAAayY,EAAqBrZ,KAAMgT,GAAE,OAAAvY,OAAnDuY,EAAE/T,KAC9C,GACF,GAAG,CAAC8T,EAAYsG,IAEhB,OACErY,EAAAA,EAAAA,MAACwS,GAAAA,EAAAA,KAAmB,CAAC9Y,MAAO,CAAE+e,UAAW,eAAgBze,SAAA,EACvDV,EAAAA,EAAAA,KAACof,GAAAA,EAAkB,CACjB7V,MAAW,OAAJsV,QAAI,IAAJA,OAAI,EAAJA,EAAMtV,MACb8V,uBAAwB,6CACxBC,mBAAoB,WAClBR,EAAe,CACbhf,gBAAiByf,IAErB,KAGFvf,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CACNZ,WAAS,EACT8O,YAAa,MACbE,eAAgB,WAChB2I,SAAU,OAEVvR,IAAK,EACLvG,MAAO,CAAEof,OAAQ,cAAeL,UAAW,IAAKze,SAE/Cwe,MAIT,EQ0IIV,SAAU,aACVC,IAAKV,GAAsBW,SAG7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,SACTqP,SAAU,SAAA7Z,GAAI,IAAA+a,EAAA,OAAQ,OAAJ/a,QAAI,IAAJA,GAAW,QAAP+a,EAAJ/a,EAAMgb,aAAK,IAAAD,OAAP,EAAJA,EAAaxZ,KAAK,EACpCuY,SAAU,QACVC,IAAKV,GAAsBW,SAE7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,eACTsP,SAAU,cACVD,SAAU,SAAAlK,GACR,IACE,IAAM3P,EAA4B,OAAP2P,QAAO,IAAPA,GAAAA,EAASsL,YAAcC,KAAKC,MAAa,OAAPxL,QAAO,IAAPA,OAAO,EAAPA,EAASsL,aAAyB,CAAC,EAQhG,MAPY,CAAC,GAADxf,QACP+O,EAAAA,GAAAA,GAAE,QAAO,MAAA/O,QAAS,OAAJuE,QAAI,IAAJA,OAAI,EAAJA,EAAMob,OAAQ,GAAC,GAAA3f,QAC7B+O,EAAAA,GAAAA,GAAE,OAAM,MAAA/O,QAAS,OAAJuE,QAAI,IAAJA,OAAI,EAAJA,EAAM4C,MAAO,GAAC,GAAAnH,QAC3B+O,EAAAA,GAAAA,GAAE,OAAM,MAAA/O,QAAS,OAAJuE,QAAI,IAAJA,OAAI,EAAJA,EAAM6C,MAAO,GAAC,GAAApH,QAC3B+O,EAAAA,GAAAA,GAAE,QAAO,MAAA/O,QAAS,OAAJuE,QAAI,IAAJA,OAAI,EAAJA,EAAMqb,OAAQ,IAGtBrS,KAAK,MAClB,CAAE,MAAOF,GACP,MAAO,EACT,CACF,EACAiR,IAAKV,GAAsBW,SAE7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,eACTqP,SAAU,SAAA7Z,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMsb,WAAW,EACnCxB,SAAU,cACVC,IAAKV,GAAsBW,SAK7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,kBACTqP,SAAU,SAAAlK,GAAO,IAAA4L,EAAA,OAAY,OAAP5L,QAAO,IAAPA,GAAgB,QAAT4L,EAAP5L,EAAS6L,eAAO,IAAAD,GAAhBA,EAAkBE,aAAe,MAAQ,IAAI,EACnE3B,SAAU,cACVC,IAAKV,GAAsBqC,SAG7B,CACE7W,OAAO2F,EAAAA,GAAAA,GAAE,eACTqP,SAAU,SAAAlK,GAAO,IAAAgM,EAAAC,EAAA,OAAY,OAAPjM,QAAO,IAAPA,GAAgB,QAATgM,EAAPhM,EAAS6L,eAAO,IAAAG,GAAa,QAAbC,EAAhBD,EAAkBE,mBAAW,IAAAD,GAA7BA,EAA+BE,YAAc,MAAQ,IAAI,EAC/EhC,SAAU,cACVC,IAAKV,GAAsBqC,SAG7B,CACE7W,OAAO2F,EAAAA,GAAAA,GAAE,qBACTqP,SAAU,SAAAlK,GAAO,IAAAoM,EAAAC,EAAA,OAAY,OAAPrM,QAAO,IAAPA,GAAgB,QAAToM,EAAPpM,EAAS6L,eAAO,IAAAO,GAAkB,QAAlBC,EAAhBD,EAAkBE,wBAAgB,IAAAD,GAAlCA,EAAoCF,YAAc,MAAQ,IAAI,EACpFhC,SAAU,mBACVC,IAAKV,GAAsBqC,SAG7B,CACE7W,OAAO2F,EAAAA,GAAAA,GAAE,gBACTqP,SAAU,SAAAlK,GAAO,IAAAuM,EAAAC,EAAA,OAAY,OAAPxM,QAAO,IAAPA,GAAgB,QAATuM,EAAPvM,EAAS6L,eAAO,IAAAU,GAAa,QAAbC,EAAhBD,EAAkBE,mBAAW,IAAAD,GAA7BA,EAA+BL,YAAc,MAAQ,IAAI,EAC/EhC,SAAU,cACVC,IAAKV,GAAsBqC,SAG7B,CACE7W,OAAO2F,EAAAA,GAAAA,GAAE,aACTqP,SAAU,SAAAlK,GAAO,IAAA0M,EAAAC,EAAA,OAAY,OAAP3M,QAAO,IAAPA,GAAgB,QAAT0M,EAAP1M,EAAS6L,eAAO,IAAAa,GAAU,QAAVC,EAAhBD,EAAkBE,gBAAQ,IAAAD,GAA1BA,EAA4BR,YAAc,MAAQ,IAAI,EAC5EhC,SAAU,WACVC,IAAKV,GAAsBqC,SAG7B,CACE7W,OAAO2F,EAAAA,GAAAA,GAAE,YACTqP,SAAU,SAAA7Z,GAAI,IAAAwc,EAAA,OAAQ,OAAJxc,QAAI,IAAJA,GAAa,QAATwc,EAAJxc,EAAMwb,eAAO,IAAAgB,OAAT,EAAJA,EAAeC,OAAO,EACxC3C,SAAU,UACVC,IAAKV,GAAsBqC,SAI7B,CACE7W,OAAO2F,EAAAA,GAAAA,GAAE,cACT0P,cCvQmF,SAAHhf,GAI7E,IAADyZ,EAHJwF,EAAIjf,EAAJif,KACAC,EAAclf,EAAdkf,eACApa,EAAI9E,EAAJ8E,KAEMoF,GAAYqK,EAAAA,EAAAA,MAAsBhD,WAExCpP,GAAoBC,EAAAA,EAAAA,UAA6B,QAArBqX,EAASvP,EAAU,UAAE,IAAAuP,OAAA,EAAZA,EAAc1U,KAA5CyN,GAAgDlQ,EAAAA,EAAAA,GAAAH,EAAA,GAAvC,GAEVuX,GAAW7Z,EAAAA,EAAAA,UAAQ,WACvB,OAAOqK,EAAU9G,MAAK,SAAAkM,GAAC,OAAIA,EAAEvK,MAAQyN,CAAS,GAChD,GAAG,CAACA,EAAWtI,IAETsX,GAAsB3hB,EAAAA,EAAAA,UAAQ,WAAO,IAAD4hB,EACxC,OAAe,OAAR/H,QAAQ,IAARA,GAAsB,QAAd+H,EAAR/H,EAAU7S,oBAAY,IAAA4a,OAAd,EAARA,EAAwB9e,QAAO,SAAAmM,GAAI,OAAKA,EAAK/D,YAAY,GAClE,GAAG,CAAS,OAAR2O,QAAQ,IAARA,OAAQ,EAARA,EAAU7S,eAER0T,GAAgB1a,EAAAA,EAAAA,UAAQ,WAAO,IAAD6hB,EAClC,OAAW,OAAJ5c,QAAI,IAAJA,GAAgB,QAAZ4c,EAAJ5c,EAAMyM,kBAAU,IAAAmQ,OAAZ,EAAJA,EAAkB3hB,KAAI,SAAA2B,GAAC,OAAIA,EAAEqD,GAAG,GACzC,GAAG,CAAK,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMyM,aAEJoQ,GAAmB9hB,EAAAA,EAAAA,UAAQ,WAC/B,OAA0B,OAAnB2hB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBzhB,KAAI,SAAC+O,EAAM7O,GACrC,OACEG,EAAAA,EAAAA,KAACka,GAAyB,CAElBra,MAAAA,EAAOif,eAAgBA,EAAgBpZ,KAAMgJ,EAAMyL,cAAAA,EAAezV,KAAAA,GAAI,QAAAvE,OAD3D,OAAJuO,QAAI,IAAJA,OAAI,EAAJA,EAAM/J,KAIzB,GACF,GAAG,CAACyc,EAAqBtC,EAAgB3E,EAAezV,IAExD,OACEgC,EAAAA,EAAAA,MAACwS,GAAAA,EAAAA,KAAmB,CAClBnT,QAAS,cACTY,IAAK,EACLzG,UAAW,uBACXE,MAAO,CAAE+e,UAAWoC,IAAoC,OAAhBA,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvgB,QAAS,EAAI,cAAgB,IAAKN,SAAA,EAE5FV,EAAAA,EAAAA,KAACof,GAAAA,EAAkB,CACjB7V,MAAW,OAAJsV,QAAI,IAAJA,OAAI,EAAJA,EAAMtV,MACb+V,mBAAoB,WAClBR,EAAe,CACbhf,gBAAiB0hB,GACjBzhB,MAAO,CAAEyE,MAAOE,IAEpB,KAGF1E,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACZ,WAAS,EAACoG,IAAK,EAAGnG,WAAY+gB,IAAoC,OAAhBA,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvgB,QAAS,EAAI,UAAY,WAAWN,SAC9G6gB,IAAoC,OAAhBA,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvgB,QAAS,EAC9CugB,GAEAvhB,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,SAAuB,CAACnS,QAAS,IAAIrG,UAAEwO,EAAAA,GAAAA,GAAE,mBAOpD,ED4MIsP,SAAU,aACVC,IAAKV,GAAsB0D,YAI7B,CACElY,OAAO2F,EAAAA,GAAAA,GAAE,kBACT0P,cE3Q+E,SAAHhf,GAAwC,IAAlC8E,EAAI9E,EAAJ8E,KAAMma,EAAIjf,EAAJif,KAAMC,EAAclf,EAAdkf,eAC1Fvd,GAAQ8b,EAAAA,EAAAA,MACR1B,EAAgB,OAAJjX,QAAI,IAAJA,OAAI,EAAJA,EAAMiX,UAClBI,EAAe,OAAJrX,QAAI,IAAJA,OAAI,EAAJA,EAAMqX,SACjB7T,EAAY,OAAJxD,QAAI,IAAJA,OAAI,EAAJA,EAAMwD,MAEdwZ,GAAsBjiB,EAAAA,EAAAA,UAAQ,WAAO,IAADkiB,EAClC9F,EAAgB,OAAJnX,QAAI,IAAJA,OAAI,EAAJA,EAAMmX,UAcxB,MAb0E,CACxE,CAAEtS,OAAO2F,EAAAA,GAAAA,GAAE,SAAU3L,MAAgB,OAATsY,QAAS,IAATA,OAAS,EAATA,EAAW5V,OACvC,CAAEsD,OAAO2F,EAAAA,GAAAA,GAAE,YAAa3L,MAAgB,OAATsY,QAAS,IAATA,OAAS,EAATA,EAAWpU,SAC1C,CACE8B,OAAO2F,EAAAA,GAAAA,GAAE,OACT3L,MAAgB,OAATsY,QAAS,IAATA,OAAS,EAATA,EAAWrU,KAEpB,CACE+B,OAAO2F,EAAAA,GAAAA,GAAE,cACT3L,MAAgB,OAATsY,QAAS,IAATA,GAAqB,QAAZ8F,EAAT9F,EAAW1K,kBAAU,IAAAwQ,OAAZ,EAATA,EAAuB3gB,SAIlBrB,KAAI,SAAC+F,EAAM7F,GAAW,IAAD+hB,EACnC,OACElb,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAENkO,YAAa,MACbE,eAAgB,gBAChBxJ,QAAS,UACTY,IAAK,EACLpG,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAC4I,MAAO,GAAG9O,SAAA,GAAAP,OAAS,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,MAAK,SAChCvJ,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAC4I,MAAO,GAAIzI,QAAS,IAAK8a,OAAQ,QAAQnhB,SACjC,QADiCkhB,EACxC,OAAJlc,QAAI,IAAJA,OAAI,EAAJA,EAAMnC,aAAK,IAAAqe,EAAAA,EAAI,UATT,OAAJlc,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,MAajB,GACF,GAAG,CAAK,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAMmX,YAEJiG,GAAkBriB,EAAAA,EAAAA,UAAQ,WAC9B,OAmGG,SACLyI,GAC8E,IAAD6Z,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7E,MAAO,CACL,CAAE7Y,OAAO2F,EAAAA,GAAAA,GAAE,SAAUmT,QAAQC,EAAAA,GAAAA,IAAa,OAALpa,QAAK,IAALA,OAAK,EAALA,EAAOqa,KAC5C,CAAEhZ,OAAO2F,EAAAA,GAAAA,GAAE,UAAWmT,QAAQC,EAAAA,GAAAA,IAAa,OAALpa,QAAK,IAALA,OAAK,EAALA,EAAOC,MAC7C,CACEoB,OAAO2F,EAAAA,GAAAA,GAAE,cACTmT,QAAQC,EAAAA,GAAAA,IAAa,OAALpa,QAAK,IAALA,GAAiB,QAAZ6Z,EAAL7Z,EAAOsa,kBAAU,IAAAT,OAAZ,EAALA,EAAmBM,QACnCI,WAAiB,OAALva,QAAK,IAALA,GAAiB,QAAZ8Z,EAAL9Z,EAAOsa,kBAAU,IAAAR,GAAjBA,EAAmBS,YAAaH,EAAAA,GAAAA,IAAa,OAALpa,QAAK,IAALA,GAAiB,QAAZ+Z,EAAL/Z,EAAOsa,kBAAU,IAAAP,OAAZ,EAALA,EAAmBQ,iBAAc1d,GAEvF,CACEwE,OAAO2F,EAAAA,GAAAA,GAAE,UACTmT,QAAQC,EAAAA,GAAAA,IAAa,OAALpa,QAAK,IAALA,GAAa,QAARga,EAALha,EAAOwa,cAAM,IAAAR,OAAR,EAALA,EAAeG,QAC/BI,WAAiB,OAALva,QAAK,IAALA,GAAa,QAARia,EAALja,EAAOwa,cAAM,IAAAP,GAAbA,EAAeM,YAAaH,EAAAA,GAAAA,IAAa,OAALpa,QAAK,IAALA,GAAa,QAARka,EAALla,EAAOwa,cAAM,IAAAN,OAAR,EAALA,EAAeK,iBAAc1d,GAGnF,CApHW4d,CAA4Bza,GAAOvI,KAAI,SAAC+F,EAAM7F,GACnD,OACE6G,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAENkO,YAAa,MACbE,eAAgB,gBAChBxJ,QAAS,UACTY,IAAK,EACLpG,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAAlG,SAAA,GAAAP,OAAS,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,MAAK,SACrB7C,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACG,QAAS,IAAIrG,SAAA,CACZ,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAM2c,QAEF,OAAJ3c,QAAI,IAAJA,OAAI,EAAJA,EAAM+c,aAAU,MAAAtiB,OAAc,OAAJuF,QAAI,IAAJA,OAAI,EAAJA,EAAM+c,WAAU,UAXpC,OAAJ/c,QAAI,IAAJA,OAAI,EAAJA,EAAM6D,MAejB,GACF,GAAG,CAACrB,IAEJ,OACExB,EAAAA,EAAAA,MAACwS,GAAAA,EAAAA,KAAmB,CAAC9Y,MAAO,CAAE+e,UAAW,eAAgBze,SAAA,EACvDV,EAAAA,EAAAA,KAACof,GAAAA,EAAkB,CACjB7V,MAAW,OAAJsV,QAAI,IAAJA,OAAI,EAAJA,EAAMtV,MACb+V,mBAAoB,WAClBR,EAAe,CACbhf,gBAAiB8iB,IAErB,KAGFlc,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACZ,WAAS,EAAAG,SAAA,EAChBV,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,SAAuB,CAACnS,QAAS,IAAK3G,MAAO,CAAEyiB,MAAY,OAALthB,QAAK,IAALA,OAAK,EAALA,EAAOuhB,iBAAkBpiB,UAC7EwO,EAAAA,GAAAA,GAAE,gBAGLlP,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACZ,WAAS,EAAC2X,SAAU,OAAQ7I,YAAa,MAAM3O,SACrD,CACC,CAAEuF,OAAOiJ,EAAAA,GAAAA,GAAE,SAAU3L,MAAgB,OAAToY,QAAS,IAATA,OAAS,EAATA,EAAW1V,OACvC,CAAEA,OAAOiJ,EAAAA,GAAAA,GAAE,QAAS3L,MAAgB,OAAToY,QAAS,IAATA,OAAS,EAATA,EAAWoH,OACtCpjB,KAAI,SAAAqjB,GAAI,OACRtc,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAENkO,YAAa,MACbE,eAAgB,gBAChBxJ,QAAS,UACTY,IAAK,EACLpG,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAAlG,SAAA,GAAAP,OAAK6iB,EAAK/c,UACfjG,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAACG,QAAS,IAAIrG,UAAM,OAAJsiB,QAAI,IAAJA,OAAI,EAAJA,EAAMzf,QAAS,UAR/Byf,EAAK/c,MASF,UAKhBS,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACZ,WAAS,EAAAG,SAAA,EAChBV,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,SAAuB,CAACnS,QAAS,IAAK3G,MAAO,CAAEyiB,MAAY,OAALthB,QAAK,IAALA,OAAK,EAALA,EAAOuhB,iBAAkBpiB,UAC7EwO,EAAAA,GAAAA,GAAE,cAGJ,CACC,CAAEjJ,OAAOiJ,EAAAA,GAAAA,GAAE,SAAU3L,MAAe,OAARwY,QAAQ,IAARA,OAAQ,EAARA,EAAU9V,OACtC,CAAEA,OAAOiJ,EAAAA,GAAAA,GAAE,QAAS3L,MAAe,OAARwY,QAAQ,IAARA,OAAQ,EAARA,EAAUgH,OACrCpjB,KAAI,SAAAqjB,GAAI,OACRtc,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAENkO,YAAa,MACbE,eAAgB,gBAChBxJ,QAAS,UACTY,IAAK,EACLpG,WAAS,EAAAG,SAAA,EAETV,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAAAlG,SAAA,GAAAP,OAAK6iB,EAAK/c,UACfjG,EAAAA,EAAAA,KAAC4G,EAAAA,EAAI,CAACG,QAAS,IAAIrG,UAAM,OAAJsiB,QAAI,IAAJA,OAAI,EAAJA,EAAMzf,QAAS,UAR/Byf,EAAK/c,MASF,QAIdS,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACZ,WAAS,EAACoG,IAAK,EAAEjG,SAAA,EACxBV,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,SAAuB,CAACnS,QAAS,IAAK3G,MAAO,CAAEyiB,MAAY,OAALthB,QAAK,IAALA,OAAK,EAALA,EAAOuhB,iBAAkBpiB,UAC7EwO,EAAAA,GAAAA,GAAE,gBAGLlP,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACZ,WAAS,EAAAG,SAAEghB,QAGtBhb,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACZ,WAAS,EAACoG,IAAK,EAAEjG,SAAA,EACxBV,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,SAAuB,CAACnS,QAAS,IAAK3G,MAAO,CAAEyiB,MAAY,OAALthB,QAAK,IAALA,OAAK,EAALA,EAAOuhB,iBAAkBpiB,UAC7EwO,EAAAA,GAAAA,GAAE,YAGLlP,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACZ,WAAS,EAAAG,SAAEohB,SAI5B,EFkIItD,SAAU,WACVC,IAAKV,GAAsBkF,UAG7B,CACE1Z,OAAO2F,EAAAA,GAAAA,GAAE,4BACTqP,SAAU,SAAAlK,GAAO,IAAA6O,EAAAC,EAAA,OACR,OAAP9O,QAAO,IAAPA,GAAAA,EAAS+O,OAAM,GAAAjjB,OACD,OAAPkU,QAAO,IAAPA,GAAe,QAAR6O,EAAP7O,EAAS+O,cAAM,IAAAF,GAAM,QAANC,EAAfD,EAAiBG,YAAI,IAAAF,OAAd,EAAPA,EAAuBG,MAAK,OAAAnjB,OACtB,OAAPkU,QAAO,IAAPA,GAAAA,EAASkP,YAAaC,EAAAA,GAAAA,UAAgB,OAAPnP,QAAO,IAAPA,OAAO,EAAPA,EAASkP,YAAaE,EAAAA,EAAAA,IAAgBC,KAAK7D,MAAa,OAAPxL,QAAO,IAAPA,OAAO,EAAPA,EAASkP,YAAc,IAEzG,IAAI,EACV/E,SAAU,UACVC,IAAKV,GAAsBW,SAE7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,4BACTqP,SAAU,SAAAlK,GAAO,IAAAsP,EAAAC,EAAA,OACR,OAAPvP,QAAO,IAAPA,GAAAA,EAASwP,OAAM,GAAA1jB,OACD,OAAPkU,QAAO,IAAPA,GAAe,QAARsP,EAAPtP,EAASwP,cAAM,IAAAF,GAAM,QAANC,EAAfD,EAAiBN,YAAI,IAAAO,OAAd,EAAPA,EAAuBN,MAAK,OAAAnjB,OACtB,OAAPkU,QAAO,IAAPA,GAAAA,EAASyP,YAAaN,EAAAA,GAAAA,UAAgB,OAAPnP,QAAO,IAAPA,OAAO,EAAPA,EAASyP,YAAaL,EAAAA,EAAAA,IAAgBC,KAAK7D,MAAa,OAAPxL,QAAO,IAAPA,OAAO,EAAPA,EAASyP,YAAc,IAEzG,IAAI,EACVtF,SAAU,UACVC,IAAKV,GAAsBW,SAG7B,CACEnV,OAAO2F,EAAAA,GAAAA,GAAE,UACT0P,cG9S6E,SAAHhf,GAAwC,IAAlC8E,EAAI9E,EAAJ8E,KAAMma,EAAIjf,EAAJif,KAAMC,EAAclf,EAAdkf,eACxFiF,GAAkBtkB,EAAAA,EAAAA,UAAQ,WAAO,IAADukB,EACpC,OAAW,OAAJtf,QAAI,IAAJA,GAAY,QAARsf,EAAJtf,EAAM0Y,cAAM,IAAA4G,OAAR,EAAJA,EAAcrkB,KAAI,SAACskB,EAAKpkB,GAC7B,OACEG,EAAAA,EAAAA,KAACkZ,GAAAA,EAAAA,aAA2B,CAAkC7J,YAAa,MAAO1I,IAAK,EAAG1F,SAAU,OAAOP,SACxGwjB,GAAAA,GAAAA,KAAwB,SAAA1hB,GAAE,OACzBxC,EAAAA,EAAAA,KAACmkB,GAAAA,EAAiB,CAAyBC,IAAKH,EAAIzhB,EAAGe,QAAU,GAAImM,UAAQ,UAAAvP,OAA9CqC,EAAGe,OAA8C,KAChF,OAAApD,QAHwC,OAAH8jB,QAAG,IAAHA,OAAG,EAAHA,EAAKtf,MAAO9E,GAMzD,GACF,GAAG,CAAK,OAAJ6E,QAAI,IAAJA,OAAI,EAAJA,EAAM0Y,SAEV,OACE1W,EAAAA,EAAAA,MAACwS,GAAAA,EAAAA,KAAmB,CAAC9Y,MAAO,CAAE+e,UAAW,cAAepZ,QAAS,SAAUrF,SAAA,EACzEV,EAAAA,EAAAA,KAACof,GAAAA,EAAkB,CACjB7V,MAAW,OAAJsV,QAAI,IAAJA,OAAI,EAAJA,EAAMtV,MACb+V,mBAAoB,WAClBR,EAAe,CAAEhf,gBAAiBukB,IACpC,KAGFrkB,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACwF,IAAK,EAAG6Y,OAAQ,cAAezZ,QAAS,QAAS3F,MAAO,CAAE+e,UAAW,IAAKze,SAChFqjB,MAIT,EHoRIvF,SAAU,SACVC,IAAKV,GAAsBuG,SAwB/B,I,MAAA,GAtS0D,SAAH1kB,GAA6B,IAAD2kB,EAAtBrkB,EAASN,EAATM,UAAcoB,GAACsI,EAAAA,EAAAA,GAAAhK,EAAAiK,IACpE2a,GAASC,EAAAA,EAAAA,MAETjgB,EADOb,IACMQ,aACbpF,GAAaC,EAAAA,GAAAA,MACb0lB,EA6QR,WAIE,IAAMC,EAGF,CAAC,EAWL,OAVArG,GAAmBlT,SAAQ,SAAA1F,GACzB,IAEkCkf,EAF5BnG,EAAM/Y,EAAK+Y,IACbA,IACEkG,EAAsBlG,GACE,QAA1BmG,EAAAD,EAAsBlG,UAAI,IAAAmG,GAA1BA,EAA4BtX,KAAK5H,GAEjCif,EAAsBlG,GAAO,CAAC/Y,GAGpC,IACOif,CACT,CAhSmBE,GAEjB9iB,GAAoCC,EAAAA,EAAAA,UAAgC+b,GAAsBW,SAAQzc,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3FuT,EAAUrT,EAAA,GAAEsT,EAAatT,EAAA,GAE1B6iB,GAAcrlB,EAAAA,EAAAA,UAClB,eAAAslB,EAAA,OACGL,EAASpP,GAEc,QADhByP,EACJL,EAASpP,UAAW,IAAAyP,OAAA,EAApBA,EAAsBplB,KAAI,SAAA8F,GAAiC,IAA9BmZ,EAAanZ,EAAbmZ,cAAkBC,GAAIjV,EAAAA,EAAAA,GAAAnE,EAAAuf,IACjD,OAAIpG,GACK5e,EAAAA,EAAAA,KAAC4e,EAAa,CAAkBE,eAAgB/f,EAAWyE,KAAMqb,KAAMA,EAAMna,KAAMF,GAA/Dqa,EAAKtV,QAE3BvJ,EAAAA,EAAAA,KAACilB,GAAAA,EAAgB,CAAkBnG,eAAgB/f,EAAWyE,KAAMqb,KAAMA,EAAMna,KAAMF,GAA/Dqa,EAAKtV,MACrC,IANA,IAME,GACR,CAACmb,EAAUpP,EAAYvW,EAAWyE,KAAMgB,IAG1C,OACEkC,EAAAA,EAAAA,MAACuX,GAAS,CAAC1d,WAAS,EAACsG,KAAM,EAAG3G,UAAWA,EAAW6F,QAAS,QAAQrF,SAAA,EACnEV,EAAAA,EAAAA,KAAC8O,EAAAA,GAAa,CAACvF,OAAO2F,EAAAA,GAAAA,GAAE,kBAAmBH,YAAayV,EAAOU,UAE/DllB,EAAAA,EAAAA,KAACmW,EAAAA,EAAW,CACVgP,YAAa,CAAEC,aAAa,GAC5BhP,cAAe4H,GACf1H,YAAa,SAAAoB,GACX8M,EAAOa,QAAQ,CAAEC,KAAY,OAAN5N,QAAM,IAANA,OAAM,EAANA,EAAQnU,QAC/BgS,EAAoB,OAANmC,QAAM,IAANA,OAAM,EAANA,EAAQnU,MACxB,KAGFvD,EAAAA,EAAAA,KAACuI,GAAO,CAAChI,WAAS,EAACsG,KAAM,EAAG5F,SAAU,OAAOP,SAC1CokB,KAGHpe,EAAAA,EAAAA,MAACwX,GAAM,CAAC3d,WAAS,EAAC8O,YAAa,MAAO1I,IAAK,EAAGZ,QAAS,QAAQrF,SAAA,EAC7DV,EAAAA,EAAAA,KAACkG,GAAAA,EAAU,CACTgR,KAAM,OACNpR,QAAS,WACTyf,SAAU,MACVjT,KAAM,OACN5C,WAAY,OAADpO,QAAC,IAADA,GAAAA,EAAGkkB,QACd/kB,QAAU,OAADa,QAAC,IAADA,OAAC,EAADA,EAAGkkB,UAGdxlB,EAAAA,EAAAA,KAACkG,GAAAA,EAAU,CACTJ,QAAS,WACToR,KAAM,OACNqO,SAAU,MACVjT,KAAO,OAADhR,QAAC,IAADA,GAAU,QAATijB,EAADjjB,EAAG+S,eAAO,IAAAkQ,GAAVA,EAAYkB,QAAU,eAAiB,gBAC7C/V,WAAY,OAADpO,QAAC,IAADA,GAAAA,EAAGokB,QACdjlB,QAAU,OAADa,QAAC,IAADA,OAAC,EAADA,EAAGokB,UAGd1lB,EAAAA,EAAAA,KAACme,GAAS,CACRrY,QAAS,WACToR,KAAM,OACNqO,SAAU,MACVjT,KAAM,SACN5C,WAAY,OAADpO,QAAC,IAADA,GAAAA,EAAGqkB,UACdllB,QAAU,OAADa,QAAC,IAADA,OAAC,EAADA,EAAGqkB,YAGdjf,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACkO,YAAa,MAAO1I,IAAK,EAAG2I,OAAQ,aAAa5O,SAAA,EACxDV,EAAAA,EAAAA,KAACkG,GAAAA,EAAU,CACTgR,KAAM,OACNpR,QAAS,WACTyf,SAAU,MACVjT,KAAM,UACN5C,WAAY,OAADpO,QAAC,IAADA,GAAAA,EAAGskB,WACdnlB,QAAU,OAADa,QAAC,IAADA,OAAC,EAADA,EAAGskB,aAGd5lB,EAAAA,EAAAA,KAACqe,GAAO,CACNnH,KAAM,OACNpR,QAAS,WACTyf,SAAU,MACVjT,KAAM,iBACN5C,WAAY,OAADpO,QAAC,IAADA,GAAAA,EAAGukB,iBACdplB,QAAU,OAADa,QAAC,IAADA,OAAC,EAADA,EAAGukB,0BAMxB,E,WI5EMC,IAAW5kB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0FAKJ,SAAAC,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAGzD,GAjD4E,SAAHrJ,GAAuC,IAAjCmmB,EAAyBnmB,EAAzBmmB,0BACvE1V,EAAO1M,IACPI,EAAUC,KAEVsM,GAASC,EAAAA,EAAAA,MAEGC,GAAc3M,EAAAA,EAAAA,MAAxBmiB,SAER,OACEtf,EAAAA,EAAAA,MAACof,GAAQ,CAAAplB,SAAA,EACPV,EAAAA,EAAAA,KAACimB,GAAe,CACd5R,QAAa,OAAJhE,QAAI,IAAJA,OAAI,EAAJA,EAAMlM,aACfqhB,OAAQ,WAAO,IAADtQ,EACP7E,EAAKlM,cAIVmM,EAAO4V,UAAU,CACfC,MAAOC,GAAAA,EAAAA,UACPrmB,MAAO,CACL4E,IAAS,OAAJ0L,QAAI,IAAJA,GAAkB,QAAd6E,EAAJ7E,EAAMlM,oBAAY,IAAA+Q,OAAd,EAAJA,EAAoBvQ,IACzB4E,OAAO2F,EAAAA,GAAAA,GAAE,gBAGf,EACA0W,UAAW,WAAO,IAADzQ,EAAAkR,EACO,QAAlBlR,EAAC9E,EAAKlM,oBAAY,IAAAgR,GAAjBA,EAAmBxQ,KAExB6L,EAAU/L,mBAAmB,CAC3BC,KAAM,CAAEC,IAAsB,QAAnB0hB,EAAEhW,EAAKlM,oBAAY,IAAAkiB,OAAA,EAAjBA,EAAmB1hB,KAChCC,UAAWb,EAAQa,UAAU,UAEjC,EACAihB,gBAAiBE,KAGnB/lB,EAAAA,EAAAA,KAACnB,GAAAA,EAAY,MAGnB,ECrCamF,GAA0B,WAAH,OAASoM,EAAAA,EAAAA,KAA6C,EA0BpFkW,GAAOplB,EAAAA,GAAAA,IAAUE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,mVAInBklB,EAAAA,IAYJ,GAxC2C,SAAH3mB,GAAkB,IAAZ4mB,EAAI5mB,EAAJ4mB,KACtCziB,GAAUiG,EAAAA,GAAAA,GAAmC,CAAExF,MAAO,CAAEiiB,SAASvX,EAAAA,GAAAA,GAAE,2BACzEnN,GAAoDC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArE2kB,EAAkBzkB,EAAA,GAAE0kB,EAAqB1kB,EAAA,GAE1C2kB,GAAkB1nB,EAAAA,EAAAA,cAAY,WAClCynB,GAAsB,SAAArlB,GAAC,OAAKA,CAAC,GAC/B,GAAG,IAEH,OACEtB,EAAAA,EAAAA,KAAC2c,EAAAA,GAAe,CAACpZ,MAAOQ,EAAQrD,UAC9BV,EAAAA,EAAAA,KAAC6mB,EAAiB,CAAAnmB,UAChBV,EAAAA,EAAAA,KAAC8mB,GAAAA,GAAoB,CAAApmB,UACnBV,EAAAA,EAAAA,KAAC+mB,EAAAA,QAAW,CAACP,KAAMA,EAAK9lB,UACtBgG,EAAAA,EAAAA,MAAC4f,GAAI,CAAA5lB,SAAA,EACHV,EAAAA,EAAAA,KAACgnB,GAAyB,CAACjB,0BAA2Ba,KAEtD5mB,EAAAA,EAAAA,KAACinB,GAA0B,CAACjS,UAAW0R,EAAoBtR,iBAAkBwR,cAO3F,C,6GCzCaL,GAAmBW,EAAAA,EAAAA,IAAG9lB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAItB8lB,GAAgBD,EAAAA,EAAAA,IAAGvlB,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4CAIV6lB,EAAAA,EAAAA,IAAG/gB,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,uC,gHCNnB+lB,EAAelmB,EAAAA,GAAAA,OAAaE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ySAWvB,SAAAC,GAAC,OAAIA,EAAEC,MAAM6V,YAAYC,IAAI,IAM3B,SAAA/V,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAIpCoe,GAAOnmB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oNAWA,SAAAC,GAAC,OAAIA,EAAEC,MAAM0D,kBAAkB,IAIrDqiB,GAAMpmB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeiF,IAAAA,GAAA9E,EAAAA,EAAAA,GAAA,8OAQL,SAAAC,GAAC,OAAIA,EAAEC,MAAMgmB,oBAAoB,IAKjC,SAAAjmB,GAAC,OAAIA,EAAEC,MAAM0H,gBAAgB,IAG7Cue,GAAWtmB,EAAAA,EAAAA,IAAO0F,EAAAA,EAAP1F,CAAYwH,IAAAA,GAAArH,EAAAA,EAAAA,GAAA,wHAMlB,SAAAC,GAAC,OACRA,EAAEmmB,UAEEnmB,EAAEomB,UADFpmB,EAAEC,MAAME,QAAQkmB,2BAGhB5iB,CAAS,IAEX6iB,GAAe1mB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAe0H,IAAAA,GAAAvH,EAAAA,EAAAA,GAAA,wEAO9BwmB,GAAa3mB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAe4H,IAAAA,GAAAzH,EAAAA,EAAAA,GAAA,kIAOZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMgmB,oBAAoB,IAqB1CrO,EAAiB,CAC5B4O,cApBmB5mB,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAe8H,IAAAA,GAAA3H,EAAAA,EAAAA,GAAA,2QAUzB,SAAAC,GAAC,OAAIA,EAAEC,MAAM8G,gBAAgB,IAKhB,SAAA/G,GAAC,OAAIA,EAAEC,MAAMwmB,MAAMC,eAAe,IACpC,SAAA1mB,GAAC,OAAIA,EAAEC,MAAM6V,YAAYC,IAAI,IAKjDuQ,aAAAA,EACAJ,SAAAA,EACAF,IAAAA,EACAF,aAAAA,EACAC,KAAAA,EACAQ,WAAAA,E,6GC1GWzI,EAAqB,SAAHxf,GAyBxB,IAADqoB,EAAAroB,EAxBJ2J,MAAAA,OAAK,IAAA0e,EAAG,QAAOA,EAAAC,EAAAtoB,EACfyf,uBAAAA,OAAsB,IAAA6I,GAAGhZ,EAAAA,EAAAA,GAAE,UAASgZ,EACpC5I,EAAkB1f,EAAlB0f,mBAAkB6I,EAAAvoB,EAClBwoB,eAAAA,OAAc,IAAAD,GAAGjZ,EAAAA,EAAAA,GAAE,UAASiZ,EAC5BE,EAAWzoB,EAAXyoB,YAAWC,EAAA1oB,EACX2oB,iBAAAA,OAAgB,IAAAD,GAAGpZ,EAAAA,EAAAA,GAAE,MAAKoZ,EAC1BE,EAAa5oB,EAAb4oB,cAAaC,EAAA7oB,EACb8oB,SAAAA,OAAQ,IAAAD,GAAQA,EAAAE,EAAA/oB,EAChBgpB,UAAAA,OAAS,IAAAD,GAAQA,EAAAE,EAAAjpB,EACjBkpB,iBAAAA,OAAgB,IAAAD,GAAG3Z,EAAAA,EAAAA,GAAE,UAAS2Z,EAC9BE,EAAanpB,EAAbmpB,cAeA,OACEriB,EAAAA,EAAAA,MAACvF,EAAAA,GAAO,CAACkO,YAAa,MAAOE,eAAgB,gBAAiBiQ,OAAQ,cAAehf,WAAY,SAASE,SAAA,EACxGV,EAAAA,EAAAA,KAACkZ,EAAAA,EAAAA,SAAuB,CAACuO,UAAQ,EAACjY,MAAO,GAAIpP,MAAO,CAAE4oB,YAAa,QAAStoB,SACzE6I,IAGF+V,IACCtf,EAAAA,EAAAA,KAACkZ,EAAAA,EAAAA,aAA2B,CAAC3G,KAAM,SAAU9R,QAAS6e,EAAmB5e,SACtE2e,KAIHqJ,GAAYL,IACZroB,EAAAA,EAAAA,KAACkZ,EAAAA,EAAAA,aAA2B,CAAC3G,KAAM,SAAU9R,QAAS4nB,EAAY3nB,SAC/D0nB,IAIJM,GAAYK,IACX/oB,EAAAA,EAAAA,KAACkZ,EAAAA,EAAAA,aAA2B,CAAC3G,KAAM,SAAU9R,QAASsoB,EAAcroB,SACjEooB,IAIJJ,GAAYF,IACXxoB,EAAAA,EAAAA,KAACkZ,EAAAA,EAAAA,aAA2B,CAAC3G,KAAM,SAAU7C,UAAWkZ,EAAWnoB,QAAS+nB,EAAc9nB,SACvF6nB,MAKX,C,6GCxDatD,EAAgD,SAAHrlB,GAAwB,IAAlBif,EAAIjf,EAAJif,KAAMna,EAAI9E,EAAJ8E,KAC9DnB,GAAQ9D,EAAAA,EAAAA,UAAQ,kBAAOof,EAAKN,SAAWM,EAAKN,SAAS7Z,GAAQ,IAAI,GAAG,CAACma,EAAMna,IAEjF,OACEgC,EAAAA,EAAAA,MAACwS,EAAAA,EAAAA,KAAmB,CAAAxY,SAAA,EAClBV,EAAAA,EAAAA,KAACkZ,EAAAA,EAAAA,SAAuB,CAACuO,UAAQ,EAACjY,MAAO,GAAG9O,SACrC,OAAJme,QAAI,IAAJA,OAAI,EAAJA,EAAMtV,SAGTvJ,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CACNZ,WAAS,EACTsG,KAAM,EACNwI,YAAa,MACbE,eAAgB,WAChB/O,WAAY,WACZS,SAAU,SACVb,MAAO,CAAE+e,UAAW,IAAKze,UAEzBV,EAAAA,EAAAA,KAACkZ,EAAAA,EAAAA,SAAuB,CAACuO,UAAWlkB,EAAOwD,QAAS,IAAIrG,SACrD6C,IAAS2L,EAAAA,EAAAA,GAAE,mBAKtB,C,6ECnBA,IANyB,SAAHtP,GAAiG,IAA3F2X,EAAQ3X,EAAR2X,SAAU7H,EAAQ9P,EAAR8P,SAC9B4H,GAAU7X,EAAAA,EAAAA,UAAQ,kBAAMoV,EAAAA,EAAAA,IAAoBoU,EAAAA,GAAY,GAAE,IAEhE,OAAOjpB,EAAAA,EAAAA,KAACkpB,EAAAA,EAAY,CAACxZ,SAAUA,EAAU4H,QAASA,EAAS1R,SAAU,SAAAod,GAAI,OAAIzL,GAAYA,EAASyL,EAAKzf,MAAM,GAC/G,C,+HCJayX,EAAwD,CACnE,CACEmO,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,SAAUka,QAAS,SAAAC,GAAE,OAAIA,EAAGpjB,KAAK,GAChDqjB,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,QAASka,QAAS,SAAAC,GAAE,OAAIA,EAAGtG,IAAI,GACjDwG,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,QAASka,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI9W,IAAI,GAE/CgX,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,UACfoa,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,UAClBqa,MAAO,QACPC,OAAQ,YAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYka,QAAS,SAAAC,GAAE,OAAIA,EAAGI,SAAW,qEAAc,GACtEH,OAAQ,CACN1mB,KAAK,GAADzC,QAAK+O,EAAAA,EAAAA,GAAE,aAAY,KAAA/O,QAAI+O,EAAAA,EAAAA,GAAE,aAC7Bka,QAAS,SAAAC,GAAE,IAAAK,EAAAC,EAAA,SAAAxpB,SAAmB,QAAXupB,EAAAL,EAAGO,gBAAQ,IAAAF,OAAA,EAAXA,EAAaG,YAAa,OAAS,OAAmB,QAAXF,EAAAN,EAAGO,gBAAQ,IAAAD,OAAA,EAAXA,EAAaG,WAAY,OAAM,GAE/FP,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYka,QAAS,SAAAC,GAAE,IAAAU,EAAAC,EAAA,SAAA7pB,QAAiB,QAAV4pB,EAAAV,EAAGY,eAAO,IAAAF,GAAM,QAANC,EAAVD,EAAY1G,YAAI,IAAA2G,OAAN,EAAVA,EAAkBpnB,OAAQ,MAAK,GAC5E0mB,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,SAAUka,QAAS,SAAAC,GAAE,IAAAa,EAAAC,EAAA,SAAAhqB,QAAiB,QAAV+pB,EAAAb,EAAGY,eAAO,IAAAC,GAAM,QAANC,EAAVD,EAAY7G,YAAI,IAAA8G,OAAN,EAAVA,EAAkB7G,QAAS,MAAK,GAC9EiG,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYkb,MAAO,SAAU5D,KAAM,aAClD8C,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYkb,MAAO,SAAU5D,KAAM,aACrD+C,MAAO,QACPC,OAAQ,eAGC/U,EAAwE,CACnF,CACE0U,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,kBAAmBka,QAAS,SAAAC,GAAE,IAAAgB,EAAA,OAAgB,QAAhBA,EAAIhB,EAAGxN,iBAAS,IAAAwO,OAAA,EAAZA,EAAcpkB,KAAK,GACpEqkB,cAAe,SAAAC,GAAC,IAAAC,EAAAC,EAAAC,EAAA,OAAY,QAAPF,EAAAD,EAAE/lB,aAAK,IAAAgmB,GAAPA,EAASpN,OAAgB,QAAVqN,EAAGF,EAAE/lB,aAAK,IAAAimB,GAAW,QAAXC,EAAPD,EAASrN,OAAO,UAAE,IAAAsN,OAAX,EAAPA,EAAoBC,YAAc,EAAE,EAC3EpB,MAAO,QACPC,OAAQ,wBAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,OAAQka,QAAS,SAAAC,GAAE,IAAAuB,EAAA,OAAgB,QAAhBA,EAAIvB,EAAGxN,iBAAS,IAAA+O,OAAA,EAAZA,EAAcpjB,GAAG,GACvD8hB,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYka,QAAS,SAAAC,GAAE,IAAAwB,EAAA,OAAgB,QAAhBA,EAAIxB,EAAGxN,iBAAS,IAAAgP,OAAA,EAAZA,EAAcpjB,OAAO,GAClE8hB,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,QAASsX,KAAM,QAC9B8C,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,UAAWsX,KAAM,UACnC+C,MAAO,QACPC,OAAQ,UAEV,CACEL,IAAK,CAAEvmB,KAAM,yDAAawnB,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAIA,EAAGyB,OAAS,CAAC,GACpExB,OAAQ,CAAE1mB,KAAM,uCAAUwnB,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAIA,EAAG0B,UAAY,CAAC,GACvExB,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,KAAM,+DAAcwnB,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI2B,WAAY,CAAC,GACzE1B,OAAQ,CAAE1mB,KAAM,mDAAYwnB,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI4B,OAAQ,CAAC,GACtE1B,MAAO,QACPC,OAAQ,eAQV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,aAAcka,QAAS,SAAAC,GAAE,IAAA6B,EAAA,OAAgB,QAAhBA,EAAI7B,EAAG1N,iBAAS,IAAAuP,OAAA,EAAZA,EAAcjlB,KAAK,GAC/DqjB,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,QAASka,QAAS,SAAAC,GAAE,IAAA8B,EAAA,OAAgB,QAAhBA,EAAI9B,EAAG1N,iBAAS,IAAAwP,OAAA,EAAZA,EAAcpI,IAAI,GAC5DwG,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,KAAM,2BAAQ4jB,KAAM,eAC3B+C,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,KAAM,iCAAS4jB,KAAM,eAC5B8C,OAAQ,CAAE1mB,KAAM,iCAAS4jB,KAAM,gBAC/B+C,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,KAAM,mDAAYwnB,MAAO,SAAU5D,KAAM,aAChD8C,OAAQ,CAAE1mB,KAAM,mDAAYwnB,MAAO,SAAU5D,KAAM,aACnD+C,MAAO,QACPC,OAAQ,eA4BN4B,EAA6D,CACjE,CACEjC,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,aAAckb,MAAO,MAAOhB,QAAS,SAAAmB,GAAC,IAAAc,EAAA,OAAIC,EAAAA,EAAAA,IAAiBC,QAAQ,OAADhB,QAAC,IAADA,GAAQ,QAAPc,EAADd,EAAGriB,aAAK,IAAAmjB,OAAP,EAADA,EAAU9I,KAAM,GAAG,GACpG+G,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,YAAakb,MAAO,MAAOhB,QAAS,SAAAmB,GAAC,IAAAiB,EAAA,OAAIF,EAAAA,EAAAA,IAAiBC,QAAQ,OAADhB,QAAC,IAADA,GAAQ,QAAPiB,EAADjB,EAAGriB,aAAK,IAAAsjB,OAAP,EAADA,EAAUrjB,MAAO,GAAG,GACvGohB,MAAO,QACPC,OAAQ,eAwEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYkb,MAAO,QAAS5D,KAAM,eACjD+C,MAAO,QACPC,OAAQ,gBAICiC,EAA6D,CACxE,CACEtC,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,UAEfqa,MAAO,QACPC,OAAQ,eAoBV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,aAAcka,QAAS,SAAAC,GAAE,IAAAqC,EAAA,OAAgB,QAAhBA,EAAIrC,EAAG1N,iBAAS,IAAA+P,OAAA,EAAZA,EAAczlB,KAAK,GAC/DqjB,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,QAASka,QAAS,SAAAC,GAAE,IAAAsC,EAAA,OAAgB,QAAhBA,EAAItC,EAAG1N,iBAAS,IAAAgQ,OAAA,EAAZA,EAAc5I,IAAI,GAC5DwG,MAAO,QACPC,OAAQ,eAGV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,SAAUkb,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAIA,EAAGyB,OAAS,CAAC,GACnExB,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,YAAakb,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAIA,EAAG0B,UAAY,CAAC,GAC5ExB,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,YAAakb,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI2B,WAAY,CAAC,GAC1E1B,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,QAASkb,MAAO,MAAOhB,QAAS,SAAAC,GAAE,OAAM,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAI4B,OAAQ,CAAC,GACrE1B,MAAO,QACPC,OAAQ,eAEV,CACEL,IAAK,CAAEvmB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYkb,MAAO,SAAU5D,KAAM,aAClD8C,OAAQ,CAAE1mB,MAAMsM,EAAAA,EAAAA,GAAE,WAAYkb,MAAO,SAAU5D,KAAM,aACrD+C,MAAO,QACPC,OAAQ,eACTrpB,OACEirB,E","sources":["Providers/Overlay/OverlayStack.tsx","Providers/Overlay/OverlayStackProvider.tsx","components/AppPages/offers/PageOfferProvider.tsx","components/Forms/offers/variations/OfferVariationPropertySelector.tsx","components/Overlays/CreateVariationOverlay.tsx","components/AppPages/offers/tabs/VariationsTab.tsx","components/AppPages/offers/tabs/PricesTab.tsx","components/AppPages/offers/tabs/WarehousingTab.tsx","components/AppPages/offers/OfferOverviewPageRightSide.tsx","components/Forms/offers/FormProductCategories.tsx","components/Overlays/FormSelectCategoriesOverlay.tsx","components/Overviews/offer/components/OfferOverviewCategoriesCell.tsx","components/Overlays/FormSelectPropertiesOverlay.tsx","components/Overviews/components/OverviewPropertyComponent.tsx","components/Forms/offers/tabs/CounterpartyTab.tsx","redux/directories/counterparties.types.ts","components/Forms/offers/tabs/WarehousesTab.tsx","components/Overlays/FormProductDefaultsOverlay.tsx","components/Overlays/FormProductImagesOverlay.tsx","components/Overviews/offer/OfferOverviewXL.tsx","components/Overviews/offer/components/OfferOverviewStaticPropertiesCell.tsx","components/Overviews/offer/components/OfferOverviewDefaultsCell.tsx","components/Overviews/offer/components/OfferOverviewImagesCell.tsx","components/AppPages/offers/OfferOverviewPageLeftSide.tsx","components/AppPages/offers/PageOfferOverview.tsx","components/AppPages/pagesStyles.tsx","components/Overviews/components/CellStyles.tsx","components/Overviews/components/OverviewCellHeader.tsx","components/Overviews/components/OverviewTextCell.tsx","components/atoms/LangButtonsGroup.tsx","data/warehauses.data.ts"],"sourcesContent":["import { useOverlayService } from './OverlayStackProvider';\nimport React, { MouseEventHandler, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\nimport FlexBox from '../../components/atoms/FlexBox';\n\nexport const OverlayStack = (_: { name?: string }) => {\n  const overlaySrv = useOverlayService();\n\n  const onOverlayBackdropClick = useCallback(\n    (id: string): MouseEventHandler<HTMLDivElement> =>\n      ev => {\n        if (ev.target === ev.currentTarget) {\n          overlaySrv.remove(id);\n        }\n      },\n    [overlaySrv]\n  );\n  const renderOverlayStack = useMemo(() => {\n    const stack = overlaySrv.getStack();\n\n    return stack.map(({ RenderComponent, props, id }, index) => {\n      return (\n        <OverlayBox\n          key={`overlay-${id}`}\n          className={`overlay-${id}`}\n          style={{ zIndex: 20 + index }}\n          fillHeight\n          fillWidth\n          alignItems={'flex-end'}\n          onClick={onOverlayBackdropClick(id)}\n        >\n          <RenderComponent\n            key={`overlay-${id}`}\n            {...props}\n            onClose={() => {\n              overlaySrv.remove(id);\n            }}\n            overlayId={id}\n            index={index}\n          />\n        </OverlayBox>\n      );\n    });\n  }, [onOverlayBackdropClick, overlaySrv]);\n\n  return (\n    <Backdrop fillWidth fillHeight isActive={renderOverlayStack.length > 0} overflow={'hidden'}>\n      {renderOverlayStack}\n    </Backdrop>\n  );\n};\n\nconst Backdrop = styled(FlexBox)`\n  position: absolute;\n\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  left: ${p => (p.isActive ? 0 : '100%')};\n\n  opacity: ${p => (p.isActive ? 1 : 0)};\n  visibility: ${p => (p.isActive ? 'visible' : 'hidden')};\n  pointer-events: ${p => (p.isActive ? 'all' : 'none')};\n\n  z-index: 20;\n\n  background-color: ${p => p.theme.backdropColor};\n\n  transition: all ${p => p.theme.globals.timingFunctionMain};\n`;\n\nconst OverlayBox = styled(FlexBox)`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 20;\n\n  max-width: 360px;\n\n  animation: TransformFromRight;\n\n  @media screen and (max-width: 768px) {\n    max-width: 400px;\n  }\n`;\n","import { createContext, useCallback, useContext, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nexport interface OverlayStackProviderValue {\n  getStack: () => OverlayStackItemData[];\n  open: OverlayHandler;\n  remove: (id: string) => void;\n  clearStack: () => void;\n}\n\nexport type OverlayHandler = <Props = any>(params: OverlayHandlerParams<Props>) => CreatedOverlay;\n\nexport interface OverlayHandlerParams<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props>>;\n  props?: OverlayRenderComponentProps<Props>;\n}\nexport type OverlayRenderComponentProps<Props = any> = CreatedOverlay & Props;\n\nexport interface OverlayStackItemData<Props = any> {\n  RenderComponent: React.FC<OverlayRenderComponentProps<Props & CreatedOverlay>>;\n  props?: OverlayRenderComponentProps<Props>;\n  id: string;\n}\n\nexport interface OverlayRenderComponent<Props = any> extends React.FC<OverlayRenderComponentProps<Props>> {}\n\nexport interface CreatedOverlay {\n  onClose?: () => void;\n  index?: number;\n  compId?: string;\n}\nexport const PageCurrentOrderCTX = createContext({});\n\nexport const useOverlayService = () => useContext(PageCurrentOrderCTX) as OverlayStackProviderValue;\n\nconst OverlayStackProvider: React.FC<{ children?: React.ReactNode }> = ({ children }) => {\n  const [overlayStack, setOverlayStack] = useState<OverlayStackItemData[]>([]);\n\n  const removeStackItem = useCallback((id: string) => {\n    setOverlayStack(pStack => pStack.filter(el => el.id !== id));\n  }, []);\n\n  const clearStack = useCallback(() => {\n    setOverlayStack([]);\n  }, []);\n\n  const createOverlayComponent: OverlayHandler = useCallback(\n    params => {\n      const id = `${params.RenderComponent.name}_${nanoid(8)}`;\n\n      if (typeof params.RenderComponent === 'function') {\n        setOverlayStack(prev => {\n          const isExist = prev.find(el => el.id.includes(params.RenderComponent.name));\n\n          if (isExist) {\n            const clearedStack = prev.filter(el => el.RenderComponent?.name !== isExist.RenderComponent?.name);\n\n            return [\n              ...clearedStack,\n              {\n                ...params,\n                id,\n              },\n            ];\n          }\n\n          return [\n            ...prev,\n            {\n              ...params,\n              id,\n            },\n          ];\n        });\n      }\n\n      const returnData: CreatedOverlay = {\n        onClose: () => removeStackItem(id),\n        compId: id,\n      };\n      return returnData;\n    },\n    [removeStackItem]\n  );\n\n  const getStack = () => overlayStack;\n\n  const value: OverlayStackProviderValue = {\n    getStack,\n    remove: removeStackItem,\n    clearStack,\n    open: createOverlayComponent,\n  };\n\n  return <PageCurrentOrderCTX.Provider value={value}>{children}</PageCurrentOrderCTX.Provider>;\n};\nexport default OverlayStackProvider;\n","import React, { createContext, useContext, useEffect } from 'react';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { ServiceName, useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport { useAppParams, useCurrentOffer } from '../../../hooks';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\n\nexport interface PageOfferProviderProps {\n  children?: React.ReactNode;\n}\n\nexport interface PageOfferProviderValue {\n  currentOffer?: OfferEntity;\n  clearCurrent: () => void;\n  mainPagePath?: string;\n}\n\nexport const PageCurrentOfferCTX = createContext({});\n\nexport const usePageCurrentOffer = () => useContext(PageCurrentOfferCTX) as PageOfferProviderValue;\n\nconst PageOfferProvider: React.FC<PageOfferProviderProps> = ({ children }) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const loaders = useOfferOverviewLoaders();\n  const params = useAppParams();\n  const offerId = params?.offerId;\n\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  useEffect(() => {\n    if (loaders?.isLoading?.offer) return;\n\n    if (offerId) {\n      service\n        .getProductFullInfo({\n          data: { _id: offerId },\n          onLoading: loaders.onLoading('offer'),\n        })\n        .finally();\n    }\n    // eslint-disable-next-line\n  }, [offerId]);\n\n  // const { currentOffer } = useProductsSelector();\n\n  const clearCurrent = () => {\n    service.clearCurrent(undefined);\n  };\n\n  useEffect(() => {\n    return () => {\n      service.clearCurrent(undefined);\n    };\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <PageCurrentOfferCTX.Provider\n      value={{\n        clearCurrent,\n        currentOffer,\n      }}\n    >\n      {children}\n    </PageCurrentOfferCTX.Provider>\n  );\n};\nexport default PageOfferProvider;\n","import { IProperty, IPropertyValue } from '../../../../types/offers/properties.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { Text } from '../../../atoms/Text';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../atoms/ButtonIcon/ButtonIcon';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { PropertyItemStylesByCmsKey } from '../../../Directories/DirProperties/components/PropertyItem';\n\nexport interface OfferVariationPropertySelectorProps {\n  item: IProperty;\n  selectedValue?: string;\n  selectedIds?: string[];\n  onSelect?: (propId: string, valueId: string, label?: MaybeNull<string>) => void;\n}\nexport const OfferVariationPropertySelector = ({\n  item,\n  selectedIds = [],\n  onSelect,\n}: OfferVariationPropertySelectorProps) => {\n  const renderChildren = useMemo(() => {\n    return item.childrenList?.map(value => {\n      const isSelected = selectedIds.includes(value._id);\n\n      return (\n        <RenderPropertyValue\n          key={`prop-value-${value._id}`}\n          item={value}\n          isSelected={isSelected}\n          onSelect={id => onSelect && onSelect(item._id, id, value?.label)}\n        />\n      );\n    });\n  }, [item._id, item.childrenList, onSelect, selectedIds]);\n\n  return (\n    <PropertyBox key={`property-box-${item._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n      <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n        {item.label}\n      </Text>\n\n      <PropertyValuesBox fillWidth padding={'8px 0'} gap={6} cmsKey={item.cmsConfigs?.key}>\n        {renderChildren}\n      </PropertyValuesBox>\n    </PropertyBox>\n  );\n};\nconst PropertyBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  &:last-child {\n    border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst PropertyValuesBox = styled(FlexBox)<{ cmsKey?: MaybeNull<string> }>`\n  width: 100%;\n  display: grid;\n\n  grid-template-columns: repeat(${p => (p.cmsKey ? PropertyItemStylesByCmsKey[p.cmsKey]?.numColumns ?? 2 : 2)}, 1fr);\n`;\n\nconst RenderPropertyValue = ({\n  item,\n  isSelected,\n  onSelect,\n}: {\n  item: IPropertyValue;\n  isSelected?: boolean;\n  onSelect: (id: string) => void;\n}) => {\n  return (\n    <ValueTag\n      variant={isSelected ? 'filledSmall' : 'outlinedSmall'}\n      padding={'6px 8px'}\n      fontWeight={500}\n      onClick={() => {\n        onSelect && onSelect(item._id);\n      }}\n    >\n      {item.label}\n    </ValueTag>\n  );\n};\n\nconst ValueTag = styled(ButtonIcon)`\n  width: 100%;\n  max-width: 100%;\n  min-width: 50px;\n`;\n\nexport default OfferVariationPropertySelector;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { toVariationFormData, toVariationReqData } from '../../utils';\nimport { IVariationFormData, VariationEntity } from '../../types/offers/variations.types';\nimport { ToastService } from '../../services';\nimport { ModalFormProps } from '../ModalForm';\nimport FormAfterSubmitOptions, { useAfterSubmitOptions } from '../Forms/components/FormAfterSubmitOptions';\nimport { OverlayFooter, OverlayHeader } from './index';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useAppForm, useCurrentOffer } from '../../hooks';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport { t } from '../../lang';\nimport LangButtonsGroup from '../atoms/LangButtonsGroup';\nimport { MaybeNull, UUID } from '../../types/utils.types';\nimport OfferVariationPropertySelector from '../Forms/offers/variations/OfferVariationPropertySelector';\nimport { IProperiesGroup, IProperty, IPropertyValue } from '../../types/offers/properties.types';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface CreateVariationModalProps\n  extends CreatedOverlay,\n    Omit<ModalFormProps<any, any, VariationEntity>, 'onSubmit' | 'defaultState'> {\n  onSubmit?: AppSubmitHandler<IVariationFormData>;\n  offer?: OfferEntity;\n  offerId?: UUID;\n  update?: UUID;\n\n  create?: boolean;\n\n  defaultState?: VariationEntity;\n}\nconst validation = yup.object().shape({\n  label: yup.string().required().min(5).max(64),\n  sku: yup.string().required().min(8).max(32),\n  barCode: yup.string().max(32),\n  cms: yup.object().shape({\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  propertiesMap: yup\n    .object()\n    .shape({\n      // Ваша схема для propertiesMap\n    })\n    .nonNullable()\n    .required(),\n  offer: yup.object().shape({\n    _id: yup.string().required(),\n    label: yup.string(),\n    labels: yup.object().shape({\n      ua: yup.string().min(5).max(64),\n      en: yup.string().min(5).max(64),\n    }),\n  }),\n  timeFrom: yup.date(),\n  timeTo: yup.date(),\n  price: yup.object().shape({\n    out: yup.string(),\n  }),\n});\n\nconst CreateVariationOverlay: React.FC<CreateVariationModalProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  create,\n  offerId,\n  offer,\n  ...props\n}) => {\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const loaders = useLoaders<'create'>();\n  const currentOffer = useCurrentOffer({ id: update || offerId || offer?._id });\n  const submitOptions = useAfterSubmitOptions();\n  // _setCurrentTemplate\n  const [currentTemplate] = useState<IProperiesGroup>(templates?.[0]);\n  const [selectedPropsMap, setSelectedPropsMap] = useState<Record<string, IPropertyValue>>({});\n\n  const { propertiesList, propValuesDataMap } = useMemo(() => {\n    const list = currentTemplate?.childrenList?.filter(el => el?.isSelectable);\n    const _propValuesMap: Record<string, IPropertyValue> = {};\n\n    const map: Record<string, IProperty> = Object.assign(\n      {},\n      ...(list ?? []).map(pr => {\n        if (pr?.childrenList?.length) {\n          pr?.childrenList.forEach(val => {\n            _propValuesMap[val._id] = val;\n          });\n        }\n\n        return { [pr._id]: pr };\n      })\n    );\n\n    return { propertiesList: list, propertiesDataMap: map, propValuesDataMap: _propValuesMap };\n  }, [currentTemplate?.childrenList]);\n\n  const formMethods = useAppForm<IVariationFormData>({\n    defaultValues: toVariationFormData(\n      defaultState ? { ...defaultState, offer: currentOffer } : { offer: currentOffer }\n    ),\n    resolver: yupResolver(validation as never),\n    reValidateMode: 'onSubmit',\n  });\n  const {\n    setValue,\n    handleSubmit,\n    register,\n    formState: { errors },\n    formValues,\n    reset,\n  } = formMethods;\n\n  useEffect(() => {\n    console.log({ formValues });\n  }, [formValues]);\n\n  const selectedIds = useMemo(() => {\n    return formValues?.propertiesMap ? Object.values(formValues?.propertiesMap) : [];\n    // eslint-disable-next-line\n  }, [formValues?.propertiesMap, formValues]);\n\n  const canSubmit = useMemo(() => {\n    return selectedIds.length > 0;\n  }, [selectedIds.length]);\n\n  const { label } = useMemo(() => {\n    // const _sortedIds = Object.keys(selectedPropsMap ?? {}).sort((prev, next) => prev.localeCompare(next));\n\n    const _sorted = Object.entries(selectedPropsMap).sort((prev, next) => {\n      return prev[0].localeCompare(next[0]);\n    });\n    const _labels: string[] = currentOffer?.label ? [currentOffer?.label] : [];\n\n    for (const entry of _sorted) {\n      const value = entry[1];\n      value?.label && _labels.push(value?.label);\n    }\n    const _base = !_sorted?.length ? `${currentOffer?.label}. {{VARIATION_LABEL}}` : _labels.join('. ');\n\n    return { label: _base };\n  }, [currentOffer?.label, selectedPropsMap]);\n\n  useEffect(() => {\n    setValue('label', label);\n  }, [label, setValue]);\n\n  const onValid = useCallback(\n    (data: IVariationFormData) => {\n      if (update) {\n        service\n          .updateVariationById({\n            data: toVariationReqData(data, update),\n            onSuccess: data => {\n              console.log('updateVariationById onSuccess', data);\n\n              onClose && onClose();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      } else {\n        service\n          .createVariation({\n            data: toVariationReqData(data),\n            onSuccess: data => {\n              submitOptions.state.close && onClose && onClose();\n              submitOptions.state.clear && reset();\n            },\n            onError: ToastService.toastAxiosError,\n            onLoading: loaders.onLoading('create'),\n          })\n          .then();\n      }\n\n      // onSubmit && onSubmit(data);\n    },\n    [loaders, onClose, reset, service, submitOptions.state.clear, submitOptions.state.close, update]\n  );\n\n  const handleSelect = useCallback(\n    (parentId: string, id: string, label?: MaybeNull<string>) => {\n      setValue(`propertiesMap.${parentId}`, id);\n\n      setSelectedPropsMap(p => ({ ...p, [parentId]: propValuesDataMap?.[id] }));\n    },\n    [propValuesDataMap, setValue]\n  );\n\n  const handleClearMap = useCallback(() => {\n    setValue('propertiesMap', {});\n    setSelectedPropsMap({});\n  }, [setValue]);\n\n  const renderTemplate = useMemo(() => {\n    return propertiesList?.map(prop => {\n      return (\n        <OfferVariationPropertySelector\n          key={`prop_${prop._id}`}\n          item={prop}\n          selectedIds={selectedIds}\n          onSelect={handleSelect}\n        />\n      );\n    });\n  }, [propertiesList, selectedIds, handleSelect]);\n\n  return (\n    <FormContainer\n      onSubmit={handleSubmit(onValid, errors => {\n        console.error('[SUBMIT ERROR]', errors);\n      })}\n      onReset={handleClearMap}\n      {...props}\n    >\n      <OverlayHeader\n        onBackPress={onClose}\n        title={(title || currentTemplate?.label) ?? ''}\n        canSubmit={canSubmit}\n        okButton\n      />\n\n      <Content flex={1} fillWidth overflow={'auto'}>\n        <Inputs>\n          <InputLabel label={t('label')} error={errors.label}>\n            <InputText {...register('label', { required: true })} placeholder={t('label')} required />\n          </InputLabel>\n\n          <FlexBox fxDirection={'row'} gap={8} fillWidth>\n            <InputLabel label={t('sku')} error={errors.sku}>\n              <InputText {...register('sku', { required: true })} placeholder={t('sku')} required />\n            </InputLabel>\n\n            <InputLabel label={t('barCode')} error={errors.barCode}>\n              <InputText {...register('barCode')} placeholder={t('barCode')} />\n            </InputLabel>\n          </FlexBox>\n\n          {/*<DimensionsInputs form={formMethods} />*/}\n        </Inputs>\n\n        <TemplateBox padding={'0 0 8px'} margin={'8px 0 0'}>\n          {renderTemplate}\n        </TemplateBox>\n\n        {!currentOffer && (\n          <CmsConfigs padding={'8px 0'} fillWidth>\n            <CmsConfigsHeader padding={'8px'} justifyContent={'flex-end'} fxDirection={'row'} fillWidth>\n              <Text $size={13} $weight={500}>\n                {t('Cms configs')}\n              </Text>\n            </CmsConfigsHeader>\n\n            <Inputs>\n              <InputLabel label={t('Language key')} error={errors?.cmsConfigs?.key}>\n                <LangButtonsGroup disabled />\n              </InputLabel>\n\n              <InputLabel label={t('Label by lang key')} error={errors?.cmsConfigs?.labels?.ua}>\n                <InputText placeholder={'Label'} {...register('cmsConfigs.labels.ua')} />\n              </InputLabel>\n            </Inputs>\n          </CmsConfigs>\n        )}\n      </Content>\n\n      <OverlayFooter\n        loading={loaders.isLoading?.create}\n        resetButtonShown\n        submitButtonText={loaders.isLoading?.create ? 'Loading...' : update ? 'Підтвердити' : 'Додати'}\n        canSubmit={canSubmit}\n        extraFooter={\n          <ExtraFooterBox>\n            <FormAfterSubmitOptions {...submitOptions} />\n          </ExtraFooterBox>\n        }\n      />\n    </FormContainer>\n  );\n};\n\nconst FormContainer = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 0 8px;\n\n  overflow: hidden;\n\n  max-width: 480px;\n  color: ${p => p.theme.fontColorSidebar};\n  background-color: ${p => p.theme.tableBackgroundColor};\n`;\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst TemplateBox = styled(FlexBox)`\n  padding-bottom: 8px;\n`;\n\nconst Inputs = styled(FlexBox)`\n  padding: 0 4px;\n`;\n\nconst ExtraFooterBox = styled(FlexBox)`\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\n\nconst CmsConfigs = styled(FlexBox)``;\n\nconst CmsConfigsHeader = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default CreateVariationOverlay;\n","import { usePageCurrentOffer } from '../PageOfferProvider';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { createTableTitlesFromProperties, transformVariationTableData } from '../../../../utils/tables';\nimport { IVariationTableData } from '../../../../types/offers/variations.types';\nimport { getIdRef } from '../../../../utils';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\nimport { IProperty } from '../../../../types/offers/properties.types';\nimport CreateVariationOverlay from '../../../Overlays/CreateVariationOverlay';\n\nexport interface VariationsTabProps {\n  onSelect?: (variation: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst VariationsTab: React.FC<VariationsTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const page = usePageCurrentOffer();\n  const modalS = useModalProvider();\n  const currentOffer = page.currentOffer;\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  // const templates = usePropertiesSelector();\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n\n      productsS.getAllVariationsByProductId({\n        data: { refreshCurrent: refresh, updateCurrent: update, offerId: currentOffer._id },\n        onLoading: loaders.onLoading('variations'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n  const variationsTableTitles = useMemo(() => {\n    const propertiesMap: Record<string, IProperty> = {};\n    for (const variation of currentOffer?.variations ?? []) {\n      const propsList = variation.properties;\n\n      for (const prop of propsList ?? []) {\n        const propId = prop?.parent?._id;\n        if (propId && prop.parent) {\n          propertiesMap[propId] = prop.parent;\n        }\n      }\n    }\n    return createTableTitlesFromProperties(Object.values(propertiesMap));\n  }, [currentOffer?.variations]);\n\n  const tableConfig = useMemo(() => {\n    return {\n      tableTitles: variationsTableTitles,\n      tableData: currentOffer?.variations,\n      transformData: transformVariationTableData,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              {\n                icon: 'delete',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  window.confirm(`Видалити варіацію:\\n ${currentId}`);\n                },\n              },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              {\n                icon: 'edit',\n                type: 'onlyIcon',\n                disabled: !currentId,\n                onClick: () => {\n                  if (!currentId || !ctx.selectedRow) return;\n                  const dataForUpdate = currentOffer?.variations?.find(v => v?._id === currentId);\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: {\n                      update: currentId,\n                      defaultState: dataForUpdate,\n                    },\n                  });\n                },\n              },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  // toggleVisibility && toggleVisibility();\n\n                  modalS.open({\n                    ModalChildren: CreateVariationOverlay,\n                    modalChildrenProps: { offer: page.currentOffer },\n                  });\n                },\n              },\n            ];\n          },\n    } as ITableListProps<IVariationTableData>;\n  }, [currentOffer?.variations, loadData, modalS, onSelect, page.currentOffer, variationsTableTitles, withActions]);\n\n  useEffect(() => {\n    if (currentOffer) {\n      loadData({ refresh: true });\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.variations}\n      selectedRow={selected}\n    />\n  );\n};\nexport default VariationsTab;\n","import { ServiceName, useAppServiceProvider } from 'hooks/useAppServices.hook';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { pricesColumnsForProductReview } from 'data/priceManagement.data';\nimport FormCreatePrice from '../../../Forms/pricing/FormCreatePrice/FormCreatePrice';\nimport { OfferPriceEntity } from 'types/price-management/price-management.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { getIdRef } from 'utils/data-transform';\nimport { OnlyUUID } from 'redux/global.types';\nimport { useAppParams, useCurrentOffer } from '../../../../hooks';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface PricesTabProps {\n  onSelect?: (price: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\nconst PricesTab: React.FC<PricesTabProps> = ({ onSelect, selected, withActions = true }) => {\n  const modalS = useModalProvider();\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const offerId = useAppParams().offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n\n  // const pricesS = useAppServiceProvider()[ServiceName.priceManagement];\n\n  const loadData = useCallback(\n    async ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentOffer) return;\n      productsS.getAllPrices({\n        data: { params: { offerId: currentOffer?._id }, refreshCurrent: refresh, updateCurrent: update },\n        onLoading: loaders?.onLoading('prices'),\n      });\n    },\n    [currentOffer, loaders, productsS]\n  );\n\n  // const updateDefaults = ({}: { price?: OnlyUUID }) => {};\n\n  const tableConfig = useMemo((): ITableListProps<OfferPriceEntity> => {\n    return {\n      tableData: currentOffer?.prices,\n      tableTitles: pricesColumnsForProductReview,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              { separator: true },\n              { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n              { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: FormCreatePrice,\n                    modalChildrenProps: {\n                      offer: currentOffer,\n                      // onSubmit: (d, o) => {\n                      //   pricesS.addPriceToList({\n                      //     data: { updateCurrent: true, data: { data: d } },\n                      //     onSuccess: data => {\n                      //       updateDefaults({ price: { _id: data._id } });\n                      //\n                      //       o?.close && m?.onClose();\n                      //     },\n                      //   });\n                      // },\n                    },\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentOffer, withActions, onSelect, loadData, modalS]);\n\n  useEffect(() => {\n    // if ((!currentOffer?.prices || currentOffer?.prices?.length === 0) && currentProduct?._id) {\n    loadData({ refresh: true });\n    // }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <TableList\n      {...tableConfig}\n      isSearch={false}\n      isFilter={false}\n      isLoading={loaders?.isLoading?.prices}\n      selectedRow={selected}\n    />\n  );\n};\n\nexport default PricesTab;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { warehouseOverviewTableColumns } from '../../../../data/warehauses.data';\nimport Forms from '../../../Forms';\nimport { WarehouseItemEntity } from '../../../../types/warehousing/warehouses.types';\nimport { useModalProvider } from '../../../ModalProvider/ModalProvider';\nimport { ServiceName, useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { OnlyUUID } from '../../../../redux/global.types';\n\nexport interface WarehousingTabProps {\n  onSelect?: (inventory: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousingTab = ({ onSelect, selected, withActions }: WarehousingTabProps) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const modalS = useModalProvider();\n  const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading, setLoading] = useState(false);\n\n  const loadData = useCallback(\n    ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n      if (!currentProduct) return;\n      const product = getIdRef(currentProduct);\n      productsS.getAllInventories({\n        data: { refreshCurrent: refresh, params: { offer: product } },\n        onLoading: setLoading,\n      });\n    },\n    [currentProduct, productsS]\n  );\n\n  const tableConfigs = useMemo((): ITableListProps<WarehouseItemEntity> => {\n    return {\n      tableData: currentProduct?.inventories,\n      tableTitles: warehouseOverviewTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n\n              { separator: true },\n              {\n                icon: 'plus',\n                type: 'onlyIconFilled',\n                onClick: () => {\n                  modalS.open({\n                    ModalChildren: Forms.CreateWarehouseDocument,\n                    modalChildrenProps: {},\n                  });\n                },\n              },\n            ];\n          },\n    };\n  }, [currentProduct?.inventories, loadData, modalS, onSelect, withActions]);\n\n  useEffect(() => {\n    // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n    // }\n    loadData({ refresh: true });\n    // eslint-disable-next-line\n  }, []);\n\n  return <TableList {...tableConfigs} isSearch={false} isFilter={false} isLoading={loading} selectedRow={selected} />;\n};\n\nexport default WarehousingTab;\n// { separator: true },\n// { icon: 'delete', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'copy', type: 'onlyIcon', disabled: !currentId },\n// { icon: 'edit', type: 'onlyIcon', disabled: !currentId },\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useMemo, useState } from 'react';\nimport { enumToFilterOptions } from '../../../utils/fabrics';\nimport { Text } from '../../atoms/Text';\nimport TabSelector, { FilterSelectHandler } from '../../atoms/TabSelector';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport VariationsTab from './tabs/VariationsTab';\nimport PricesTab from './tabs/PricesTab';\nimport WarehousingTab from './tabs/WarehousingTab';\nimport { ModalHeader } from '../../atoms';\n\nenum RightSideOptionEnum {\n  Variations = 'Variations',\n  Prices = 'Prices',\n  Warehousing = 'Warehousing',\n}\nconst TabsList = enumToFilterOptions(RightSideOptionEnum);\n\nexport interface OfferOverviewPageRightSideProps {\n  isVisible?: boolean;\n  toggleVisibility?: () => void;\n}\n\nconst OfferOverviewPageRightSide: React.FC<OfferOverviewPageRightSideProps> = ({ isVisible, toggleVisibility }) => {\n  const page = usePageCurrentOffer();\n\n  const [currentTab, setCurrentTab] = useState<RightSideOptionEnum>(RightSideOptionEnum.Variations);\n\n  const renderTab = useMemo(() => {\n    if (!page.currentOffer) {\n      return null;\n    }\n    const tabs: Record<RightSideOptionEnum, React.ReactNode> = {\n      [RightSideOptionEnum.Variations]: <VariationsTab withActions />,\n      [RightSideOptionEnum.Warehousing]: <WarehousingTab withActions />,\n      [RightSideOptionEnum.Prices]: <PricesTab withActions />,\n    };\n    return tabs?.[currentTab] ?? null;\n  }, [currentTab, page.currentOffer]);\n\n  const filterHandler: FilterSelectHandler<RightSideOptionEnum> = (_, value, index) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <RightSide overflow={'hidden'} fillHeight isVisible={isVisible}>\n      {isVisible && (\n        <ModalHeader\n          onBackPress={toggleVisibility}\n          renderTitle={\n            <FlexBox padding={'0 8px'} fxDirection={'row'} alignItems={'center'} justifyContent={'center'} gap={8}>\n              <Text $weight={600} $size={14}>\n                {page?.currentOffer?.label}\n              </Text>\n\n              <Text $size={14}>{page?.currentOffer?.sku}</Text>\n            </FlexBox>\n          }\n        />\n      )}\n\n      <TabBox overflow={'hidden'} fillWidth flex={1}>\n        <TabSelector filterOptions={TabsList} defaultValue={currentTab} onOptSelect={filterHandler} preventFilter />\n\n        {renderTab}\n      </TabBox>\n    </RightSide>\n  );\n};\nconst RightSide = styled(FlexBox)<{ isVisible?: boolean }>`\n  overflow: auto;\n\n  max-width: 100%;\n\n  transition: ${p => p.theme.globals.timingFunctionMain};\n  background-color: ${p => p.theme.backgroundColorLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 320px;\n  }\n\n  @media screen and (max-width: 768px) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    z-index: 20;\n\n    transform: translateX(${p => (p.isVisible ? 0 : 100)}%);\n\n    box-shadow: 0 12px 26px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst TabBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n  //border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageRightSide;\n","import * as React from 'react';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport translate from '../../../lang';\nimport { IDirItemBase, IProductCategoryDirItem } from '../../../types/dir.types';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport CustomSelect from '../../atoms/Inputs/CustomSelect/CustomSelect';\nimport styled from 'styled-components';\n\nexport interface FormProductCategoriesProps {\n  onSelect?: (id: string, option?: IProductCategoryDirItem) => void;\n  onChange?: (ids: string[]) => void;\n  children?: React.ReactNode;\n  defaultData?: string[];\n  options?: IProductCategoryDirItem[];\n}\n\nconst FormProductCategories: React.FC<FormProductCategoriesProps> = ({ options, onSelect, onChange, defaultData }) => {\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const handleSelect = useCallback(\n    (option?: IProductCategoryDirItem) => {\n      setSelectedIds(prev => {\n        const newData = option\n          ? prev.includes(option?._id)\n            ? prev.filter(el => el !== option?._id)\n            : [...prev, option._id]\n          : prev;\n        onSelect && option?._id && onSelect(option?._id);\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n  const handleRemove = useCallback(\n    (id: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.filter(el => el !== id);\n\n        onChange && onChange(newData);\n        return newData;\n      });\n    },\n    [onChange]\n  );\n\n  const renderTreeData = useMemo(() => {\n    return options?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_0_${item._id}`}\n          item={item}\n          index={index}\n          selectedIds={selectedIds}\n          onRemove={handleRemove}\n        />\n      );\n    });\n  }, [handleRemove, options, selectedIds]);\n\n  useEffect(() => {\n    if (defaultData) {\n      setSelectedIds(defaultData);\n    }\n  }, [defaultData]);\n\n  return (\n    <FlexBox fillWidth gap={6}>\n      <CustomSelect\n        treeMode\n        dropDownIsAbsolute\n        defaultValue={defaultData}\n        {...{\n          label: translate('categories'),\n          placeholder: translate('categories'),\n          required: true,\n          options,\n        }}\n        onSelect={handleSelect}\n      />\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} gap={8}>\n        {renderTreeData}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n\nconst ListItem: React.FC<{\n  item: IDirItemBase;\n  lvl?: number;\n  index?: number;\n  onRemove?: (id: string) => void;\n  selectedIds: string[];\n}> = ({\n  item,\n  index = 0,\n  lvl = 0,\n  selectedIds,\n  onRemove = () => {\n    console.log('onRemove not passed', lvl);\n  },\n}) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <ListItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          onRemove={onRemove}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, onRemove, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <TagItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n          <ButtonIcon\n            variant={'onlyIcon'}\n            endIcon={'close'}\n            size={'24px'}\n            endIconSize={'80%'}\n            onClick={() => onRemove && onRemove(item._id)}\n          />\n        </TagItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n\nconst TagItem = styled(FlexBox)`\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.accentColor.base};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\nexport default FormProductCategories;\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport { useDirectorySelector, useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useEffect, useMemo, useState } from 'react';\nimport { getIdRef } from '../../utils/data-transform';\nimport FormProductCategories from '../Forms/offers/FormProductCategories';\nimport { ApiDirType } from '../../redux/APP_CONFIGS';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\n\nexport interface FormSelectCategoriesOverlayProps extends OverlayHandlerReturn {}\n\nconst FormProductCategoriesOverlay = ({ onClose }: FormSelectCategoriesOverlayProps) => {\n  const { currentOffer } = useProductsSelector();\n  const { directory } = useDirectorySelector(ApiDirType.CATEGORIES_PROD);\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<string[]>([]);\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentOffer &&\n      service.updateById({\n        data: { ...getIdRef(currentOffer), data: { categories: state }, refreshCurrent: true },\n        onSuccess: (data, meta) => {\n          onClose && onClose();\n        },\n      });\n  };\n\n  const canSubmit = useMemo(() => {\n    const initialString = currentOffer?.categories?.map(c => c._id)?.toString();\n    const currentString = state.toString();\n\n    return initialString !== currentString;\n  }, [currentOffer?.categories, state]);\n\n  useEffect(() => {\n    if (currentOffer?.categories) {\n      setState(currentOffer?.categories.map(c => c._id));\n    }\n  }, [currentOffer?.categories]);\n\n  return (\n    <OverlayForm onSubmit={handleFormSubmit}>\n      <OverlayHeader title={'Категорії'} onBackPress={onClose} canSubmit={canSubmit} okButton />\n\n      <Content padding={'0 0 8px 0'} flex={1}>\n        <FormProductCategories onChange={setState} options={directory} defaultData={state} />\n      </Content>\n\n      <OverlayFooter canSubmit={canSubmit} />\n    </OverlayForm>\n  );\n};\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nexport default FormProductCategoriesOverlay;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport FormProductCategoriesOverlay from '../../../Overlays/FormSelectCategoriesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { IProductCategoryDirItem } from '../../../../types/dir.types';\n\nexport const OfferOverviewCategoriesCell: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const categories = useDirectorySelector(ApiDirType.CATEGORIES_PROD).directory;\n  const selectedCategoryIds = useMemo(() => {\n    return data?.categories?.map(el => el._id) ?? [];\n  }, [data?.categories]);\n\n  const renderItems = useMemo(() => {\n    return categories.map((c, index) => {\n      return <NotActiveTreeDataItem key={`cat_${c._id}`} selectedIds={selectedCategoryIds} item={c} />;\n    });\n  }, [categories, selectedCategoryIds]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        openOverlayButtonTitle={'Змінити'}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductCategoriesOverlay,\n          });\n        }}\n      />\n\n      <FlexBox\n        fillWidth\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        flexWrap={'wrap'}\n        // overflow={'hidden'}\n        gap={8}\n        style={{ height: 'max-content', minHeight: 26 }}\n      >\n        {renderItems}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nconst NotActiveTreeDataItem: React.FC<{\n  item: IProductCategoryDirItem;\n  lvl?: number;\n  index?: number;\n  selectedIds: string[];\n}> = ({ item, lvl = 0, selectedIds }) => {\n  const renderChildren = useMemo(() => {\n    return item?.childrenList?.map((item, index) => {\n      return (\n        <NotActiveTreeDataItem\n          key={`item_lvl_${lvl}_${item._id}`}\n          item={item}\n          index={index}\n          lvl={lvl + 1}\n          selectedIds={selectedIds}\n        />\n      );\n    });\n  }, [item?.childrenList, lvl, selectedIds]);\n\n  const isSelected = useMemo(() => {\n    return selectedIds.includes(item._id);\n  }, [item._id, selectedIds]);\n  return (\n    <>\n      {isSelected && (\n        <CellStyledComp.CategoryItem fxDirection={'row'} alignItems={'center'} padding={'0 2px 0 12px'} gap={2}>\n          {item?.parent?.label && `${item?.parent?.label}/`}\n          {`${item?.label}`}\n        </CellStyledComp.CategoryItem>\n      )}\n      {renderChildren}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport FlexBox from '../atoms/FlexBox';\nimport ButtonIcon from '../atoms/ButtonIcon/ButtonIcon';\nimport { usePropertiesSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { FormEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Text } from '../atoms/Text';\nimport { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ModalFormProps } from '../ModalForm';\nimport { ToastService } from '../../services';\nimport { OverlayFooter, OverlayForm, OverlayHeader } from './index';\nimport CustomSelect from '../atoms/Inputs/CustomSelect/CustomSelect';\nimport { t } from '../../lang';\nimport { OfferEntity } from '../../types/offers/offers.types';\n\nexport interface FormSelectPropertiesProps\n  extends OverlayHandlerReturn,\n    Omit<ModalFormProps<any, any, string[]>, 'onSubmit' | 'onChange' | 'onSelect'> {\n  onSubmit?: AppSubmitHandler<string[]>;\n  onSelect?: (id: string) => void;\n  onChange?: (ids: string[]) => void;\n\n  offer?: OfferEntity;\n  template?: OnlyUUID;\n\n  update?: string;\n}\n\nconst FormSelectPropertiesOverlay: React.FC<FormSelectPropertiesProps> = ({\n  onClose,\n  title,\n  defaultState,\n  onSubmit,\n  update,\n  offer,\n  template,\n  onSelect,\n  onChange,\n  ...props\n}) => {\n  const currentOffer = offer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const templates = usePropertiesSelector();\n  const [currentId, setCurrentId] = useState<string>(templates[0]?._id);\n\n  const [loading, setLoading] = useState(false);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n\n  const templateData = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const canSubmit = useMemo(() => {\n    return currentOffer?.properties?.map(p => p._id).join(',') !== selectedIds.join(',');\n  }, [currentOffer?.properties, selectedIds]);\n\n  const handleSubmit: FormEventHandler = useCallback(\n    event => {\n      event.preventDefault();\n\n      const id = update ?? currentOffer?._id;\n      if (id) {\n        service.updateById({\n          data: { _id: id, data: { properties: selectedIds } },\n          onLoading: setLoading,\n          onSuccess: (data, _meta) => {\n            ToastService.success('Product updated');\n            onClose && onClose();\n          },\n        });\n      } else {\n        console.debug('selectedIds', selectedIds);\n      }\n\n      onSubmit && onSubmit(selectedIds);\n    },\n    [currentOffer?._id, onClose, onSubmit, selectedIds, service, update]\n  );\n\n  const handleSelect = useCallback(\n    (id: string, parentId?: string) => {\n      setSelectedIds(prev => {\n        const newData = prev.includes(id) ? prev.filter(el => el !== id) : [...prev, id];\n\n        onChange && onChange(newData);\n        onSelect && onSelect(id);\n\n        return newData;\n      });\n    },\n    [onChange, onSelect]\n  );\n\n  const renderTemplate = useMemo(() => {\n    return templateData?.childrenList\n      ?.filter(el => !el?.isSelectable)\n      .map(prop => {\n        return (\n          <PropertyBox key={`property-${prop._id}`} gap={8} fillWidth padding={'8px 0 0'}>\n            <Text style={{ flex: 1, paddingLeft: 12 }} $weight={500}>\n              {prop.label}\n            </Text>\n\n            <PropertyValuesList fillWidth padding={'8px 0'} gap={6} flexWrap={'wrap'} fxDirection={'row'}>\n              {prop.childrenList?.map(value => {\n                const isActive = selectedIds.includes(value._id);\n\n                return (\n                  <ValueTag\n                    key={`prop-value-${value._id}`}\n                    variant={isActive ? 'filledSmall' : 'outlinedSmall'}\n                    padding={'6px 8px'}\n                    fontWeight={500}\n                    onClick={() => handleSelect(value._id, prop._id)}\n                  >\n                    {value.label}\n                  </ValueTag>\n                );\n              })}\n            </PropertyValuesList>\n          </PropertyBox>\n        );\n      });\n  }, [handleSelect, selectedIds, templateData?.childrenList]);\n\n  useEffect(() => {\n    if (currentOffer?.properties) {\n      setSelectedIds(currentOffer?.properties.map(p => p._id));\n    }\n  }, [currentOffer?.properties]);\n\n  return (\n    <OverlayForm onSubmit={handleSubmit} {...props}>\n      <OverlayHeader\n        onBackPress={onClose}\n        canSubmit={canSubmit}\n        title={(title || templateData?.label) ?? ''}\n        okButton\n      />\n\n      <CustomSelect\n        label={t('Available templates')}\n        options={templates}\n        selectedValue={currentId}\n        onSelect={option => {\n          setCurrentId(option?._id);\n        }}\n      />\n\n      <TemplateBox flex={1} overflow={'auto'}>\n        {renderTemplate}\n      </TemplateBox>\n\n      <OverlayFooter\n        canSubmit={canSubmit}\n        loading={loading}\n        submitButtonText={loading ? 'Loading...' : 'Підтвердити'}\n      />\n    </OverlayForm>\n  );\n};\n\nconst TemplateBox = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n  padding-bottom: 8px;\n`;\n\nconst PropertyBox = styled(FlexBox)`\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\nconst PropertyValuesList = styled(FlexBox)<{ numColumns?: number }>`\n  //display: grid;\n  //grid-template-columns: repeat(auto-fill, 25%);\n  //\n  //@media screen and (max-width: 480px) {\n  //  grid-template-columns: repeat(auto-fill, 50%);\n  //}\n`;\n\nconst ValueTag = styled(ButtonIcon)`\n  flex-basis: 100px;\n  min-width: max-content;\n\n  //width: 100%;\n  //min-width: unset;\n\n  // border-radius: 2px;\n  // border: 2px solid ${p => p.theme.accentColor.light};\n  //\n  // &:hover {\n  //   border: 2px solid ${p => p.theme.accentColor.base};\n  // }\n`;\nexport default FormSelectPropertiesOverlay;\n","import React, { useMemo } from 'react';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\nimport { IProperty } from '../../../types/offers/properties.types';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { CellStyledComp } from './CellStyles';\n\ninterface OverviewPropertyComponentProps {\n  item: IProperty;\n  selectedItems?: string[];\n  data?: OfferEntity;\n  index: number;\n}\nexport const OverviewPropertyComponent: React.FC<OverviewPropertyComponentProps> = ({ item, selectedItems }) => {\n  const renderValues = useMemo(() => {\n    return item.childrenList\n      ?.filter(el => selectedItems?.includes(el._id))\n      ?.map((value, index) => {\n        return (\n          <CellStyledComp.CategoryItem key={`prop-v-${value._id}`} className={'PROP_VALUE'} maxWidth={'130px'}>\n            {value.label}\n          </CellStyledComp.CategoryItem>\n        );\n      });\n  }, [item.childrenList, selectedItems]);\n\n  return (\n    <FlexBox className={'PROPERTY'} gap={8} alignItems={'flex-end'}>\n      <FlexBox alignItems={'center'} fxDirection={'row'} fillWidth gap={8}>\n        <CellStyledComp.CellText $size={13} $weight={600}>\n          {item?.label}\n        </CellStyledComp.CellText>\n      </FlexBox>\n\n      <FlexBox fxDirection={'row'} flexWrap={'wrap'} fillWidth gap={6}>\n        {renderValues && renderValues?.length > 0 ? renderValues : <Text $size={12}>{'---'}</Text>}\n      </FlexBox>\n    </FlexBox>\n  );\n};\n","import { OnlyUUID } from '../../../../redux/global.types';\nimport TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { useDirectorySelector } from '../../../../redux/selectors.store';\nimport { useMemo, useState } from 'react';\nimport { getIdRef } from '../../../../utils/data-transform';\nimport { counterpartyColumns } from '../../../../data/contractors.data';\nimport { CounterpartyTypesEnum, SupplierType } from '../../../../redux/directories/counterparties.types';\nimport { ApiDirType } from '../../../../redux/APP_CONFIGS';\n\nexport interface CounterpartyTabProps {\n  onSelect?: (supplier: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n  types?: CounterpartyTypesEnum[];\n}\nconst CounterpartyTab: React.FC<CounterpartyTabProps> = ({ onSelect, withActions, selected, types }) => {\n  // const currentProduct = useProductsSelector().currentProduct;\n  // const modalS = useModalProvider();\n  // const productsS = useAppServiceProvider()[ServiceName.products];\n  const [loading] = useState(false);\n\n  const counterparties = useDirectorySelector(ApiDirType.CONTRACTORS).directory;\n\n  const filteredData = useMemo(() => {\n    return counterparties.filter(c => types && types.includes(c.type as never));\n  }, [counterparties, types]);\n\n  // const loadData = useCallback(\n  //   ({ refresh, update }: { refresh?: boolean; update?: boolean }) => {\n  //     if (!currentProduct) return;\n  //     const product = ExtractId(currentProduct);\n  //     productsS.getAllInventoriesByProductId({\n  //       data: { refreshCurrent: refresh, params: { product } },\n  //       onLoading: setLoading,\n  //     });\n  //   },\n  //   [currentProduct, productsS]\n  // );\n\n  const tableConfigs = useMemo((): ITableListProps<SupplierType> => {\n    return {\n      tableData: filteredData as never,\n      tableTitles: counterpartyColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: !withActions\n        ? undefined\n        : ctx => {\n            // const currentId = ctx.selectedRow?._id;\n\n            return [\n              // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n              // { separator: true },\n              // {\n              //   icon: 'plus',\n              //   type: 'onlyIconFilled',\n              // },\n            ];\n          },\n    };\n  }, [filteredData, onSelect, withActions]);\n\n  return <TableList isSearch={false} isLoading={loading} {...tableConfigs} />;\n};\n\nexport default CounterpartyTab;\n","import { ApiDirType } from '../APP_CONFIGS';\nimport { IDirItemBase } from '../../types/dir.types';\nimport { BusinessSubjectTypeEnum, OwnershipTypeEnum } from '../../types/companies.types';\nimport { HasLabel, HasName } from '../../types/utils.types';\n\nexport interface ICounterpartyBase extends HasLabel, HasName {\n  fullName?: string;\n  secondName?: string;\n  businessSubjectType?: BusinessSubjectTypeEnum;\n  email?: string;\n  phone?: string;\n  ownershipType?: OwnershipTypeEnum;\n  description?: string;\n  tags?: string[];\n}\nexport interface ICounterparty<T extends CounterpartyTypesEnum = any>\n  extends ICounterpartyBase,\n    IDirItemBase<ApiDirType> {\n  type: T;\n  attractionSource?: IDirItemBase<ApiDirType.SOURCE_ATTRACTION>;\n}\n\nexport interface ICounterpartyFormData extends Omit<ICounterparty, '_id' | 'createdAt' | 'updatedAt'> {}\n\nexport enum CounterpartyTypesEnum {\n  CUSTOMER = 'CUSTOMER',\n  SUPPLIER = 'SUPPLIER',\n  EMPLOYEE = 'EMPLOYEE',\n  CONTRACTOR = 'CONTRACTOR',\n  SUB_CONTRACTOR = 'SUB_CONTRACTOR',\n  COMMISSION_AGENT = 'COMMISSION_AGENT',\n  CONSIGNOR = 'CONSIGNOR',\n  TRANSPORTER = 'TRANSPORTER',\n  DELIVER = 'DELIVER',\n}\n\nexport type SupplierType = ICounterparty<CounterpartyTypesEnum.SUPPLIER>;\n","import TableList, { ITableListProps } from '../../../TableList/TableList';\nimport { OnlyUUID } from '../../../../redux/global.types';\nimport { useWarehousesSelector } from '../../../../redux/selectors.store';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { getIdRef } from '../../../../utils';\nimport { IWarehouse } from '../../../../types/warehousing/warehouses.types';\nimport { warehousesTableColumns } from '../../../../data/warehauses.data';\nimport { useAppServiceProvider } from '../../../../hooks/useAppServices.hook';\nimport { useLoadersProvider } from '../../../../Providers/Loaders/LoaderProvider';\nimport { OfferOverlayLoaderKey } from '../../../Overlays/FormProductDefaultsOverlay';\n\nexport interface WarehousesTabProps {\n  onSelect?: (warehouse: OnlyUUID) => void;\n  selected?: OnlyUUID;\n  withActions?: boolean;\n}\n\nconst WarehousesTab: React.FC<WarehousesTabProps> = ({ onSelect, selected, withActions }) => {\n  const { warehouses: wrhsSrv } = useAppServiceProvider();\n  const loaders = useLoadersProvider<OfferOverlayLoaderKey>();\n  const warehouses = useWarehousesSelector().warehouses;\n\n  const loadData = useCallback(() => {\n    wrhsSrv.getAll({ onLoading: loaders.onLoading('warehouses'), data: { refresh: true } });\n  }, [loaders, wrhsSrv]);\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line\n  }, []);\n\n  const tableConfigs = useMemo((): ITableListProps<IWarehouse> => {\n    return {\n      tableData: warehouses,\n      tableTitles: warehousesTableColumns,\n      onRowClick: data => {\n        if (onSelect) {\n          if (data?.rowData) {\n            onSelect(getIdRef(data?.rowData));\n            return;\n          } else if (data?._id) {\n            onSelect({ _id: data?._id });\n          }\n        }\n      },\n      actionsCreator: ctx => {\n        // const currentId = ctx.selectedRow?._id;\n\n        return [\n          { icon: 'refresh', onClick: loadData },\n          // { icon: 'refresh', type: 'onlyIcon', onClick: () => loadData({ refresh: true }) },\n          // { separator: true },\n          // {\n          //   icon: 'plus',\n          //   type: 'onlyIconFilled',\n          // },\n        ];\n      },\n    };\n  }, [loadData, onSelect, warehouses]);\n\n  // useEffect(() => {\n  //   // if ((!currentProduct?.inventories || currentProduct?.inventories?.length === 0) && currentProduct?._id) {\n  //   // }\n  //   loadData({ refresh: true });\n  //   // eslint-disable-next-line\n  // }, []);\n\n  return (\n    <TableList isSearch={false} {...tableConfigs} isLoading={loaders.isLoading?.warehouses} selectedRow={selected} />\n  );\n};\n\nexport default WarehousesTab;\n","import { AppSubmitHandler } from '../../hooks/useAppForm.hook';\nimport { IProductDefaultsFormData, OfferEntity } from '../../types/offers/offers.types';\nimport styled from 'styled-components';\nimport { CreatedOverlay } from '../../Providers/Overlay/OverlayStackProvider';\nimport { ModalHeader, OverlayFooter } from '../atoms';\nimport FlexBox from '../atoms/FlexBox';\nimport { useAppForm, useAppParams, useCurrentOffer } from '../../hooks';\nimport { enumToFilterOptions, toReqData } from '../../utils';\nimport TabSelector from '../atoms/TabSelector';\nimport React, { useCallback, useMemo, useState } from 'react';\n\nimport PricesTab from '../AppPages/offers/tabs/PricesTab';\nimport VariationsTab from '../AppPages/offers/tabs/VariationsTab';\nimport WarehousingTab from '../AppPages/offers/tabs/WarehousingTab';\nimport CounterpartyTab from '../Forms/offers/tabs/CounterpartyTab';\nimport { CounterpartyTypesEnum } from '../../redux/directories/counterparties.types';\nimport { t } from '../../lang';\nimport WarehousesTab from '../Forms/offers/tabs/WarehousesTab';\nimport { OnlyUUID } from '../../redux/global.types';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { LoadersProvider } from '../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../Providers/Loaders/useLoaders.hook';\n\nexport interface FormProductDefaultsOverlayProps extends CreatedOverlay {\n  onSubmit?: AppSubmitHandler<IProductDefaultsFormData>;\n  offer?: OfferEntity;\n}\n\nexport enum FormProductDefaultsTabs {\n  price = 'price',\n  variation = 'variation',\n  warehouse = 'warehouse',\n  inventory = 'inventory',\n  supplier = 'supplier',\n}\nexport type OfferOverlayLoaderKey =\n  | keyof typeof FormProductDefaultsTabs\n  | `${keyof typeof FormProductDefaultsTabs}s`\n  | 'submiting';\n\nconst tabs = enumToFilterOptions(FormProductDefaultsTabs);\nconst FormProductDefaultsOverlay: React.FC<FormProductDefaultsOverlayProps> = ({ onClose, onSubmit }) => {\n  const loaders = useLoaders<OfferOverlayLoaderKey>();\n  const offerId = useAppParams()?.offerId;\n  const currentOffer = useCurrentOffer({ id: offerId });\n\n  const productsS = useAppServiceProvider()[ServiceName.products];\n\n  const [currentTabIdx, setCurrentTabIdx] = useState(0);\n\n  const { setValue, formValues, handleSubmit } = useAppForm<IProductDefaultsFormData>();\n\n  const handleSelect = useCallback(\n    (data: OnlyUUID) => {\n      setValue(tabs[currentTabIdx].value, data);\n    },\n    [currentTabIdx, setValue]\n  );\n\n  const onValid = (fData: IProductDefaultsFormData) => {\n    currentOffer?._id &&\n      productsS.setDefaults({\n        data: { _id: currentOffer?._id, defaults: toReqData(fData) as never, updateCurrent: true },\n        onSuccess: (data, meta) => {\n          console.log(data, meta);\n        },\n        onLoading: loaders.onLoading('submiting'),\n      });\n  };\n\n  const renderTab = useMemo(() => {\n    const tabsMap: Record<FormProductDefaultsTabs, React.ReactNode> = {\n      [FormProductDefaultsTabs.warehouse]: <WarehousesTab onSelect={handleSelect} selected={formValues?.warehouse} />,\n      [FormProductDefaultsTabs.price]: <PricesTab withActions onSelect={handleSelect} selected={formValues?.price} />,\n      [FormProductDefaultsTabs.variation]: (\n        <VariationsTab withActions onSelect={handleSelect} selected={formValues?.variation} />\n      ),\n      [FormProductDefaultsTabs.inventory]: (\n        <WarehousingTab withActions onSelect={handleSelect} selected={formValues?.inventory} />\n      ),\n      [FormProductDefaultsTabs.supplier]: (\n        <CounterpartyTab\n          types={[CounterpartyTypesEnum.SUPPLIER]}\n          withActions\n          onSelect={handleSelect}\n          selected={formValues?.supplier}\n        />\n      ),\n    };\n\n    return tabsMap[tabs[currentTabIdx]?.value] ?? null;\n  }, [\n    currentTabIdx,\n    formValues?.inventory,\n    formValues?.price,\n    formValues?.supplier,\n    formValues?.variation,\n    formValues?.warehouse,\n    handleSelect,\n  ]);\n\n  const canSubmit = useMemo(() => {\n    const defaults = currentOffer?.defaults;\n\n    const tabIs: Record<FormProductDefaultsTabs | string, boolean> = {\n      [tabs?.[currentTabIdx]?.value ?? '']: true,\n    };\n\n    if (tabIs.variation) {\n      return formValues.variation && formValues.variation._id !== defaults?.variation?._id;\n    }\n    if (tabIs.price) {\n      return formValues.price && formValues.price._id !== defaults?.price?._id;\n    }\n    if (tabIs.warehouse) {\n      return formValues.warehouse && formValues.warehouse._id !== defaults?.warehouse?._id;\n    }\n    if (tabIs.inventory) {\n      return formValues.inventory && formValues.inventory._id !== defaults?.inventory?._id;\n    }\n    if (tabIs.supplier) {\n      return formValues.supplier && formValues.supplier._id !== defaults?.supplier?._id;\n    }\n    return;\n  }, [\n    currentOffer?.defaults,\n    currentTabIdx,\n    formValues.inventory,\n    formValues.price,\n    formValues.supplier,\n    formValues.variation,\n    formValues.warehouse,\n  ]);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <ModalHeader onBackPress={onClose} title={t('Default values')} canSubmit={canSubmit} />\n\n        <TabSelector filterOptions={tabs} currentIndex={currentTabIdx} onChangeIndex={setCurrentTabIdx} />\n\n        <Content flex={1} fillWidth overflow={'hidden'}>\n          {renderTab}\n        </Content>\n\n        <OverlayFooter loading={loaders.hasLoading} onCreatePress={() => {}} canSubmit={canSubmit} />\n      </Form>\n    </LoadersProvider>\n  );\n};\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  flex: 1;\n\n  padding: 0 8px;\n\n  width: 480px;\n  max-width: 100%;\n\n  height: 100%;\n\n  background-color: ${p => p.theme.modalBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.modalBorderColor};\n\n  border-bottom: 1px solid ${p => p.theme.modalBorderColor};\n`;\nexport default FormProductDefaultsOverlay;\n","import FormOfferImagesComponent from '../Forms/offers/components/FormOfferImagesComponent';\nimport { FormEventHandler, useState } from 'react';\nimport { OfferEntity, OfferImageSlotEntity } from '../../types/offers/offers.types';\nimport styled, { useTheme } from 'styled-components';\nimport { useProductsSelector } from '../../redux/selectors.store';\nimport { ServiceName, useAppServiceProvider } from '../../hooks/useAppServices.hook';\nimport { getIdRef } from '../../utils/data-transform';\nimport { OverlayFooter, OverlayHeader } from './index';\n\nexport interface FormProductImagesOverlayProps extends OverlayHandlerReturn {\n  product?: OfferEntity;\n}\n\nconst FormProductImagesOverlay: React.FC<FormProductImagesOverlayProps> = ({ onClose }) => {\n  const currentProduct = useProductsSelector().currentOffer;\n  const service = useAppServiceProvider()[ServiceName.products];\n  const [state, setState] = useState<Partial<OfferImageSlotEntity>[]>(currentProduct?.images || []);\n  const [loading, setLoading] = useState(false);\n\n  const theme = useTheme();\n\n  const handleFormSubmit: FormEventHandler = ev => {\n    ev.preventDefault();\n\n    currentProduct &&\n      service.updateById({\n        data: { ...getIdRef(currentProduct), data: { images: state as OfferImageSlotEntity[] }, refreshCurrent: true },\n        onSuccess: () => {\n          onClose && onClose();\n        },\n        onLoading: setLoading,\n      });\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <FormOfferImagesComponent\n        initialData={state}\n        onClose={onClose}\n        onChangeState={setState}\n        contentContainerStyle={{\n          flex: 1,\n          borderTop: `1px solid ${theme.sideBarBorderColor}`,\n          borderBottom: `1px solid ${theme.sideBarBorderColor}`,\n        }}\n        renderHeader={\n          <OverlayHeader title={'Зображення'} onBackPress={onClose} okButton canSubmit={state.length > 0} />\n        }\n        FooterComponent={props => {\n          return (\n            <OverlayFooter onCreatePress={props.onAddNewImageSetPress} loading={loading} canSubmit={state.length > 0} />\n          );\n        }}\n      />\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  flex: 1;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  max-width: 480px;\n\n  padding: 0 8px;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n// const Content = styled(FlexBox)`\n//   border-top: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n//   border-bottom: 1px solid ${p => 'tomato' || p.theme.sideBarBorderColor};\n// `;\nexport default FormProductImagesOverlay;\n","import { OfferEntity } from '../../../types/offers/offers.types';\nimport FlexBox from '../../atoms/FlexBox';\nimport React, { useMemo, useState } from 'react';\nimport ButtonIcon from '../../atoms/ButtonIcon/ButtonIcon';\nimport styled from 'styled-components';\nimport { t } from '../../../lang';\nimport { usePageCurrentOffer } from '../../AppPages/offers/PageOfferProvider';\nimport { OverlayHeader } from '../../Overlays';\nimport TabSelector from '../../atoms/TabSelector';\nimport { useOverlayService } from '../../../Providers/Overlay/OverlayStackProvider';\nimport { useAppRouter } from '../../../hooks';\nimport { OverviewTextCell } from '../components/OverviewTextCell';\nimport { enumToFilterOptions, toAppDateFormat } from '../../../utils';\nimport { OverviewCellProps } from '../components/overview-types';\nimport { IMeasurement, PartialRecord } from '../../../types/utils.types';\nimport { isString } from 'lodash';\nimport { OfferOverviewCategoriesCell } from './components/OfferOverviewCategoriesCell';\nimport { OfferOverviewStaticProperties } from './components/OfferOverviewStaticPropertiesCell';\nimport { OfferOverviewDefaultsCell } from './components/OfferOverviewDefaultsCell';\nimport { OfferOverviewImagesCell } from './components/OfferOverviewImagesCell';\n\nexport enum OfferOverviewTabsEnum {\n  General = 'General',\n  Properties = 'Properties',\n  Defaults = 'Defaults',\n  Images = 'Images',\n  Futures = 'Futures',\n  Cms = 'Cms',\n}\n\nexport const ProductOverviewTabsList = enumToFilterOptions(OfferOverviewTabsEnum);\n\nexport interface ProductOverviewXLProps {\n  product?: OfferEntity;\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onArchive?: () => void;\n  onHide?: () => void;\n  onRefresh?: () => void;\n  onCreateVariation?: (data: Record<string, string>, onSuccess?: () => void) => void;\n  onOpenRightSide?: () => void;\n  className?: string;\n}\n\nconst OfferOverviewXL: React.FC<ProductOverviewXLProps> = ({ className, ...p }) => {\n  const router = useAppRouter();\n  const page = usePageCurrentOffer();\n  const offer = page.currentOffer;\n  const overlaySrv = useOverlayService();\n  const cellsMap = getOfferOverviewCellsMap();\n\n  const [currentTab, setCurrentTab] = useState<OfferOverviewTabsEnum>(OfferOverviewTabsEnum.General);\n\n  const renderCells = useMemo(\n    () =>\n      !cellsMap[currentTab]\n        ? null\n        : cellsMap[currentTab]?.map(({ CellComponent, ...cell }) => {\n            if (CellComponent) {\n              return <CellComponent key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n            }\n            return <OverviewTextCell key={cell.title} overlayHandler={overlaySrv.open} cell={cell} data={offer} />;\n          }),\n    [cellsMap, currentTab, overlaySrv.open, offer]\n  );\n\n  return (\n    <Container fillWidth flex={1} className={className} padding={'0 8px'}>\n      <OverlayHeader title={t('Offer overview')} onBackPress={router.goBack} />\n\n      <TabSelector\n        optionProps={{ fitContentH: true }}\n        filterOptions={ProductOverviewTabsList}\n        onOptSelect={option => {\n          router.replace({ hash: option?.value });\n          setCurrentTab(option?.value);\n        }}\n      />\n\n      <Content fillWidth flex={1} overflow={'auto'}>\n        {renderCells}\n      </Content>\n\n      <Footer fillWidth fxDirection={'row'} gap={6} padding={'6px 0'}>\n        <ButtonIcon\n          size={'36px'}\n          variant={'onlyIcon'}\n          iconSize={'85%'}\n          icon={'edit'}\n          disabled={!p?.onEdit}\n          onClick={p?.onEdit}\n        />\n\n        <ButtonIcon\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={p?.product?.visible ? 'visibilityOn' : 'visibilityOff'}\n          disabled={!p?.onHide}\n          onClick={p?.onHide}\n        />\n\n        <DeleteBtn\n          variant={'onlyIcon'}\n          size={'36px'}\n          iconSize={'85%'}\n          icon={'delete'}\n          disabled={!p?.onDelete}\n          onClick={p?.onDelete}\n        />\n\n        <FlexBox fxDirection={'row'} gap={6} margin={'0 0 0 auto'}>\n          <ButtonIcon\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'refresh'}\n            disabled={!p?.onRefresh}\n            onClick={p?.onRefresh}\n          />\n\n          <OpenBtn\n            size={'36px'}\n            variant={'onlyIcon'}\n            iconSize={'85%'}\n            icon={'SmallArrowLeft'}\n            disabled={!p?.onOpenRightSide}\n            onClick={p?.onOpenRightSide}\n          />\n        </FlexBox>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled(FlexBox)`\n  position: relative;\n  overflow: hidden;\n\n  background-color: ${p => p.theme.sideBarBackgroundColor};\n`;\n\nconst Content = styled(FlexBox)`\n  border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  border-bottom: 1px solid ${p => p.theme.sideBarBorderColor};\n`;\nconst Footer = styled(FlexBox)``;\nconst DeleteBtn = styled(ButtonIcon)`\n  fill: ${p => p.theme.globals.colors.error};\n`;\nconst OpenBtn = styled(ButtonIcon)`\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\nconst offerOverviewCells: OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[] = [\n  {\n    title: t('Label'),\n    getValue: data => data?.label,\n    gridArea: 'label',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('status'),\n    getValue: data => data?.approved as string | null | undefined,\n    gridArea: 'approved',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Type'),\n    getValue: data => data?.type,\n    gridArea: 'type',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('SKU'),\n    getValue: data => data?.sku,\n    gridArea: 'sku',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Bar-code'),\n    getValue: data => data?.barCode,\n    gridArea: 'barCode',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Categories'),\n    CellComponent: OfferOverviewCategoriesCell,\n    gridArea: 'categories',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Brand'),\n    getValue: data => data?.brand?.label,\n    gridArea: 'brand',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Measurement'),\n    gridArea: 'measurement',\n    getValue: product => {\n      try {\n        const data: IMeasurement = product?.measurement ? JSON.parse(product?.measurement as string) : {};\n        const arr = [\n          `${t('unit')}: ${data?.unit || 0}`,\n          `${t('min')}: ${data?.min || 0}`,\n          `${t('max')}: ${data?.max || 0}`,\n          `${t('step')}: ${data?.step || 0}`,\n        ];\n\n        return arr.join(' | ');\n      } catch (e) {\n        return '';\n      }\n    },\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Description'),\n    getValue: data => data?.description,\n    gridArea: 'description',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  // * FUTURES\n\n  {\n    title: t('Negative sales'),\n    getValue: product => (product?.futures?.negativeSale ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Reservation'),\n    getValue: product => (product?.futures?.reservation?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'reservation',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom production'),\n    getValue: product => (product?.futures?.customProduction?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customProduction',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Custom order'),\n    getValue: product => (product?.futures?.customOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'customOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Pre-order'),\n    getValue: product => (product?.futures?.preOrder?.isAvailable ? 'Yes' : 'No'),\n    gridArea: 'preOrder',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  {\n    title: t('Is promo'),\n    getValue: data => data?.futures?.isPromo,\n    gridArea: 'isPromo',\n    tab: OfferOverviewTabsEnum.Futures,\n  },\n\n  // * PROPERTIES\n  {\n    title: t('Properties'),\n    CellComponent: OfferOverviewStaticProperties,\n    gridArea: 'properties',\n    tab: OfferOverviewTabsEnum.Properties,\n  },\n\n  // * DEFAULTS\n  {\n    title: t('Default values'),\n    CellComponent: OfferOverviewDefaultsCell,\n    gridArea: 'defaults',\n    tab: OfferOverviewTabsEnum.Defaults,\n  },\n\n  {\n    title: t('Created by / Date / Time'),\n    getValue: product =>\n      product?.author\n        ? `${product?.author?.user?.email} / ${\n            product?.createdAt && isString(product?.createdAt) ? toAppDateFormat(Date.parse(product?.createdAt)) : ''\n          }`\n        : null,\n    gridArea: 'created',\n    tab: OfferOverviewTabsEnum.General,\n  },\n  {\n    title: t('Updated by / Date / Time'),\n    getValue: product =>\n      product?.editor\n        ? `${product?.editor?.user?.email} / ${\n            product?.updatedAt && isString(product?.updatedAt) ? toAppDateFormat(Date.parse(product?.updatedAt)) : ''\n          }`\n        : null,\n    gridArea: 'updated',\n    tab: OfferOverviewTabsEnum.General,\n  },\n\n  {\n    title: t('Images'),\n    CellComponent: OfferOverviewImagesCell,\n    gridArea: 'images',\n    tab: OfferOverviewTabsEnum.Images,\n  },\n];\n\nfunction getOfferOverviewCellsMap(): PartialRecord<\n  OfferOverviewTabsEnum | string,\n  OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n> {\n  const offerOverviewCellsMap: PartialRecord<\n    OfferOverviewTabsEnum | string,\n    OverviewCellProps<OfferEntity, OfferOverviewTabsEnum>[]\n  > = {};\n  offerOverviewCells.forEach(item => {\n    const tab = item.tab;\n    if (tab) {\n      if (offerOverviewCellsMap[tab]) {\n        offerOverviewCellsMap[tab]?.push(item);\n      } else {\n        offerOverviewCellsMap[tab] = [item];\n      }\n    }\n  });\n  return offerOverviewCellsMap;\n}\nexport default OfferOverviewXL;\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useProductsSelector } from '../../../../redux/selectors.store';\nimport React, { useMemo, useState } from 'react';\nimport FormSelectPropertiesOverlay from '../../../Overlays/FormSelectPropertiesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { t } from '../../../../lang';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { OverviewPropertyComponent } from '../../components/OverviewPropertyComponent';\n\nexport const OfferOverviewStaticProperties: RenderOverviewCellComponent<OfferEntity> = ({\n  cell,\n  overlayHandler,\n  data,\n}) => {\n  const templates = useProductsSelector().properties;\n  // ! setCurrentId\n  const [currentId] = useState<string>(templates[0]?._id);\n\n  const template = useMemo(() => {\n    return templates.find(t => t._id === currentId);\n  }, [currentId, templates]);\n\n  const availableProperties = useMemo(() => {\n    return template?.childrenList?.filter(prop => !prop.isSelectable);\n  }, [template?.childrenList]);\n\n  const selectedItems = useMemo(() => {\n    return data?.properties?.map(p => p._id);\n  }, [data?.properties]);\n\n  const renderProperties = useMemo(() => {\n    return availableProperties?.map((prop, index) => {\n      return (\n        <OverviewPropertyComponent\n          key={`prop-${prop?._id}`}\n          {...{ index, overlayHandler: overlayHandler, item: prop, selectedItems, data }}\n        />\n      );\n    });\n  }, [availableProperties, overlayHandler, selectedItems, data]);\n\n  return (\n    <CellStyledComp.Cell\n      padding={'4px 4px 8px'}\n      gap={8}\n      className={'PROPERTIES_LIST_CELL'}\n      style={{ minHeight: renderProperties && renderProperties?.length > 0 ? 'max-content' : 50 }}\n    >\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormSelectPropertiesOverlay,\n            props: { offer: data },\n          });\n        }}\n      />\n\n      <FlexBox fillWidth gap={8} alignItems={renderProperties && renderProperties?.length > 0 ? 'stretch' : 'flex-end'}>\n        {renderProperties && renderProperties?.length > 0 ? (\n          renderProperties\n        ) : (\n          <CellStyledComp.CellText $weight={500}>{t('undefined')}</CellStyledComp.CellText>\n        )}\n\n        {/*{renderPropertiesFromVariations}*/}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport { useTheme } from 'styled-components';\nimport React, { useMemo } from 'react';\nimport { t } from '../../../../lang';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { Text } from '../../../atoms/Text';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport FormProductDefaultsOverlay from '../../../Overlays/FormProductDefaultsOverlay';\n\nimport { OfferPriceEntity } from '../../../../types/price-management/price-management.types';\nimport { MaybeNull } from '../../../../types/utils.types';\nimport { toPrice } from '../../../../utils/numbers';\n\nexport const OfferOverviewDefaultsCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const theme = useTheme();\n  const warehouse = data?.warehouse;\n  const supplier = data?.supplier;\n  const price = data?.price;\n\n  const renderVariationTags = useMemo(() => {\n    const variation = data?.variation;\n    const tagsData: { title: string; value?: MaybeNull<number | string> }[] = [\n      { title: t('Label'), value: variation?.label },\n      { title: t('Bar-code'), value: variation?.barCode },\n      {\n        title: t('SKU'),\n        value: variation?.sku,\n      },\n      {\n        title: t('Props q-ty'),\n        value: variation?.properties?.length,\n      },\n    ];\n\n    return tagsData.map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text $size={14}>{`${item?.title}: `}</Text>\n          <Text $size={14} $weight={600} $align={'right'}>\n            {item?.value ?? '---'}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [data?.variation]);\n\n  const renderPriceInfo = useMemo(() => {\n    return createPriceOverviewTagsData(price).map((item, index) => {\n      return (\n        <FlexBox\n          key={item?.title}\n          fxDirection={'row'}\n          justifyContent={'space-between'}\n          padding={'4px 6px'}\n          gap={6}\n          fillWidth\n        >\n          <Text>{`${item?.title}: `}</Text>\n          <Text $weight={600}>\n            {item?.amount}\n\n            {item?.percentage && ` | ${item?.percentage}%`}\n          </Text>\n        </FlexBox>\n      );\n    });\n  }, [price]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({\n            RenderComponent: FormProductDefaultsOverlay,\n          });\n        }}\n      />\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('warehouse')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth flexWrap={'wrap'} fxDirection={'row'}>\n          {[\n            { label: t('Label'), value: warehouse?.label },\n            { label: t('Code'), value: warehouse?.code },\n          ].map(info => (\n            <FlexBox\n              key={info.label}\n              fxDirection={'row'}\n              justifyContent={'space-between'}\n              padding={'4px 6px'}\n              gap={6}\n              fillWidth\n            >\n              <Text>{`${info.label}`}</Text>\n              <Text $weight={600}>{info?.value || '---'}</Text>\n            </FlexBox>\n          ))}\n        </FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('supplier')}\n        </CellStyledComp.CellText>\n\n        {[\n          { label: t('Label'), value: supplier?.label },\n          { label: t('Code'), value: supplier?.code },\n        ].map(info => (\n          <FlexBox\n            key={info.label}\n            fxDirection={'row'}\n            justifyContent={'space-between'}\n            padding={'4px 6px'}\n            gap={6}\n            fillWidth\n          >\n            <Text>{`${info.label}`}</Text>\n            <Text $weight={600}>{info?.value || '---'}</Text>\n          </FlexBox>\n        ))}\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('variation')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderVariationTags}</FlexBox>\n      </FlexBox>\n\n      <FlexBox fillWidth gap={6}>\n        <CellStyledComp.CellText $weight={600} style={{ color: theme?.fontColorHeader }}>\n          {t('price')}\n        </CellStyledComp.CellText>\n\n        <FlexBox fillWidth>{renderPriceInfo}</FlexBox>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n\nexport function createPriceOverviewTagsData(\n  price?: OfferPriceEntity\n): { title: string; amount?: number | string; percentage?: number | string }[] {\n  return [\n    { title: t('Input'), amount: toPrice(price?.in) },\n    { title: t('Output'), amount: toPrice(price?.out) },\n    {\n      title: t('Commission'),\n      amount: toPrice(price?.commission?.amount),\n      percentage: price?.commission?.percentage ? toPrice(price?.commission?.percentage) : undefined,\n    },\n    {\n      title: t('Markup'),\n      amount: toPrice(price?.markup?.amount),\n      percentage: price?.markup?.percentage ? toPrice(price?.markup?.percentage) : undefined,\n    },\n  ];\n}\n","import { RenderOverviewCellComponent } from '../../components/overview-types';\nimport { OfferEntity } from '../../../../types/offers/offers.types';\nimport React, { useMemo } from 'react';\nimport ImagePreviewSmall from '../../../atoms/ImagePreviewSmall';\nimport FormProductImages from '../../../Overlays/FormProductImagesOverlay';\nimport FlexBox from '../../../atoms/FlexBox';\nimport { CellStyledComp } from '../../components/CellStyles';\nimport { OverviewCellHeader } from '../../components/OverviewCellHeader';\nimport { formAddImageSetTabs } from '../../../../data';\n\nexport const OfferOverviewImagesCell: RenderOverviewCellComponent<OfferEntity> = ({ data, cell, overlayHandler }) => {\n  const renderImageSets = useMemo(() => {\n    return data?.images?.map((set, index) => {\n      return (\n        <CellStyledComp.ImagesSetBox key={`set_${set?._id || index}`} fxDirection={'row'} gap={2} overflow={'auto'}>\n          {formAddImageSetTabs.map(el => (\n            <ImagePreviewSmall key={`img_${el.value}`} src={set[el.value] || ''} disabled />\n          ))}\n        </CellStyledComp.ImagesSetBox>\n      );\n    });\n  }, [data?.images]);\n\n  return (\n    <CellStyledComp.Cell style={{ minHeight: 'max-content', padding: '4px 0' }}>\n      <OverviewCellHeader\n        title={cell?.title}\n        onOpenOverlayPress={() => {\n          overlayHandler({ RenderComponent: FormProductImages });\n        }}\n      />\n\n      <FlexBox gap={2} height={'max-content'} padding={'8px 0'} style={{ minHeight: 26 }}>\n        {renderImageSets}\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { usePageCurrentOffer } from './PageOfferProvider';\nimport { useModalProvider } from '../../ModalProvider/ModalProvider';\nimport { useAppServiceProvider } from '../../../hooks/useAppServices.hook';\nimport styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { useOfferOverviewLoaders } from './PageOfferOverview';\nimport { OverlayStack } from '../../../Providers/Overlay/OverlayStack';\nimport OfferOverviewXL from 'components/Overviews/offer/OfferOverviewXL';\nimport { Modals } from '../../Modals/Modals';\nimport { t } from '../../../lang';\n\nexport interface OfferOverviewPageLeftSideProps {\n  toggleRightSideVisibility?: () => void;\n}\n\nconst OfferOverviewPageLeftSide: React.FC<OfferOverviewPageLeftSideProps> = ({ toggleRightSideVisibility }) => {\n  const page = usePageCurrentOffer();\n  const loaders = useOfferOverviewLoaders();\n\n  const modalS = useModalProvider();\n\n  const { products: productsS } = useAppServiceProvider();\n\n  return (\n    <LeftSide>\n      <OfferOverviewXL\n        product={page?.currentOffer}\n        onEdit={() => {\n          if (!page.currentOffer) {\n            return;\n          }\n\n          modalS.openModal({\n            Modal: Modals.EditOffer,\n            props: {\n              _id: page?.currentOffer?._id,\n              title: t('Edit offer'),\n            },\n          });\n        }}\n        onRefresh={() => {\n          if (!page.currentOffer?._id) return;\n\n          productsS.getProductFullInfo({\n            data: { _id: page.currentOffer?._id },\n            onLoading: loaders.onLoading('offer'),\n          });\n        }}\n        onOpenRightSide={toggleRightSideVisibility}\n      />\n\n      <OverlayStack />\n    </LeftSide>\n  );\n};\n\nconst LeftSide = styled(FlexBox)`\n  position: relative;\n\n  overflow: hidden;\n\n  border-right: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nexport default OfferOverviewPageLeftSide;\n","import styled from 'styled-components';\nimport { takeFullGridArea } from '../pagesStyles';\nimport AppGridPage from '../AppGridPage';\nimport React, { useCallback, useState } from 'react';\nimport PageOfferProvider from './PageOfferProvider';\nimport OfferOverviewPageRightSide from './OfferOverviewPageRightSide';\nimport OfferOverviewPageLeftSide from './OfferOverviewPageLeftSide';\nimport { BaseAppPageProps } from '../index';\nimport { OfferEntity } from '../../../types/offers/offers.types';\nimport { LoadersProvider, useLoadersProvider } from '../../../Providers/Loaders/LoaderProvider';\nimport { useLoaders } from '../../../Providers/Loaders/useLoaders.hook';\nimport { t } from '../../../lang';\nimport OverlayStackProvider from '../../../Providers/Overlay/OverlayStackProvider';\n\ninterface Props extends BaseAppPageProps {}\n\nexport type OfferOverviewLoaderKey = 'offer' | 'update_offer' | 'refresh_offer' | keyof OfferEntity;\n\nexport const useOfferOverviewLoaders = () => useLoadersProvider<OfferOverviewLoaderKey>();\n\nconst PageOfferOverview: React.FC<Props> = ({ path }) => {\n  const loaders = useLoaders<OfferOverviewLoaderKey>({ offer: { content: t('Loading product info') } });\n  const [isRightSideVisible, setIsRightSideVisible] = useState<boolean>(false);\n\n  const toggleRightSide = useCallback(() => {\n    setIsRightSideVisible(p => !p);\n  }, []);\n\n  return (\n    <LoadersProvider value={loaders}>\n      <PageOfferProvider>\n        <OverlayStackProvider>\n          <AppGridPage path={path}>\n            <Page>\n              <OfferOverviewPageLeftSide toggleRightSideVisibility={toggleRightSide} />\n\n              <OfferOverviewPageRightSide isVisible={isRightSideVisible} toggleVisibility={toggleRightSide} />\n            </Page>\n          </AppGridPage>\n        </OverlayStackProvider>\n      </PageOfferProvider>\n    </LoadersProvider>\n  );\n};\nconst Page = styled.div`\n  display: grid;\n  grid-template-columns: minmax(220px, 1fr) 0;\n\n  ${takeFullGridArea};\n\n  //@media screen and (max-width: 768px) {\n  //}\n  @media screen and (min-width: 768px) {\n    grid-template-columns: minmax(360px, 1fr) 2fr;\n  }\n  @media screen and (min-width: 1000px) {\n    grid-template-columns: minmax(360px, 400px) 2fr;\n  }\n`;\n\nexport default PageOfferOverview;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import styled from 'styled-components';\nimport FlexBox from '../../atoms/FlexBox';\nimport { Text } from '../../atoms/Text';\n\nconst HeaderButton = styled.button`\n  display: flex;\n  align-items: center;\n\n  border: 0;\n  background-color: transparent;\n\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 13px;\n  padding: 6px 10px;\n  color: ${p => p.theme.accentColor.base};\n\n  cursor: pointer;\n\n  &[disabled] {\n    pointer-events: none;\n    color: ${p => p.theme.modalBorderColor};\n  }\n`;\n\nconst Cell = styled(FlexBox)`\n  //min-height: 70px;\n  height: max-content;\n  min-height: max-content;\n\n  padding: 0 8px 8px;\n  gap: 4px;\n\n  //overflow: hidden;\n\n  &:not(:first-child) {\n    border-top: 1px solid ${p => p.theme.sideBarBorderColor};\n  }\n`;\n\nconst Tag = styled(FlexBox)`\n  justify-content: center;\n  align-items: center;\n\n  padding: 4px 8px;\n  min-height: 28px;\n  color: #fcfcfc;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n\n  //background-color: #f1f1f1;\n\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.modalBorderColor};\n`;\n\nconst CellText = styled(Text)<{ $isTitle?: boolean }>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 100%;\n\n  color: ${p =>\n    p.$isTitle\n      ? p.theme.globals.inputPlaceholderColor\n      : p.$disabled\n      ? p.theme.globals.inputPlaceholderColor\n      : undefined};\n`;\nconst ImagesSetBox = styled(FlexBox)`\n  &::-webkit-scrollbar {\n    width: 0;\n    height: 0;\n  }\n`;\n\nconst DefaultTag = styled(FlexBox)`\n  justify-content: center;\n\n  border-radius: 2px;\n  padding: 4px 12px;\n  height: 28px;\n\n  background-color: ${p => p.theme.fieldBackgroundColor};\n`;\nconst CategoryItem = styled(FlexBox)`\n  align-items: center;\n  justify-content: center;\n\n  flex-direction: row;\n\n  padding: 4px;\n\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.fontColorSidebar};\n\n  min-height: 28px;\n\n  border-radius: 2px;\n  //background-color: ${p => p.theme.field.backgroundColor};\n  border: 1px solid ${p => p.theme.accentColor.base};\n`;\n\nexport const CellStyledComp = {\n  CategoryItem,\n  ImagesSetBox,\n  CellText,\n  Tag,\n  HeaderButton,\n  Cell,\n  DefaultTag,\n};\n","import { t } from '../../../lang';\nimport FlexBox from '../../atoms/FlexBox';\nimport React from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewCellHeader = ({\n  title = 'Title',\n  openOverlayButtonTitle = t('Change'),\n  onOpenOverlayPress,\n  editButtonText = t('Change'),\n  onEditPress,\n  acceptButtonText = t('Ok'),\n  onAcceptPress,\n  editMode = false,\n  canAccept = false,\n  cancelButtonText = t('Cancel'),\n  onCancelPress,\n}: {\n  title?: string;\n  openOverlayButtonTitle?: string;\n  onOpenOverlayPress?: () => void;\n  editButtonText?: string;\n  onEditPress?: () => void;\n  acceptButtonText?: string;\n  onAcceptPress?: () => void;\n  cancelButtonText?: string;\n  onCancelPress?: () => void;\n  editMode?: boolean;\n  editable?: boolean;\n  canAccept?: boolean;\n}) => {\n  return (\n    <FlexBox fxDirection={'row'} justifyContent={'space-between'} height={'max-content'} alignItems={'center'}>\n      <CellStyledComp.CellText $isTitle $size={13} style={{ marginRight: 'auto' }}>\n        {title}\n      </CellStyledComp.CellText>\n\n      {onOpenOverlayPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onOpenOverlayPress}>\n          {openOverlayButtonTitle}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {!editMode && onEditPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onEditPress}>\n          {editButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onCancelPress && (\n        <CellStyledComp.HeaderButton type={'button'} onClick={onCancelPress}>\n          {cancelButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n\n      {editMode && onAcceptPress && (\n        <CellStyledComp.HeaderButton type={'button'} disabled={!canAccept} onClick={onAcceptPress}>\n          {acceptButtonText}\n        </CellStyledComp.HeaderButton>\n      )}\n    </FlexBox>\n  );\n};\n","import { RenderOverviewCellComponent } from './overview-types';\nimport FlexBox from '../../atoms/FlexBox';\nimport { t } from '../../../lang';\nimport React, { useMemo } from 'react';\nimport { CellStyledComp } from './CellStyles';\n\nexport const OverviewTextCell: RenderOverviewCellComponent = ({ cell, data }) => {\n  const value = useMemo(() => (cell.getValue ? cell.getValue(data) : null), [cell, data]);\n\n  return (\n    <CellStyledComp.Cell>\n      <CellStyledComp.CellText $isTitle $size={12}>\n        {cell?.title}\n      </CellStyledComp.CellText>\n\n      <FlexBox\n        fillWidth\n        flex={1}\n        fxDirection={'row'}\n        justifyContent={'flex-end'}\n        alignItems={'flex-end'}\n        overflow={'hidden'}\n        style={{ minHeight: 24 }}\n      >\n        <CellStyledComp.CellText $isTitle={!value} $weight={500}>\n          {value || t('undefined')}\n        </CellStyledComp.CellText>\n      </FlexBox>\n    </CellStyledComp.Cell>\n  );\n};\n","import { LangKeyEnum } from '../../lang';\nimport React, { useMemo } from 'react';\nimport { enumToFilterOptions } from '../../utils/fabrics';\nimport ButtonsGroup from './ButtonsGroup';\n\nconst LangButtonsGroup = ({ onChange, disabled }: { onChange?: (value: LangKeyEnum) => void; disabled?: boolean }) => {\n  const options = useMemo(() => enumToFilterOptions(LangKeyEnum), []);\n\n  return <ButtonsGroup disabled={disabled} options={options} onSelect={info => onChange && onChange(info.value)} />;\n};\n\nexport default LangButtonsGroup;\n","import { CellTittleProps } from '../components/TableList/TebleCells/CellTitle';\nimport { WarehouseItemEntity, IWarehouse } from '../types/warehousing/warehouses.types';\nimport { t } from '../lang';\nimport { numberWithSpaces } from '../utils';\n\nexport const warehousesTableColumns: CellTittleProps<IWarehouse>[] = [\n  {\n    top: { name: t('label'), getData: rd => rd.label },\n    bottom: { name: t('code'), getData: rd => rd.code },\n    width: '220px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), getData: rd => rd?.type },\n    // bottom: { name: 'Статус' },\n    width: '125px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('email') },\n    bottom: { name: t('phone') },\n    width: '180px',\n    action: 'contacts',\n  },\n  {\n    top: { name: t('Address'), getData: rd => rd.address || 'не визначено' },\n    bottom: {\n      name: `${t('longitude')}/${t('latitude')}`,\n      getData: rd => `${(rd.location?.longitude || '---') + ', ' + (rd.location?.latitude || '---')}`,\n    },\n    width: '175px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Manager'), getData: rd => `${rd.manager?.user?.name || '---'}` },\n    bottom: { name: t('email'), getData: rd => `${rd.manager?.user?.email || '---'}` },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehouseOverviewTableColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('variationLabel'), getData: rd => rd.variation?.label },\n    getImgPreview: d => (d.offer?.images ? d.offer?.images[0]?.img_preview : ''),\n    width: '270px',\n    action: 'doubleDataWithAvatar',\n  },\n  {\n    top: { name: t('sku'), getData: rd => rd.variation?.sku },\n    bottom: { name: t('barCode'), getData: rd => rd.variation?.barCode },\n    width: '200px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('type'), path: 'type' },\n    bottom: { name: t('status'), path: 'status' },\n    width: '120px',\n    action: 'status',\n  },\n  {\n    top: { name: 'Наявність', align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: 'Резерв', align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Очікується', align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: 'Втрачено', align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: 'Бренд' },\n  //   bottom: { name: 'Виробник' },\n  //   width: '150px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Опис', path: 'description' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Автор', path: 'author.name' },\n    bottom: { name: 'Емейл', path: 'author.email' },\n    width: '190px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Створено', align: 'center', path: 'createdAt' },\n    bottom: { name: 'Оновлено', align: 'center', path: 'updatedAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n];\nexport const warehousesTableColumnsForOrderCreateOrderSlotForm: CellTittleProps[] = [\n  {\n    top: { name: 'Склад' },\n    bottom: { name: 'Номер' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Залишок' },\n    bottom: { name: 'Резерв' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Локація' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: 'Інфо' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nconst batchPricesColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('Price OUT'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.in || 0)) },\n    bottom: { name: t('Price IN'), align: 'end', getData: d => numberWithSpaces(Number(d?.price?.out || 0)) },\n    width: '170px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: {\n  //     name: t('Commission, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Commission, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.commissionPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Markup, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Markup, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.markupPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Discount, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Discount, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.discountPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Bonus, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Bonus, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  // {\n  //   top: {\n  //     name: t('Cashback, amount'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackAmount || 0)),\n  //   },\n  //   bottom: {\n  //     name: t('Cashback, %'),\n  //     align: 'end',\n  //     getData: d => numberWithSpaces(Number(d?.price?.cashbackPercentage || 0)),\n  //   },\n  //   width: '170px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('comment'), align: 'start', path: 'description' },\n    width: '150px',\n    action: 'valueByPath',\n  },\n];\n\nexport const warehouseBatchColumns: CellTittleProps<WarehouseItemEntity>[] = [\n  {\n    top: { name: t('batch') },\n    // bottom: { name: t('code') },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  // {\n  //   top: { name: t('Variation label') },\n  //   bottom: { name: t('Product label') },\n  //   getImgPreview: d =>\n  //     d.product?.images\n  //       ? d.product?.images[0]?.img_preview\n  //       : d.variation?.product?.images\n  //       ? d.variation?.product?.images[0]?.img_preview\n  //       : '',\n  //   width: '270px',\n  //   action: 'doubleDataWithAvatar',\n  // },\n  // {\n  //   top: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   bottom: { name: `${t('SKU')}/${t('barCode')}`, getData: () => '---/---' },\n  //   width: '220px',\n  //   action: 'valueByPath',\n  // },\n  {\n    top: { name: t('warehouse'), getData: rd => rd.warehouse?.label },\n    bottom: { name: t('code'), getData: rd => rd.warehouse?.code },\n    width: '170px',\n    action: 'valueByPath',\n  },\n\n  {\n    top: { name: t('Stock'), align: 'end', getData: rd => rd.stock || 0 },\n    bottom: { name: t('Reserved'), align: 'end', getData: rd => rd.reserved || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('Awaiting'), align: 'end', getData: rd => rd?.awaiting || 0 },\n    bottom: { name: t('Lost'), align: 'end', getData: rd => rd?.lost || 0 },\n    width: '150px',\n    action: 'valueByPath',\n  },\n  {\n    top: { name: t('updated'), align: 'center', path: 'updatedAt' },\n    bottom: { name: t('created'), align: 'center', path: 'createdAt' },\n    width: '150px',\n    action: 'dateSimple',\n  },\n  ...batchPricesColumns,\n];\n"],"names":["OverlayStack","_","overlaySrv","useOverlayService","onOverlayBackdropClick","useCallback","id","ev","target","currentTarget","remove","renderOverlayStack","useMemo","getStack","map","_ref","index","RenderComponent","props","_jsx","OverlayBox","className","concat","style","zIndex","fillHeight","fillWidth","alignItems","onClick","children","_objectSpread","onClose","overlayId","Backdrop","isActive","length","overflow","styled","FlexBox","_templateObject","_taggedTemplateLiteral","p","theme","backdropColor","globals","timingFunctionMain","_templateObject2","PageCurrentOrderCTX","createContext","useContext","_useState","useState","_useState2","_slicedToArray","overlayStack","setOverlayStack","removeStackItem","pStack","filter","el","clearStack","createOverlayComponent","params","name","nanoid","prev","isExist","find","includes","clearedStack","_el$RenderComponent","_isExist$RenderCompon","_toConsumableArray","compId","value","open","Provider","PageCurrentOfferCTX","usePageCurrentOffer","service","useAppServiceProvider","ServiceName","loaders","useOfferOverviewLoaders","useAppParams","offerId","currentOffer","useCurrentOffer","useEffect","_loaders$isLoading","isLoading","offer","getProductFullInfo","data","_id","onLoading","finally","clearCurrent","undefined","PropertyBox","sideBarBorderColor","PropertyValuesBox","_PropertyItemStylesBy","_PropertyItemStylesBy2","cmsKey","PropertyItemStylesByCmsKey","numColumns","RenderPropertyValue","_ref2","item","isSelected","onSelect","ValueTag","variant","padding","fontWeight","label","ButtonIcon","_templateObject3","_item$cmsConfigs","_ref$selectedIds","selectedIds","renderChildren","_item$childrenList","childrenList","_jsxs","gap","Text","flex","paddingLeft","$weight","cmsConfigs","key","validation","yup","shape","required","min","max","sku","barCode","cms","labels","ua","en","propertiesMap","nonNullable","timeFrom","timeTo","price","out","FormContainer","fontColorSidebar","tableBackgroundColor","Content","TemplateBox","Inputs","_templateObject4","ExtraFooterBox","_templateObject5","CmsConfigs","_templateObject6","CmsConfigsHeader","_templateObject7","modalBorderColor","_ref3","_errors$cmsConfigs","_errors$cmsConfigs2","_errors$cmsConfigs2$l","_loaders$isLoading2","title","defaultState","update","onSubmit","create","_objectWithoutProperties","_excluded","templates","usePropertiesSelector","useLoaders","submitOptions","useAfterSubmitOptions","currentTemplate","_useState3","_useState4","selectedPropsMap","setSelectedPropsMap","_useMemo","_currentTemplate$chil","list","isSelectable","_propValuesMap","propertiesList","propertiesDataMap","Object","assign","apply","pr","_pr$childrenList","forEach","val","_defineProperty","propValuesDataMap","formMethods","useAppForm","defaultValues","toVariationFormData","resolver","yupResolver","reValidateMode","setValue","handleSubmit","register","errors","formState","formValues","reset","console","log","values","canSubmit","_step","_sorted","entries","sort","next","localeCompare","_labels","_iterator","_createForOfIteratorHelper","s","n","done","push","err","e","f","join","onValid","updateVariationById","toVariationReqData","onSuccess","onError","ToastService","then","createVariation","state","close","clear","handleSelect","parentId","handleClearMap","renderTemplate","prop","OfferVariationPropertySelector","error","onReset","OverlayHeader","onBackPress","okButton","InputLabel","t","InputText","placeholder","fxDirection","margin","justifyContent","$size","LangButtonsGroup","disabled","OverlayFooter","loading","resetButtonShown","submitButtonText","extraFooter","FormAfterSubmitOptions","selected","_ref$withActions","withActions","useLoadersProvider","page","modalS","useModalProvider","productsS","loadData","refresh","getAllVariationsByProductId","refreshCurrent","updateCurrent","variationsTableTitles","_currentOffer$variati","variations","_step2","propsList","properties","_iterator2","_prop$parent","propId","parent","createTableTitlesFromProperties","tableConfig","tableTitles","tableData","transformData","transformVariationTableData","onRowClick","rowData","getIdRef","actionsCreator","ctx","_ctx$selectedRow","currentId","selectedRow","icon","type","separator","window","confirm","_currentOffer$variati2","dataForUpdate","v","ModalChildren","CreateVariationOverlay","modalChildrenProps","TableList","isSearch","isFilter","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","abrupt","getAllPrices","stop","_x","arguments","prices","pricesColumnsForProductReview","FormCreatePrice","currentProduct","useProductsSelector","setLoading","product","getAllInventories","tableConfigs","inventories","warehouseOverviewTableColumns","Forms","RightSideOptionEnum","TabsList","enumToFilterOptions","RightSide","backgroundColorLight","isVisible","TabBox","_page$currentOffer","_page$currentOffer2","toggleVisibility","Variations","currentTab","setCurrentTab","renderTab","_tabs","_tabs$currentTab","tabs","VariationsTab","Warehousing","WarehousingTab","Prices","PricesTab","ModalHeader","renderTitle","TabSelector","filterOptions","defaultValue","onOptSelect","preventFilter","ListItem","_item$parent","_item$parent2","_ref2$lvl","lvl","_ref2$onRemove","onRemove","_Fragment","TagItem","endIcon","size","endIconSize","accentColor","base","options","onChange","defaultData","setSelectedIds","option","newData","handleRemove","renderTreeData","CustomSelect","treeMode","dropDownIsAbsolute","translate","flexWrap","directory","useDirectorySelector","ApiDirType","setState","_currentOffer$categor","_currentOffer$categor2","categories","c","toString","OverlayForm","preventDefault","updateById","meta","FormProductCategories","NotActiveTreeDataItem","CellStyledComp","PropertyValuesList","light","_templates$","template","setCurrentId","_useState5","_useState6","templateData","_currentOffer$propert","event","_meta","debug","_templateData$childre","_prop$childrenList","selectedValue","OverviewPropertyComponent","selectedItems","renderValues","_item$childrenList$fi","maxWidth","types","counterparties","filteredData","counterpartyColumns","CounterpartyTypesEnum","wrhsSrv","warehouses","useWarehousesSelector","getAll","warehousesTableColumns","FormProductDefaultsTabs","Form","modalBackgroundColor","_useAppParams","currentTabIdx","setCurrentTabIdx","_useAppForm","_tabsMap","_tabsMap$tabs$current","_tabs$currentTabIdx","warehouse","WarehousesTab","variation","inventory","supplier","CounterpartyTab","SUPPLIER","_tabs$currentTabIdx$v","_tabs$currentTabIdx2","_defaults$variation","_defaults$price","_defaults$warehouse","_defaults$inventory","_defaults$supplier","defaults","tabIs","LoadersProvider","fData","setDefaults","toReqData","currentIndex","onChangeIndex","hasLoading","onCreatePress","sideBarBackgroundColor","images","useTheme","FormOfferImagesComponent","initialData","onChangeState","contentContainerStyle","borderTop","borderBottom","renderHeader","FooterComponent","onAddNewImageSetPress","OfferOverviewTabsEnum","ProductOverviewTabsList","Container","Footer","DeleteBtn","colors","OpenBtn","offerOverviewCells","getValue","gridArea","tab","General","approved","CellComponent","cell","overlayHandler","selectedCategoryIds","_data$categories$map","_data$categories","renderItems","minHeight","OverviewCellHeader","openOverlayButtonTitle","onOpenOverlayPress","FormProductCategoriesOverlay","height","_data$brand","brand","measurement","JSON","parse","unit","step","description","_product$futures","futures","negativeSale","Futures","_product$futures2","_product$futures2$res","reservation","isAvailable","_product$futures3","_product$futures3$cus","customProduction","_product$futures4","_product$futures4$cus","customOrder","_product$futures5","_product$futures5$pre","preOrder","_data$futures","isPromo","availableProperties","_template$childrenLis","_data$properties","renderProperties","FormSelectPropertiesOverlay","Properties","renderVariationTags","_variation$properties","_item$value","$align","renderPriceInfo","_price$commission","_price$commission2","_price$commission3","_price$markup","_price$markup2","_price$markup3","amount","toPrice","in","commission","percentage","markup","createPriceOverviewTagsData","FormProductDefaultsOverlay","color","fontColorHeader","code","info","Defaults","_product$author","_product$author$user","author","user","email","createdAt","isString","toAppDateFormat","Date","_product$editor","_product$editor$user","editor","updatedAt","renderImageSets","_data$images","set","formAddImageSetTabs","ImagePreviewSmall","src","FormProductImages","Images","_p$product","router","useAppRouter","cellsMap","offerOverviewCellsMap","_offerOverviewCellsMa","getOfferOverviewCellsMap","renderCells","_cellsMap$currentTab","_excluded2","OverviewTextCell","goBack","optionProps","fitContentH","replace","hash","iconSize","onEdit","visible","onHide","onDelete","onRefresh","onOpenRightSide","LeftSide","toggleRightSideVisibility","products","OfferOverviewXL","openModal","Modal","Modals","_page$currentOffer3","Page","takeFullGridArea","path","content","isRightSideVisible","setIsRightSideVisible","toggleRightSide","PageOfferProvider","OverlayStackProvider","AppGridPage","OfferOverviewPageLeftSide","OfferOverviewPageRightSide","css","takeFullPlace","HeaderButton","Cell","Tag","fieldBackgroundColor","CellText","$isTitle","$disabled","inputPlaceholderColor","ImagesSetBox","DefaultTag","CategoryItem","field","backgroundColor","_ref$title","_ref$openOverlayButto","_ref$editButtonText","editButtonText","onEditPress","_ref$acceptButtonText","acceptButtonText","onAcceptPress","_ref$editMode","editMode","_ref$canAccept","canAccept","_ref$cancelButtonText","cancelButtonText","onCancelPress","marginRight","LangKeyEnum","ButtonsGroup","top","getData","rd","bottom","width","action","address","_rd$location","_rd$location2","location","longitude","latitude","_rd$manager","_rd$manager$user","manager","_rd$manager2","_rd$manager2$user","align","_rd$variation","getImgPreview","d","_d$offer","_d$offer2","_d$offer2$images$","img_preview","_rd$variation2","_rd$variation3","stock","reserved","awaiting","lost","_rd$warehouse","_rd$warehouse2","batchPricesColumns","_d$price","numberWithSpaces","Number","_d$price2","warehouseBatchColumns","_rd$warehouse3","_rd$warehouse4"],"sourceRoot":""}