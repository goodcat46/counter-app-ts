{"version":3,"file":"static/js/481.190f317e.chunk.js","mappings":"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","sources":["redux/transactions/useTransactionsService.hook.ts","redux/transactions/useTrFilterSelectors.hook.ts","hooks/useCreateSelectorTreeData.ts","utils/fabrics.ts","components/Forms/TransactionForm.tsx","components/AppPages/PageTransactions.tsx","redux/transactions/useTrActionsCreator.hook.ts","components/AppPages/pagesStyles.ts","components/atoms/Inputs/CustomSelect.tsx"],"sourcesContent":["import { useTransactionsSelector } from 'redux/selectors.store';\nimport { ThunkPayload, useAppDispatch } from 'redux/store.store';\nimport { ITransactionReqData } from './transactions.types';\nimport { ITransactionsState } from './transactions.slice';\n\nexport type ServiceDispatcher<SD = any, RD = any, E = any> = (payload: ThunkPayload<SD, RD, E>) => void;\n\nexport interface TransactionsService {\n  dispatch: ReturnType<typeof useAppDispatch>;\n  state: ITransactionsState;\n  create: ServiceDispatcher<ITransactionReqData>;\n  deleteById: ServiceDispatcher<{ id: string }>;\n  editById: ServiceDispatcher<ITransactionReqData>;\n  getById: ServiceDispatcher<{ id: string }>;\n}\n\nconst useTransactionsService = (): TransactionsService => {\n  const dispatch = useAppDispatch();\n  const state = useTransactionsSelector();\n\n  return {\n    create: payload => {\n      console.log('trService create', payload);\n    },\n    deleteById: payload => {\n      console.log('trService deleteById', payload);\n    },\n    editById: payload => {\n      console.log('trService editById', payload);\n    },\n    getById: payload => {\n      console.log('trService getById', payload);\n    },\n    dispatch,\n    state,\n  };\n};\n\nexport type useTrServiceHookType = typeof useTransactionsService;\nexport default useTransactionsService as useTrServiceHookType;\n","import { FilterSelectorType } from 'components/Filter/AppFilter';\nimport { RootState, useAppSelector } from '../store.store';\n\nconst useTrFilterSelectors = (): FilterSelectorType[] => {\n  const { counts, categories }: RootState = useAppSelector();\n\n  const transactionTypes = [\n    { _id: 'ds6d5vf6sd5f1v6sd', name: 'INCOME', label: 'ДОХІД' },\n    { _id: 'ds6d5vf6sd6f1v61d', name: 'TRANSFER', label: 'ПЕРЕКАЗ' },\n    { _id: 'ds6d5vf6dd6f1v68d', name: 'EXPENSE', label: 'ВИТРАТИ' },\n  ];\n\n  return [\n    {\n      label: 'Тип',\n      data: transactionTypes,\n      selectorName: 'type',\n    },\n    {\n      label: 'Рахунки',\n      data: counts.counts,\n      selectorName: 'counts',\n    },\n    {\n      label: 'Категорії',\n      data: categories.categories,\n      selectorName: 'categories',\n    },\n  ];\n};\nexport default useTrFilterSelectors;\n","import { createTreeDataMapById, IBaseFields, TreeOptions } from '../utils/createTreeData';\nimport { ICategory } from '../redux/categories/categories.types';\nimport { ICount } from '../redux/counts/counts.types';\nimport { useMemo, useState } from 'react';\n\nexport interface UseSelectorState<T = any> {\n  parentList: (T & IBaseFields<T>)[];\n  treeData: TreeOptions<T>;\n  loading: boolean;\n  error: string | null;\n}\n\nconst useCreateSelectorTreeData = <T = ICategory | ICount>(dataList: (T & IBaseFields<T>)[]): UseSelectorState<T> => {\n  const [state, setState] = useState<UseSelectorState<T>>({\n    parentList: [],\n    treeData: {},\n    loading: false,\n    error: null,\n  });\n  useMemo(() => {\n    createTreeDataMapById(dataList, {\n      onSuccess: data => setState(prev => ({ ...prev, treeData: data })),\n      onError: error => setState(prev => ({ ...prev, error })),\n      onLoading: loading => setState(prev => ({ ...prev, loading })),\n    });\n  }, [dataList]);\n  useMemo(() => setState(prev => ({ ...prev, parentList: dataList.filter(el => !el.owner) })), [dataList]);\n\n  return state;\n};\n\nexport default useCreateSelectorTreeData;\n","import { ThunkPayload } from '../redux/store.store';\nimport { FieldValues } from 'react-hook-form';\n\nexport interface CreateThunkPayloadOptions<SD extends FieldValues = any, RD = any, E = any | unknown>\n  extends Omit<ThunkPayload<SD, RD, E>, 'data' | 'submitData'> {\n  logData?: boolean;\n  logError?: boolean;\n  logLoading?: boolean;\n  logAll?: boolean;\n}\n\nfunction createThunkPayload<SD extends FieldValues = any, RD = any, E = any | unknown>(\n  payloadData: SD,\n  options?: CreateThunkPayloadOptions<SD, RD, E>\n): ThunkPayload<SD, RD, E> {\n  const { logData, logError, logLoading, logAll, onError, onSuccess, onLoading } = options || {};\n  return {\n    onSuccess: (d: RD) => {\n      (logAll || logData) && console.log('createSubmitHandlerWithPayload onSuccess', d);\n      onSuccess && onSuccess(d);\n    },\n    onError: (e: E | unknown) => {\n      (logAll || logError) && console.log('createSubmitHandlerWithPayload onError', e);\n      onError && onError(e);\n    },\n    onLoading(l) {\n      (logAll || logLoading) && console.log('createSubmitHandlerWithPayload onLoading', l);\n      onLoading && onLoading(l);\n    },\n    submitData: payloadData,\n    data: payloadData,\n  } as ThunkPayload<SD, RD, E>;\n}\n\n// function createSubmitHandlerWithPayload<SD extends FieldValues = any, RD = any, E = any>(\n//   options?: CreateThunkPayloadOptions<SD, RD, E>\n// ): SubmitHandler<SD> {\n//   return (formData: SD) => createThunkPayload<SD, RD, E>(formData, options);\n// }\n//\n// function useCreateSubmitHandlerWithPayload<SD extends FieldValues = any, RD = any, E = any>(\n//   options?: CreateThunkPayloadOptions<SD, RD, E>\n// ): SubmitHandler<SD> {\n//   // eslint-disable-next-line react-hooks/exhaustive-deps\n//   return useCallback(createSubmitHandlerWithPayload<SD, RD, E>(options), []);\n// }\n\nexport { createThunkPayload };\n","import * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport ModalForm, { ModalFormProps } from '../ModalForm';\nimport styled from 'styled-components';\nimport { ITransaction } from 'redux/transactions/transactions.types';\nimport { CategoryTypes } from 'redux/categories/categories.types';\nimport InputLabel from '../atoms/Inputs/InputLabel';\nimport InputText from '../atoms/Inputs/InputText';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport TextareaPrimary from '../atoms/Inputs/TextareaPrimary';\nimport { FilterOpt } from '../ModalForm/ModalFilter';\nimport CustomSelect, { CustomSelectProps } from '../atoms/Inputs/CustomSelect';\nimport { createTransactionForReq } from '../../utils';\nimport { useAppSelector } from '../../redux/store.store';\nimport { TransactionsService } from '../../redux/transactions/useTransactionsService.hook';\nimport useCreateSelectorTreeData from '../../hooks/useCreateSelectorTreeData';\nimport FlexBox from '../atoms/FlexBox';\nimport { createThunkPayload } from '../../utils/fabrics';\n\nexport type TransactionsFilterOpt = FilterOpt<CategoryTypes>;\n\nexport interface TransactionFormProps extends Omit<ModalFormProps, 'onSubmit'> {\n  edit?: boolean;\n  copy?: boolean;\n  id?: string;\n  onSubmit?: TransactionsService['create'];\n  onSubmitEdit?: TransactionsService['editById'];\n  filterOptions?: TransactionsFilterOpt[];\n  defaultState?: Partial<ITransaction>;\n}\n\nconst validationItem = yup\n  .object()\n  .shape({\n    _id: yup.string(),\n    label: yup.string(),\n    owner: yup\n      .object()\n      .shape({\n        _id: yup.string(),\n        label: yup.string(),\n      })\n      .optional()\n      .nullable(),\n  })\n  .nullable();\nconst validation = yup.object().shape({\n  countIn: validationItem,\n  subCountIn: validationItem,\n});\n\nconst TransactionForm: React.FC<TransactionFormProps> = ({\n  edit,\n  onSubmit,\n  onSubmitEdit,\n  copy,\n  defaultState,\n  ...props\n}) => {\n  const {\n    counts: { counts },\n    categories: { categories },\n  } = useAppSelector();\n\n  const countsTreeData = useCreateSelectorTreeData(counts);\n  const categoriesTreeData = useCreateSelectorTreeData(categories);\n\n  const {\n    formState: { errors },\n    register,\n    setValue,\n    watch,\n    unregister,\n    handleSubmit,\n  } = useForm<ITransaction>({\n    defaultValues: { currency: 'UAH', ...defaultState },\n    resolver: yupResolver(validation),\n    reValidateMode: 'onSubmit',\n  });\n  const formValues = watch();\n  // const registerSelect = useRegisterSelect(setValue, formValues, unregister);\n\n  const registerSelect = useCallback(\n    <K extends keyof ITransaction = keyof ITransaction>(\n      name: K,\n      props?: Omit<CustomSelectProps<ITransaction[K]>, 'name'>,\n      childControl?: {\n        childName?: keyof ITransaction;\n      }\n    ): CustomSelectProps<ITransaction[K]> => {\n      return {\n        onSelect: (option, _value) => {\n          console.log({\n            option,\n            formValues,\n            name,\n            props,\n            childControl,\n            setValue,\n            unregister,\n          });\n\n          setValue<K>(name, option as any);\n        },\n        name,\n        selectValue: formValues[name],\n        onClear: () => {\n          if (!formValues[name]) return;\n\n          setValue(name, null as any);\n          unregister(name);\n          console.log('cleared input', name, formValues[name]);\n\n          if (childControl?.childName) {\n            console.log('cleared child', childControl.childName);\n            setValue(childControl.childName, null as any);\n            unregister(childControl.childName);\n            console.log('cleared child', childControl.childName, formValues[childControl.childName]);\n          }\n          if (!props?.options || props.options.length === 0) {\n          }\n        },\n        disabled: !props?.options || props?.options?.length === 0,\n        ...props,\n      };\n    },\n    [formValues, setValue, unregister]\n  );\n\n  const renderInputsCountIn = useMemo(() => {\n    const { parentList: parentOptions, treeData } = countsTreeData;\n    const childOptions = formValues.countIn?._id ? treeData[formValues.countIn?._id] : undefined;\n\n    return formValues.type && ['INCOME', 'TRANSFER'].includes(formValues.type) ? (\n      <>\n        <CustomSelect\n          label=\"Рахунок IN\"\n          placeholder=\"Рахунок IN\"\n          {...registerSelect('countIn', { options: parentOptions }, { childName: 'subCountIn' })}\n        />\n        <CustomSelect\n          label=\"Суб-рахунок IN\"\n          placeholder=\"Суб-рахунок IN\"\n          {...registerSelect('subCountIn', {\n            options: childOptions,\n          })}\n        />\n      </>\n    ) : null;\n  }, [countsTreeData, formValues.countIn?._id, formValues.type, registerSelect]);\n\n  const renderInputsCountOut = useMemo(() => {\n    const { parentList: parentOptions, treeData } = countsTreeData;\n    const childOptions = formValues.countOut?._id ? treeData[formValues.countOut?._id] : undefined;\n\n    return formValues.type && ['EXPENSE', 'TRANSFER'].includes(formValues.type) ? (\n      <>\n        <CustomSelect\n          label=\"Рахунок OUT\"\n          placeholder=\"Рахунок OUT\"\n          {...registerSelect(\n            'countOut',\n            {\n              options: parentOptions,\n              error: errors.countOut,\n            },\n            { childName: 'subCountOut' }\n          )}\n        />\n        <CustomSelect\n          label=\"Суб-рахунок OUT\"\n          placeholder=\"Суб-рахунок OUT\"\n          {...registerSelect('subCountOut', { options: childOptions, error: errors.subCountOut })}\n        />\n      </>\n    ) : null;\n  }, [countsTreeData, errors.countOut, errors.subCountOut, formValues.countOut?._id, formValues.type, registerSelect]);\n\n  const renderInputsCategories = useMemo(() => {\n    const { parentList: parentOptions, treeData } = categoriesTreeData;\n    const childOptions = formValues.category?._id ? treeData[formValues.category?._id] : undefined;\n\n    return (\n      <>\n        <CustomSelect\n          label=\"Категорія\"\n          placeholder=\"Категорія\"\n          {...registerSelect('category', { options: parentOptions })}\n        />\n        <CustomSelect\n          label=\"Підкатегорія\"\n          placeholder=\"Підкатегорія\"\n          {...registerSelect('subCategory', { options: childOptions })}\n        />\n      </>\n    );\n  }, [categoriesTreeData, formValues.category?._id, registerSelect]);\n\n  function onValidSubmit(submitData: ITransaction) {\n    const omitPathArr: (keyof ITransaction)[] =\n      (formValues.type === 'INCOME' && ['countOut', 'subCountOut']) ||\n      (formValues.type === 'EXPENSE' && ['countIn', 'subCountIn']) ||\n      [];\n\n    // console.log('onSubmitWrapper', submitData);\n    // console.log('createTransactionForReq', createTransactionForReq(submitData));\n    const trReqData = createTransactionForReq(submitData, omitPathArr, 'transactionDate');\n\n    console.log('trReqData', trReqData);\n\n    onSubmit && onSubmit(createThunkPayload({ data: trReqData }));\n\n    if (onSubmitEdit && defaultState?._id) {\n      onSubmitEdit(\n        createThunkPayload({\n          _id: defaultState?._id,\n          data: trReqData,\n        })\n      );\n      return;\n    }\n  }\n\n  return (\n    <ModalForm\n      onSubmit={handleSubmit(onValidSubmit)}\n      onOptSelect={({ value }) => value && setValue('type', value)}\n      {...props}\n    >\n      <FlexBox className={'inputs'} flex={'1'} fillWidth maxHeight={'100%'} padding={'12px'} overflow={'auto'}>\n        <InputLabel label=\"Дата і час\" direction={'vertical'}>\n          <InputText placeholder=\"Дата і час\" type=\"datetime-local\" {...register('transactionDate')} />\n        </InputLabel>\n        <GridWrapper>\n          <InputLabel label=\"Сума\" direction={'vertical'}>\n            <InputText placeholder=\"Сума\" {...register('amount')} />\n          </InputLabel>\n\n          <InputLabel label=\"Валюта\" direction={'vertical'}>\n            <InputText placeholder=\"Валюта\" {...register('currency')} disabled />\n          </InputLabel>\n        </GridWrapper>\n\n        {renderInputsCountIn}\n        {renderInputsCountOut}\n        {renderInputsCategories}\n\n        <InputLabel label=\"Контрагент\" direction={'vertical'} disabled>\n          <InputText placeholder=\"Контрагент\" disabled />\n        </InputLabel>\n\n        <InputLabel label=\"Проєкт\" direction={'vertical'} disabled>\n          <InputText placeholder=\"Проєкт\" disabled />\n        </InputLabel>\n\n        <InputLabel label=\"Документ\" direction={'vertical'} disabled>\n          <InputText placeholder=\"Документ\" disabled />\n        </InputLabel>\n\n        <InputLabel label=\"Коментар\" direction={'vertical'}>\n          <TextareaPrimary placeholder=\"Коментар\" {...register('comment')} />\n        </InputLabel>\n      </FlexBox>\n    </ModalForm>\n  );\n};\n\nconst GridWrapper = styled.div<{ gridTemplateColumns?: string }>`\n  display: grid;\n  grid-template-columns: ${({ gridTemplateColumns }) => gridTemplateColumns || '1fr 120px'};\n  gap: 12px;\n`;\nexport default TransactionForm;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from './pagesStyles';\nimport { transactionsColumns, transactionsMockData, transactionsSearchParams } from 'data';\nimport styled from 'styled-components';\nimport useTransactionsService from 'redux/transactions/useTransactionsService.hook';\nimport { useMemo } from 'react';\nimport useTrFilterSelectors from 'redux/transactions/useTrFilterSelectors.hook';\nimport { ITransaction } from '../../redux/transactions/transactions.types';\nimport { useTrActionsCreator } from '../../redux/transactions/useTrActionsCreator.hook';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport AppGridPage from './AppGridPage';\n\ntype Props = {\n  path: string;\n};\nconst PageTransactions: React.FC<any> = ({ path }: Props) => {\n  const transactionsService = useTransactionsService();\n  const filterSelectors = useTrFilterSelectors();\n  const actionsCreator = useTrActionsCreator(transactionsService);\n  // const [selectedTr, setSelectedTr] = useState<any>(null);\n\n  const tableConfig = useMemo(\n    (): ITableListProps<ITransaction> => ({\n      tableData: transactionsMockData || transactionsService.state.transactions,\n      tableTitles: transactionsColumns,\n      tableSearchParams: transactionsSearchParams.filter(el => el.search),\n      tableSortParams: transactionsSearchParams.filter(el => el.sort),\n      filterSelectors,\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: data => {\n        // console.log(data);\n      },\n      onRowClick: data => {\n        // console.log(data);\n      },\n    }),\n    [actionsCreator, filterSelectors, transactionsService.state.transactions]\n  );\n\n  return (\n    <AppGridPage path={path}>\n      <Page>\n        <TableList {...tableConfig} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageTransactions;\n","import { useModalProvider } from '../../components/ModalProvider/ModalProvider';\nimport { TransactionsService } from './useTransactionsService.hook';\nimport { useCallback } from 'react';\nimport TransactionForm from '../../components/Forms/TransactionForm';\nimport { filterOptions } from '../../data/transactions.data';\nimport { TableActionCreator } from '../../components/TableList/tableTypes.types';\nimport { ITransaction } from './transactions.types';\nimport { createThunkPayload } from '../../utils/fabrics';\n\nexport type TrActionsCreator = TableActionCreator<ITransaction>;\nconst useTrActionsCreator = (service: TransactionsService): TrActionsCreator => {\n  const modal = useModalProvider();\n\n  return useCallback(\n    ctx => [\n      {\n        name: 'editTr',\n        title: 'Редагування транзакції',\n        icon: 'edit',\n        disabled: false,\n        disabledCheck: () => false,\n        type: 'onlyIcon',\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Редагування транзакції',\n              filterOptions,\n              onSubmitEdit: service.editById,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'copyTr',\n        title: 'Копіювання транзакції',\n        icon: 'copy',\n        type: 'onlyIcon',\n        disabled: false,\n        disabledCheck: () => false,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Копіювання транзакції',\n              filterOptions,\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'deleteTr',\n        title: 'Видалення транзакції',\n        icon: 'delete',\n        iconSize: '90%',\n        type: 'onlyIcon',\n        disabled: true,\n        disabledCheck: () => true,\n        onClick: () => {\n          service.deleteById(\n            createThunkPayload<{ id: string }, { id: string }>(\n              { id: 'id' },\n              {\n                onSuccess(d) {\n                  console.log(d);\n                },\n              }\n            )\n          );\n        },\n      },\n      { separator: true },\n      {\n        name: 'createIncomeTr',\n        title: 'Дохід',\n        icon: 'INCOME',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        disabledCheck: () => true,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 0,\n              defaultState: { type: 'INCOME' },\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'createTransferTr',\n        title: 'Переказ між рахунками',\n        icon: 'TRANSFER',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        disabledCheck: () => true,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 1,\n              defaultState: { type: 'TRANSFER' },\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n      {\n        name: 'createExpenseTr',\n        title: 'Витрата',\n        icon: 'EXPENSE',\n        iconSize: '90%',\n        type: 'onlyIconFilled',\n        disabled: false,\n        disabledCheck: () => true,\n        onClick: () => {\n          modal.handleOpenModal({\n            ModalChildren: TransactionForm,\n            modalChildrenProps: {\n              title: 'Створити нову',\n              filterOptions,\n              defaultOption: 2,\n              defaultState: { type: 'EXPENSE' },\n              onSubmit: service.create,\n              fillHeight: true,\n            },\n          });\n        },\n      },\n    ],\n\n    [modal, service]\n  );\n};\n\nexport type useTrActionsCreatorHookType = typeof useTrActionsCreator;\n// export type UseTrActionsCreatorHookType=type\n\nexport { useTrActionsCreator };\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import InputLabel, { InputLabelProps } from './InputLabel';\nimport { forwardRef, InputHTMLAttributes, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { omit, pick } from 'lodash';\nimport styled from 'styled-components';\nimport FlexBox, { FieldBox } from '../FlexBox';\nimport SvgIcon from '../SvgIcon/SvgIcon';\nimport { RefCallBack } from 'react-hook-form';\nimport { SelectItem } from '../../TableList/tableTypes.types';\nimport ButtonIcon from '../ButtonIcon/ButtonIcon';\n\nexport interface CustomSelectBaseProps<OptType = any> {\n  InputComponent?: React.FC<InputHTMLAttributes<HTMLInputElement>>;\n  valueKey?: string;\n  options?: CustomSelectOption<OptType>[];\n  getOptions?: () => CustomSelectOption<OptType>[];\n  onSelect?: CustomSelectOnClickHandler<CustomSelectOption<OptType>>;\n  onClear?: () => void;\n  handleOpenState?: (prevState: boolean) => boolean;\n  open?: boolean;\n  ref?: RefCallBack;\n  selectValue?: OptType;\n  keepOpen?: boolean;\n  inputProps?: Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onSelect'>;\n  labelProps?: Omit<InputLabelProps, 'onSelect'>;\n  fieldMode?: boolean;\n}\n\nexport type CustomSelectOnClickHandler<OptType = any> = <Option extends OptType = any>(\n  option?: Option,\n  value?: keyof Option\n) => void;\n\ninterface CustomSelectOptionBaseProps extends SelectItem {\n  onClick?: CustomSelectOnClickHandler;\n}\n\nexport type CustomSelectOption<OptType = Record<string, any>> = CustomSelectOptionBaseProps & OptType;\n\nexport type CustomSelectProps<OptType = any> = CustomSelectBaseProps<OptType> &\n  Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onSelect'> &\n  Omit<InputLabelProps, 'onSelect'>;\n\nconst CustomSelect: React.ForwardRefRenderFunction<any, CustomSelectProps> = (\n  {\n    InputComponent,\n    inputProps = {},\n    labelProps = {},\n    selectValue,\n    keepOpen,\n    valueKey,\n    id,\n    options,\n    name,\n    open = false,\n    onSelect,\n    onClear,\n    fieldMode,\n    ...props\n  },\n  ref\n) => {\n  const [currentOption, setCurrentOption] = useState<SelectItem | undefined>(selectValue);\n  const [isOpen, setIsOpen] = useState<boolean>(keepOpen || open);\n  const labelRef = useRef<HTMLLabelElement>(null);\n\n  const uid = useMemo(() => Math.random().toFixed(5), []);\n\n  const handleOpenState = useCallback(() => {\n    !keepOpen && setIsOpen(prev => !prev);\n  }, [keepOpen]);\n\n  const handleOnSelect = useCallback(\n    (option?: any) => {\n      if (!options || options?.length === 0) return;\n      return () => {\n        setCurrentOption(option);\n        if (onSelect && valueKey && valueKey && option[valueKey]) {\n          onSelect(option, option[valueKey]);\n          return;\n        }\n        if (onSelect) {\n          onSelect(option, option?.value);\n        }\n        handleOpenState();\n      };\n    },\n    [handleOpenState, onSelect, options, valueKey]\n  );\n\n  const handleOnClear = useCallback(() => {\n    setCurrentOption(undefined);\n    onClear && onClear();\n  }, [onClear]);\n\n  const renderOptions = useMemo(\n    () =>\n      options?.map(opt => (\n        <Option\n          key={opt._id}\n          onClick={handleOnSelect(opt)}\n          justifyContent={'flex-start'}\n          fillWidth\n          fxDirection={'row'}\n          padding={'5px 8px'}\n          isActive={opt?._id === currentOption?._id}\n        >\n          {opt.label || opt.name}\n        </Option>\n      )),\n    [currentOption?._id, handleOnSelect, options]\n  );\n\n  useEffect(() => {\n    if (uid) return;\n    console.log('Render CustomSelect', id || uid);\n\n    // function onMenuClose(ev: MouseEvent | KeyboardEvent) {\n    //   const { target } = ev;\n    //   if (target instanceof HTMLElement && !target?.closest(`[data-select=\"${id || uid}\"]`)) setIsOpen(false);\n    //   if (ev instanceof KeyboardEvent && ev?.code === 'Escape') setIsOpen(false);\n    // }\n    //\n    // document.addEventListener('click', onMenuClose);\n    // return () => {\n    //   document.removeEventListener('click', onMenuClose);\n    // };\n  }, [id, uid]);\n\n  useEffect(() => {\n    if (selectValue) return setCurrentOption(selectValue);\n    if (!selectValue) return setCurrentOption(undefined);\n  }, [selectValue]);\n\n  return (\n    <FlexBox fillWidth style={{ position: 'relative' }} data-select={id || uid}>\n      <FlexBox fillWidth style={{ position: 'relative' }}>\n        <InputLabel\n          direction={'vertical'}\n          ref={labelRef}\n          {...pick(props, [\n            'error',\n            'success',\n            'helperText',\n            'loading',\n            'label',\n            'id',\n            'uppercase',\n            'align',\n            'direction',\n            'disabled',\n          ])}\n          {...labelProps}\n          onClick={handleOpenState}\n        >\n          <LabelInner fieldMode={fieldMode} error={!!props.error} success={!!props.success}>\n            <StyledInput\n              disabled={!fieldMode}\n              value={currentOption?.label || currentOption?.name || ''}\n              ref={ref}\n              {...omit(\n                { ...pick(props, [`${fieldMode ? 'onChange' : ''}`, 'onBlur', 'name', 'id', 'ref', 'placeholder']) },\n                ['error', 'success', 'loading']\n              )}\n              {...inputProps}\n            />\n\n            <IconsBox fxDirection={'row'} gap={6} fillHeight alignItems={'center'} padding={'0 8px 0 0'}>\n              {onClear && currentOption && (\n                <ButtonIcon\n                  variant={'onlyIconNoEffects'}\n                  className={'clearIcon'}\n                  icon={'close'}\n                  size={'20px'}\n                  onClick={handleOnClear}\n                />\n              )}\n\n              <SvgIcon className={'openIcon'} icon={!isOpen ? 'SmallArrowDown' : 'SmallArrowUp'} size={'20px'} />\n            </IconsBox>\n          </LabelInner>\n        </InputLabel>\n      </FlexBox>\n\n      <Options isOpen={isOpen}>\n        <FlexBox fillWidth overflow={'auto'}>\n          {options && options?.length > 0 ? (\n            renderOptions\n          ) : (\n            <NoOptions fillWidth fxDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n              Опції відсутні\n            </NoOptions>\n          )}\n        </FlexBox>\n      </Options>\n    </FlexBox>\n  );\n};\n\nconst Options = styled(FlexBox)<{ isOpen?: boolean; inView?: boolean; intersectionRatio?: number }>`\n  // position: absolute;\n  // top: calc(100% + 4px);\n  // left: 0;\n  // z-index: ${({ isOpen }) => (isOpen ? 100 : 10)};\n  font-size: 14px;\n\n  max-height: ${({ isOpen }) => (isOpen ? '120px' : 0)};\n  opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n  width: 100%;\n  overflow: hidden;\n\n  margin-top: 4px;\n\n  border-radius: 2px;\n  background-color: ${({ theme }) => theme.fieldBackgroundColor};\n  transition: all ${({ theme }) => theme.globals.timingFunctionMain};\n`;\n\nconst Option = styled(FieldBox)<{ isActive?: boolean }>`\n  min-height: 28px;\n\n  font-weight: ${({ isActive }) => (isActive ? 700 : '')};\n`;\n\nconst LabelInner = styled.fieldset<{\n  error?: boolean;\n  success?: boolean;\n  fieldMode?: boolean;\n}>`\n  flex: 1;\n\n  display: flex;\n  align-items: center;\n\n  padding: 0;\n  margin: 0;\n\n  width: 100%;\n  min-height: 28px;\n\n  color: ${({ error, success, theme }) =>\n    (error && theme.globals.colors.error) || (success && theme.globals.colors.success) || 'inherit'};\n\n  background-color: ${({ theme, fieldMode = 'true' }) => (fieldMode ? theme.field.backgroundColor : 'transparent')};\n  border-radius: 2px;\n\n  border: 1px solid\n    ${({ error, success, fieldMode = 'true', theme }) =>\n      (error && theme.globals.colors.error) ||\n      (success && theme.globals.colors.success) ||\n      (fieldMode && theme.field.backgroundColor) ||\n      theme.input.borderColor};\n\n  &:hover {\n    border-color: ${({ theme }) => theme.accentColor.base};\n    //box-shadow: 0 0 3px ${({ theme }) => theme.accentColor.base};\n  }\n\n  &:focus,\n  &:focus-visible {\n    border-color: ${({ theme }) => theme.accentColor.base};\n    //box-shadow: 0 0 5px ${({ theme }) => theme.accentColor.base};\n    outline: 1px solid ${({ theme }) => theme.accentColor.base};\n  }\n\n  &::placeholder {\n    font-size: inherit;\n    color: ${({ theme }) => theme.globals.inputPlaceholderColor};\n  }\n\n  //transition: border-color ${({ theme }) => theme.globals.timingFunctionMain};\n\n  &[disabled] {\n    pointer-events: none;\n    opacity: 70%;\n  }\n\n  @media screen and (max-width: 480px) {\n    height: 34px;\n    font-size: 16px;\n  }\n`;\n\nconst StyledInput = styled.input`\n  flex: 1;\n  height: 100%;\n\n  padding: 4px 8px;\n\n  background-color: transparent;\n  border-radius: 0;\n  border: 0;\n  outline: none;\n\n  &:hover,\n  &:focus,\n  &:focus-visible {\n    outline: none;\n  }\n`;\nconst NoOptions = styled(FlexBox)`\n  min-height: 28px;\n\n  font-weight: 700;\n  line-height: 1.3;\n`;\nconst IconsBox = styled(FlexBox)`\n  //position: absolute;\n  //top: 50%;\n  //right: 4px;\n  //z-index: 5;\n  //transform: translateY(-50%);\n\n  max-height: 100%;\n\n  color: ${({ theme }) => theme.accentColor.base};\n  fill: ${({ theme }) => theme.accentColor.base};\n`;\n\nexport default memo(forwardRef(CustomSelect));\n"],"names":["create","payload","console","log","deleteById","editById","getById","dispatch","useAppDispatch","state","useTransactionsSelector","_useAppSelector","useAppSelector","counts","categories","label","data","_id","name","selectorName","dataList","_useState","useState","parentList","treeData","loading","error","_useState2","_slicedToArray","setState","useMemo","createTreeDataMapById","onSuccess","prev","_objectSpread","onError","onLoading","filter","el","owner","createThunkPayload","payloadData","options","_ref","logData","logError","logLoading","logAll","d","e","l","submitData","validationItem","yup","shape","optional","nullable","validation","countIn","subCountIn","GridWrapper","styled","_templateObject","_taggedTemplateLiteral","_ref3","gridTemplateColumns","edit","_formValues$countIn3","_formValues$countOut3","_formValues$category3","onSubmit","onSubmitEdit","defaultState","copy","props","_objectWithoutProperties","_excluded","countsTreeData","useCreateSelectorTreeData","categoriesTreeData","_useForm","useForm","defaultValues","currency","resolver","yupResolver","reValidateMode","errors","formState","register","setValue","watch","unregister","handleSubmit","formValues","registerSelect","useCallback","childControl","_props$options","onSelect","option","_value","selectValue","onClear","childName","length","disabled","renderInputsCountIn","_formValues$countIn","_formValues$countIn2","parentOptions","childOptions","undefined","type","includes","_jsxs","_Fragment","children","_jsx","CustomSelect","placeholder","renderInputsCountOut","_formValues$countOut","_formValues$countOut2","countOut","subCountOut","renderInputsCategories","_formValues$category","_formValues$category2","category","ModalForm","omitPathArr","trReqData","createTransactionForReq","onOptSelect","_ref2","value","FlexBox","className","flex","fillWidth","maxHeight","padding","overflow","InputLabel","direction","InputText","TextareaPrimary","Page","takeFullGridArea","path","transactionsService","useTransactionsService","filterSelectors","useTrFilterSelectors","actionsCreator","service","modal","useModalProvider","ctx","title","icon","disabledCheck","onClick","handleOpenModal","ModalChildren","TransactionForm","modalChildrenProps","filterOptions","fillHeight","iconSize","id","separator","defaultOption","useTrActionsCreator","tableConfig","tableData","transactionsMockData","transactions","tableTitles","transactionsColumns","tableSearchParams","transactionsSearchParams","search","tableSortParams","sort","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","onRowClick","AppGridPage","TableList","css","takeFullPlace","_templateObject2","_templateObject3","ref","InputComponent","_ref$inputProps","inputProps","_ref$labelProps","labelProps","keepOpen","valueKey","_ref$open","open","fieldMode","currentOption","setCurrentOption","_useState3","_useState4","isOpen","setIsOpen","labelRef","useRef","uid","Math","random","toFixed","handleOpenState","handleOnSelect","handleOnClear","renderOptions","map","opt","Option","justifyContent","fxDirection","isActive","useEffect","style","position","pick","LabelInner","success","StyledInput","omit","concat","IconsBox","gap","alignItems","ButtonIcon","variant","size","SvgIcon","Options","NoOptions","_ref4","_ref5","theme","fieldBackgroundColor","_ref6","globals","timingFunctionMain","FieldBox","_ref7","_ref8","colors","_ref9","_ref9$fieldMode","field","backgroundColor","_ref10","_ref10$fieldMode","input","borderColor","_ref11","accentColor","base","_ref12","_ref13","_ref14","_ref15","_ref16","inputPlaceholderColor","_ref17","_templateObject4","_templateObject5","_templateObject6","_ref18","_ref19","memo","forwardRef"],"sourceRoot":""}