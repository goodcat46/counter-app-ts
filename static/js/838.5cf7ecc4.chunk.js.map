{"version":3,"file":"static/js/838.5cf7ecc4.chunk.js","mappings":"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","sources":["hooks/useOrdersActionsCreator.hook.ts","components/AppPages/PageOrders.tsx","components/AppPages/pagesStyles.tsx","hooks/useOrdersService.hook.ts"],"sourcesContent":["import { useModalProvider } from '../components/ModalProvider/ModalProvider';\nimport { useCallback } from 'react';\nimport { ITableListContext, TableActionCreator } from '../components/TableList/tableTypes.types';\nimport { IOrder } from '../redux/orders/orders.types';\nimport { Modals } from '../components/ModalProvider/Modals';\n\nexport type OrdersActionsCreator = TableActionCreator<IOrder>;\nconst useOrdersActionsCreatorHook = (): OrdersActionsCreator => {\n  const modals = useModalProvider();\n  // const { orders } = useAppServiceProvider();\n\n  return useCallback(\n    (ctx: ITableListContext<IOrder>) => [\n      {\n        name: 'openOrderOverview',\n        icon: 'openInNew',\n        disabled: !ctx.selectedRow?._id,\n        onClick: () => {\n          if (!ctx.selectedRow?._id) return;\n          modals.handleOpenModal({\n            Modal: Modals.OrderOverview,\n            props: {\n              order: ctx.tableData?.find(el => el._id === ctx.selectedRow?._id),\n            },\n          });\n        },\n      },\n      {\n        name: 'archiveOrder',\n        icon: 'archive',\n        disabled: !ctx?.selectedRow?._id,\n        onClick: () => {\n          if (ctx?.selectedRow?._id) window.confirm(`Архівувати замовення: ${ctx?.selectedRow?._id}`);\n        },\n      },\n      {\n        name: 'editOrder',\n        icon: 'edit',\n        disabled: !ctx?.selectedRow?._id,\n        onClick: () => {\n          modals.handleOpenModal({\n            Modal: Modals.FormCreateOrder,\n            props: {\n              title: 'Edit order',\n            },\n          });\n        },\n      },\n      {\n        name: 'copyOrder',\n        icon: 'copy',\n        disabled: !ctx?.selectedRow?._id,\n        onClick: () => {\n          modals.handleOpenModal({\n            Modal: Modals.FormCreateOrder,\n            props: {\n              title: `Copy order: ${ctx?.selectedRow?._id}`,\n            },\n          });\n        },\n      },\n      { separator: true },\n      {\n        name: 'createOrder',\n        icon: 'plus',\n        type: 'onlyIconFilled',\n        onClick: () => {\n          modals.handleOpenModal({\n            Modal: Modals.FormCreateOrder,\n            props: {\n              title: `Create order`,\n            },\n          });\n        },\n      },\n    ],\n    [modals]\n  );\n};\nexport default useOrdersActionsCreatorHook;\n","import TableList from 'components/TableList/TableList';\nimport { takeFullGridArea } from './pagesStyles';\nimport styled from 'styled-components';\nimport { useEffect, useMemo, useState } from 'react';\nimport { ITableListProps } from '../TableList/tableTypes.types';\nimport AppGridPage from './AppGridPage';\nimport { useOrdersSelector } from '../../redux/selectors.store';\nimport { ISortParams } from '../../api';\nimport { FilterReturnDataType } from '../Filter/AppFilter';\nimport { PagePathType } from '../../data/pages.data';\nimport { mockOrdersData, ordersSearchParams, ordersTableColumns } from '../../data/orders.data';\nimport useOrdersServiceHook from '../../hooks/useOrdersService.hook';\nimport { IOrder } from '../../redux/orders/orders.types';\nimport useOrdersActionsCreatorHook from '../../hooks/useOrdersActionsCreator.hook';\n// import useOrdersActionsCreatorHook from '../../hooks/useOrdersActionsCreator.hook';\n\ntype Props = {\n  path: PagePathType;\n};\n\nexport const useOrderTableConfigs = () => {\n  const service = useOrdersServiceHook();\n  const state = useOrdersSelector();\n  const { getAll } = service;\n  const actionsCreator = useOrdersActionsCreatorHook();\n  // const filterSelectors = useProductsFilterSelectorsHook();\n  const [isLoading, setIsLoading] = useState(false);\n  const [sortParams, setSortParams] = useState<ISortParams>();\n  const [filterParams, setFilterParams] = useState<FilterReturnDataType>();\n\n  const tableConfig = useMemo(\n    (): ITableListProps<IOrder> => ({\n      tableData: state.orders,\n      tableTitles: ordersTableColumns,\n      tableSortParams: ordersSearchParams.filter(el => el.sort),\n      isFilter: true,\n      isSearch: true,\n      footer: true,\n      checkBoxes: true,\n      actionsCreator,\n      onFilterSubmit: filterParams => {\n        setFilterParams(filterParams);\n        getAll({ data: { refresh: true, query: { filterParams, sortParams } }, onLoading: setIsLoading }).then();\n      },\n      handleTableSort: (param, sortOrder) => {\n        setSortParams({ dataPath: param.dataPath, sortOrder });\n        getAll({\n          data: { refresh: true, query: { sortParams: { dataPath: param.dataPath, sortOrder }, filterParams } },\n          onLoading: setIsLoading,\n        }).then();\n      },\n    }),\n    [actionsCreator, filterParams, getAll, sortParams, state.orders]\n  );\n\n  useEffect(() => {\n    if (sortParams || filterParams) {\n      return;\n    }\n\n    if (!sortParams && !filterParams) {\n      if (state.orders.length === 0) {\n        getAll({\n          data: { refresh: true },\n          onLoading: setIsLoading,\n        });\n      }\n    }\n  }, [filterParams, getAll, isLoading, sortParams, state.orders.length, tableConfig]);\n\n  return {\n    tableConfig,\n    isLoading,\n    sortParams,\n    filterParams,\n  };\n};\nconst PageOrders: React.FC<any> = (props: Props) => {\n  const { tableConfig, isLoading } = useOrderTableConfigs();\n\n  return (\n    <AppGridPage path={props.path}>\n      <Page>\n        <TableList {...tableConfig} tableData={mockOrdersData} isLoading={isLoading} />\n      </Page>\n    </AppGridPage>\n  );\n};\n\nconst Page = styled.div`\n  ${takeFullGridArea}\n`;\n\nexport default PageOrders;\n","import { css } from 'styled-components';\n\nexport const takeFullGridArea = css`\n  grid-column: 1/13;\n  grid-row: 1/13;\n`;\nexport const takeFullPlace = css`\n  width: 100%;\n  height: 100%;\n`;\nexport const tomatO = css`\n  outline: 1px solid tomato;\n`;\n","import { useMemo } from 'react';\nimport { useAppDispatch } from '../redux/store.store';\nimport { OnlyUUID, ServiceDispatcherAsync } from '../redux/global.types';\n// import { createOrderThunk, getAllOrdersThunk, getOrderByIdThunk } from '../redux/orders/orders.thunks';\nimport { IOrder, IOrderReqData } from '../redux/orders/orders.types';\nimport { AppQueryParams } from '../api';\n\ntype EmptyFn = (...args: any[]) => Promise<any>;\n\nexport interface OrdersService {\n  createOne: EmptyFn | ServiceDispatcherAsync<IOrderReqData, IOrder>;\n  deleteOne: EmptyFn | ServiceDispatcherAsync;\n  updateOne: EmptyFn | ServiceDispatcherAsync;\n  getById: EmptyFn | ServiceDispatcherAsync<OnlyUUID, IOrder>;\n  getAll:\n    | EmptyFn\n    | ServiceDispatcherAsync<\n        {\n          refresh?: boolean;\n          query?: AppQueryParams;\n        },\n        IOrder[]\n      >;\n  getSlotsByOrderId: EmptyFn | ServiceDispatcherAsync<OnlyUUID>;\n  getShipmentsByOrderId: EmptyFn | ServiceDispatcherAsync<OnlyUUID>;\n  getPaymentsByOrderId: EmptyFn | ServiceDispatcherAsync<OnlyUUID>;\n  getInvoicesByOrderId: EmptyFn | ServiceDispatcherAsync<OnlyUUID>;\n}\n\nconst useOrdersServiceHook = (): OrdersService => {\n  const dispatch = useAppDispatch();\n\n  return useMemo(\n    (): OrdersService => ({\n      createOne: async () => dispatch(() => {}),\n      getById: async () => dispatch(() => {}),\n      getAll: async () => dispatch(() => {}),\n      deleteOne: async () => dispatch(() => {}),\n      updateOne: async () => dispatch(() => {}),\n\n      getSlotsByOrderId: async () => dispatch(() => {}),\n      getShipmentsByOrderId: async () => dispatch(() => {}),\n      getPaymentsByOrderId: async () => dispatch(() => {}),\n      getInvoicesByOrderId: async () => dispatch(() => {}),\n    }),\n    [dispatch]\n  );\n};\n\nexport default useOrdersServiceHook;\n"],"names":["modals","useModalProvider","useCallback","ctx","_ctx$selectedRow","_ctx$selectedRow4","_ctx$selectedRow7","_ctx$selectedRow8","name","icon","disabled","selectedRow","_id","onClick","_ctx$selectedRow2","_ctx$tableData","handleOpenModal","Modal","Modals","props","order","tableData","find","el","_ctx$selectedRow3","_ctx$selectedRow5","_ctx$selectedRow6","window","confirm","concat","title","_ctx$selectedRow9","separator","type","useOrderTableConfigs","service","useOrdersServiceHook","state","useOrdersSelector","getAll","actionsCreator","useOrdersActionsCreatorHook","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","sortParams","setSortParams","_useState5","_useState6","filterParams","setFilterParams","tableConfig","useMemo","orders","tableTitles","ordersTableColumns","tableSortParams","ordersSearchParams","sort","isFilter","isSearch","footer","checkBoxes","onFilterSubmit","data","refresh","query","onLoading","then","handleTableSort","param","sortOrder","dataPath","useEffect","length","Page","styled","_templateObject","_taggedTemplateLiteral","takeFullGridArea","_useOrderTableConfigs","_jsx","AppGridPage","path","children","TableList","_objectSpread","mockOrdersData","css","takeFullPlace","_templateObject2","_templateObject3","dispatch","useAppDispatch","createOne","_createOne","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","apply","arguments","getById","_getById","_callee2","_context2","_getAll","_callee3","_context3","deleteOne","_deleteOne","_callee4","_context4","updateOne","_updateOne","_callee5","_context5","getSlotsByOrderId","_getSlotsByOrderId","_callee6","_context6","getShipmentsByOrderId","_getShipmentsByOrderId","_callee7","_context7","getPaymentsByOrderId","_getPaymentsByOrderId","_callee8","_context8","getInvoicesByOrderId","_getInvoicesByOrderId","_callee9","_context9"],"sourceRoot":""}